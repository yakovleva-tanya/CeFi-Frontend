{
  "contractName": "PairAggregatorRegistryMock",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pairAggregator",
          "type": "address"
        }
      ],
      "name": "PairAggregatorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPairAggregator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPairAggregator",
          "type": "address"
        }
      ],
      "name": "PairAggregatorUpdated",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "aggregators",
      "outputs": [
        {
          "internalType": "contract PairAggregatorInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        }
      ],
      "name": "getPairAggregator",
      "outputs": [
        {
          "internalType": "contract PairAggregatorInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        }
      ],
      "name": "hasPairAggregator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "settingsAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "chainlinkAggregatorAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "inverse",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "responseDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "collateralDecimals",
              "type": "uint8"
            }
          ],
          "internalType": "struct TellerCommon.PairAggregatorRegisterRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "registerPairAggregator",
      "outputs": [
        {
          "internalType": "contract PairAggregatorInterface",
          "name": "aggregator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "chainlinkAggregatorAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "inverse",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "responseDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "collateralDecimals",
              "type": "uint8"
            }
          ],
          "internalType": "struct TellerCommon.PairAggregatorRegisterRequest[]",
          "name": "requests",
          "type": "tuple[]"
        }
      ],
      "name": "registerPairAggregators",
      "outputs": [
        {
          "internalType": "contract PairAggregatorInterface[]",
          "name": "newAggregators",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "contract SettingsInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "chainlinkAggregatorAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "inverse",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "responseDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "collateralDecimals",
              "type": "uint8"
            }
          ],
          "internalType": "struct TellerCommon.PairAggregatorRegisterRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "updatePairAggregator",
      "outputs": [
        {
          "internalType": "contract PairAggregatorInterface",
          "name": "aggregator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "baseAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "quoteAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "aggregatorAddress",
          "type": "address"
        }
      ],
      "name": "externalAddAggregatorFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pairAggregator\",\"type\":\"address\"}],\"name\":\"PairAggregatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPairAggregator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPairAggregator\",\"type\":\"address\"}],\"name\":\"PairAggregatorUpdated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"aggregators\",\"outputs\":[{\"internalType\":\"contract PairAggregatorInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"baseAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aggregatorAddress\",\"type\":\"address\"}],\"name\":\"externalAddAggregatorFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"getPairAggregator\",\"outputs\":[{\"internalType\":\"contract PairAggregatorInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"hasPairAggregator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"settingsAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"chainlinkAggregatorAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"inverse\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"responseDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"collateralDecimals\",\"type\":\"uint8\"}],\"internalType\":\"struct TellerCommon.PairAggregatorRegisterRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"registerPairAggregator\",\"outputs\":[{\"internalType\":\"contract PairAggregatorInterface\",\"name\":\"aggregator\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"chainlinkAggregatorAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"inverse\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"responseDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"collateralDecimals\",\"type\":\"uint8\"}],\"internalType\":\"struct TellerCommon.PairAggregatorRegisterRequest[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"name\":\"registerPairAggregators\",\"outputs\":[{\"internalType\":\"contract PairAggregatorInterface[]\",\"name\":\"newAggregators\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"contract SettingsInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"chainlinkAggregatorAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"inverse\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"responseDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"collateralDecimals\",\"type\":\"uint8\"}],\"internalType\":\"struct TellerCommon.PairAggregatorRegisterRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"updatePairAggregator\",\"outputs\":[{\"internalType\":\"contract PairAggregatorInterface\",\"name\":\"aggregator\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getPairAggregator(address,address)\":{\"return\":\"the pair aggregator address for the given base and quote addresses.\"},\"hasPairAggregator(address,address)\":{\"return\":\"true if the pair aggregator address for the given base and quote tokens is not 0x0. Otherwise it returns false.\"},\"initialize(address)\":{\"params\":{\"settingsAddress\":\"this settings address.\"}},\"initialized()\":{\"return\":\"true if contract is initialized. Otherwise it returns false.\"},\"registerPairAggregator((address,address,address,bool,uint8,uint8))\":{\"params\":{\"request\":\"the input data to register the new pair aggregator.\"},\"return\":\"the new pair aggregator created.\"},\"registerPairAggregators((address,address,address,bool,uint8,uint8)[])\":{\"params\":{\"requests\":\"the input data to register the new pair aggregator.\"},\"return\":\"the new pair aggregator addresses.\"},\"updatePairAggregator((address,address,address,bool,uint8,uint8))\":{\"params\":{\"request\":\"the input data to register the new pair aggregator.\"},\"return\":\"the new pair aggregator created.\"}}},\"userdoc\":{\"methods\":{\"getPairAggregator(address,address)\":{\"notice\":\"Gets a pair aggregator for a given base and quote tokens (a market).baseToken the base token address.quoteToken the quote token address.\"},\"hasPairAggregator(address,address)\":{\"notice\":\"Tests whether a pair aggregator exists for a given base and quote tokens (a market) or not.baseToken the base token address.quoteToken the quote token address.\"},\"initialize(address)\":{\"notice\":\"It initializes this registry contract.\"},\"initialized()\":{\"notice\":\"Gets if the contract is initialized.\"},\"registerPairAggregator((address,address,address,bool,uint8,uint8))\":{\"notice\":\"It registers a new pair aggregator for a given market.\"},\"registerPairAggregators((address,address,address,bool,uint8,uint8)[])\":{\"notice\":\"It registers new pair aggregators for given markets.\"},\"settings()\":{\"notice\":\"The settings contract.\"},\"updatePairAggregator((address,address,address,bool,uint8,uint8))\":{\"notice\":\"It updates a current pair aggregator for a given market.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/providers/chainlink/PairAggregatorRegistryMock.sol\":\"PairAggregatorRegistryMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseDynamicProxy.sol\":{\"keccak256\":\"0x2ca742c7aaf1598a5c8fb46065a3621f12f206602ac2c99239cdfce1a597d6fa\",\"urls\":[\"bzz-raw://306b66e976d251f89f4e27fc6ee88ecce640aeddb89c9f9971f7ee3a506e4288\",\"dweb:/ipfs/QmZ4R5o1dmZKvXdy1m5xn95DiwP3NfAMk12vmwDkWEekfR\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseProxy.sol\":{\"keccak256\":\"0x11d3058b613d46bef5b3a7bfe6fa9594102be247b32ac534e5d99c629b0fa83e\",\"urls\":[\"bzz-raw://c8cc3b7b971127b779827fc448ce8d7b08c2eaa2e63e4b815f17a6c29d96c999\",\"dweb:/ipfs/QmagGrpfWjBWQ7fFDyER2ic56apw5qoDLYcfwmadE6khAg\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol\":{\"keccak256\":\"0xea409b9c0704a8f308295740e8595eb5fdc670b298ae9b63f5bb538783619a35\",\"urls\":[\"bzz-raw://22490fcd6a157faa8f1bdf7f715435c2a2572277c46e67d39533b411026b580d\",\"dweb:/ipfs/QmW5nUYb9oLpZALaWabBA45MnfGB4MJspZEkvbuRJfSSg7\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/DynamicProxy.sol\":{\"keccak256\":\"0x5f62e8d7e566cbe3a54104728fd1fdaf711e4c7444f4c28ed2fd2f1b919290f7\",\"urls\":[\"bzz-raw://223201d7bf70f4f2cf8d960017e222c0796694880e01bd7d2f19fbcdd8770c76\",\"dweb:/ipfs/QmUs5wb6CRCsq1iZxZD542f2dco2jp9kZpDQAbfgyoFGqo\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TInitializable.sol\":{\"keccak256\":\"0xfd04f8b08548b7a4aacbf26eaf65f64628c38f9fc34c363317daa593c7c25917\",\"urls\":[\"bzz-raw://025bbb10f643ebec3bc77303bca1585c572c76f8261ce42ed816b3c2a7799d20\",\"dweb:/ipfs/QmYS3L6u6f7ucRxGoap3RSD1jeJERnZk3XQRden1fEDQMs\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0xb5b2225e4f6db57d59d5292f542acc0675e9f95b3e3094d9be4cf6ec079cb86e\",\"urls\":[\"bzz-raw://f0c822f79ebb3f775b4fea591a5555c3efacba6719d4adbab83571dd35f059e3\",\"dweb:/ipfs/QmYiHmtPJsJD67g7Pk7kM72hsHS7BVVJtciKjCoUioW4gS\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x91250ee3c1d73b5d1720f7b41f18072eb347d73e4d3de464537ece49e1fa1d93\",\"urls\":[\"bzz-raw://f11ce1d70152f6d19f9c23788b4458631df3fd748a52849b899183ce2dabc52b\",\"dweb:/ipfs/QmaNQybwKYW5BfT3h6z6P1SSUwYEyXQviisYjUr7cHLzQR\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0xd8a98393b51d4533d7515d82c4640ff5cb4c5d84ec154be20ae2d70244c6bd8e\",\"urls\":[\"bzz-raw://19a1d2b6aa47db3488c4ce2531a4a82d79cc66b089ecebb3d06bc9a6c2ca2c04\",\"dweb:/ipfs/QmY1rhfogBfWyu4Bs3dbwrXjYvkvLLnwgi5hLuRcMgtjDy\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/MarketsStateInterface.sol\":{\"keccak256\":\"0xf51bd2d361d9cf448f2c2a5bb37c2699b0d9605a8f1b6a8719f90d8f536f2a05\",\"urls\":[\"bzz-raw://415a4444e8f9aca25132f492b226b8d500081a4ba5be8e45b401a68e73e1895b\",\"dweb:/ipfs/QmUPGgnqUjidxeEpkgu4yYzhfuykgtNKehEwbps97nAAzZ\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/PairAggregatorInterface.sol\":{\"keccak256\":\"0x4331fd21591542fda69505ce457c03f9ef66f2b8fea50db669864f517c4f95a1\",\"urls\":[\"bzz-raw://3cd373c888a2b4f6d1a93f540e9a0f4982316f743c0891d310a5e712c0f8eb78\",\"dweb:/ipfs/QmYA6Z3HFYj8MZSJwKP7NjawaD5TehE6Lmtx2VbTfqEHfb\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0xb2b1050602a2c4b8fac7053462a7a71c4a8ac91ffa7622dc003b07867dd2d04a\",\"urls\":[\"bzz-raw://2d38d083992ace8e9b361e763c1ba8ec35dc6604a1829fb09df8750a1c517d78\",\"dweb:/ipfs/QmQjba8A9c4q3AmEJf7GMytSyFPdG5rniSvL7Kw8QrUEoT\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/providers/chainlink/PairAggregatorRegistryMock.sol\":{\"keccak256\":\"0x67da430caea4b7be305cfab5734e3cfe9e30a8079fe37e5610c66ae1eb849850\",\"urls\":[\"bzz-raw://82e47e9bb49cf92f5eb86fb9703741254709089e0d5324ec45767d8ca8c4b051\",\"dweb:/ipfs/QmZJ9mF5kquogZjxScPjD3RFgo97tz2Gsq1a67rAebu2ag\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/ChainlinkPairAggregatorRegistry.sol\":{\"keccak256\":\"0x573ac3a12fcb4697ef841b0db8c7b5a849dae6db7df46459fb6d81c2a13fed09\",\"urls\":[\"bzz-raw://7e10562ad6bf416eb1030d113a491e5cbb073340b07f1c9cfd54d443a9269556\",\"dweb:/ipfs/QmasCUspR26eaxwe52bG9QVu3984XeVu9KWU7k5LHu5rfU\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/IChainlinkPairAggregatorRegistry.sol\":{\"keccak256\":\"0xa6f747fa1fecfef304721bc5b95ff34f1057ffeebd096d72051c013191879388\",\"urls\":[\"bzz-raw://27a99f0483fd2950126fd56cca827bab0cb3635e4512380acd65f161960906eb\",\"dweb:/ipfs/QmUR6GkPEpzqo4G76eeTNDLgxi3M4P7G338Jr4uoCQqrx9\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0xc5453e6f1a43327a37db250dedb65561c4deb0f3eb3cad490a64fc56e0b6f7b7\",\"urls\":[\"bzz-raw://f6edcab27eebecb576c9a884a173a1a5fcf0c129c76b992ec77ca24518d92f91\",\"dweb:/ipfs/QmW3q6w39dg9RnxsQdfrFVudmiZh5asRnkWQVkrap9hnJf\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AssetSettingsLib.sol\":{\"keccak256\":\"0x9c67a3de3bb62fdfbd5c116016e0693300bb9d71fe055bb6aa12da305aba3bf4\",\"urls\":[\"bzz-raw://a3c9ffdd1496a6192abb62b72625e5778db231656f2c8fffd09a83d089996aa6\",\"dweb:/ipfs/QmevJ5ojFaqG363CrnJZ9x3YvGMWKfUaFoUVbCsaSzqPfe\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0xf4caad9e4d96afe2721124eaf7203bb4e3a97beb3664c63297c4e68523f5bd65\",\"urls\":[\"bzz-raw://dcd6f564423c2cf83f3a56120f43eb6fd9f6e852cbb615be657f89e5114debf4\",\"dweb:/ipfs/QmRZStVoa5KbYRCHpzC7h998NnRhbFHfUZ71TRTiLzMTcX\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0xe49711d0c8193559f76dc5f399344c8f5f5e6a8b99bf78c6bcfd9aa1c456c306\",\"urls\":[\"bzz-raw://c6432c082145470691dfde04bf5c4220ccc32a5dccf6520c3122e47e470e6c22\",\"dweb:/ipfs/Qmd97DA5SB3d8Cuwf5M6vLtfDLHYXrMj5d3cXkYPP7iPpU\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/MarketStateLib.sol\":{\"keccak256\":\"0x8212e9e0d7c8d79d53087c5fb4735374f50cf6644c27b13e5faba5344c9b2087\",\"urls\":[\"bzz-raw://68b3d876f4e6569b57abfe9e7e69675a362a9d45f92c51b3a3a089d1c226817b\",\"dweb:/ipfs/QmSirrURGaLUYVkSeedjsrzF1kFB7gsuoHBpmWb9ed8eZt\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0xa397bcb75a4e7d80fd1043b7dc3c3a69f8c12435d26d843e4be40e875b71e134\",\"urls\":[\"bzz-raw://aabd466bea9e95a2585d597ebf62025f7ab4f38d1d4fe1c9fa5be1d98d131789\",\"dweb:/ipfs/QmcRGMg8X5teSF3Ga8ECPH2HvenViySkdnzvpUWvMDWXJL\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0c6a7e0de89e1017166ef4f593b33c8d0bfc6bcf3cd3db0bb5c1610ce260b659\",\"urls\":[\"bzz-raw://926108ace9152ed12d86a74ccb98d8c0aa698bd48fd3b4bfedacf976a8dd59d3\",\"dweb:/ipfs/QmVYjChMWZJdpPoBNheHMfyoTVsAarfLJ6SxPHhEsd6kUB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0xbe70455cee756e9498c220e13c1550d163a4cbcb09e8afe2f0ee94f717c80315\",\"urls\":[\"bzz-raw://0ad4a0a6394e560e40da2fee213381db0184878c29078b2f570eaacf116bb855\",\"dweb:/ipfs/QmTF87YYagh3WrxNZyi2uxhzcxyGsdtJCLu9nwmXGGaoMz\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/upgrades/contracts/upgradeability/Proxy.sol\":{\"keccak256\":\"0xd8074ae5fa7ee6384ca8196a896612fb044bbf4ff4b7336d03cd97845000ac21\",\"urls\":[\"bzz-raw://3a111e1dc777d80e6c2ad41c6ff2bfb3ae8f61658fd6580ddf9ba9ab0d25a354\",\"dweb:/ipfs/QmSfwvUqqiownzHeMmUiYkejWs6FXR2KLtHQnSzP6FivTj\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611c29806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000ac5760003560e01c8063c4959317116200006f578063c49593171462000140578063c4d66de81462000157578063d7775ff1146200016e578063e06174e41462000194578063eef84f00146200019e57620000ac565b8063158ef93e14620000b1578063662a3e5814620000d3578063712985a614620000ea578063887b04b914620001035780638a35ec541462000129575b600080fd5b620000bb620001b5565b604051620000ca9190620014c2565b60405180910390f35b620000bb620000e436600462000f87565b620001d6565b62000101620000fb36600462000fc6565b620001ed565b005b6200011a62000114366004620010a2565b62000228565b604051620000ca9190620014d2565b6200011a6200013a36600462000f87565b62000551565b6200011a6200015136600462000f87565b62000574565b620001016200016836600462000f45565b6200059c565b620001856200017f3660046200101a565b620005de565b604051620000ca9190620014af565b6200011a62000732565b6200011a620001af366004620010a2565b62000756565b600080604051620001c690620013ea565b6040519081900390205492915050565b6000620001e4838362000801565b90505b92915050565b6001600160a01b0392831660009081526020818152604080832094861683529390529190912080546001600160a01b03191691909216179055565b600062000234620001b5565b6200025c5760405162461bcd60e51b815260040162000253906200153c565b60405180910390fd5b6200026662000732565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b815260040162000293919062001414565b60006040518083038186803b158015620002ac57600080fd5b505afa158015620002c1573d6000803e3d6000fd5b50620002e99250620002da915050602084018462000f45565b6001600160a01b03166200082b565b620003085760405162461bcd60e51b81526004016200025390620014f4565b6200031e620002da604084016020850162000f45565b6200033d5760405162461bcd60e51b8152600401620002539062001506565b62000353620002da606084016040850162000f45565b620003725760405162461bcd60e51b81526004016200025390620014f4565b6200039d62000385602084018462000f45565b62000397604085016020860162000f45565b62000801565b620003bc5760405162461bcd60e51b8152600401620002539062001518565b60008080620003cf602086018662000f45565b6001600160a01b03166001600160a01b03168152602001908152602001600020600084602001602062000406919081019062000f45565b6001600160a01b039081168252602082019290925260400160002054169050620004406200043a36859003850185620010c3565b62000868565b91508160008062000455602087018762000f45565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008560200160206200048c919081019062000f45565b6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550826020016020620004e5919081019062000f45565b6001600160a01b0316620004fd602085018562000f45565b6001600160a01b0316336001600160a01b03167f014e45afe4d61e4db0fe7390071474227f9e8362a21c8a3318ee9ff6a9e431ac84866040516200054392919062001424565b60405180910390a450919050565b60006020818152928152604080822090935290815220546001600160a01b031681565b6001600160a01b03918216600090815260208181526040808320938516835292905220541690565b620005a6620001b5565b15620005c65760405162461bcd60e51b815260040162000253906200154e565b620005d18162000aa5565b620005db62000b19565b50565b6060620005ea620001b5565b620006095760405162461bcd60e51b815260040162000253906200153c565b6200061362000732565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b815260040162000640919062001414565b60006040518083038186803b1580156200065957600080fd5b505afa1580156200066e573d6000803e3d6000fd5b5050508215159050620006955760405162461bcd60e51b815260040162000253906200152a565b604080518381526020808502820101909152828015620006bf578160200160208202803883390190505b50905060005b828110156200072b57620006fd848483818110620006df57fe5b905060c00201803603620006f79190810190620010c3565b62000b39565b8282815181106200070a57fe5b6001600160a01b0390921660209283029190910190910152600101620006c5565b5092915050565b60008060006040516200074590620013f7565b604051908190039020549250505090565b600062000762620001b5565b620007815760405162461bcd60e51b815260040162000253906200153c565b6200078b62000732565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401620007b8919062001414565b60006040518083038186803b158015620007d157600080fd5b505afa158015620007e6573d6000803e3d6000fd5b50505050620001e782803603620006f79190810190620010c3565b6001600160a01b039182166000908152602081815260408083209385168352929052205416151590565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906200086057508115155b949350505050565b6000806200087562000732565b6001600160a01b031663ea23cb7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015620008ae57600080fd5b505afa158015620008c3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620008e9919081019062001081565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200092457600080fd5b505af115801562000939573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200095f919081019062001081565b6001600160a01b031663c4f8f96e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200099857600080fd5b505afa158015620009ad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620009d3919081019062001060565b90506000620009e162000732565b82604051620009f09062000dde565b620009fd92919062001490565b604051809103906000f08015801562000a1a573d6000803e3d6000fd5b5090506000819050809350836001600160a01b0316632e6536a88660400151876060015188608001518960a001516040518563ffffffff1660e01b815260040162000a6994939291906200144a565b600060405180830381600087803b15801562000a8457600080fd5b505af115801562000a99573d6000803e3d6000fd5b50505050505050919050565b600062000ab162000732565b6001600160a01b03161462000af95762000ad4816001600160a01b03166200082b565b62000af35760405162461bcd60e51b81526004016200025390620014e2565b620005db565b600060405162000b0990620013f7565b6040519081900390208290555050565b600060405162000b2990620013ea565b6040519081900390206001905550565b80516000906001600160a01b031662000b5162000732565b6001600160a01b031663a734f06e6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000b8a57600080fd5b505afa15801562000b9f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000bc5919081019062000f66565b6001600160a01b0316148062000bec5750815162000bec906001600160a01b03166200082b565b62000c0b5760405162461bcd60e51b81526004016200025390620014f4565b81602001516001600160a01b031662000c2362000732565b6001600160a01b031663a734f06e6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000c5c57600080fd5b505afa15801562000c71573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000c97919081019062000f66565b6001600160a01b0316148062000cc0575062000cc082602001516001600160a01b03166200082b565b62000cdf5760405162461bcd60e51b8152600401620002539062001506565b62000cf782604001516001600160a01b03166200082b565b62000d165760405162461bcd60e51b81526004016200025390620014f4565b62000d2a8260000151836020015162000801565b1562000d4a5760405162461bcd60e51b8152600401620002539062001560565b62000d558262000868565b82516001600160a01b0390811660009081526020818152604080832082880180518616855292529182902080546001600160a01b031916858516179055518551915193945082169291169033907f8bd556975fee090206fa4adfec66bc8d97d30d75c04de3c55dfba9a40a30b2c99062000dd190869062001404565b60405180910390a4919050565b6105b0806200163783390190565b8035620001e781620015f3565b8051620001e781620015f3565b60008083601f84011262000e1957600080fd5b50813567ffffffffffffffff81111562000e3257600080fd5b6020830191508360c082028301111562000e4b57600080fd5b9250929050565b8035620001e7816200160a565b8051620001e78162001615565b8051620001e78162001620565b600060c0828403121562000e8c57600080fd5b50919050565b600060c0828403121562000ea557600080fd5b62000eb160c062001572565b9050600062000ec1848462000dec565b825250602062000ed48484830162000dec565b602083015250604062000eea8482850162000dec565b604083015250606062000f008482850162000e52565b606083015250608062000f168482850162000f38565b60808301525060a062000f2c8482850162000f38565b60a08301525092915050565b8035620001e7816200162b565b60006020828403121562000f5857600080fd5b600062000860848462000dec565b60006020828403121562000f7957600080fd5b600062000860848462000df9565b6000806040838503121562000f9b57600080fd5b600062000fa9858562000dec565b925050602062000fbc8582860162000dec565b9150509250929050565b60008060006060848603121562000fdc57600080fd5b600062000fea868662000dec565b935050602062000ffd8682870162000dec565b9250506040620010108682870162000dec565b9150509250925092565b600080602083850312156200102e57600080fd5b823567ffffffffffffffff8111156200104657600080fd5b620010548582860162000e06565b92509250509250929050565b6000602082840312156200107357600080fd5b600062000860848462000e5f565b6000602082840312156200109457600080fd5b600062000860848462000e6c565b600060c08284031215620010b557600080fd5b600062000860848462000e79565b600060c08284031215620010d657600080fd5b600062000860848462000e92565b6000620010f2838362001191565b505060200190565b6200110581620015e6565b82525050565b6200110581620015b2565b60006200112382620015a0565b6200112f8185620015a4565b93506200113c836200159a565b8060005b8381101562001170578151620011578882620010e4565b975062001164836200159a565b92505060010162001140565b509495945050505050565b6200110581620015bf565b6200110581620015c4565b6200110581620015c7565b6000620011ab601c83620015ad565b7f54496e697469616c697a61626c652e6973496e697469616c697a6564000000008152601c0192915050565b6000620011e6601b83620015a4565b7f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000815260200192915050565b600062001221601b83620015a4565b7f424153455f544f4b454e5f4d5553545f42455f434f4e54524143540000000000815260200192915050565b60006200125c601c83620015a4565b7f51554f54455f544f4b454e5f4d5553545f42455f434f4e545241435400000000815260200192915050565b600062001297601983620015a4565b7f504149525f41474752454741544f525f4e4f545f455849535400000000000000815260200192915050565b6000620012d2601883620015ad565b7f426173655570677261646561626c652e73657474696e67730000000000000000815260180192915050565b60006200130d601283620015a4565b71524551554553545f4c4953545f454d50545960701b815260200192915050565b60006200133d601883620015a4565b7f434f4e54524143545f4e4f545f494e495449414c495a45440000000000000000815260200192915050565b600062001378601c83620015a4565b7f434f4e54524143545f414c52454144595f494e495449414c495a454400000000815260200192915050565b6000620013b3601d83620015a4565b7f504149525f41474752454741544f525f414c52454144595f4558495354000000815260200192915050565b6200110581620015e0565b6000620001e7826200119c565b6000620001e782620012c3565b60208101620001e782846200110b565b60208101620001e78284620010fa565b604081016200143482856200110b565b6200144360208301846200110b565b9392505050565b608081016200145a82876200110b565b6200146960208301866200117b565b620014786040830185620013df565b620014876060830184620013df565b95945050505050565b60408101620014a082856200110b565b62001443602083018462001186565b60208082528101620001e4818462001116565b60208101620001e782846200117b565b60208101620001e7828462001191565b60208082528101620001e781620011d7565b60208082528101620001e78162001212565b60208082528101620001e7816200124d565b60208082528101620001e78162001288565b60208082528101620001e781620012fe565b60208082528101620001e7816200132e565b60208082528101620001e78162001369565b60208082528101620001e781620013a4565b60405181810167ffffffffffffffff811182821017156200159257600080fd5b604052919050565b60200190565b5190565b90815260200190565b919050565b6000620001e782620015d4565b151590565b90565b6000620001e782620015b2565b6001600160a01b031690565b60ff1690565b6000620001e782620015c7565b620015fe81620015b2565b8114620005db57600080fd5b620015fe81620015bf565b620015fe81620015c4565b620015fe81620015c7565b620015fe81620015e056fe608060405234801561001057600080fd5b506040516105b03803806105b08339818101604052604081101561003357600080fd5b50805160209091015161004e826001600160e01b0361006716565b610060816001600160e01b0361013316565b5050610315565b600061007a6001600160e01b036102a316565b6001600160a01b0316146100fa576100a4816001600160a01b03166102d960201b61021b1760201c565b6100f5576040805162461bcd60e51b815260206004820152601b60248201527f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000604482015290519081900360640190fd5b610130565b604080517f426173655570677261646561626c652e73657474696e67730000000000000000815290519081900360180190208190555b50565b6101446001600160e01b036102a316565b6001600160a01b031663ea23cb7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561017c57600080fd5b505afa158015610190573d6000803e3d6000fd5b505050506040513d60208110156101a657600080fd5b50516040805163b28f5abb60e01b81526004810184905290516001600160a01b039092169163b28f5abb91602480820192602092909190829003018186803b1580156101f157600080fd5b505afa158015610205573d6000803e3d6000fd5b505050506040513d602081101561021b57600080fd5b505161026e576040805162461bcd60e51b815260206004820152601460248201527f4c4f4749435f4e414d455f4e4f545f4558495354000000000000000000000000604482015290519081900360640190fd5b604080517f426173655570677261646561626c652e6c6f6769634e616d65000000000000008152905190819003601901902055565b604080517f426173655570677261646561626c652e73657474696e67730000000000000000815290519081900360180190205490565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061030d57508115155b949350505050565b61028c806103246000396000f3fe6080604052600436106100295760003560e01c80635c60da1b14610033578063e06174e414610064575b610031610079565b005b34801561003f57600080fd5b50610048610093565b604080516001600160a01b039092168252519081900360200190f35b34801561007057600080fd5b506100486100a2565b610081610091565b61009161008c6100d8565b6101c1565b565b600061009d6100d8565b905090565b604080517f426173655570677261646561626c652e73657474696e67730000000000000000815290519081900360180190205490565b60006100e26100a2565b6001600160a01b031663ea23cb7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561011a57600080fd5b505afa15801561012e573d6000803e3d6000fd5b505050506040513d602081101561014457600080fd5b50516001600160a01b03166373f1fcf661015c6101e5565b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561019057600080fd5b505afa1580156101a4573d6000803e3d6000fd5b505050506040513d60208110156101ba57600080fd5b5051905090565b3660008037600080366000845af43d6000803e8080156101e0573d6000f35b3d6000fd5b604080517f426173655570677261646561626c652e6c6f6769634e616d6500000000000000815290519081900360190190205490565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061024f57508115155b94935050505056fea265627a7a72315820719540adc046c2f7c4155ffa200cbba2e96c24f6c5638e7f502862ad0af638e764736f6c63430005110032a365627a7a723158200e10753149e746c5312af25811fb86e1e85458672ebd03cd248c6e059b274e636c6578706572696d656e74616cf564736f6c63430005110040",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000ac5760003560e01c8063c4959317116200006f578063c49593171462000140578063c4d66de81462000157578063d7775ff1146200016e578063e06174e41462000194578063eef84f00146200019e57620000ac565b8063158ef93e14620000b1578063662a3e5814620000d3578063712985a614620000ea578063887b04b914620001035780638a35ec541462000129575b600080fd5b620000bb620001b5565b604051620000ca9190620014c2565b60405180910390f35b620000bb620000e436600462000f87565b620001d6565b62000101620000fb36600462000fc6565b620001ed565b005b6200011a62000114366004620010a2565b62000228565b604051620000ca9190620014d2565b6200011a6200013a36600462000f87565b62000551565b6200011a6200015136600462000f87565b62000574565b620001016200016836600462000f45565b6200059c565b620001856200017f3660046200101a565b620005de565b604051620000ca9190620014af565b6200011a62000732565b6200011a620001af366004620010a2565b62000756565b600080604051620001c690620013ea565b6040519081900390205492915050565b6000620001e4838362000801565b90505b92915050565b6001600160a01b0392831660009081526020818152604080832094861683529390529190912080546001600160a01b03191691909216179055565b600062000234620001b5565b6200025c5760405162461bcd60e51b815260040162000253906200153c565b60405180910390fd5b6200026662000732565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b815260040162000293919062001414565b60006040518083038186803b158015620002ac57600080fd5b505afa158015620002c1573d6000803e3d6000fd5b50620002e99250620002da915050602084018462000f45565b6001600160a01b03166200082b565b620003085760405162461bcd60e51b81526004016200025390620014f4565b6200031e620002da604084016020850162000f45565b6200033d5760405162461bcd60e51b8152600401620002539062001506565b62000353620002da606084016040850162000f45565b620003725760405162461bcd60e51b81526004016200025390620014f4565b6200039d62000385602084018462000f45565b62000397604085016020860162000f45565b62000801565b620003bc5760405162461bcd60e51b8152600401620002539062001518565b60008080620003cf602086018662000f45565b6001600160a01b03166001600160a01b03168152602001908152602001600020600084602001602062000406919081019062000f45565b6001600160a01b039081168252602082019290925260400160002054169050620004406200043a36859003850185620010c3565b62000868565b91508160008062000455602087018762000f45565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008560200160206200048c919081019062000f45565b6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550826020016020620004e5919081019062000f45565b6001600160a01b0316620004fd602085018562000f45565b6001600160a01b0316336001600160a01b03167f014e45afe4d61e4db0fe7390071474227f9e8362a21c8a3318ee9ff6a9e431ac84866040516200054392919062001424565b60405180910390a450919050565b60006020818152928152604080822090935290815220546001600160a01b031681565b6001600160a01b03918216600090815260208181526040808320938516835292905220541690565b620005a6620001b5565b15620005c65760405162461bcd60e51b815260040162000253906200154e565b620005d18162000aa5565b620005db62000b19565b50565b6060620005ea620001b5565b620006095760405162461bcd60e51b815260040162000253906200153c565b6200061362000732565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b815260040162000640919062001414565b60006040518083038186803b1580156200065957600080fd5b505afa1580156200066e573d6000803e3d6000fd5b5050508215159050620006955760405162461bcd60e51b815260040162000253906200152a565b604080518381526020808502820101909152828015620006bf578160200160208202803883390190505b50905060005b828110156200072b57620006fd848483818110620006df57fe5b905060c00201803603620006f79190810190620010c3565b62000b39565b8282815181106200070a57fe5b6001600160a01b0390921660209283029190910190910152600101620006c5565b5092915050565b60008060006040516200074590620013f7565b604051908190039020549250505090565b600062000762620001b5565b620007815760405162461bcd60e51b815260040162000253906200153c565b6200078b62000732565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401620007b8919062001414565b60006040518083038186803b158015620007d157600080fd5b505afa158015620007e6573d6000803e3d6000fd5b50505050620001e782803603620006f79190810190620010c3565b6001600160a01b039182166000908152602081815260408083209385168352929052205416151590565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906200086057508115155b949350505050565b6000806200087562000732565b6001600160a01b031663ea23cb7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015620008ae57600080fd5b505afa158015620008c3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620008e9919081019062001081565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200092457600080fd5b505af115801562000939573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200095f919081019062001081565b6001600160a01b031663c4f8f96e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200099857600080fd5b505afa158015620009ad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620009d3919081019062001060565b90506000620009e162000732565b82604051620009f09062000dde565b620009fd92919062001490565b604051809103906000f08015801562000a1a573d6000803e3d6000fd5b5090506000819050809350836001600160a01b0316632e6536a88660400151876060015188608001518960a001516040518563ffffffff1660e01b815260040162000a6994939291906200144a565b600060405180830381600087803b15801562000a8457600080fd5b505af115801562000a99573d6000803e3d6000fd5b50505050505050919050565b600062000ab162000732565b6001600160a01b03161462000af95762000ad4816001600160a01b03166200082b565b62000af35760405162461bcd60e51b81526004016200025390620014e2565b620005db565b600060405162000b0990620013f7565b6040519081900390208290555050565b600060405162000b2990620013ea565b6040519081900390206001905550565b80516000906001600160a01b031662000b5162000732565b6001600160a01b031663a734f06e6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000b8a57600080fd5b505afa15801562000b9f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000bc5919081019062000f66565b6001600160a01b0316148062000bec5750815162000bec906001600160a01b03166200082b565b62000c0b5760405162461bcd60e51b81526004016200025390620014f4565b81602001516001600160a01b031662000c2362000732565b6001600160a01b031663a734f06e6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000c5c57600080fd5b505afa15801562000c71573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000c97919081019062000f66565b6001600160a01b0316148062000cc0575062000cc082602001516001600160a01b03166200082b565b62000cdf5760405162461bcd60e51b8152600401620002539062001506565b62000cf782604001516001600160a01b03166200082b565b62000d165760405162461bcd60e51b81526004016200025390620014f4565b62000d2a8260000151836020015162000801565b1562000d4a5760405162461bcd60e51b8152600401620002539062001560565b62000d558262000868565b82516001600160a01b0390811660009081526020818152604080832082880180518616855292529182902080546001600160a01b031916858516179055518551915193945082169291169033907f8bd556975fee090206fa4adfec66bc8d97d30d75c04de3c55dfba9a40a30b2c99062000dd190869062001404565b60405180910390a4919050565b6105b0806200163783390190565b8035620001e781620015f3565b8051620001e781620015f3565b60008083601f84011262000e1957600080fd5b50813567ffffffffffffffff81111562000e3257600080fd5b6020830191508360c082028301111562000e4b57600080fd5b9250929050565b8035620001e7816200160a565b8051620001e78162001615565b8051620001e78162001620565b600060c0828403121562000e8c57600080fd5b50919050565b600060c0828403121562000ea557600080fd5b62000eb160c062001572565b9050600062000ec1848462000dec565b825250602062000ed48484830162000dec565b602083015250604062000eea8482850162000dec565b604083015250606062000f008482850162000e52565b606083015250608062000f168482850162000f38565b60808301525060a062000f2c8482850162000f38565b60a08301525092915050565b8035620001e7816200162b565b60006020828403121562000f5857600080fd5b600062000860848462000dec565b60006020828403121562000f7957600080fd5b600062000860848462000df9565b6000806040838503121562000f9b57600080fd5b600062000fa9858562000dec565b925050602062000fbc8582860162000dec565b9150509250929050565b60008060006060848603121562000fdc57600080fd5b600062000fea868662000dec565b935050602062000ffd8682870162000dec565b9250506040620010108682870162000dec565b9150509250925092565b600080602083850312156200102e57600080fd5b823567ffffffffffffffff8111156200104657600080fd5b620010548582860162000e06565b92509250509250929050565b6000602082840312156200107357600080fd5b600062000860848462000e5f565b6000602082840312156200109457600080fd5b600062000860848462000e6c565b600060c08284031215620010b557600080fd5b600062000860848462000e79565b600060c08284031215620010d657600080fd5b600062000860848462000e92565b6000620010f2838362001191565b505060200190565b6200110581620015e6565b82525050565b6200110581620015b2565b60006200112382620015a0565b6200112f8185620015a4565b93506200113c836200159a565b8060005b8381101562001170578151620011578882620010e4565b975062001164836200159a565b92505060010162001140565b509495945050505050565b6200110581620015bf565b6200110581620015c4565b6200110581620015c7565b6000620011ab601c83620015ad565b7f54496e697469616c697a61626c652e6973496e697469616c697a6564000000008152601c0192915050565b6000620011e6601b83620015a4565b7f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000815260200192915050565b600062001221601b83620015a4565b7f424153455f544f4b454e5f4d5553545f42455f434f4e54524143540000000000815260200192915050565b60006200125c601c83620015a4565b7f51554f54455f544f4b454e5f4d5553545f42455f434f4e545241435400000000815260200192915050565b600062001297601983620015a4565b7f504149525f41474752454741544f525f4e4f545f455849535400000000000000815260200192915050565b6000620012d2601883620015ad565b7f426173655570677261646561626c652e73657474696e67730000000000000000815260180192915050565b60006200130d601283620015a4565b71524551554553545f4c4953545f454d50545960701b815260200192915050565b60006200133d601883620015a4565b7f434f4e54524143545f4e4f545f494e495449414c495a45440000000000000000815260200192915050565b600062001378601c83620015a4565b7f434f4e54524143545f414c52454144595f494e495449414c495a454400000000815260200192915050565b6000620013b3601d83620015a4565b7f504149525f41474752454741544f525f414c52454144595f4558495354000000815260200192915050565b6200110581620015e0565b6000620001e7826200119c565b6000620001e782620012c3565b60208101620001e782846200110b565b60208101620001e78284620010fa565b604081016200143482856200110b565b6200144360208301846200110b565b9392505050565b608081016200145a82876200110b565b6200146960208301866200117b565b620014786040830185620013df565b620014876060830184620013df565b95945050505050565b60408101620014a082856200110b565b62001443602083018462001186565b60208082528101620001e4818462001116565b60208101620001e782846200117b565b60208101620001e7828462001191565b60208082528101620001e781620011d7565b60208082528101620001e78162001212565b60208082528101620001e7816200124d565b60208082528101620001e78162001288565b60208082528101620001e781620012fe565b60208082528101620001e7816200132e565b60208082528101620001e78162001369565b60208082528101620001e781620013a4565b60405181810167ffffffffffffffff811182821017156200159257600080fd5b604052919050565b60200190565b5190565b90815260200190565b919050565b6000620001e782620015d4565b151590565b90565b6000620001e782620015b2565b6001600160a01b031690565b60ff1690565b6000620001e782620015c7565b620015fe81620015b2565b8114620005db57600080fd5b620015fe81620015bf565b620015fe81620015c4565b620015fe81620015c7565b620015fe81620015e056fe608060405234801561001057600080fd5b506040516105b03803806105b08339818101604052604081101561003357600080fd5b50805160209091015161004e826001600160e01b0361006716565b610060816001600160e01b0361013316565b5050610315565b600061007a6001600160e01b036102a316565b6001600160a01b0316146100fa576100a4816001600160a01b03166102d960201b61021b1760201c565b6100f5576040805162461bcd60e51b815260206004820152601b60248201527f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000604482015290519081900360640190fd5b610130565b604080517f426173655570677261646561626c652e73657474696e67730000000000000000815290519081900360180190208190555b50565b6101446001600160e01b036102a316565b6001600160a01b031663ea23cb7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561017c57600080fd5b505afa158015610190573d6000803e3d6000fd5b505050506040513d60208110156101a657600080fd5b50516040805163b28f5abb60e01b81526004810184905290516001600160a01b039092169163b28f5abb91602480820192602092909190829003018186803b1580156101f157600080fd5b505afa158015610205573d6000803e3d6000fd5b505050506040513d602081101561021b57600080fd5b505161026e576040805162461bcd60e51b815260206004820152601460248201527f4c4f4749435f4e414d455f4e4f545f4558495354000000000000000000000000604482015290519081900360640190fd5b604080517f426173655570677261646561626c652e6c6f6769634e616d65000000000000008152905190819003601901902055565b604080517f426173655570677261646561626c652e73657474696e67730000000000000000815290519081900360180190205490565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061030d57508115155b949350505050565b61028c806103246000396000f3fe6080604052600436106100295760003560e01c80635c60da1b14610033578063e06174e414610064575b610031610079565b005b34801561003f57600080fd5b50610048610093565b604080516001600160a01b039092168252519081900360200190f35b34801561007057600080fd5b506100486100a2565b610081610091565b61009161008c6100d8565b6101c1565b565b600061009d6100d8565b905090565b604080517f426173655570677261646561626c652e73657474696e67730000000000000000815290519081900360180190205490565b60006100e26100a2565b6001600160a01b031663ea23cb7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561011a57600080fd5b505afa15801561012e573d6000803e3d6000fd5b505050506040513d602081101561014457600080fd5b50516001600160a01b03166373f1fcf661015c6101e5565b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561019057600080fd5b505afa1580156101a4573d6000803e3d6000fd5b505050506040513d60208110156101ba57600080fd5b5051905090565b3660008037600080366000845af43d6000803e8080156101e0573d6000f35b3d6000fd5b604080517f426173655570677261646561626c652e6c6f6769634e616d6500000000000000815290519081900360190190205490565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061024f57508115155b94935050505056fea265627a7a72315820719540adc046c2f7c4155ffa200cbba2e96c24f6c5638e7f502862ad0af638e764736f6c63430005110032a365627a7a723158200e10753149e746c5312af25811fb86e1e85458672ebd03cd248c6e059b274e636c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "135:344:79:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;135:344:79;;;;;;;",
  "deployedSourceMap": "135:344:79:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;135:344:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1241:169:33;;;:::i;:::-;;;;;;;;;;;;;;;;5964:188:96;;;;;;;;;:::i;212:265:79:-;;;;;;;;;:::i;:::-;;3756:1081:96;;;;;;;;;:::i;:::-;;;;;;;;2177:82;;;;;;;;;:::i;5404:200::-;;;;;;;;;:::i;4968:143::-;;;;;;;;;:::i;2531:537::-;;;;;;;;;:::i;:::-;;;;;;;;839:263:11;;;:::i;3285:252:96:-;;;;;;;;;:::i;1241:169:33:-;1285:10;1307:12;421:55;;;;;;;;;;;;;;;1383:11;;1360:44;-1:-1:-1;;1360:44:33:o;5964:188:96:-;6077:4;6104:41;6123:9;6134:10;6104:18;:41::i;:::-;6097:48;;5964:188;;;;;:::o;212:265:79:-;-1:-1:-1;;;;;365:24:79;;;:11;:24;;;;;;;;;;;:38;;;;;;;;;;;;:105;;-1:-1:-1;;;;;;365:105:79;;;;;;;;212:265::o;3756:1081:96:-;3908:34;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;;;;;;;;;690:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;690:28:11;;719:10;690:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;690:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;3962:30:96;;-1:-1:-1;3962:17:96;;-1:-1:-1;;3962:17:96;;;:7;:17;;;-1:-1:-1;;;;;3962:28:96;;:30::i;:::-;3954:70;;;;-1:-1:-1;;;3954:70:96;;;;;;;;;4042:31;:18;;;;;;;;;:31;4034:72;;;;-1:-1:-1;;;4034:72:96;;;;;;;;;4137:47;:34;;;;;;;;;:47;4116:121;;;;-1:-1:-1;;;4116:121:96;;;;;;;;;4268:57;4287:17;;;;:7;:17;;;4306:18;;;;;;;;;;4268;:57::i;:::-;4247:129;;;;-1:-1:-1;;;4247:129:96;;;;;;;;;4387:25;;;4448:17;;;;:7;:17;;;-1:-1:-1;;;;;4436:30:96;-1:-1:-1;;;;;4436:30:96;;;;;;;;;;;;:50;4467:7;:18;;;;;;;;;;;;-1:-1:-1;;;;;4436:50:96;;;;;;;;;;;;;;-1:-1:-1;4436:50:96;;;;-1:-1:-1;4520:38:96;;;;;;;;4550:7;4520:38;;;:29;:38::i;:::-;4507:51;-1:-1:-1;4507:51:96;4569:11;;4581:17;;;;:7;:17;;;-1:-1:-1;;;;;4569:30:96;-1:-1:-1;;;;;4569:30:96;;;;;;;;;;;;:50;4600:7;:18;;;;;;;;;;;;-1:-1:-1;;;;;4569:50:96;-1:-1:-1;;;;;4569:50:96;;;;;;;;;;;;;:63;;;;;-1:-1:-1;;;;;4569:63:96;;;;;-1:-1:-1;;;;;4569:63:96;;;;;;4738:7;:18;;;;;;;;;;;;-1:-1:-1;;;;;4648:182:96;4707:17;;;;:7;:17;;;-1:-1:-1;;;;;4648:182:96;4683:10;-1:-1:-1;;;;;4648:182:96;;4770:17;4809:10;4648:182;;;;;;;;;;;;;;;;740:1:11;3756:1081:96;;;:::o;2177:82::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2177:82:96;;:::o;5404:200::-;-1:-1:-1;;;;;5563:22:96;;;5517:23;5563:22;;;;;;;;;;;:34;;;;;;;;;;;;5404:200::o;4968:143::-;706:13:33;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:33;;;;;;;;;5051:29:96;5064:15;5051:12;:29::i;:::-;5091:13;:11;:13::i;:::-;4968:143;:::o;2531:537::-;2721:47;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;690:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;690:28:11;;719:10;690:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;690:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;2792:19:96;;;;-1:-1:-1;2784:50:96;;;;-1:-1:-1;;;2784:50:96;;;;;;;;;2862:46;;;;;;;;;;;;;;;;2892:8;2862:46;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2862:46:96;;2845:63;;2924:13;2919:143;2939:23;;;2919:143;;;3011:40;3035:8;;3044:5;3035:15;;;;;;;;;;;;3011:40;;;;;;;;;;;;:23;:40::i;:::-;2987:14;3002:5;2987:21;;;;;;;;-1:-1:-1;;;;;2987:64:96;;;:21;;;;;;;;;;;:64;2964:7;;2919:143;;;;2531:537;;;;:::o;839:263:11:-;880:17;909:23;943:12;370:37;;;;;;;;;;;;;;;1023:11;;-1:-1:-1;;;839:263:11;:::o;3285:252:96:-;3439:34;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;690:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;690:28:11;;719:10;690:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;690:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;690:40:11;;;;3498:32:96;3522:7;3498:32;;;;;;;;;;;6543:207;-1:-1:-1;;;;;6692:22:96;;;6657:4;6692:22;;;;;;;;;;;:34;;;;;;;;;;;6684:59;;;6543:207::o;686:610:132:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:132;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:132:o;6756:782:96:-;6886:34;6932:17;6952:10;:8;:10::i;:::-;-1:-1:-1;;;;;6952:40:96;;:42;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6952:42:96;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6952:42:96;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6952:42:96;;;;;;;;;-1:-1:-1;;;;;6952:62:96;;:64;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6952:64:96;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6952:64:96;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6952:64:96;;;;;;;;;-1:-1:-1;;;;;6952:114:96;;:116;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6952:116:96;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6952:116:96;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6952:116:96;;;;;;;;;6932:136;;7078:32;7151:10;:8;:10::i;:::-;7176:9;7113:82;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7113:82:96;7078:117;;7206:29;7246:19;7206:60;;7313:21;7276:59;;7345:10;-1:-1:-1;;;;;7345:21:96;;7380:7;:34;;;7428:7;:15;;;7457:7;:24;;;7495:7;:26;;;7345:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7345:186:96;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7345:186:96;;;;6756:782;;;;;;:::o;1649:392:11:-;1831:3;1808:10;:8;:10::i;:::-;-1:-1:-1;;;;;1800:35:11;;1796:128;;1864:28;:15;-1:-1:-1;;;;;1864:26:11;;:28::i;:::-;1856:68;;;;-1:-1:-1;;;1856:68:11;;;;;;;;;1849:75;;1796:128;1935:12;370:37;;;;;;;;;;;;;;;1996:29;;;-1:-1:-1;1982:53:11;:::o;1509:171:33:-;1551:12;421:55;;;;;;;;;;;;;;;1608:4;1645:19;;-1:-1:-1;1631:43:33:o;7755:1109:96:-;7974:17;;7879:34;;-1:-1:-1;;;;;7946:45:96;:10;:8;:10::i;:::-;-1:-1:-1;;;;;7946:22:96;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7946:24:96;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7946:24:96;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7946:24:96;;;;;;;;;-1:-1:-1;;;;;7946:45:96;;:95;;;-1:-1:-1;8011:17:96;;:30;;-1:-1:-1;;;;;8011:28:96;;:30::i;:::-;7925:169;;;;-1:-1:-1;;;7925:169:96;;;;;;;;;8153:7;:18;;;-1:-1:-1;;;;;8125:46:96;:10;:8;:10::i;:::-;-1:-1:-1;;;;;8125:22:96;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8125:24:96;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8125:24:96;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8125:24:96;;;;;;;;;-1:-1:-1;;;;;8125:46:96;;:97;;;;8191:31;:7;:18;;;-1:-1:-1;;;;;8191:29:96;;:31::i;:::-;8104:172;;;;-1:-1:-1;;;8104:172:96;;;;;;;;;8307:47;:7;:34;;;-1:-1:-1;;;;;8307:45:96;;:47::i;:::-;8286:121;;;;-1:-1:-1;;;8286:121:96;;;;;;;;;8439:57;8458:7;:17;;;8477:7;:18;;;8439;:57::i;:::-;8438:58;8417:134;;;;-1:-1:-1;;;8417:134:96;;;;;;;;;8575:38;8605:7;8575:29;:38::i;:::-;8636:17;;-1:-1:-1;;;;;8624:30:96;;;:11;:30;;;;;;;;;;;8655:18;;;;;8624:50;;;;;;;;;;:63;;-1:-1:-1;;;;;;8624:63:96;;;;;;;8796:18;8765:17;;8703:154;;8624:63;;-1:-1:-1;8703:154:96;;;;;;8741:10;;8703:154;;;;8624:63;;8703:154;;;;;;;;;;7755:1109;;;:::o;135:344:79:-;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;343:398;;;519:3;512:4;504:6;500:17;496:27;486:2;;537:1;534;527:12;486:2;-1:-1;557:20;;597:18;586:30;;583:2;;;629:1;626;619:12;583:2;663:4;655:6;651:17;639:29;;714:3;706:4;698:6;694:17;684:8;680:32;677:41;674:2;;;731:1;728;721:12;674:2;479:262;;;;;;749:124;813:20;;838:30;813:20;838:30;;880:134;958:13;;976:33;958:13;976:33;;1021:192;1128:13;;1146:62;1128:13;1146:62;;1499:182;;1633:3;1624:6;1619:3;1615:16;1611:26;1608:2;;;1650:1;1647;1640:12;1608:2;-1:-1;1669:6;1601:80;-1:-1;1601:80;1744:1123;;1881:4;1869:9;1864:3;1860:19;1856:30;1853:2;;;1899:1;1896;1889:12;1853:2;1917:20;1932:4;1917:20;;;1908:29;-1:-1;1992:1;2024:49;2069:3;2049:9;2024:49;;;1999:75;;-1:-1;2141:2;2174:49;2219:3;2195:22;;;2174:49;;;2167:4;2160:5;2156:16;2149:75;2095:140;2307:2;2340:49;2385:3;2376:6;2365:9;2361:22;2340:49;;;2333:4;2326:5;2322:16;2315:75;2245:156;2454:2;2487:46;2529:3;2520:6;2509:9;2505:22;2487:46;;;2480:4;2473:5;2469:16;2462:72;2411:134;2607:3;2641:47;2684:3;2675:6;2664:9;2660:22;2641:47;;;2634:4;2627:5;2623:16;2616:73;2555:145;2764:3;2798:47;2841:3;2832:6;2821:9;2817:22;2798:47;;;2791:4;2784:5;2780:16;2773:73;2710:147;1847:1020;;;;;2874:126;2939:20;;2964:31;2939:20;2964:31;;3007:241;;3111:2;3099:9;3090:7;3086:23;3082:32;3079:2;;;3127:1;3124;3117:12;3079:2;3162:1;3179:53;3224:7;3204:9;3179:53;;3255:263;;3370:2;3358:9;3349:7;3345:23;3341:32;3338:2;;;3386:1;3383;3376:12;3338:2;3421:1;3438:64;3494:7;3474:9;3438:64;;3525:366;;;3646:2;3634:9;3625:7;3621:23;3617:32;3614:2;;;3662:1;3659;3652:12;3614:2;3697:1;3714:53;3759:7;3739:9;3714:53;;;3704:63;;3676:97;3804:2;3822:53;3867:7;3858:6;3847:9;3843:22;3822:53;;;3812:63;;3783:98;3608:283;;;;;;3898:491;;;;4036:2;4024:9;4015:7;4011:23;4007:32;4004:2;;;4052:1;4049;4042:12;4004:2;4087:1;4104:53;4149:7;4129:9;4104:53;;;4094:63;;4066:97;4194:2;4212:53;4257:7;4248:6;4237:9;4233:22;4212:53;;;4202:63;;4173:98;4302:2;4320:53;4365:7;4356:6;4345:9;4341:22;4320:53;;;4310:63;;4281:98;3998:391;;;;;;4396:489;;;4581:2;4569:9;4560:7;4556:23;4552:32;4549:2;;;4597:1;4594;4587:12;4549:2;4632:31;;4683:18;4672:30;;4669:2;;;4715:1;4712;4705:12;4669:2;4743:126;4861:7;4852:6;4841:9;4837:22;4743:126;;;4733:136;;;;4611:264;4543:342;;;;;;4892:263;;5007:2;4995:9;4986:7;4982:23;4978:32;4975:2;;;5023:1;5020;5013:12;4975:2;5058:1;5075:64;5131:7;5111:9;5075:64;;5162:321;;5306:2;5294:9;5285:7;5281:23;5277:32;5274:2;;;5322:1;5319;5312:12;5274:2;5357:1;5374:93;5459:7;5439:9;5374:93;;5840:342;;5994:3;5982:9;5973:7;5969:23;5965:33;5962:2;;;6011:1;6008;6001:12;5962:2;6046:1;6063:103;6158:7;6138:9;6063:103;;6189:338;;6341:3;6329:9;6320:7;6316:23;6312:33;6309:2;;;6358:1;6355;6348:12;6309:2;6393:1;6410:101;6503:7;6483:9;6410:101;;6535:239;;6655:79;6730:3;6722:6;6655:79;;;-1:-1;;6763:4;6754:14;;6648:126;6782:142;6873:45;6912:5;6873:45;;;6868:3;6861:58;6855:69;;;6931:113;7014:24;7032:5;7014:24;;7107:855;;7285:87;7366:5;7285:87;;;7385:86;7464:6;7459:3;7385:86;;;7378:93;;7492:89;7575:5;7492:89;;;7601:7;7629:1;7614:326;7639:6;7636:1;7633:13;7614:326;;;7706:6;7700:13;7727:96;7819:3;7804:13;7727:96;;;7720:103;;7840:93;7926:6;7840:93;;;7830:103;-1:-1;;7661:1;7654:9;7614:326;;;-1:-1;7953:3;;7264:698;-1:-1;;;;;7264:698;7970:104;8047:21;8062:5;8047:21;;8081:113;8164:24;8182:5;8164:24;;8201:182;8307:70;8371:5;8307:70;;8777:364;;8955:85;9037:2;9032:3;8955:85;;;9073:30;9053:51;;9132:2;9123:12;;8941:200;-1:-1;;8941:200;9150:327;;9310:67;9374:2;9369:3;9310:67;;;9410:29;9390:50;;9468:2;9459:12;;9296:181;-1:-1;;9296:181;9486:327;;9646:67;9710:2;9705:3;9646:67;;;9746:29;9726:50;;9804:2;9795:12;;9632:181;-1:-1;;9632:181;9822:328;;9982:67;10046:2;10041:3;9982:67;;;10082:30;10062:51;;10141:2;10132:12;;9968:182;-1:-1;;9968:182;10159:325;;10319:67;10383:2;10378:3;10319:67;;;10419:27;10399:48;;10475:2;10466:12;;10305:179;-1:-1;;10305:179;10493:360;;10671:85;10753:2;10748:3;10671:85;;;10789:26;10769:47;;10844:2;10835:12;;10657:196;-1:-1;;10657:196;10862:318;;11022:67;11086:2;11081:3;11022:67;;;-1:-1;;;11102:41;;11171:2;11162:12;;11008:172;-1:-1;;11008:172;11189:324;;11349:67;11413:2;11408:3;11349:67;;;11449:26;11429:47;;11504:2;11495:12;;11335:178;-1:-1;;11335:178;11522:328;;11682:67;11746:2;11741:3;11682:67;;;11782:30;11762:51;;11841:2;11832:12;;11668:182;-1:-1;;11668:182;11859:329;;12019:67;12083:2;12078:3;12019:67;;;12119:31;12099:52;;12179:2;12170:12;;12005:183;-1:-1;;12005:183;12196:107;12275:22;12291:5;12275:22;;12310:372;;12509:148;12653:3;12509:148;;12689:372;;12888:148;13032:3;12888:148;;13068:213;13186:2;13171:18;;13200:71;13175:9;13244:6;13200:71;;13288:229;13414:2;13399:18;;13428:79;13403:9;13480:6;13428:79;;13524:324;13670:2;13655:18;;13684:71;13659:9;13728:6;13684:71;;;13766:72;13834:2;13823:9;13819:18;13810:6;13766:72;;;13641:207;;;;;;13855:519;14043:3;14028:19;;14058:71;14032:9;14102:6;14058:71;;;14140:66;14202:2;14191:9;14187:18;14178:6;14140:66;;;14217:68;14281:2;14270:9;14266:18;14257:6;14217:68;;;14296;14360:2;14349:9;14345:18;14336:6;14296:68;;;14014:360;;;;;;;;14381:324;14527:2;14512:18;;14541:71;14516:9;14585:6;14541:71;;;14623:72;14691:2;14680:9;14676:18;14667:6;14623:72;;14712:427;14913:2;14927:47;;;14898:18;;14988:141;14898:18;15115:6;14988:141;;15146:201;15258:2;15243:18;;15272:65;15247:9;15310:6;15272:65;;15354:279;15505:2;15490:18;;15519:104;15494:9;15596:6;15519:104;;15914:407;16105:2;16119:47;;;16090:18;;16180:131;16090:18;16180:131;;16328:407;16519:2;16533:47;;;16504:18;;16594:131;16504:18;16594:131;;16742:407;16933:2;16947:47;;;16918:18;;17008:131;16918:18;17008:131;;17156:407;17347:2;17361:47;;;17332:18;;17422:131;17332:18;17422:131;;17570:407;17761:2;17775:47;;;17746:18;;17836:131;17746:18;17836:131;;17984:407;18175:2;18189:47;;;18160:18;;18250:131;18160:18;18250:131;;18398:407;18589:2;18603:47;;;18574:18;;18664:131;18574:18;18664:131;;18812:407;19003:2;19017:47;;;18988:18;;19078:131;18988:18;19078:131;;19226:256;19288:2;19282:9;19314:17;;;19389:18;19374:34;;19410:22;;;19371:62;19368:2;;;19446:1;19443;19436:12;19368:2;19462;19455:22;19266:216;;-1:-1;19266:216;19489:184;19646:4;19637:14;;19594:79;19680:170;19816:12;;19787:63;20006:178;20124:19;;;20173:4;20164:14;;20117:67;20365:145;20501:3;20479:31;-1:-1;20479:31;20518:91;;20580:24;20598:5;20580:24;;20616:85;20682:13;20675:21;;20658:43;20708:72;20770:5;20753:27;20787:120;;20878:24;20896:5;20878:24;;21052:121;-1:-1;;;;;21114:54;;21097:76;21180:81;21251:4;21240:16;;21223:38;21268:129;;21355:37;21386:5;21355:37;;22313:117;22382:24;22400:5;22382:24;;;22375:5;22372:35;22362:2;;22421:1;22418;22411:12;22437:111;22503:21;22518:5;22503:21;;22555:117;22624:24;22642:5;22624:24;;22679:175;22777:53;22824:5;22777:53;;23065:113;23132:22;23148:5;23132:22;",
  "source": "pragma solidity 0.5.17;\npragma experimental ABIEncoderV2;\n\nimport \"../../../providers/chainlink/ChainlinkPairAggregatorRegistry.sol\";\n\ncontract PairAggregatorRegistryMock is ChainlinkPairAggregatorRegistry {\n    function externalAddAggregatorFor(\n        address baseAddress,\n        address quoteAddress,\n        address aggregatorAddress\n    ) external {\n        aggregators[baseAddress][quoteAddress] = PairAggregatorInterface(\n            aggregatorAddress\n        );\n    }\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/providers/chainlink/PairAggregatorRegistryMock.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/providers/chainlink/PairAggregatorRegistryMock.sol",
    "exportedSymbols": {
      "PairAggregatorRegistryMock": [
        13795
      ]
    },
    "id": 13796,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13770,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:79"
      },
      {
        "id": 13771,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:79"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/ChainlinkPairAggregatorRegistry.sol",
        "file": "../../../providers/chainlink/ChainlinkPairAggregatorRegistry.sol",
        "id": 13772,
        "nodeType": "ImportDirective",
        "scope": 13796,
        "sourceUnit": 15456,
        "src": "59:74:79",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13773,
              "name": "ChainlinkPairAggregatorRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15455,
              "src": "174:31:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ChainlinkPairAggregatorRegistry_$15455",
                "typeString": "contract ChainlinkPairAggregatorRegistry"
              }
            },
            "id": 13774,
            "nodeType": "InheritanceSpecifier",
            "src": "174:31:79"
          }
        ],
        "contractDependencies": [
          2593,
          9277,
          15455,
          15529
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 13795,
        "linearizedBaseContracts": [
          13795,
          15455,
          15529,
          2593,
          9277
        ],
        "name": "PairAggregatorRegistryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13793,
              "nodeType": "Block",
              "src": "355:122:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13783,
                          "name": "aggregators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15086,
                          "src": "365:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_contract$_PairAggregatorInterface_$11159_$_$",
                            "typeString": "mapping(address => mapping(address => contract PairAggregatorInterface))"
                          }
                        },
                        "id": 13786,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13784,
                          "name": "baseAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13776,
                          "src": "377:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "365:24:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_PairAggregatorInterface_$11159_$",
                          "typeString": "mapping(address => contract PairAggregatorInterface)"
                        }
                      },
                      "id": 13787,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 13785,
                        "name": "quoteAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13778,
                        "src": "390:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "365:38:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PairAggregatorInterface_$11159",
                        "typeString": "contract PairAggregatorInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 13789,
                          "name": "aggregatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13780,
                          "src": "443:17:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 13788,
                        "name": "PairAggregatorInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11159,
                        "src": "406:23:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PairAggregatorInterface_$11159_$",
                          "typeString": "type(contract PairAggregatorInterface)"
                        }
                      },
                      "id": 13790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "406:64:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PairAggregatorInterface_$11159",
                        "typeString": "contract PairAggregatorInterface"
                      }
                    },
                    "src": "365:105:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PairAggregatorInterface_$11159",
                      "typeString": "contract PairAggregatorInterface"
                    }
                  },
                  "id": 13792,
                  "nodeType": "ExpressionStatement",
                  "src": "365:105:79"
                }
              ]
            },
            "documentation": null,
            "id": 13794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "externalAddAggregatorFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13776,
                  "name": "baseAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 13794,
                  "src": "255:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "255:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13778,
                  "name": "quoteAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 13794,
                  "src": "284:20:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13780,
                  "name": "aggregatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 13794,
                  "src": "314:25:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "245:100:79"
            },
            "returnParameters": {
              "id": 13782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "355:0:79"
            },
            "scope": 13795,
            "src": "212:265:79",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 13796,
        "src": "135:344:79"
      }
    ],
    "src": "0:480:79"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/providers/chainlink/PairAggregatorRegistryMock.sol",
    "exportedSymbols": {
      "PairAggregatorRegistryMock": [
        13795
      ]
    },
    "id": 13796,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13770,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:79"
      },
      {
        "id": 13771,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:79"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/ChainlinkPairAggregatorRegistry.sol",
        "file": "../../../providers/chainlink/ChainlinkPairAggregatorRegistry.sol",
        "id": 13772,
        "nodeType": "ImportDirective",
        "scope": 13796,
        "sourceUnit": 15456,
        "src": "59:74:79",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13773,
              "name": "ChainlinkPairAggregatorRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15455,
              "src": "174:31:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ChainlinkPairAggregatorRegistry_$15455",
                "typeString": "contract ChainlinkPairAggregatorRegistry"
              }
            },
            "id": 13774,
            "nodeType": "InheritanceSpecifier",
            "src": "174:31:79"
          }
        ],
        "contractDependencies": [
          2593,
          9277,
          15455,
          15529
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 13795,
        "linearizedBaseContracts": [
          13795,
          15455,
          15529,
          2593,
          9277
        ],
        "name": "PairAggregatorRegistryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13793,
              "nodeType": "Block",
              "src": "355:122:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13783,
                          "name": "aggregators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15086,
                          "src": "365:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_contract$_PairAggregatorInterface_$11159_$_$",
                            "typeString": "mapping(address => mapping(address => contract PairAggregatorInterface))"
                          }
                        },
                        "id": 13786,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13784,
                          "name": "baseAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13776,
                          "src": "377:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "365:24:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_PairAggregatorInterface_$11159_$",
                          "typeString": "mapping(address => contract PairAggregatorInterface)"
                        }
                      },
                      "id": 13787,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 13785,
                        "name": "quoteAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13778,
                        "src": "390:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "365:38:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PairAggregatorInterface_$11159",
                        "typeString": "contract PairAggregatorInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 13789,
                          "name": "aggregatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13780,
                          "src": "443:17:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 13788,
                        "name": "PairAggregatorInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11159,
                        "src": "406:23:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PairAggregatorInterface_$11159_$",
                          "typeString": "type(contract PairAggregatorInterface)"
                        }
                      },
                      "id": 13790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "406:64:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PairAggregatorInterface_$11159",
                        "typeString": "contract PairAggregatorInterface"
                      }
                    },
                    "src": "365:105:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PairAggregatorInterface_$11159",
                      "typeString": "contract PairAggregatorInterface"
                    }
                  },
                  "id": 13792,
                  "nodeType": "ExpressionStatement",
                  "src": "365:105:79"
                }
              ]
            },
            "documentation": null,
            "id": 13794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "externalAddAggregatorFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13776,
                  "name": "baseAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 13794,
                  "src": "255:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "255:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13778,
                  "name": "quoteAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 13794,
                  "src": "284:20:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13780,
                  "name": "aggregatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 13794,
                  "src": "314:25:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "245:100:79"
            },
            "returnParameters": {
              "id": 13782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "355:0:79"
            },
            "scope": 13795,
            "src": "212:265:79",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 13796,
        "src": "135:344:79"
      }
    ],
    "src": "0:480:79"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-06T02:15:12.516Z",
  "devdoc": {
    "methods": {
      "getPairAggregator(address,address)": {
        "return": "the pair aggregator address for the given base and quote addresses."
      },
      "hasPairAggregator(address,address)": {
        "return": "true if the pair aggregator address for the given base and quote tokens is not 0x0. Otherwise it returns false."
      },
      "initialize(address)": {
        "params": {
          "settingsAddress": "this settings address."
        }
      },
      "initialized()": {
        "return": "true if contract is initialized. Otherwise it returns false."
      },
      "registerPairAggregator((address,address,address,bool,uint8,uint8))": {
        "params": {
          "request": "the input data to register the new pair aggregator."
        },
        "return": "the new pair aggregator created."
      },
      "registerPairAggregators((address,address,address,bool,uint8,uint8)[])": {
        "params": {
          "requests": "the input data to register the new pair aggregator."
        },
        "return": "the new pair aggregator addresses."
      },
      "updatePairAggregator((address,address,address,bool,uint8,uint8))": {
        "params": {
          "request": "the input data to register the new pair aggregator."
        },
        "return": "the new pair aggregator created."
      }
    }
  },
  "userdoc": {
    "methods": {
      "getPairAggregator(address,address)": {
        "notice": "Gets a pair aggregator for a given base and quote tokens (a market).baseToken the base token address.quoteToken the quote token address."
      },
      "hasPairAggregator(address,address)": {
        "notice": "Tests whether a pair aggregator exists for a given base and quote tokens (a market) or not.baseToken the base token address.quoteToken the quote token address."
      },
      "initialize(address)": {
        "notice": "It initializes this registry contract."
      },
      "initialized()": {
        "notice": "Gets if the contract is initialized."
      },
      "registerPairAggregator((address,address,address,bool,uint8,uint8))": {
        "notice": "It registers a new pair aggregator for a given market."
      },
      "registerPairAggregators((address,address,address,bool,uint8,uint8)[])": {
        "notice": "It registers new pair aggregators for given markets."
      },
      "settings()": {
        "notice": "The settings contract."
      },
      "updatePairAggregator((address,address,address,bool,uint8,uint8))": {
        "notice": "It updates a current pair aggregator for a given market."
      }
    }
  }
}