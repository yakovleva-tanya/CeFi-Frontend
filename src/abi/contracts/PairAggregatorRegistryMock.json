{
  "contractName": "PairAggregatorRegistryMock",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pairAggregator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "responseDecimals",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "collateralDecimals",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "inverse",
          "type": "bool"
        }
      ],
      "name": "PairAggregatorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPairAggregator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPairAggregator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "newResponseDecimals",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "newCollateralDecimals",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "newInverse",
          "type": "bool"
        }
      ],
      "name": "PairAggregatorUpdated",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "aggregators",
      "outputs": [
        {
          "internalType": "contract PairAggregatorInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        }
      ],
      "name": "getPairAggregator",
      "outputs": [
        {
          "internalType": "contract PairAggregatorInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        }
      ],
      "name": "hasPairAggregator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "settingsAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "chainlinkAggregatorAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "inverse",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "responseDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "collateralDecimals",
              "type": "uint8"
            }
          ],
          "internalType": "struct TellerCommon.PairAggregatorRegisterRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "registerPairAggregator",
      "outputs": [
        {
          "internalType": "contract PairAggregatorInterface",
          "name": "aggregator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "chainlinkAggregatorAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "inverse",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "responseDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "collateralDecimals",
              "type": "uint8"
            }
          ],
          "internalType": "struct TellerCommon.PairAggregatorRegisterRequest[]",
          "name": "requests",
          "type": "tuple[]"
        }
      ],
      "name": "registerPairAggregators",
      "outputs": [
        {
          "internalType": "contract PairAggregatorInterface[]",
          "name": "newAggregators",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "contract SettingsInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "chainlinkAggregatorAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "inverse",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "responseDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "collateralDecimals",
              "type": "uint8"
            }
          ],
          "internalType": "struct TellerCommon.PairAggregatorRegisterRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "updatePairAggregator",
      "outputs": [
        {
          "internalType": "contract PairAggregatorInterface",
          "name": "aggregator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "baseAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "quoteAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "aggregatorAddress",
          "type": "address"
        }
      ],
      "name": "externalAddAggregatorFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pairAggregator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"responseDecimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"collateralDecimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"inverse\",\"type\":\"bool\"}],\"name\":\"PairAggregatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPairAggregator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPairAggregator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newResponseDecimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newCollateralDecimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newInverse\",\"type\":\"bool\"}],\"name\":\"PairAggregatorUpdated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"aggregators\",\"outputs\":[{\"internalType\":\"contract PairAggregatorInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"baseAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aggregatorAddress\",\"type\":\"address\"}],\"name\":\"externalAddAggregatorFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"getPairAggregator\",\"outputs\":[{\"internalType\":\"contract PairAggregatorInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"hasPairAggregator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"settingsAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"chainlinkAggregatorAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"inverse\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"responseDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"collateralDecimals\",\"type\":\"uint8\"}],\"internalType\":\"struct TellerCommon.PairAggregatorRegisterRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"registerPairAggregator\",\"outputs\":[{\"internalType\":\"contract PairAggregatorInterface\",\"name\":\"aggregator\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"chainlinkAggregatorAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"inverse\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"responseDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"collateralDecimals\",\"type\":\"uint8\"}],\"internalType\":\"struct TellerCommon.PairAggregatorRegisterRequest[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"name\":\"registerPairAggregators\",\"outputs\":[{\"internalType\":\"contract PairAggregatorInterface[]\",\"name\":\"newAggregators\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"contract SettingsInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"chainlinkAggregatorAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"inverse\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"responseDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"collateralDecimals\",\"type\":\"uint8\"}],\"internalType\":\"struct TellerCommon.PairAggregatorRegisterRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"updatePairAggregator\",\"outputs\":[{\"internalType\":\"contract PairAggregatorInterface\",\"name\":\"aggregator\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getPairAggregator(address,address)\":{\"return\":\"the pair aggregator address for the given base and quote addresses.\"},\"hasPairAggregator(address,address)\":{\"return\":\"true if the pair aggregator address for the given base and quote tokens is not 0x0. Otherwise it returns false.\"},\"initialize(address)\":{\"params\":{\"settingsAddress\":\"this settings address.\"}},\"initialized()\":{\"return\":\"true if contract is initialized. Otherwise it returns false.\"},\"registerPairAggregator((address,address,address,bool,uint8,uint8))\":{\"params\":{\"request\":\"the input data to register the new pair aggregator.\"},\"return\":\"the new pair aggregator created.\"},\"registerPairAggregators((address,address,address,bool,uint8,uint8)[])\":{\"params\":{\"requests\":\"the input data to register the new pair aggregator.\"},\"return\":\"the new pair aggregator addresses.\"},\"settings()\":{\"details\":\"This address should NOT change over the time. See details in the _setSettings(...) function.\"},\"updatePairAggregator((address,address,address,bool,uint8,uint8))\":{\"params\":{\"request\":\"the input data to register the new pair aggregator.\"},\"return\":\"the new pair aggregator created.\"}}},\"userdoc\":{\"methods\":{\"getPairAggregator(address,address)\":{\"notice\":\"Gets a pair aggregator for a given base and quote tokens (a market).baseToken the base token address.quoteToken the quote token address.\"},\"hasPairAggregator(address,address)\":{\"notice\":\"Tests whether a pair aggregator exists for a given base and quote tokens (a market) or not.baseToken the base token address.quoteToken the quote token address.\"},\"initialize(address)\":{\"notice\":\"It initializes this registry contract.\"},\"initialized()\":{\"notice\":\"Gets if the contract is initialized.\"},\"registerPairAggregator((address,address,address,bool,uint8,uint8))\":{\"notice\":\"It registers a new pair aggregator for a given market.\"},\"registerPairAggregators((address,address,address,bool,uint8,uint8)[])\":{\"notice\":\"It registers new pair aggregators for given markets.\"},\"settings()\":{\"notice\":\"The gets the settings contract address from the SETTINGS_SLOT.\"},\"updatePairAggregator((address,address,address,bool,uint8,uint8))\":{\"notice\":\"It updates a current pair aggregator for a given market.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/mock/providers/chainlink/PairAggregatorRegistryMock.sol\":\"PairAggregatorRegistryMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/BaseDynamicProxy.sol\":{\"keccak256\":\"0x2ca742c7aaf1598a5c8fb46065a3621f12f206602ac2c99239cdfce1a597d6fa\",\"urls\":[\"bzz-raw://306b66e976d251f89f4e27fc6ee88ecce640aeddb89c9f9971f7ee3a506e4288\",\"dweb:/ipfs/QmZ4R5o1dmZKvXdy1m5xn95DiwP3NfAMk12vmwDkWEekfR\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/BaseProxy.sol\":{\"keccak256\":\"0x5f067191c764be0e5ceca076f95e49e0f59212670f9d03db5745d16bcafe1633\",\"urls\":[\"bzz-raw://1f2548122eb6183d94b1ec4b99eb85e7352065d16aa5f621f2587006ed4d9cc2\",\"dweb:/ipfs/QmQGaB2awDnTqWawQS62NAZWKkSwcZUmRbGZufQvPdkKAZ\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/BaseUpgradeable.sol\":{\"keccak256\":\"0x0f0baf7e7aa38b47e749a28ab674cc94a97ca92244a9b2e919c372c1b06546cf\",\"urls\":[\"bzz-raw://4b05a358a1273734f3143d46309239b36c9dd933a7011b8bc408fb040c6c8486\",\"dweb:/ipfs/QmPrUGETWEMAafXcU528oW6A9rBDCy5qqS24xEYLntevYU\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/DynamicProxy.sol\":{\"keccak256\":\"0x5f62e8d7e566cbe3a54104728fd1fdaf711e4c7444f4c28ed2fd2f1b919290f7\",\"urls\":[\"bzz-raw://223201d7bf70f4f2cf8d960017e222c0796694880e01bd7d2f19fbcdd8770c76\",\"dweb:/ipfs/QmUs5wb6CRCsq1iZxZD542f2dco2jp9kZpDQAbfgyoFGqo\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/TInitializable.sol\":{\"keccak256\":\"0xfd04f8b08548b7a4aacbf26eaf65f64628c38f9fc34c363317daa593c7c25917\",\"urls\":[\"bzz-raw://025bbb10f643ebec3bc77303bca1585c572c76f8261ce42ed816b3c2a7799d20\",\"dweb:/ipfs/QmYS3L6u6f7ucRxGoap3RSD1jeJERnZk3XQRden1fEDQMs\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0x2f54118d65cd07ffb7a476768412b60cfacb12c6dc161b43e1c443d1d01563a2\",\"urls\":[\"bzz-raw://e56918727ce72a8526fbb96671fa4693d0b66bca321d3c93921ced6daecc69c5\",\"dweb:/ipfs/QmUeJuNbhZic68Fsv6fw9zJ5RAJXnvjsno4HfnPajZkrLp\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/IBaseProxy.sol\":{\"keccak256\":\"0x9417b725bfe3861872e23a0000c0bf76df18962b161b0b498e21904b44c23f8c\",\"urls\":[\"bzz-raw://458d391d5a5fd6b8f739bf091e5656485e0946f0d17069a6e948c0574ec8a5aa\",\"dweb:/ipfs/QmRqSbnjSrm5jjAJWjXpSTQZApfJL2DJtudBWVDZcqwJvn\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x91250ee3c1d73b5d1720f7b41f18072eb347d73e4d3de464537ece49e1fa1d93\",\"urls\":[\"bzz-raw://f11ce1d70152f6d19f9c23788b4458631df3fd748a52849b899183ce2dabc52b\",\"dweb:/ipfs/QmaNQybwKYW5BfT3h6z6P1SSUwYEyXQviisYjUr7cHLzQR\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0x871da1c39455ad829fdff0eb86a3d069e041f03b9dfab82136719c2c2923b926\",\"urls\":[\"bzz-raw://aca54977104d1152ecfecf39465a34148236b1d973a339c442963dabf68dd05b\",\"dweb:/ipfs/QmeKnxn9hB3aLqgWPLFhCEuxySTUF1LA1tbCo8tGyhppxV\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/MarketsStateInterface.sol\":{\"keccak256\":\"0xf51bd2d361d9cf448f2c2a5bb37c2699b0d9605a8f1b6a8719f90d8f536f2a05\",\"urls\":[\"bzz-raw://415a4444e8f9aca25132f492b226b8d500081a4ba5be8e45b401a68e73e1895b\",\"dweb:/ipfs/QmUPGgnqUjidxeEpkgu4yYzhfuykgtNKehEwbps97nAAzZ\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/PairAggregatorInterface.sol\":{\"keccak256\":\"0xb3cf240d5e8c5c9f51e9e06cdb544bec5ff93e76e02ea76314d2980e6a984839\",\"urls\":[\"bzz-raw://083b3be86e38ad3ed877b1208c53349006095399e023a55ed28f81134c38cb08\",\"dweb:/ipfs/Qmd5Tfykos7QPqUgs4bqFGMwgrNawLoZneuFMzMsBYCkMr\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0xfc30266ba226c3cc0cb67780a236efd26864d7a48e13f95b14f030435329febd\",\"urls\":[\"bzz-raw://dcc8e7ad13a8cf3565ffed6c0c72a9c998671bef804b26c6f11e64dc17b60fc0\",\"dweb:/ipfs/QmdDxucgMTcPm42WA6LMvS2C42EEaGw1gsH37dCCen1KLm\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/mock/providers/chainlink/PairAggregatorRegistryMock.sol\":{\"keccak256\":\"0x67da430caea4b7be305cfab5734e3cfe9e30a8079fe37e5610c66ae1eb849850\",\"urls\":[\"bzz-raw://82e47e9bb49cf92f5eb86fb9703741254709089e0d5324ec45767d8ca8c4b051\",\"dweb:/ipfs/QmZJ9mF5kquogZjxScPjD3RFgo97tz2Gsq1a67rAebu2ag\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/providers/chainlink/ChainlinkPairAggregatorRegistry.sol\":{\"keccak256\":\"0xb74c2b0a144f87974d658c04fc4cd453a898063c01caf81c8b248bcf1e69d47a\",\"urls\":[\"bzz-raw://bc337ecdb36a3076849dca694e8c0ace5fff551b84410c4f26f59f53624c8553\",\"dweb:/ipfs/Qmb2Fcr8ADUpR5sS6e8uxYhHRdvgwP1zxcL9ErAeDJsFsf\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/providers/chainlink/IChainlinkPairAggregatorRegistry.sol\":{\"keccak256\":\"0xed52aaafc7e15756431c0c847e5f7e1d52578b0f3b7f8b02674ec5d5d5a44c29\",\"urls\":[\"bzz-raw://76821662fa9a0918b355bc969deadef055737d90067658791dbc13e843958b64\",\"dweb:/ipfs/QmQzKEJiQjxRyNED8aABw62KQys3StiGwEnMXiF8P8ZQcV\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0xc5453e6f1a43327a37db250dedb65561c4deb0f3eb3cad490a64fc56e0b6f7b7\",\"urls\":[\"bzz-raw://f6edcab27eebecb576c9a884a173a1a5fcf0c129c76b992ec77ca24518d92f91\",\"dweb:/ipfs/QmW3q6w39dg9RnxsQdfrFVudmiZh5asRnkWQVkrap9hnJf\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/AssetSettingsLib.sol\":{\"keccak256\":\"0x9c67a3de3bb62fdfbd5c116016e0693300bb9d71fe055bb6aa12da305aba3bf4\",\"urls\":[\"bzz-raw://a3c9ffdd1496a6192abb62b72625e5778db231656f2c8fffd09a83d089996aa6\",\"dweb:/ipfs/QmevJ5ojFaqG363CrnJZ9x3YvGMWKfUaFoUVbCsaSzqPfe\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0xf4caad9e4d96afe2721124eaf7203bb4e3a97beb3664c63297c4e68523f5bd65\",\"urls\":[\"bzz-raw://dcd6f564423c2cf83f3a56120f43eb6fd9f6e852cbb615be657f89e5114debf4\",\"dweb:/ipfs/QmRZStVoa5KbYRCHpzC7h998NnRhbFHfUZ71TRTiLzMTcX\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0xe49711d0c8193559f76dc5f399344c8f5f5e6a8b99bf78c6bcfd9aa1c456c306\",\"urls\":[\"bzz-raw://c6432c082145470691dfde04bf5c4220ccc32a5dccf6520c3122e47e470e6c22\",\"dweb:/ipfs/Qmd97DA5SB3d8Cuwf5M6vLtfDLHYXrMj5d3cXkYPP7iPpU\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/MarketStateLib.sol\":{\"keccak256\":\"0x760fff7588382659571b8fd078b5e332e010d7e97278895fc226e8ed551cb0c6\",\"urls\":[\"bzz-raw://ff9cf8b14a780c989b2f641bf8faaf8066e586245ede58196274f8f03789c0d4\",\"dweb:/ipfs/QmVnRsrQFuRXM1c4NFVz1iUaAywq73uHVsUzemn1x5fVgF\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0xa397bcb75a4e7d80fd1043b7dc3c3a69f8c12435d26d843e4be40e875b71e134\",\"urls\":[\"bzz-raw://aabd466bea9e95a2585d597ebf62025f7ab4f38d1d4fe1c9fa5be1d98d131789\",\"dweb:/ipfs/QmcRGMg8X5teSF3Ga8ECPH2HvenViySkdnzvpUWvMDWXJL\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0c6a7e0de89e1017166ef4f593b33c8d0bfc6bcf3cd3db0bb5c1610ce260b659\",\"urls\":[\"bzz-raw://926108ace9152ed12d86a74ccb98d8c0aa698bd48fd3b4bfedacf976a8dd59d3\",\"dweb:/ipfs/QmVYjChMWZJdpPoBNheHMfyoTVsAarfLJ6SxPHhEsd6kUB\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/SettingsConsts.sol\":{\"keccak256\":\"0xa1d17d7507cae083530ce51d4c503ca657ddecf3d3fc23cec9c566d7253e59e6\",\"urls\":[\"bzz-raw://6f14f64aa1d37bef1d4e7051f1733cbe52a1d5af9165faaf4b0336a68c6eb239\",\"dweb:/ipfs/QmcJE8USECc54etjpCBUGTCF5VvMLqLjo9DbkQ64Xf2R4T\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0x61d5a58019963b5b4394aa040d8661167da0aef0912cc7133dbc917a38a74698\",\"urls\":[\"bzz-raw://f2a48c517cbebc7ca530aced250a5389cba74ca1d16137b3b38116b1afd428b9\",\"dweb:/ipfs/QmcReNoiEiR3wvVVwwY6u6fQMTZivYtBn7uhMm3ud219Di\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/upgrades/contracts/upgradeability/Proxy.sol\":{\"keccak256\":\"0xd8074ae5fa7ee6384ca8196a896612fb044bbf4ff4b7336d03cd97845000ac21\",\"urls\":[\"bzz-raw://3a111e1dc777d80e6c2ad41c6ff2bfb3ae8f61658fd6580ddf9ba9ab0d25a354\",\"dweb:/ipfs/QmSfwvUqqiownzHeMmUiYkejWs6FXR2KLtHQnSzP6FivTj\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611e3b806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000ac5760003560e01c8063c4959317116200006f578063c49593171462000140578063c4d66de81462000157578063d7775ff1146200016e578063e06174e41462000194578063eef84f00146200019e57620000ac565b8063158ef93e14620000b1578063662a3e5814620000d3578063712985a614620000ea578063887b04b914620001035780638a35ec541462000129575b600080fd5b620000bb620001b5565b604051620000ca9190620015fd565b60405180910390f35b620000bb620000e436600462000fe1565b620001d6565b62000101620000fb36600462001020565b620001ed565b005b6200011a620001143660046200111d565b62000228565b604051620000ca91906200160d565b6200011a6200013a36600462000fe1565b62000581565b6200011a6200015136600462000fe1565b620005a4565b620001016200016836600462000f9f565b620005cc565b620001856200017f36600462001074565b6200060e565b604051620000ca9190620015ea565b6200011a62000762565b6200011a620001af3660046200111d565b62000786565b600080604051620001c690620014c1565b6040519081900390205492915050565b6000620001e4838362000831565b90505b92915050565b6001600160a01b0392831660009081526020818152604080832094861683529390529190912080546001600160a01b03191691909216179055565b600062000234620001b5565b6200025c5760405162461bcd60e51b8152600401620002539062001689565b60405180910390fd5b6200026662000762565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401620002939190620014db565b60006040518083038186803b158015620002ac57600080fd5b505afa158015620002c1573d6000803e3d6000fd5b50620002e99250620002da915050602084018462000f9f565b6001600160a01b03166200085b565b620003085760405162461bcd60e51b8152600401620002539062001641565b6200031e620002da604084016020850162000f9f565b6200033d5760405162461bcd60e51b8152600401620002539062001653565b62000353620002da606084016040850162000f9f565b620003725760405162461bcd60e51b815260040162000253906200161d565b6200039d62000385602084018462000f9f565b62000397604085016020860162000f9f565b62000831565b620003bc5760405162461bcd60e51b8152600401620002539062001665565b60008080620003cf602086018662000f9f565b6001600160a01b03166001600160a01b03168152602001908152602001600020600084602001602062000406919081019062000f9f565b6001600160a01b039081168252602082019290925260400160002054169050620004406200043a368590038501856200113e565b62000898565b91508160008062000455602087018762000f9f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008560200160206200048c919081019062000f9f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550826020016020620004e5919081019062000f9f565b6001600160a01b0316620004fd602085018562000f9f565b6001600160a01b0316337f40d51ab006b90a1c76ff8d75ccaa5a3a095643d483e142576fc6d9818497c6c084866200053c60a08a0160808b016200115f565b6200054e60c08b0160a08c016200115f565b6200056060808c0160608d01620010ba565b60405162000573959493929190620014eb565b60405180910390a450919050565b60006020818152928152604080822090935290815220546001600160a01b031681565b6001600160a01b03918216600090815260208181526040808320938516835292905220541690565b620005d6620001b5565b15620005f65760405162461bcd60e51b815260040162000253906200169b565b620006018162000ad5565b6200060b62000b51565b50565b60606200061a620001b5565b620006395760405162461bcd60e51b8152600401620002539062001689565b6200064362000762565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401620006709190620014db565b60006040518083038186803b1580156200068957600080fd5b505afa1580156200069e573d6000803e3d6000fd5b5050508215159050620006c55760405162461bcd60e51b8152600401620002539062001677565b604080518381526020808502820101909152828015620006ef578160200160208202803883390190505b50905060005b828110156200075b576200072d8484838181106200070f57fe5b905060c002018036036200072791908101906200113e565b62000b71565b8282815181106200073a57fe5b6001600160a01b0390921660209283029190910190910152600101620006f5565b5092915050565b60008060006040516200077590620014ce565b604051908190039020549250505090565b600062000792620001b5565b620007b15760405162461bcd60e51b8152600401620002539062001689565b620007bb62000762565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401620007e89190620014db565b60006040518083038186803b1580156200080157600080fd5b505afa15801562000816573d6000803e3d6000fd5b50505050620001e7828036036200072791908101906200113e565b6001600160a01b039182166000908152602081815260408083209385168352929052205416151590565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906200089057508115155b949350505050565b600080620008a562000762565b6001600160a01b031663ea23cb7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015620008de57600080fd5b505afa158015620008f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620009199190810190620010fc565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200095457600080fd5b505af115801562000969573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200098f9190810190620010fc565b6001600160a01b031663c4f8f96e6040518163ffffffff1660e01b815260040160206040518083038186803b158015620009c857600080fd5b505afa158015620009dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000a039190810190620010db565b9050600062000a1162000762565b8260405162000a209062000e38565b62000a2d92919062001587565b604051809103906000f08015801562000a4a573d6000803e3d6000fd5b5090506000819050809350836001600160a01b0316632e6536a88660400151876060015188608001518960a001516040518563ffffffff1660e01b815260040162000a99949392919062001541565b600060405180830381600087803b15801562000ab457600080fd5b505af115801562000ac9573d6000803e3d6000fd5b50505050505050919050565b62000af262000ae362000762565b6001600160a01b031662000e2a565b1562000afe576200060b565b62000b12816001600160a01b03166200085b565b62000b315760405162461bcd60e51b815260040162000253906200162f565b600060405162000b4190620014ce565b6040519081900390208290555050565b600060405162000b6190620014c1565b6040519081900390206001905550565b80516000906001600160a01b031662000b8962000762565b6001600160a01b031663a734f06e6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000bc257600080fd5b505afa15801562000bd7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000bfd919081019062000fc0565b6001600160a01b0316148062000c245750815162000c24906001600160a01b03166200085b565b62000c435760405162461bcd60e51b8152600401620002539062001641565b81602001516001600160a01b031662000c5b62000762565b6001600160a01b031663a734f06e6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000c9457600080fd5b505afa15801562000ca9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000ccf919081019062000fc0565b6001600160a01b0316148062000cf8575062000cf882602001516001600160a01b03166200085b565b62000d175760405162461bcd60e51b8152600401620002539062001653565b62000d2f82604001516001600160a01b03166200085b565b62000d4e5760405162461bcd60e51b815260040162000253906200161d565b62000d628260000151836020015162000831565b1562000d825760405162461bcd60e51b81526004016200025390620016ad565b62000d8d8262000898565b82516001600160a01b0390811660009081526020818152604080832082880180518616855292529182902080546001600160a01b031916858516179055518551608087015160a08801516060890151945196975092851695919094169333937f481bfc49ea4d87774cccc9f6e5b10300dfd9d4d35181edfc89bdf95b04029e819362000e1d9389939290620015ad565b60405180910390a4919050565b6001600160a01b0316151590565b610675806200178483390190565b8035620001e78162001740565b8051620001e78162001740565b60008083601f84011262000e7357600080fd5b50813567ffffffffffffffff81111562000e8c57600080fd5b6020830191508360c082028301111562000ea557600080fd5b9250929050565b8035620001e78162001757565b8051620001e78162001762565b8051620001e7816200176d565b600060c0828403121562000ee657600080fd5b50919050565b600060c0828403121562000eff57600080fd5b62000f0b60c0620016bf565b9050600062000f1b848462000e46565b825250602062000f2e8484830162000e46565b602083015250604062000f448482850162000e46565b604083015250606062000f5a8482850162000eac565b606083015250608062000f708482850162000f92565b60808301525060a062000f868482850162000f92565b60a08301525092915050565b8035620001e78162001778565b60006020828403121562000fb257600080fd5b600062000890848462000e46565b60006020828403121562000fd357600080fd5b600062000890848462000e53565b6000806040838503121562000ff557600080fd5b600062001003858562000e46565b9250506020620010168582860162000e46565b9150509250929050565b6000806000606084860312156200103657600080fd5b600062001044868662000e46565b9350506020620010578682870162000e46565b92505060406200106a8682870162000e46565b9150509250925092565b600080602083850312156200108857600080fd5b823567ffffffffffffffff811115620010a057600080fd5b620010ae8582860162000e60565b92509250509250929050565b600060208284031215620010cd57600080fd5b600062000890848462000eac565b600060208284031215620010ee57600080fd5b600062000890848462000eb9565b6000602082840312156200110f57600080fd5b600062000890848462000ec6565b600060c082840312156200113057600080fd5b600062000890848462000ed3565b600060c082840312156200115157600080fd5b600062000890848462000eec565b6000602082840312156200117257600080fd5b600062000890848462000f92565b60006200118e83836200122d565b505060200190565b620011a18162001733565b82525050565b620011a181620016ff565b6000620011bf82620016ed565b620011cb8185620016f1565b9350620011d883620016e7565b8060005b838110156200120c578151620011f3888262001180565b97506200120083620016e7565b925050600101620011dc565b509495945050505050565b620011a1816200170c565b620011a18162001711565b620011a18162001714565b600062001247601c83620016fa565b7f54496e697469616c697a61626c652e6973496e697469616c697a6564000000008152601c0192915050565b600062001282601e83620016f1565b7f434841494e4c494e4b5f4147475f4d5553545f42455f434f4e54524143540000815260200192915050565b6000620012bd601b83620016f1565b7f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000815260200192915050565b6000620012f8601b83620016f1565b7f424153455f544f4b454e5f4d5553545f42455f434f4e54524143540000000000815260200192915050565b600062001333601c83620016f1565b7f51554f54455f544f4b454e5f4d5553545f42455f434f4e545241435400000000815260200192915050565b60006200136e601983620016f1565b7f504149525f41474752454741544f525f4e4f545f455849535400000000000000815260200192915050565b6000620013a9601883620016fa565b7f426173655570677261646561626c652e73657474696e67730000000000000000815260180192915050565b6000620013e4601283620016f1565b71524551554553545f4c4953545f454d50545960701b815260200192915050565b600062001414601883620016f1565b7f434f4e54524143545f4e4f545f494e495449414c495a45440000000000000000815260200192915050565b60006200144f601c83620016f1565b7f434f4e54524143545f414c52454144595f494e495449414c495a454400000000815260200192915050565b60006200148a601d83620016f1565b7f504149525f41474752454741544f525f414c52454144595f4558495354000000815260200192915050565b620011a1816200172d565b6000620001e78262001238565b6000620001e7826200139a565b60208101620001e7828462001196565b60a08101620014fb8288620011a7565b6200150a6020830187620011a7565b620015196040830186620014b6565b620015286060830185620014b6565b62001537608083018462001217565b9695505050505050565b60808101620015518287620011a7565b62001560602083018662001217565b6200156f6040830185620014b6565b6200157e6060830184620014b6565b95945050505050565b60408101620015978285620011a7565b620015a6602083018462001222565b9392505050565b60808101620015bd8287620011a7565b620015cc6020830186620014b6565b620015db6040830185620014b6565b6200157e606083018462001217565b60208082528101620001e48184620011b2565b60208101620001e7828462001217565b60208101620001e782846200122d565b60208082528101620001e78162001273565b60208082528101620001e781620012ae565b60208082528101620001e781620012e9565b60208082528101620001e78162001324565b60208082528101620001e7816200135f565b60208082528101620001e781620013d5565b60208082528101620001e78162001405565b60208082528101620001e78162001440565b60208082528101620001e7816200147b565b60405181810167ffffffffffffffff81118282101715620016df57600080fd5b604052919050565b60200190565b5190565b90815260200190565b919050565b6000620001e78262001721565b151590565b90565b6000620001e782620016ff565b6001600160a01b031690565b60ff1690565b6000620001e78262001714565b6200174b81620016ff565b81146200060b57600080fd5b6200174b816200170c565b6200174b8162001711565b6200174b8162001714565b6200174b816200172d56fe608060405234801561001057600080fd5b506040516106753803806106758339818101604052604081101561003357600080fd5b50805160209091015161004e826001600160e01b0361006716565b610060816001600160e01b0361014316565b50506103cc565b61009361007b6001600160e01b0361031616565b6001600160a01b031661034c60201b61021b1760201c565b1561009d57610140565b6100b9816001600160a01b031661035a60201b6102291760201c565b61010a576040805162461bcd60e51b815260206004820152601b60248201527f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000604482015290519081900360640190fd5b604080517f426173655570677261646561626c652e73657474696e67730000000000000000815290519081900360180190208190555b50565b6101546001600160e01b0361039616565b156101a6576040805162461bcd60e51b815260206004820152601660248201527f4c4f4749435f4e414d455f414c52454144595f53455400000000000000000000604482015290519081900360640190fd5b6101b76001600160e01b0361031616565b6001600160a01b031663ea23cb7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ef57600080fd5b505afa158015610203573d6000803e3d6000fd5b505050506040513d602081101561021957600080fd5b50516040805163b28f5abb60e01b81526004810184905290516001600160a01b039092169163b28f5abb91602480820192602092909190829003018186803b15801561026457600080fd5b505afa158015610278573d6000803e3d6000fd5b505050506040513d602081101561028e57600080fd5b50516102e1576040805162461bcd60e51b815260206004820152601460248201527f4c4f4749435f4e414d455f4e4f545f4558495354000000000000000000000000604482015290519081900360640190fd5b604080517f426173655570677261646561626c652e6c6f6769634e616d65000000000000008152905190819003601901902055565b604080517f426173655570677261646561626c652e73657474696e67730000000000000000815290519081900360180190205490565b6001600160a01b0316151590565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061038e57508115155b949350505050565b604080517f426173655570677261646561626c652e6c6f6769634e616d6500000000000000815290519081900360190190205490565b61029a806103db6000396000f3fe6080604052600436106100295760003560e01c80635c60da1b14610033578063e06174e414610064575b610031610079565b005b34801561003f57600080fd5b50610048610093565b604080516001600160a01b039092168252519081900360200190f35b34801561007057600080fd5b506100486100a2565b610081610091565b61009161008c6100d8565b6101c1565b565b600061009d6100d8565b905090565b604080517f426173655570677261646561626c652e73657474696e67730000000000000000815290519081900360180190205490565b60006100e26100a2565b6001600160a01b031663ea23cb7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561011a57600080fd5b505afa15801561012e573d6000803e3d6000fd5b505050506040513d602081101561014457600080fd5b50516001600160a01b03166373f1fcf661015c6101e5565b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561019057600080fd5b505afa1580156101a4573d6000803e3d6000fd5b505050506040513d60208110156101ba57600080fd5b5051905090565b3660008037600080366000845af43d6000803e8080156101e0573d6000f35b3d6000fd5b604080517f426173655570677261646561626c652e6c6f6769634e616d6500000000000000815290519081900360190190205490565b6001600160a01b0316151590565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061025d57508115155b94935050505056fea265627a7a723158201befd7ed569c1720849784ec6a7e9f5f5ca6adc5544ceb327da092380cfdbb1b64736f6c63430005110032a365627a7a72315820dede7591dc2af0923d43171b94795a5dc2de8a4c108af7c3b574bb5f844b7a4d6c6578706572696d656e74616cf564736f6c63430005110040",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000ac5760003560e01c8063c4959317116200006f578063c49593171462000140578063c4d66de81462000157578063d7775ff1146200016e578063e06174e41462000194578063eef84f00146200019e57620000ac565b8063158ef93e14620000b1578063662a3e5814620000d3578063712985a614620000ea578063887b04b914620001035780638a35ec541462000129575b600080fd5b620000bb620001b5565b604051620000ca9190620015fd565b60405180910390f35b620000bb620000e436600462000fe1565b620001d6565b62000101620000fb36600462001020565b620001ed565b005b6200011a620001143660046200111d565b62000228565b604051620000ca91906200160d565b6200011a6200013a36600462000fe1565b62000581565b6200011a6200015136600462000fe1565b620005a4565b620001016200016836600462000f9f565b620005cc565b620001856200017f36600462001074565b6200060e565b604051620000ca9190620015ea565b6200011a62000762565b6200011a620001af3660046200111d565b62000786565b600080604051620001c690620014c1565b6040519081900390205492915050565b6000620001e4838362000831565b90505b92915050565b6001600160a01b0392831660009081526020818152604080832094861683529390529190912080546001600160a01b03191691909216179055565b600062000234620001b5565b6200025c5760405162461bcd60e51b8152600401620002539062001689565b60405180910390fd5b6200026662000762565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401620002939190620014db565b60006040518083038186803b158015620002ac57600080fd5b505afa158015620002c1573d6000803e3d6000fd5b50620002e99250620002da915050602084018462000f9f565b6001600160a01b03166200085b565b620003085760405162461bcd60e51b8152600401620002539062001641565b6200031e620002da604084016020850162000f9f565b6200033d5760405162461bcd60e51b8152600401620002539062001653565b62000353620002da606084016040850162000f9f565b620003725760405162461bcd60e51b815260040162000253906200161d565b6200039d62000385602084018462000f9f565b62000397604085016020860162000f9f565b62000831565b620003bc5760405162461bcd60e51b8152600401620002539062001665565b60008080620003cf602086018662000f9f565b6001600160a01b03166001600160a01b03168152602001908152602001600020600084602001602062000406919081019062000f9f565b6001600160a01b039081168252602082019290925260400160002054169050620004406200043a368590038501856200113e565b62000898565b91508160008062000455602087018762000f9f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008560200160206200048c919081019062000f9f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550826020016020620004e5919081019062000f9f565b6001600160a01b0316620004fd602085018562000f9f565b6001600160a01b0316337f40d51ab006b90a1c76ff8d75ccaa5a3a095643d483e142576fc6d9818497c6c084866200053c60a08a0160808b016200115f565b6200054e60c08b0160a08c016200115f565b6200056060808c0160608d01620010ba565b60405162000573959493929190620014eb565b60405180910390a450919050565b60006020818152928152604080822090935290815220546001600160a01b031681565b6001600160a01b03918216600090815260208181526040808320938516835292905220541690565b620005d6620001b5565b15620005f65760405162461bcd60e51b815260040162000253906200169b565b620006018162000ad5565b6200060b62000b51565b50565b60606200061a620001b5565b620006395760405162461bcd60e51b8152600401620002539062001689565b6200064362000762565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401620006709190620014db565b60006040518083038186803b1580156200068957600080fd5b505afa1580156200069e573d6000803e3d6000fd5b5050508215159050620006c55760405162461bcd60e51b8152600401620002539062001677565b604080518381526020808502820101909152828015620006ef578160200160208202803883390190505b50905060005b828110156200075b576200072d8484838181106200070f57fe5b905060c002018036036200072791908101906200113e565b62000b71565b8282815181106200073a57fe5b6001600160a01b0390921660209283029190910190910152600101620006f5565b5092915050565b60008060006040516200077590620014ce565b604051908190039020549250505090565b600062000792620001b5565b620007b15760405162461bcd60e51b8152600401620002539062001689565b620007bb62000762565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401620007e89190620014db565b60006040518083038186803b1580156200080157600080fd5b505afa15801562000816573d6000803e3d6000fd5b50505050620001e7828036036200072791908101906200113e565b6001600160a01b039182166000908152602081815260408083209385168352929052205416151590565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906200089057508115155b949350505050565b600080620008a562000762565b6001600160a01b031663ea23cb7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015620008de57600080fd5b505afa158015620008f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620009199190810190620010fc565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200095457600080fd5b505af115801562000969573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200098f9190810190620010fc565b6001600160a01b031663c4f8f96e6040518163ffffffff1660e01b815260040160206040518083038186803b158015620009c857600080fd5b505afa158015620009dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000a039190810190620010db565b9050600062000a1162000762565b8260405162000a209062000e38565b62000a2d92919062001587565b604051809103906000f08015801562000a4a573d6000803e3d6000fd5b5090506000819050809350836001600160a01b0316632e6536a88660400151876060015188608001518960a001516040518563ffffffff1660e01b815260040162000a99949392919062001541565b600060405180830381600087803b15801562000ab457600080fd5b505af115801562000ac9573d6000803e3d6000fd5b50505050505050919050565b62000af262000ae362000762565b6001600160a01b031662000e2a565b1562000afe576200060b565b62000b12816001600160a01b03166200085b565b62000b315760405162461bcd60e51b815260040162000253906200162f565b600060405162000b4190620014ce565b6040519081900390208290555050565b600060405162000b6190620014c1565b6040519081900390206001905550565b80516000906001600160a01b031662000b8962000762565b6001600160a01b031663a734f06e6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000bc257600080fd5b505afa15801562000bd7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000bfd919081019062000fc0565b6001600160a01b0316148062000c245750815162000c24906001600160a01b03166200085b565b62000c435760405162461bcd60e51b8152600401620002539062001641565b81602001516001600160a01b031662000c5b62000762565b6001600160a01b031663a734f06e6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000c9457600080fd5b505afa15801562000ca9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000ccf919081019062000fc0565b6001600160a01b0316148062000cf8575062000cf882602001516001600160a01b03166200085b565b62000d175760405162461bcd60e51b8152600401620002539062001653565b62000d2f82604001516001600160a01b03166200085b565b62000d4e5760405162461bcd60e51b815260040162000253906200161d565b62000d628260000151836020015162000831565b1562000d825760405162461bcd60e51b81526004016200025390620016ad565b62000d8d8262000898565b82516001600160a01b0390811660009081526020818152604080832082880180518616855292529182902080546001600160a01b031916858516179055518551608087015160a08801516060890151945196975092851695919094169333937f481bfc49ea4d87774cccc9f6e5b10300dfd9d4d35181edfc89bdf95b04029e819362000e1d9389939290620015ad565b60405180910390a4919050565b6001600160a01b0316151590565b610675806200178483390190565b8035620001e78162001740565b8051620001e78162001740565b60008083601f84011262000e7357600080fd5b50813567ffffffffffffffff81111562000e8c57600080fd5b6020830191508360c082028301111562000ea557600080fd5b9250929050565b8035620001e78162001757565b8051620001e78162001762565b8051620001e7816200176d565b600060c0828403121562000ee657600080fd5b50919050565b600060c0828403121562000eff57600080fd5b62000f0b60c0620016bf565b9050600062000f1b848462000e46565b825250602062000f2e8484830162000e46565b602083015250604062000f448482850162000e46565b604083015250606062000f5a8482850162000eac565b606083015250608062000f708482850162000f92565b60808301525060a062000f868482850162000f92565b60a08301525092915050565b8035620001e78162001778565b60006020828403121562000fb257600080fd5b600062000890848462000e46565b60006020828403121562000fd357600080fd5b600062000890848462000e53565b6000806040838503121562000ff557600080fd5b600062001003858562000e46565b9250506020620010168582860162000e46565b9150509250929050565b6000806000606084860312156200103657600080fd5b600062001044868662000e46565b9350506020620010578682870162000e46565b92505060406200106a8682870162000e46565b9150509250925092565b600080602083850312156200108857600080fd5b823567ffffffffffffffff811115620010a057600080fd5b620010ae8582860162000e60565b92509250509250929050565b600060208284031215620010cd57600080fd5b600062000890848462000eac565b600060208284031215620010ee57600080fd5b600062000890848462000eb9565b6000602082840312156200110f57600080fd5b600062000890848462000ec6565b600060c082840312156200113057600080fd5b600062000890848462000ed3565b600060c082840312156200115157600080fd5b600062000890848462000eec565b6000602082840312156200117257600080fd5b600062000890848462000f92565b60006200118e83836200122d565b505060200190565b620011a18162001733565b82525050565b620011a181620016ff565b6000620011bf82620016ed565b620011cb8185620016f1565b9350620011d883620016e7565b8060005b838110156200120c578151620011f3888262001180565b97506200120083620016e7565b925050600101620011dc565b509495945050505050565b620011a1816200170c565b620011a18162001711565b620011a18162001714565b600062001247601c83620016fa565b7f54496e697469616c697a61626c652e6973496e697469616c697a6564000000008152601c0192915050565b600062001282601e83620016f1565b7f434841494e4c494e4b5f4147475f4d5553545f42455f434f4e54524143540000815260200192915050565b6000620012bd601b83620016f1565b7f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000815260200192915050565b6000620012f8601b83620016f1565b7f424153455f544f4b454e5f4d5553545f42455f434f4e54524143540000000000815260200192915050565b600062001333601c83620016f1565b7f51554f54455f544f4b454e5f4d5553545f42455f434f4e545241435400000000815260200192915050565b60006200136e601983620016f1565b7f504149525f41474752454741544f525f4e4f545f455849535400000000000000815260200192915050565b6000620013a9601883620016fa565b7f426173655570677261646561626c652e73657474696e67730000000000000000815260180192915050565b6000620013e4601283620016f1565b71524551554553545f4c4953545f454d50545960701b815260200192915050565b600062001414601883620016f1565b7f434f4e54524143545f4e4f545f494e495449414c495a45440000000000000000815260200192915050565b60006200144f601c83620016f1565b7f434f4e54524143545f414c52454144595f494e495449414c495a454400000000815260200192915050565b60006200148a601d83620016f1565b7f504149525f41474752454741544f525f414c52454144595f4558495354000000815260200192915050565b620011a1816200172d565b6000620001e78262001238565b6000620001e7826200139a565b60208101620001e7828462001196565b60a08101620014fb8288620011a7565b6200150a6020830187620011a7565b620015196040830186620014b6565b620015286060830185620014b6565b62001537608083018462001217565b9695505050505050565b60808101620015518287620011a7565b62001560602083018662001217565b6200156f6040830185620014b6565b6200157e6060830184620014b6565b95945050505050565b60408101620015978285620011a7565b620015a6602083018462001222565b9392505050565b60808101620015bd8287620011a7565b620015cc6020830186620014b6565b620015db6040830185620014b6565b6200157e606083018462001217565b60208082528101620001e48184620011b2565b60208101620001e7828462001217565b60208101620001e782846200122d565b60208082528101620001e78162001273565b60208082528101620001e781620012ae565b60208082528101620001e781620012e9565b60208082528101620001e78162001324565b60208082528101620001e7816200135f565b60208082528101620001e781620013d5565b60208082528101620001e78162001405565b60208082528101620001e78162001440565b60208082528101620001e7816200147b565b60405181810167ffffffffffffffff81118282101715620016df57600080fd5b604052919050565b60200190565b5190565b90815260200190565b919050565b6000620001e78262001721565b151590565b90565b6000620001e782620016ff565b6001600160a01b031690565b60ff1690565b6000620001e78262001714565b6200174b81620016ff565b81146200060b57600080fd5b6200174b816200170c565b6200174b8162001711565b6200174b8162001714565b6200174b816200172d56fe608060405234801561001057600080fd5b506040516106753803806106758339818101604052604081101561003357600080fd5b50805160209091015161004e826001600160e01b0361006716565b610060816001600160e01b0361014316565b50506103cc565b61009361007b6001600160e01b0361031616565b6001600160a01b031661034c60201b61021b1760201c565b1561009d57610140565b6100b9816001600160a01b031661035a60201b6102291760201c565b61010a576040805162461bcd60e51b815260206004820152601b60248201527f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000604482015290519081900360640190fd5b604080517f426173655570677261646561626c652e73657474696e67730000000000000000815290519081900360180190208190555b50565b6101546001600160e01b0361039616565b156101a6576040805162461bcd60e51b815260206004820152601660248201527f4c4f4749435f4e414d455f414c52454144595f53455400000000000000000000604482015290519081900360640190fd5b6101b76001600160e01b0361031616565b6001600160a01b031663ea23cb7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ef57600080fd5b505afa158015610203573d6000803e3d6000fd5b505050506040513d602081101561021957600080fd5b50516040805163b28f5abb60e01b81526004810184905290516001600160a01b039092169163b28f5abb91602480820192602092909190829003018186803b15801561026457600080fd5b505afa158015610278573d6000803e3d6000fd5b505050506040513d602081101561028e57600080fd5b50516102e1576040805162461bcd60e51b815260206004820152601460248201527f4c4f4749435f4e414d455f4e4f545f4558495354000000000000000000000000604482015290519081900360640190fd5b604080517f426173655570677261646561626c652e6c6f6769634e616d65000000000000008152905190819003601901902055565b604080517f426173655570677261646561626c652e73657474696e67730000000000000000815290519081900360180190205490565b6001600160a01b0316151590565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061038e57508115155b949350505050565b604080517f426173655570677261646561626c652e6c6f6769634e616d6500000000000000815290519081900360190190205490565b61029a806103db6000396000f3fe6080604052600436106100295760003560e01c80635c60da1b14610033578063e06174e414610064575b610031610079565b005b34801561003f57600080fd5b50610048610093565b604080516001600160a01b039092168252519081900360200190f35b34801561007057600080fd5b506100486100a2565b610081610091565b61009161008c6100d8565b6101c1565b565b600061009d6100d8565b905090565b604080517f426173655570677261646561626c652e73657474696e67730000000000000000815290519081900360180190205490565b60006100e26100a2565b6001600160a01b031663ea23cb7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561011a57600080fd5b505afa15801561012e573d6000803e3d6000fd5b505050506040513d602081101561014457600080fd5b50516001600160a01b03166373f1fcf661015c6101e5565b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561019057600080fd5b505afa1580156101a4573d6000803e3d6000fd5b505050506040513d60208110156101ba57600080fd5b5051905090565b3660008037600080366000845af43d6000803e8080156101e0573d6000f35b3d6000fd5b604080517f426173655570677261646561626c652e6c6f6769634e616d6500000000000000815290519081900360190190205490565b6001600160a01b0316151590565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061025d57508115155b94935050505056fea265627a7a723158201befd7ed569c1720849784ec6a7e9f5f5ca6adc5544ceb327da092380cfdbb1b64736f6c63430005110032a365627a7a72315820dede7591dc2af0923d43171b94795a5dc2de8a4c108af7c3b574bb5f844b7a4d6c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "135:344:79:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;135:344:79;;;;;;;",
  "deployedSourceMap": "135:344:79:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;135:344:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1241:169:29;;;:::i;:::-;;;;;;;;;;;;;;;;6074:188:97;;;;;;;;;:::i;212:265:79:-;;;;;;;;;:::i;:::-;;3756:1191:97;;;;;;;;;:::i;:::-;;;;;;;;2177:82;;;;;;;;;:::i;5514:200::-;;;;;;;;;:::i;5078:143::-;;;;;;;;;:::i;2531:537::-;;;;;;;;;:::i;:::-;;;;;;;;1259:263:11;;;:::i;3285:252:97:-;;;;;;;;;:::i;1241:169:29:-;1285:10;1307:12;421:55;;;;;;;;;;;;;;;1383:11;;1360:44;-1:-1:-1;;1360:44:29:o;6074:188:97:-;6187:4;6214:41;6233:9;6244:10;6214:18;:41::i;:::-;6207:48;;6074:188;;;;;:::o;212:265:79:-;-1:-1:-1;;;;;365:24:79;;;:11;:24;;;;;;;;;;;:38;;;;;;;;;;;;:105;;-1:-1:-1;;;;;;365:105:79;;;;;;;;212:265::o;3756:1191:97:-;3908:34;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;;;;;;;;;964:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;964:28:11;;993:10;964:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;3962:30:97;;-1:-1:-1;3962:17:97;;-1:-1:-1;;3962:17:97;;;:7;:17;;;-1:-1:-1;;;;;3962:28:97;;:30::i;:::-;3954:70;;;;-1:-1:-1;;;3954:70:97;;;;;;;;;4042:31;:18;;;;;;;;;:31;4034:72;;;;-1:-1:-1;;;4034:72:97;;;;;;;;;4137:47;:34;;;;;;;;;:47;4116:124;;;;-1:-1:-1;;;4116:124:97;;;;;;;;;4271:57;4290:17;;;;:7;:17;;;4309:18;;;;;;;;;;4271;:57::i;:::-;4250:129;;;;-1:-1:-1;;;4250:129:97;;;;;;;;;4390:25;;;4451:17;;;;:7;:17;;;-1:-1:-1;;;;;4439:30:97;-1:-1:-1;;;;;4439:30:97;;;;;;;;;;;;:50;4470:7;:18;;;;;;;;;;;;-1:-1:-1;;;;;4439:50:97;;;;;;;;;;;;;;-1:-1:-1;4439:50:97;;;;-1:-1:-1;4523:38:97;;;;;;;;4553:7;4523:38;;;:29;:38::i;:::-;4510:51;-1:-1:-1;4510:51:97;4572:11;;4584:17;;;;:7;:17;;;-1:-1:-1;;;;;4572:30:97;-1:-1:-1;;;;;4572:30:97;;;;;;;;;;;;:50;4603:7;:18;;;;;;;;;;;;-1:-1:-1;;;;;4572:50:97;-1:-1:-1;;;;;4572:50:97;;;;;;;;;;;;;:63;;;;;-1:-1:-1;;;;;4572:63:97;;;;;-1:-1:-1;;;;;4572:63:97;;;;;;4741:7;:18;;;;;;;;;;;;-1:-1:-1;;;;;4651:289:97;4710:17;;;;:7;:17;;;-1:-1:-1;;;;;4651:289:97;4686:10;4651:289;4773:17;4812:10;4837:24;;;;;;;;;;4875:26;;;;;;;;;;4915:15;;;;;;;;;;4651:289;;;;;;;;;;;;;;;;;;;1014:1:11;3756:1191:97;;;:::o;2177:82::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2177:82:97;;:::o;5514:200::-;-1:-1:-1;;;;;5673:22:97;;;5627:23;5673:22;;;;;;;;;;;:34;;;;;;;;;;;;5514:200::o;5078:143::-;706:13:29;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:29;;;;;;;;;5161:29:97;5174:15;5161:12;:29::i;:::-;5201:13;:11;:13::i;:::-;5078:143;:::o;2531:537::-;2721:47;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;964:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;964:28:11;;993:10;964:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;2792:19:97;;;;-1:-1:-1;2784:50:97;;;;-1:-1:-1;;;2784:50:97;;;;;;;;;2862:46;;;;;;;;;;;;;;;;2892:8;2862:46;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2862:46:97;;2845:63;;2924:13;2919:143;2939:23;;;2919:143;;;3011:40;3035:8;;3044:5;3035:15;;;;;;;;;;;;3011:40;;;;;;;;;;;;:23;:40::i;:::-;2987:14;3002:5;2987:21;;;;;;;;-1:-1:-1;;;;;2987:64:97;;;:21;;;;;;;;;;;:64;2964:7;;2919:143;;;;2531:537;;;;:::o;1259:263:11:-;1300:17;1329:23;1363:12;555:37;;;;;;;;;;;;;;;1443:11;;-1:-1:-1;;;1259:263:11;:::o;3285:252:97:-;3439:34;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;964:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;964:28:11;;993:10;964:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;964:40:11;;;;3498:32:97;3522:7;3498:32;;;;;;;;;;;6653:207;-1:-1:-1;;;;;6802:22:97;;;6767:4;6802:22;;;;;;;;;;;:34;;;;;;;;;;;6794:59;;;6653:207::o;686:610:133:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:133;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:133:o;6866:782:97:-;6996:34;7042:17;7062:10;:8;:10::i;:::-;-1:-1:-1;;;;;7062:40:97;;:42;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7062:42:97;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7062:42:97;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7062:42:97;;;;;;;;;-1:-1:-1;;;;;7062:62:97;;:64;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7062:64:97;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7062:64:97;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7062:64:97;;;;;;;;;-1:-1:-1;;;;;7062:114:97;;:116;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7062:116:97;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7062:116:97;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7062:116:97;;;;;;;;;7042:136;;7188:32;7261:10;:8;:10::i;:::-;7286:9;7223:82;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7223:82:97;7188:117;;7316:29;7356:19;7316:60;;7423:21;7386:59;;7455:10;-1:-1:-1;;;;;7455:21:97;;7490:7;:34;;;7538:7;:15;;;7567:7;:24;;;7605:7;:26;;;7455:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7455:186:97;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7455:186:97;;;;6866:782;;;;;;:::o;2374:410:11:-;2525:32;2533:10;:8;:10::i;:::-;-1:-1:-1;;;;;2525:30:11;;:32::i;:::-;2521:69;;;2573:7;;2521:69;2607:28;:15;-1:-1:-1;;;;;2607:26:11;;:28::i;:::-;2599:68;;;;-1:-1:-1;;;2599:68:11;;;;;;;;;2678:12;555:37;;;;;;;;;;;;;;;2739:29;;;-1:-1:-1;2725:53:11;:::o;1509:171:29:-;1551:12;421:55;;;;;;;;;;;;;;;1608:4;1645:19;;-1:-1:-1;1631:43:29:o;7865:1219:97:-;8084:17;;7989:34;;-1:-1:-1;;;;;8056:45:97;:10;:8;:10::i;:::-;-1:-1:-1;;;;;8056:22:97;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8056:24:97;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8056:24:97;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8056:24:97;;;;;;;;;-1:-1:-1;;;;;8056:45:97;;:95;;;-1:-1:-1;8121:17:97;;:30;;-1:-1:-1;;;;;8121:28:97;;:30::i;:::-;8035:169;;;;-1:-1:-1;;;8035:169:97;;;;;;;;;8263:7;:18;;;-1:-1:-1;;;;;8235:46:97;:10;:8;:10::i;:::-;-1:-1:-1;;;;;8235:22:97;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8235:24:97;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8235:24:97;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8235:24:97;;;;;;;;;-1:-1:-1;;;;;8235:46:97;;:97;;;;8301:31;:7;:18;;;-1:-1:-1;;;;;8301:29:97;;:31::i;:::-;8214:172;;;;-1:-1:-1;;;8214:172:97;;;;;;;;;8417:47;:7;:34;;;-1:-1:-1;;;;;8417:45:97;;:47::i;:::-;8396:124;;;;-1:-1:-1;;;8396:124:97;;;;;;;;;8552:57;8571:7;:17;;;8590:7;:18;;;8552;:57::i;:::-;8551:58;8530:134;;;;-1:-1:-1;;;8530:134:97;;;;;;;;;8688:38;8718:7;8688:29;:38::i;:::-;8749:17;;-1:-1:-1;;;;;8737:30:97;;;:11;:30;;;;;;;;;;;8768:18;;;;;8737:50;;;;;;;;;;:63;;-1:-1:-1;;;;;;8737:63:97;;;;;;;8909:18;8878:17;;8974:24;;;;9012:26;;;;9052:15;;;;8816:261;;8737:63;;-1:-1:-1;8816:261:97;;;;;;;;;8854:10;;8816:261;;;;8737:63;;8974:24;9052:15;8816:261;;;;;;;;;;7865:1219;;;:::o;1288:108:105:-;-1:-1:-1;;;;;1368:21:105;;;;1288:108::o;135:344:79:-;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;343:398;;;519:3;512:4;504:6;500:17;496:27;486:2;;537:1;534;527:12;486:2;-1:-1;557:20;;597:18;586:30;;583:2;;;629:1;626;619:12;583:2;663:4;655:6;651:17;639:29;;714:3;706:4;698:6;694:17;684:8;680:32;677:41;674:2;;;731:1;728;721:12;674:2;479:262;;;;;;749:124;813:20;;838:30;813:20;838:30;;880:134;958:13;;976:33;958:13;976:33;;1021:192;1128:13;;1146:62;1128:13;1146:62;;1499:182;;1633:3;1624:6;1619:3;1615:16;1611:26;1608:2;;;1650:1;1647;1640:12;1608:2;-1:-1;1669:6;1601:80;-1:-1;1601:80;1744:1123;;1881:4;1869:9;1864:3;1860:19;1856:30;1853:2;;;1899:1;1896;1889:12;1853:2;1917:20;1932:4;1917:20;;;1908:29;-1:-1;1992:1;2024:49;2069:3;2049:9;2024:49;;;1999:75;;-1:-1;2141:2;2174:49;2219:3;2195:22;;;2174:49;;;2167:4;2160:5;2156:16;2149:75;2095:140;2307:2;2340:49;2385:3;2376:6;2365:9;2361:22;2340:49;;;2333:4;2326:5;2322:16;2315:75;2245:156;2454:2;2487:46;2529:3;2520:6;2509:9;2505:22;2487:46;;;2480:4;2473:5;2469:16;2462:72;2411:134;2607:3;2641:47;2684:3;2675:6;2664:9;2660:22;2641:47;;;2634:4;2627:5;2623:16;2616:73;2555:145;2764:3;2798:47;2841:3;2832:6;2821:9;2817:22;2798:47;;;2791:4;2784:5;2780:16;2773:73;2710:147;1847:1020;;;;;2874:126;2939:20;;2964:31;2939:20;2964:31;;3007:241;;3111:2;3099:9;3090:7;3086:23;3082:32;3079:2;;;3127:1;3124;3117:12;3079:2;3162:1;3179:53;3224:7;3204:9;3179:53;;3255:263;;3370:2;3358:9;3349:7;3345:23;3341:32;3338:2;;;3386:1;3383;3376:12;3338:2;3421:1;3438:64;3494:7;3474:9;3438:64;;3525:366;;;3646:2;3634:9;3625:7;3621:23;3617:32;3614:2;;;3662:1;3659;3652:12;3614:2;3697:1;3714:53;3759:7;3739:9;3714:53;;;3704:63;;3676:97;3804:2;3822:53;3867:7;3858:6;3847:9;3843:22;3822:53;;;3812:63;;3783:98;3608:283;;;;;;3898:491;;;;4036:2;4024:9;4015:7;4011:23;4007:32;4004:2;;;4052:1;4049;4042:12;4004:2;4087:1;4104:53;4149:7;4129:9;4104:53;;;4094:63;;4066:97;4194:2;4212:53;4257:7;4248:6;4237:9;4233:22;4212:53;;;4202:63;;4173:98;4302:2;4320:53;4365:7;4356:6;4345:9;4341:22;4320:53;;;4310:63;;4281:98;3998:391;;;;;;4396:489;;;4581:2;4569:9;4560:7;4556:23;4552:32;4549:2;;;4597:1;4594;4587:12;4549:2;4632:31;;4683:18;4672:30;;4669:2;;;4715:1;4712;4705:12;4669:2;4743:126;4861:7;4852:6;4841:9;4837:22;4743:126;;;4733:136;;;;4611:264;4543:342;;;;;;4892:235;;4993:2;4981:9;4972:7;4968:23;4964:32;4961:2;;;5009:1;5006;4999:12;4961:2;5044:1;5061:50;5103:7;5083:9;5061:50;;5134:263;;5249:2;5237:9;5228:7;5224:23;5220:32;5217:2;;;5265:1;5262;5255:12;5217:2;5300:1;5317:64;5373:7;5353:9;5317:64;;5404:321;;5548:2;5536:9;5527:7;5523:23;5519:32;5516:2;;;5564:1;5561;5554:12;5516:2;5599:1;5616:93;5701:7;5681:9;5616:93;;6082:342;;6236:3;6224:9;6215:7;6211:23;6207:33;6204:2;;;6253:1;6250;6243:12;6204:2;6288:1;6305:103;6400:7;6380:9;6305:103;;6431:338;;6583:3;6571:9;6562:7;6558:23;6554:33;6551:2;;;6600:1;6597;6590:12;6551:2;6635:1;6652:101;6745:7;6725:9;6652:101;;6776:237;;6878:2;6866:9;6857:7;6853:23;6849:32;6846:2;;;6894:1;6891;6884:12;6846:2;6929:1;6946:51;6989:7;6969:9;6946:51;;7021:239;;7141:79;7216:3;7208:6;7141:79;;;-1:-1;;7249:4;7240:14;;7134:126;7268:142;7359:45;7398:5;7359:45;;;7354:3;7347:58;7341:69;;;7417:113;7500:24;7518:5;7500:24;;7593:855;;7771:87;7852:5;7771:87;;;7871:86;7950:6;7945:3;7871:86;;;7864:93;;7978:89;8061:5;7978:89;;;8087:7;8115:1;8100:326;8125:6;8122:1;8119:13;8100:326;;;8192:6;8186:13;8213:96;8305:3;8290:13;8213:96;;;8206:103;;8326:93;8412:6;8326:93;;;8316:103;-1:-1;;8147:1;8140:9;8100:326;;;-1:-1;8439:3;;7750:698;-1:-1;;;;;7750:698;8456:104;8533:21;8548:5;8533:21;;8567:113;8650:24;8668:5;8650:24;;8687:182;8793:70;8857:5;8793:70;;9263:364;;9441:85;9523:2;9518:3;9441:85;;;9559:30;9539:51;;9618:2;9609:12;;9427:200;-1:-1;;9427:200;9636:330;;9796:67;9860:2;9855:3;9796:67;;;9896:32;9876:53;;9957:2;9948:12;;9782:184;-1:-1;;9782:184;9975:327;;10135:67;10199:2;10194:3;10135:67;;;10235:29;10215:50;;10293:2;10284:12;;10121:181;-1:-1;;10121:181;10311:327;;10471:67;10535:2;10530:3;10471:67;;;10571:29;10551:50;;10629:2;10620:12;;10457:181;-1:-1;;10457:181;10647:328;;10807:67;10871:2;10866:3;10807:67;;;10907:30;10887:51;;10966:2;10957:12;;10793:182;-1:-1;;10793:182;10984:325;;11144:67;11208:2;11203:3;11144:67;;;11244:27;11224:48;;11300:2;11291:12;;11130:179;-1:-1;;11130:179;11318:360;;11496:85;11578:2;11573:3;11496:85;;;11614:26;11594:47;;11669:2;11660:12;;11482:196;-1:-1;;11482:196;11687:318;;11847:67;11911:2;11906:3;11847:67;;;-1:-1;;;11927:41;;11996:2;11987:12;;11833:172;-1:-1;;11833:172;12014:324;;12174:67;12238:2;12233:3;12174:67;;;12274:26;12254:47;;12329:2;12320:12;;12160:178;-1:-1;;12160:178;12347:328;;12507:67;12571:2;12566:3;12507:67;;;12607:30;12587:51;;12666:2;12657:12;;12493:182;-1:-1;;12493:182;12684:329;;12844:67;12908:2;12903:3;12844:67;;;12944:31;12924:52;;13004:2;12995:12;;12830:183;-1:-1;;12830:183;13021:107;13100:22;13116:5;13100:22;;13135:372;;13334:148;13478:3;13334:148;;13514:372;;13713:148;13857:3;13713:148;;13893:229;14019:2;14004:18;;14033:79;14008:9;14085:6;14033:79;;14129:631;14345:3;14330:19;;14360:71;14334:9;14404:6;14360:71;;;14442:72;14510:2;14499:9;14495:18;14486:6;14442:72;;;14525:68;14589:2;14578:9;14574:18;14565:6;14525:68;;;14604;14668:2;14657:9;14653:18;14644:6;14604:68;;;14683:67;14745:3;14734:9;14730:19;14721:6;14683:67;;;14316:444;;;;;;;;;14767:519;14955:3;14940:19;;14970:71;14944:9;15014:6;14970:71;;;15052:66;15114:2;15103:9;15099:18;15090:6;15052:66;;;15129:68;15193:2;15182:9;15178:18;15169:6;15129:68;;;15208;15272:2;15261:9;15257:18;15248:6;15208:68;;;14926:360;;;;;;;;15293:324;15439:2;15424:18;;15453:71;15428:9;15497:6;15453:71;;;15535:72;15603:2;15592:9;15588:18;15579:6;15535:72;;;15410:207;;;;;;15624:519;15812:3;15797:19;;15827:71;15801:9;15871:6;15827:71;;;15909:68;15973:2;15962:9;15958:18;15949:6;15909:68;;;15988;16052:2;16041:9;16037:18;16028:6;15988:68;;;16067:66;16129:2;16118:9;16114:18;16105:6;16067:66;;16150:427;16351:2;16365:47;;;16336:18;;16426:141;16336:18;16553:6;16426:141;;16584:201;16696:2;16681:18;;16710:65;16685:9;16748:6;16710:65;;16792:279;16943:2;16928:18;;16957:104;16932:9;17034:6;16957:104;;17352:407;17543:2;17557:47;;;17528:18;;17618:131;17528:18;17618:131;;17766:407;17957:2;17971:47;;;17942:18;;18032:131;17942:18;18032:131;;18180:407;18371:2;18385:47;;;18356:18;;18446:131;18356:18;18446:131;;18594:407;18785:2;18799:47;;;18770:18;;18860:131;18770:18;18860:131;;19008:407;19199:2;19213:47;;;19184:18;;19274:131;19184:18;19274:131;;19422:407;19613:2;19627:47;;;19598:18;;19688:131;19598:18;19688:131;;19836:407;20027:2;20041:47;;;20012:18;;20102:131;20012:18;20102:131;;20250:407;20441:2;20455:47;;;20426:18;;20516:131;20426:18;20516:131;;20664:407;20855:2;20869:47;;;20840:18;;20930:131;20840:18;20930:131;;21078:256;21140:2;21134:9;21166:17;;;21241:18;21226:34;;21262:22;;;21223:62;21220:2;;;21298:1;21295;21288:12;21220:2;21314;21307:22;21118:216;;-1:-1;21118:216;21341:184;21498:4;21489:14;;21446:79;21532:170;21668:12;;21639:63;21858:178;21976:19;;;22025:4;22016:14;;21969:67;22217:145;22353:3;22331:31;-1:-1;22331:31;22370:91;;22432:24;22450:5;22432:24;;22468:85;22534:13;22527:21;;22510:43;22560:72;22622:5;22605:27;22639:120;;22730:24;22748:5;22730:24;;22904:121;-1:-1;;;;;22966:54;;22949:76;23032:81;23103:4;23092:16;;23075:38;23120:129;;23207:37;23238:5;23207:37;;24165:117;24234:24;24252:5;24234:24;;;24227:5;24224:35;24214:2;;24273:1;24270;24263:12;24289:111;24355:21;24370:5;24355:21;;24407:117;24476:24;24494:5;24476:24;;24531:175;24629:53;24676:5;24629:53;;24917:113;24984:22;25000:5;24984:22;",
  "source": "pragma solidity 0.5.17;\npragma experimental ABIEncoderV2;\n\nimport \"../../../providers/chainlink/ChainlinkPairAggregatorRegistry.sol\";\n\ncontract PairAggregatorRegistryMock is ChainlinkPairAggregatorRegistry {\n    function externalAddAggregatorFor(\n        address baseAddress,\n        address quoteAddress,\n        address aggregatorAddress\n    ) external {\n        aggregators[baseAddress][quoteAddress] = PairAggregatorInterface(\n            aggregatorAddress\n        );\n    }\n}\n",
  "sourcePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/mock/providers/chainlink/PairAggregatorRegistryMock.sol",
  "ast": {
    "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/mock/providers/chainlink/PairAggregatorRegistryMock.sol",
    "exportedSymbols": {
      "PairAggregatorRegistryMock": [
        14009
      ]
    },
    "id": 14010,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13984,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:79"
      },
      {
        "id": 13985,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:79"
      },
      {
        "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/providers/chainlink/ChainlinkPairAggregatorRegistry.sol",
        "file": "../../../providers/chainlink/ChainlinkPairAggregatorRegistry.sol",
        "id": 13986,
        "nodeType": "ImportDirective",
        "scope": 14010,
        "sourceUnit": 15795,
        "src": "59:74:79",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13987,
              "name": "ChainlinkPairAggregatorRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15794,
              "src": "174:31:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ChainlinkPairAggregatorRegistry_$15794",
                "typeString": "contract ChainlinkPairAggregatorRegistry"
              }
            },
            "id": 13988,
            "nodeType": "InheritanceSpecifier",
            "src": "174:31:79"
          }
        ],
        "contractDependencies": [
          2627,
          9187,
          15794,
          15880
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 14009,
        "linearizedBaseContracts": [
          14009,
          15794,
          15880,
          2627,
          9187
        ],
        "name": "PairAggregatorRegistryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 14007,
              "nodeType": "Block",
              "src": "355:122:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13997,
                          "name": "aggregators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15413,
                          "src": "365:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_contract$_PairAggregatorInterface_$11218_$_$",
                            "typeString": "mapping(address => mapping(address => contract PairAggregatorInterface))"
                          }
                        },
                        "id": 14000,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13998,
                          "name": "baseAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13990,
                          "src": "377:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "365:24:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_PairAggregatorInterface_$11218_$",
                          "typeString": "mapping(address => contract PairAggregatorInterface)"
                        }
                      },
                      "id": 14001,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 13999,
                        "name": "quoteAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13992,
                        "src": "390:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "365:38:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PairAggregatorInterface_$11218",
                        "typeString": "contract PairAggregatorInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 14003,
                          "name": "aggregatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13994,
                          "src": "443:17:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 14002,
                        "name": "PairAggregatorInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11218,
                        "src": "406:23:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PairAggregatorInterface_$11218_$",
                          "typeString": "type(contract PairAggregatorInterface)"
                        }
                      },
                      "id": 14004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "406:64:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PairAggregatorInterface_$11218",
                        "typeString": "contract PairAggregatorInterface"
                      }
                    },
                    "src": "365:105:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PairAggregatorInterface_$11218",
                      "typeString": "contract PairAggregatorInterface"
                    }
                  },
                  "id": 14006,
                  "nodeType": "ExpressionStatement",
                  "src": "365:105:79"
                }
              ]
            },
            "documentation": null,
            "id": 14008,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "externalAddAggregatorFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13990,
                  "name": "baseAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 14008,
                  "src": "255:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "255:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13992,
                  "name": "quoteAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 14008,
                  "src": "284:20:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13991,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13994,
                  "name": "aggregatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 14008,
                  "src": "314:25:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "245:100:79"
            },
            "returnParameters": {
              "id": 13996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "355:0:79"
            },
            "scope": 14009,
            "src": "212:265:79",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 14010,
        "src": "135:344:79"
      }
    ],
    "src": "0:480:79"
  },
  "legacyAST": {
    "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/mock/providers/chainlink/PairAggregatorRegistryMock.sol",
    "exportedSymbols": {
      "PairAggregatorRegistryMock": [
        14009
      ]
    },
    "id": 14010,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13984,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:79"
      },
      {
        "id": 13985,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:79"
      },
      {
        "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/providers/chainlink/ChainlinkPairAggregatorRegistry.sol",
        "file": "../../../providers/chainlink/ChainlinkPairAggregatorRegistry.sol",
        "id": 13986,
        "nodeType": "ImportDirective",
        "scope": 14010,
        "sourceUnit": 15795,
        "src": "59:74:79",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13987,
              "name": "ChainlinkPairAggregatorRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15794,
              "src": "174:31:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ChainlinkPairAggregatorRegistry_$15794",
                "typeString": "contract ChainlinkPairAggregatorRegistry"
              }
            },
            "id": 13988,
            "nodeType": "InheritanceSpecifier",
            "src": "174:31:79"
          }
        ],
        "contractDependencies": [
          2627,
          9187,
          15794,
          15880
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 14009,
        "linearizedBaseContracts": [
          14009,
          15794,
          15880,
          2627,
          9187
        ],
        "name": "PairAggregatorRegistryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 14007,
              "nodeType": "Block",
              "src": "355:122:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13997,
                          "name": "aggregators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15413,
                          "src": "365:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_contract$_PairAggregatorInterface_$11218_$_$",
                            "typeString": "mapping(address => mapping(address => contract PairAggregatorInterface))"
                          }
                        },
                        "id": 14000,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13998,
                          "name": "baseAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13990,
                          "src": "377:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "365:24:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_PairAggregatorInterface_$11218_$",
                          "typeString": "mapping(address => contract PairAggregatorInterface)"
                        }
                      },
                      "id": 14001,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 13999,
                        "name": "quoteAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13992,
                        "src": "390:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "365:38:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PairAggregatorInterface_$11218",
                        "typeString": "contract PairAggregatorInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 14003,
                          "name": "aggregatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13994,
                          "src": "443:17:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 14002,
                        "name": "PairAggregatorInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11218,
                        "src": "406:23:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PairAggregatorInterface_$11218_$",
                          "typeString": "type(contract PairAggregatorInterface)"
                        }
                      },
                      "id": 14004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "406:64:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PairAggregatorInterface_$11218",
                        "typeString": "contract PairAggregatorInterface"
                      }
                    },
                    "src": "365:105:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PairAggregatorInterface_$11218",
                      "typeString": "contract PairAggregatorInterface"
                    }
                  },
                  "id": 14006,
                  "nodeType": "ExpressionStatement",
                  "src": "365:105:79"
                }
              ]
            },
            "documentation": null,
            "id": 14008,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "externalAddAggregatorFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13990,
                  "name": "baseAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 14008,
                  "src": "255:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "255:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13992,
                  "name": "quoteAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 14008,
                  "src": "284:20:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13991,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13994,
                  "name": "aggregatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 14008,
                  "src": "314:25:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "245:100:79"
            },
            "returnParameters": {
              "id": 13996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "355:0:79"
            },
            "scope": 14009,
            "src": "212:265:79",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 14010,
        "src": "135:344:79"
      }
    ],
    "src": "0:480:79"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-12T14:23:11.546Z",
  "devdoc": {
    "methods": {
      "getPairAggregator(address,address)": {
        "return": "the pair aggregator address for the given base and quote addresses."
      },
      "hasPairAggregator(address,address)": {
        "return": "true if the pair aggregator address for the given base and quote tokens is not 0x0. Otherwise it returns false."
      },
      "initialize(address)": {
        "params": {
          "settingsAddress": "this settings address."
        }
      },
      "initialized()": {
        "return": "true if contract is initialized. Otherwise it returns false."
      },
      "registerPairAggregator((address,address,address,bool,uint8,uint8))": {
        "params": {
          "request": "the input data to register the new pair aggregator."
        },
        "return": "the new pair aggregator created."
      },
      "registerPairAggregators((address,address,address,bool,uint8,uint8)[])": {
        "params": {
          "requests": "the input data to register the new pair aggregator."
        },
        "return": "the new pair aggregator addresses."
      },
      "settings()": {
        "details": "This address should NOT change over the time. See details in the _setSettings(...) function."
      },
      "updatePairAggregator((address,address,address,bool,uint8,uint8))": {
        "params": {
          "request": "the input data to register the new pair aggregator."
        },
        "return": "the new pair aggregator created."
      }
    }
  },
  "userdoc": {
    "methods": {
      "getPairAggregator(address,address)": {
        "notice": "Gets a pair aggregator for a given base and quote tokens (a market).baseToken the base token address.quoteToken the quote token address."
      },
      "hasPairAggregator(address,address)": {
        "notice": "Tests whether a pair aggregator exists for a given base and quote tokens (a market) or not.baseToken the base token address.quoteToken the quote token address."
      },
      "initialize(address)": {
        "notice": "It initializes this registry contract."
      },
      "initialized()": {
        "notice": "Gets if the contract is initialized."
      },
      "registerPairAggregator((address,address,address,bool,uint8,uint8))": {
        "notice": "It registers a new pair aggregator for a given market."
      },
      "registerPairAggregators((address,address,address,bool,uint8,uint8)[])": {
        "notice": "It registers new pair aggregators for given markets."
      },
      "settings()": {
        "notice": "The gets the settings contract address from the SETTINGS_SLOT."
      },
      "updatePairAggregator((address,address,address,bool,uint8,uint8))": {
        "notice": "It updates a current pair aggregator for a given market."
      }
    }
  }
}