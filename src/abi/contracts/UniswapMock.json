{
  "contractName": "UniswapMock",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sourceElement",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receivedElement",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sourceAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "receivedAmount",
          "type": "uint256"
        }
      ],
      "name": "UniswapSwapped",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "findTokenIndex",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "canonicalWeth",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "routerAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "sourceAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minDestination",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sourceElement\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receivedElement\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"receivedAmount\",\"type\":\"uint256\"}],\"name\":\"UniswapSwapped\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"findTokenIndex\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"canonicalWeth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minDestination\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"swap(address,address,address[],uint256,uint256)\":{\"details\":\"This function mainly invokes 3 Uniswap external functions: https://uniswap.org/docs/v2/smart-contracts/router02/#swapexactethfortokens https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensforeth https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens\",\"params\":{\"canonicalWeth\":\"address of the canonical WETH in the current network.\",\"minDestination\":\"The minimum amount of output tokens that must be received for the transaction not to revert.\",\"path\":\"An array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.\",\"routerAddress\":\"address of the Uniswap Router v02.\",\"sourceAmount\":\"amount of source element (ETH or Tokens) to swap.\"}}}},\"userdoc\":{\"methods\":{\"swap(address,address,address[],uint256,uint256)\":{\"notice\":\"Swaps ETH/Tokens for Tokens/ETH using different Uniswap v2 Router 02 methods.\"}},\"notice\":\"This mock is used to expose a payable fallback function on tests.f\"}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/escrow/dapps/UniswapMock.sol\":\"UniswapMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseEscrowDapp.sol\":{\"keccak256\":\"0xd66e13be4dcdab5ab76971f6426f41e061448e69dbf4659335c3a6fbc6b75558\",\"urls\":[\"bzz-raw://ebb2427469fc65c397f57d214fd178b9089f4511bc54e540937e0dd6447b2dd6\",\"dweb:/ipfs/QmZcfAZnFdro1y3QAcM14Nqa3bD5a9j3uvjVX4nDrXuz1G\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/escrow/dapps/IUniswap.sol\":{\"keccak256\":\"0xc6028054a5cd60c87efd06457238bb48f8c958b04dcf9fe9d869a41323a7b5da\",\"urls\":[\"bzz-raw://a952975bd36ca7ef5655fdb2ed2e8ae108926dcc6b02e73facf789e1fbb05d17\",\"dweb:/ipfs/QmbxdpE6jiHUoosDvbjPNryasw2Faykeg3deRkgTJm6v6d\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/escrow/dapps/Uniswap.sol\":{\"keccak256\":\"0x0854a4e267b8b3ac7a2757b29d4433f0762332e9999499e5b12e2098a62dac2d\",\"urls\":[\"bzz-raw://b69c7eef563526ce0e0a83d609d557487167aecc1faf90b867081a8eb66d40dd\",\"dweb:/ipfs/QmRK72JGtW6d3WDpPUeyU3s71gjSdjn5JB9UdT14WwYdJp\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/escrow/dapps/UniswapMock.sol\":{\"keccak256\":\"0x78560a96e9255df5a43c76b35244363d9782af6c453475f46f8dd79adfcc60ae\",\"urls\":[\"bzz-raw://fdac462cdfb4bcb111a5ee52a8a2071414d3921169dce8b614c5bb6d69831bc5\",\"dweb:/ipfs/QmRtn5vb4evBhc56eaJaHGWeWH4NLuW6Ttt3Bh5vVUYT81\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/uniswap/IUniswapV2Router02.sol\":{\"keccak256\":\"0x538c2a7d631f21222cbf2d84896ccf435cf62052b3d56cdece620acea3ac643f\",\"urls\":[\"bzz-raw://a155fc2d1c3ed03053d29bdb8f726ece865bdf3b220ad444dbb8aa279054bffa\",\"dweb:/ipfs/QmNnZWKzXGQ2UpH2tjvmFmV1EQXoWRmnLVZxr86yxGfRAW\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressArrayLib.sol\":{\"keccak256\":\"0x5486df4c327e0de11b03451478ae59ae368a9266de9ea834cc04cf5f98c52cb2\",\"urls\":[\"bzz-raw://3d85a789bf71f24673c9cd058e904f4a9802e21c5acbd958a2371ee951329467\",\"dweb:/ipfs/QmddMKEJFssfhF7dxFK4r9RXB4aCzn4gLdGXyBvkv7k43y\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506110d1806100206000396000f3fe6080604052600436106100345760003560e01c80630a11fd07146100365780630fe6d57c1461007b578063aa6ca80814610149575b005b34801561004257600080fd5b506100696004803603602081101561005957600080fd5b50356001600160a01b03166101ae565b60408051918252519081900360200190f35b34801561008757600080fd5b50610034600480360360a081101561009e57600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156100d257600080fd5b8201836020820111156100e457600080fd5b8035906020019184602083028401116401000000008311171561010657600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602001356101dd565b34801561015557600080fd5b5061015e610a63565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561019a578181015183820152602001610182565b505050509050019250505060405180910390f35b600080806101c2818563ffffffff610ac616565b91509150816101d3576000196101d5565b805b949350505050565b6101ef856001600160a01b0316610b1b565b610240576040805162461bcd60e51b815260206004820152601f60248201527f43414e4f4e4943414c5f574554485f4d5553545f42455f434f4e545241435400604482015290519081900360640190fd5b610252846001600160a01b0316610b1b565b6102a3576040805162461bcd60e51b815260206004820152601960248201527f524f555445525f4d5553545f42455f415f434f4e545241435400000000000000604482015290519081900360640190fd5b82518490600211156102f5576040805162461bcd60e51b815260206004820152601660248201527515539254d5d05417d410551217d513d3d7d4d213d49560521b604482015290519081900360640190fd5b60008460008151811061030457fe5b6020026020010151905060008560018751038151811061032057fe5b6020026020010151905061035e8160405180606001604052806023815260200161107a602391396001600160a01b038516919063ffffffff610b5416565b600084116103b3576040805162461bcd60e51b815260206004820152601c60248201527f554e49535741505f4d494e5f44455354494e4154494f4e5f5a45524f00000000604482015290519081900360640190fd5b606060006103c083610bee565b9050896001600160a01b0316846001600160a01b031614156105b05786471015610431576040805162461bcd60e51b815260206004820152601860248201527f554e49535741505f494e53554646494349454e545f4554480000000000000000604482015290519081900360640190fd5b846001600160a01b0316637ff36ab588888b30426040518663ffffffff1660e01b81526004018085815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156104b85781810151838201526020016104a0565b50505050905001955050505050506000604051808303818588803b1580156104df57600080fd5b505af11580156104f3573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052602081101561051d57600080fd5b810190808051604051939291908464010000000082111561053d57600080fd5b90830190602082018581111561055257600080fd5b825186602082028301116401000000008211171561056f57600080fd5b82525081516020918201928201910280838360005b8381101561059c578181015183820152602001610584565b505050509050016040525050509150610922565b866105ba85610bee565b101561060d576040805162461bcd60e51b815260206004820152601b60248201527f554e49535741505f494e53554646494349454e545f544f4b454e530000000000604482015290519081900360640190fd5b836001600160a01b031663095ea7b38a896040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561066d57600080fd5b505af1158015610681573d6000803e3d6000fd5b505050506040513d602081101561069757600080fd5b50506001600160a01b03838116908b1614156107a057846001600160a01b03166318cbafe588888b30426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b8381101561073a578181015183820152602001610722565b505050509050019650505050505050600060405180830381600087803b15801561076357600080fd5b505af1158015610777573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561051d57600080fd5b846001600160a01b03166338ed173988888b30426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b8381101561082d578181015183820152602001610815565b505050509050019650505050505050600060405180830381600087803b15801561085657600080fd5b505af115801561086a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561089357600080fd5b81019080805160405193929190846401000000008211156108b357600080fd5b9083019060208201858111156108c857600080fd5b82518660208202830111640100000000821117156108e557600080fd5b82525081516020918201928201910280838360005b838110156109125781810151838201526020016108fa565b5050505090500160405250505091505b600061092d84610bee565b9050868201811015610986576040805162461bcd60e51b815260206004820152601d60248201527f554e49535741505f42414c414e43455f4e4f545f494e43524541534544000000604482015290519081900360640190fd5b88518351146109d5576040805162461bcd60e51b8152602060048201526016602482015275554e49535741505f4552524f525f5357415050494e4760501b604482015290519081900360640190fd5b6000836001855103815181106109e757fe5b602002602001015190506109fa86610c6a565b610a0385610c6a565b604080516001600160a01b038781168252602082018c9052818301849052915191881691309133917fe583dc6e14f16809fc9c729fa4a864f989d693022d62e79275fc497251201c669181900360600190a4505050505050505050505050565b60606000805480602002602001604051908101604052809291908181526020018280548015610abb57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a9d575b505050505090505b90565b6000805b8354811015610b1457826001600160a01b0316848281548110610ae957fe5b6000918252602090912001546001600160a01b03161491508115610b0c57610b14565b600101610aca565b9250929050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906101d5575050151592915050565b610b5e8383610ccb565b8190610be85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bad578181015183820152602001610b95565b50505050905090810190601f168015610bda5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505050565b604080516370a0823160e01b815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b158015610c3857600080fd5b505afa158015610c4c573d6000803e3d6000fd5b505050506040513d6020811015610c6257600080fd5b505192915050565b600080610c7d818463ffffffff610ac616565b915091506000610c8c84610bee565b1115610caf5781610caa57610ca860008463ffffffff610ce216565b505b610cc6565b8115610cc657610be860008263ffffffff610dcb16565b505050565b6001600160a01b0382811690821614155b92915050565b60606001600160a01b038216610d3f576040805162461bcd60e51b815260206004820152601960248201527f454d5054595f414444524553535f4e4f545f414c4c4f57454400000000000000604482015290519081900360640190fd5b8254600181018455600084815260209081902090910180546001600160a01b0319166001600160a01b0385161790558354604080518284028101840190915281815291859190830182828015610dbe57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610da0575b5050505050905092915050565b81546060908210610e3357825460408051602080840282018101909252828152918591830182828015610e2757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e09575b50505050509050610cdc565b825460001901821415610ed757825483906000198101908110610e5257fe5b600091825260209091200180546001600160a01b03191690558254610e7b84600019830161103c565b50825460408051602080840282018101909252828152918591830182828015610e27576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610e095750505050509050610cdc565b825460009084906000198101908110610eec57fe5b60009182526020909120015484546001600160a01b039091169150849084908110610f1357fe5b60009182526020909120015484546001600160a01b039091169085906000198101908110610f3d57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080848481548110610f7857fe5b600091825260209091200180546001600160a01b0319166001600160a01b0392909216919091179055835484906000198101908110610fb357fe5b600091825260209091200180546001600160a01b03191690558354610fdc85600019830161103c565b5083546040805160208084028201810190925282815291869183018282801561102e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611010575b505050505091505092915050565b815481835581811115610cc657600083815260209020610cc6918101908301610ac391905b808211156110755760008155600101611061565b509056fe554e49535741505f534f555243455f414e445f44455354494e4154494f4e5f53414d45a265627a7a7231582005ab621dbbc83b74f92c4e3adda8b4b73dfce65660e696dc9ebf347abb9b805c64736f6c63430005110032",
  "deployedBytecode": "0x6080604052600436106100345760003560e01c80630a11fd07146100365780630fe6d57c1461007b578063aa6ca80814610149575b005b34801561004257600080fd5b506100696004803603602081101561005957600080fd5b50356001600160a01b03166101ae565b60408051918252519081900360200190f35b34801561008757600080fd5b50610034600480360360a081101561009e57600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156100d257600080fd5b8201836020820111156100e457600080fd5b8035906020019184602083028401116401000000008311171561010657600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602001356101dd565b34801561015557600080fd5b5061015e610a63565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561019a578181015183820152602001610182565b505050509050019250505060405180910390f35b600080806101c2818563ffffffff610ac616565b91509150816101d3576000196101d5565b805b949350505050565b6101ef856001600160a01b0316610b1b565b610240576040805162461bcd60e51b815260206004820152601f60248201527f43414e4f4e4943414c5f574554485f4d5553545f42455f434f4e545241435400604482015290519081900360640190fd5b610252846001600160a01b0316610b1b565b6102a3576040805162461bcd60e51b815260206004820152601960248201527f524f555445525f4d5553545f42455f415f434f4e545241435400000000000000604482015290519081900360640190fd5b82518490600211156102f5576040805162461bcd60e51b815260206004820152601660248201527515539254d5d05417d410551217d513d3d7d4d213d49560521b604482015290519081900360640190fd5b60008460008151811061030457fe5b6020026020010151905060008560018751038151811061032057fe5b6020026020010151905061035e8160405180606001604052806023815260200161107a602391396001600160a01b038516919063ffffffff610b5416565b600084116103b3576040805162461bcd60e51b815260206004820152601c60248201527f554e49535741505f4d494e5f44455354494e4154494f4e5f5a45524f00000000604482015290519081900360640190fd5b606060006103c083610bee565b9050896001600160a01b0316846001600160a01b031614156105b05786471015610431576040805162461bcd60e51b815260206004820152601860248201527f554e49535741505f494e53554646494349454e545f4554480000000000000000604482015290519081900360640190fd5b846001600160a01b0316637ff36ab588888b30426040518663ffffffff1660e01b81526004018085815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156104b85781810151838201526020016104a0565b50505050905001955050505050506000604051808303818588803b1580156104df57600080fd5b505af11580156104f3573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052602081101561051d57600080fd5b810190808051604051939291908464010000000082111561053d57600080fd5b90830190602082018581111561055257600080fd5b825186602082028301116401000000008211171561056f57600080fd5b82525081516020918201928201910280838360005b8381101561059c578181015183820152602001610584565b505050509050016040525050509150610922565b866105ba85610bee565b101561060d576040805162461bcd60e51b815260206004820152601b60248201527f554e49535741505f494e53554646494349454e545f544f4b454e530000000000604482015290519081900360640190fd5b836001600160a01b031663095ea7b38a896040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561066d57600080fd5b505af1158015610681573d6000803e3d6000fd5b505050506040513d602081101561069757600080fd5b50506001600160a01b03838116908b1614156107a057846001600160a01b03166318cbafe588888b30426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b8381101561073a578181015183820152602001610722565b505050509050019650505050505050600060405180830381600087803b15801561076357600080fd5b505af1158015610777573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561051d57600080fd5b846001600160a01b03166338ed173988888b30426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b8381101561082d578181015183820152602001610815565b505050509050019650505050505050600060405180830381600087803b15801561085657600080fd5b505af115801561086a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561089357600080fd5b81019080805160405193929190846401000000008211156108b357600080fd5b9083019060208201858111156108c857600080fd5b82518660208202830111640100000000821117156108e557600080fd5b82525081516020918201928201910280838360005b838110156109125781810151838201526020016108fa565b5050505090500160405250505091505b600061092d84610bee565b9050868201811015610986576040805162461bcd60e51b815260206004820152601d60248201527f554e49535741505f42414c414e43455f4e4f545f494e43524541534544000000604482015290519081900360640190fd5b88518351146109d5576040805162461bcd60e51b8152602060048201526016602482015275554e49535741505f4552524f525f5357415050494e4760501b604482015290519081900360640190fd5b6000836001855103815181106109e757fe5b602002602001015190506109fa86610c6a565b610a0385610c6a565b604080516001600160a01b038781168252602082018c9052818301849052915191881691309133917fe583dc6e14f16809fc9c729fa4a864f989d693022d62e79275fc497251201c669181900360600190a4505050505050505050505050565b60606000805480602002602001604051908101604052809291908181526020018280548015610abb57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a9d575b505050505090505b90565b6000805b8354811015610b1457826001600160a01b0316848281548110610ae957fe5b6000918252602090912001546001600160a01b03161491508115610b0c57610b14565b600101610aca565b9250929050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906101d5575050151592915050565b610b5e8383610ccb565b8190610be85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bad578181015183820152602001610b95565b50505050905090810190601f168015610bda5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505050565b604080516370a0823160e01b815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b158015610c3857600080fd5b505afa158015610c4c573d6000803e3d6000fd5b505050506040513d6020811015610c6257600080fd5b505192915050565b600080610c7d818463ffffffff610ac616565b915091506000610c8c84610bee565b1115610caf5781610caa57610ca860008463ffffffff610ce216565b505b610cc6565b8115610cc657610be860008263ffffffff610dcb16565b505050565b6001600160a01b0382811690821614155b92915050565b60606001600160a01b038216610d3f576040805162461bcd60e51b815260206004820152601960248201527f454d5054595f414444524553535f4e4f545f414c4c4f57454400000000000000604482015290519081900360640190fd5b8254600181018455600084815260209081902090910180546001600160a01b0319166001600160a01b0385161790558354604080518284028101840190915281815291859190830182828015610dbe57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610da0575b5050505050905092915050565b81546060908210610e3357825460408051602080840282018101909252828152918591830182828015610e2757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e09575b50505050509050610cdc565b825460001901821415610ed757825483906000198101908110610e5257fe5b600091825260209091200180546001600160a01b03191690558254610e7b84600019830161103c565b50825460408051602080840282018101909252828152918591830182828015610e27576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610e095750505050509050610cdc565b825460009084906000198101908110610eec57fe5b60009182526020909120015484546001600160a01b039091169150849084908110610f1357fe5b60009182526020909120015484546001600160a01b039091169085906000198101908110610f3d57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080848481548110610f7857fe5b600091825260209091200180546001600160a01b0319166001600160a01b0392909216919091179055835484906000198101908110610fb357fe5b600091825260209091200180546001600160a01b03191690558354610fdc85600019830161103c565b5083546040805160208084028201810190925282815291869183018282801561102e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611010575b505050505091505092915050565b815481835581811115610cc657600083815260209020610cc6918101908301610ac391905b808211156110755760008155600101611061565b509056fe554e49535741505f534f555243455f414e445f44455354494e4154494f4e5f53414d45a265627a7a7231582005ab621dbbc83b74f92c4e3adda8b4b73dfce65660e696dc9ebf347abb9b805c64736f6c63430005110032",
  "sourceMap": "165:70:76:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;165:70:76;;;;;;;",
  "deployedSourceMap": "165:70:76:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;471:196:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;471:196:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;471:196:9;-1:-1:-1;;;;;471:196:9;;:::i;:::-;;;;;;;;;;;;;;;;2904:2490:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2904:2490:41;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;2904:2490:41;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2904:2490:41;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2904:2490:41;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2904:2490:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2904:2490:41;;-1:-1:-1;;2904:2490:41;;;-1:-1:-1;;;2904:2490:41;;;;:::i;375:90:9:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;375:90:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;375:90:9;;;;;;;;;;;;;;;;;471:196;540:6;;;588:29;540:6;604:12;588:29;:15;:29;:::i;:::-;558:59;;;;634:5;:26;;-1:-1:-1;;634:26:9;;;649:5;634:26;627:33;471:196;-1:-1:-1;;;;471:196:9:o;2904:2490:41:-;3104:26;:13;-1:-1:-1;;;;;3104:24:41;;:26::i;:::-;3096:70;;;;;-1:-1:-1;;;3096:70:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;3184:26;:13;-1:-1:-1;;;;;3184:24:41;;:26::i;:::-;3176:64;;;;;-1:-1:-1;;;3176:64:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;3330:11;;3297:13;;3345:1;-1:-1:-1;3330:16:41;3322:51;;;;;-1:-1:-1;;;3322:51:41;;;;;;;;;;;;-1:-1:-1;;;3322:51:41;;;;;;;;;;;;;;;3383:14;3400:4;3405:1;3400:7;;;;;;;;;;;;;;3383:24;;3417:19;3439:4;3458:1;3444:4;:11;:15;3439:21;;;;;;;;;;;;;;3417:43;;3471:76;3496:11;3471:76;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3471:24:41;;;:76;;:24;:76;:::i;:::-;3582:1;3565:14;:18;3557:59;;;;;-1:-1:-1;;;3557:59:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;3659:24;3693:25;3721:23;3732:11;3721:10;:23::i;:::-;3693:51;;3769:13;-1:-1:-1;;;;;3759:23:41;:6;-1:-1:-1;;;;;3759:23:41;;3755:1036;;;3831:12;3806:21;:37;;3798:74;;;;;-1:-1:-1;;;3798:74:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;3896:6;-1:-1:-1;;;;;3896:28:41;;3931:12;3962:14;3994:4;4024;4047:3;3896:168;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3896:168:41;-1:-1:-1;;;;;3896:168:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3896:168:41;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3896:168:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3896:168:41;;;;;;;39:16:-1;36:1;17:17;2:54;101:4;3896:168:41;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;3896:168:41;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;373:25;;-1:-1;3896:168:41;;421:4:-1;412:14;;;;3896:168:41;;;;;412:14:-1;3896:168:41;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3896:168:41;;;;;;;;;;;3886:178;;3755:1036;;;4125:12;4103:18;4114:6;4103:10;:18::i;:::-;:34;;4095:74;;;;;-1:-1:-1;;;4095:74:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;4190:6;-1:-1:-1;;;;;4183:22:41;;4206:13;4221:12;4183:51;;;;;;;;;;;;;-1:-1:-1;;;;;4183:51:41;-1:-1:-1;;;;;4183:51:41;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4183:51:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4183:51:41;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;;4252:28:41;;;;;;;4248:533;;;4310:6;-1:-1:-1;;;;;4310:28:41;;4360:12;4394:14;4430:4;4464;4491:3;4310:202;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4310:202:41;-1:-1:-1;;;;;4310:202:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4310:202:41;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4310:202:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4310:202:41;;;;;;39:16:-1;36:1;17:17;2:54;101:4;4310:202:41;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;4248:533:41;4561:6;-1:-1:-1;;;;;4561:31:41;;4614:12;4648:14;4684:4;4718;4745:3;4561:205;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4561:205:41;-1:-1:-1;;;;;4561:205:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4561:205:41;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4561:205:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4561:205:41;;;;;;39:16:-1;36:1;17:17;2:54;101:4;4561:205:41;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;4561:205:41;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;373:25;;-1:-1;4561:205:41;;421:4:-1;412:14;;;;4561:205:41;;;;;412:14:-1;4561:205:41;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4561:205:41;;;;;;;;;;;4551:215;;4248:533;4801:24;4828:23;4839:11;4828:10;:23::i;:::-;4801:50;;4923:14;4903:17;:34;4882:16;:56;;4861:132;;;;;-1:-1:-1;;;4861:132:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;5029:4;:11;5011:7;:14;:29;5003:64;;;;;-1:-1:-1;;;5003:64:41;;;;;;;;;;;;-1:-1:-1;;;5003:64:41;;;;;;;;;;;;;;;5077:22;5102:7;5127:1;5110:7;:14;:18;5102:27;;;;;;;;;;;;;;5077:52;;5140:21;5154:6;5140:13;:21::i;:::-;5171:26;5185:11;5171:13;:26::i;:::-;5213:174;;;-1:-1:-1;;;;;5213:174:41;;;;;;;;;;;;;;;;;;;;;;;5273:4;;5241:10;;5213:174;;;;;;;;;2904:2490;;;;;;;;;;;;:::o;375:90:9:-;417:16;452:6;445:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;445:13:9;;;;;;;;;;;;;;;;;;;;;;;375:90;;:::o;1629:394:103:-;1732:10;;1798:186;1826:11;;1816:21;;1798:186;;;1889:4;-1:-1:-1;;;;;1872:21:103;:4;1877:7;1872:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1872:13:103;:21;;-1:-1:-1;1907:67:103;;;;1936:23;;1907:67;1839:9;;1798:186;;;1629:394;;;;;:::o;686:610:132:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;;1273:15:132;;;686:610;-1:-1:-1;;686:610:132:o;2749:183:104:-;2890:25;2903:4;2909:5;2890:12;:25::i;:::-;2917:7;2882:43;;;;;-1:-1:-1;;;2882:43:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2882:43:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2749:183;;;:::o;673:143:9:-;764:45;;;-1:-1:-1;;;764:45:9;;803:4;764:45;;;;;;738:7;;-1:-1:-1;;;;;764:30:9;;;;;:45;;;;;;;;;;;;;;;:30;:45;;;5:2:-1;;;;30:1;27;20:12;5:2;764:45:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;764:45:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;764:45:9;;673:143;-1:-1:-1;;673:143:9:o;822:330::-;887:10;;916:29;887:10;932:12;916:29;:15;:29;:::i;:::-;886:59;;;;986:1;959:24;970:12;959:10;:24::i;:::-;:28;955:191;;;1008:5;1003:69;;1033:24;:6;1044:12;1033:24;:10;:24;:::i;:::-;;1003:69;955:191;;;1092:5;1088:58;;;1113:22;:6;1129:5;1113:22;:15;:22;:::i;1088:58::-;822:330;;;:::o;1018:117:104:-;-1:-1:-1;;;;;1115:13:104;;;;;;;;1018:117;;;;;:::o;360:237:103:-;448:16;-1:-1:-1;;;;;488:23:103;;480:61;;;;;-1:-1:-1;;;480:61:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;-1:-1;551:18:103;;;;;;;;;;;;;-1:-1:-1;;;;;;551:18:103;-1:-1:-1;;;;;551:18:103;;;;;579:11;;;;;;;;;;;;;;;;;;;27:10:-1;;579:11:103;;;27:10:-1;579:11:103;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;579:11:103;;;;;;;;;;;;;;;;;;;;;;;360:237;;;;:::o;835:516::-;971:11;;926:16;;962:20;;958:37;;984:11;;;;;;;;;;;;;;;;;;;;991:4;;984:11;;991:4;984:11;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;984:11:103;;;;;;;;;;;;;;;;;;;;;;;;;958:37;1019:11;;-1:-1:-1;;1019:15:103;1010:24;;1006:135;;;1062:11;;1057:4;;-1:-1:-1;;1062:15:103;;;1057:21;;;;;;;;;;;;;;;1050:28;;-1:-1:-1;;;;;;1050:28:103;;;1092:13;;;:4;-1:-1:-1;;1092:13:103;;;:::i;:::-;-1:-1:-1;1119:11:103;;;;;;;;;;;;;;;;;;;;1126:4;;1119:11;;1126:4;1119:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1119:11:103;;;;;;;;;;;;;;;;;;;;;;;;1006:135;1171:11;;1151:12;;1166:4;;-1:-1:-1;;1171:15:103;;;1166:21;;;;;;;;;;;;;;;;1221:11;;-1:-1:-1;;;;;1166:21:103;;;;-1:-1:-1;1221:4:103;;1226:5;;1221:11;;;;;;;;;;;;;;;;1202;;-1:-1:-1;;;;;1221:11:103;;;;1197:4;;-1:-1:-1;;1202:15:103;;;1197:21;;;;;;;;;;;;;;:35;;;;;-1:-1:-1;;;;;1197:35:103;;;;;-1:-1:-1;;;;;1197:35:103;;;;;;1256:4;1242;1247:5;1242:11;;;;;;;;;;;;;;;;;:18;;-1:-1:-1;;;;;;1242:18:103;-1:-1:-1;;;;;1242:18:103;;;;;;;;;;1283:11;;;;-1:-1:-1;;1283:15:103;;;1278:21;;;;;;;;;;;;;;;1271:28;;-1:-1:-1;;;;;;1271:28:103;;;1309:13;;;:4;-1:-1:-1;;1309:13:103;;;:::i;:::-;-1:-1:-1;1333:11:103;;;;;;;;;;;;;;;;;;;;1340:4;;1333:11;;1340:4;1333:11;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1333:11:103;;;;;;;;;;;;;;;;;;;;;;;;835:516;;;;:::o;165:70:76:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity 0.5.17;\n\nimport \"../../../../base/escrow/dapps/Uniswap.sol\";\n\n/**\n    @notice This mock is used to expose a payable fallback function on tests.f\n */\ncontract UniswapMock is Uniswap {\n    function() external payable {}\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/escrow/dapps/UniswapMock.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/escrow/dapps/UniswapMock.sol",
    "exportedSymbols": {
      "UniswapMock": [
        13440
      ]
    },
    "id": 13441,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13432,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:76"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/escrow/dapps/Uniswap.sol",
        "file": "../../../../base/escrow/dapps/Uniswap.sol",
        "id": 13433,
        "nodeType": "ImportDirective",
        "scope": 13441,
        "sourceUnit": 10276,
        "src": "25:51:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13434,
              "name": "Uniswap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10275,
              "src": "189:7:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Uniswap_$10275",
                "typeString": "contract Uniswap"
              }
            },
            "id": 13435,
            "nodeType": "InheritanceSpecifier",
            "src": "189:7:76"
          }
        ],
        "contractDependencies": [
          2468,
          10040,
          10275
        ],
        "contractKind": "contract",
        "documentation": "@notice This mock is used to expose a payable fallback function on tests.f",
        "fullyImplemented": true,
        "id": 13440,
        "linearizedBaseContracts": [
          13440,
          10275,
          2468,
          10040
        ],
        "name": "UniswapMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13438,
              "nodeType": "Block",
              "src": "231:2:76",
              "statements": []
            },
            "documentation": null,
            "id": 13439,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "211:2:76"
            },
            "returnParameters": {
              "id": 13437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "231:0:76"
            },
            "scope": 13440,
            "src": "203:30:76",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 13441,
        "src": "165:70:76"
      }
    ],
    "src": "0:236:76"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/escrow/dapps/UniswapMock.sol",
    "exportedSymbols": {
      "UniswapMock": [
        13440
      ]
    },
    "id": 13441,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13432,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:76"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/escrow/dapps/Uniswap.sol",
        "file": "../../../../base/escrow/dapps/Uniswap.sol",
        "id": 13433,
        "nodeType": "ImportDirective",
        "scope": 13441,
        "sourceUnit": 10276,
        "src": "25:51:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13434,
              "name": "Uniswap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10275,
              "src": "189:7:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Uniswap_$10275",
                "typeString": "contract Uniswap"
              }
            },
            "id": 13435,
            "nodeType": "InheritanceSpecifier",
            "src": "189:7:76"
          }
        ],
        "contractDependencies": [
          2468,
          10040,
          10275
        ],
        "contractKind": "contract",
        "documentation": "@notice This mock is used to expose a payable fallback function on tests.f",
        "fullyImplemented": true,
        "id": 13440,
        "linearizedBaseContracts": [
          13440,
          10275,
          2468,
          10040
        ],
        "name": "UniswapMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13438,
              "nodeType": "Block",
              "src": "231:2:76",
              "statements": []
            },
            "documentation": null,
            "id": 13439,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "211:2:76"
            },
            "returnParameters": {
              "id": 13437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "231:0:76"
            },
            "scope": 13440,
            "src": "203:30:76",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 13441,
        "src": "165:70:76"
      }
    ],
    "src": "0:236:76"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-06T02:15:12.432Z",
  "devdoc": {
    "methods": {
      "swap(address,address,address[],uint256,uint256)": {
        "details": "This function mainly invokes 3 Uniswap external functions: https://uniswap.org/docs/v2/smart-contracts/router02/#swapexactethfortokens https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensforeth https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens",
        "params": {
          "canonicalWeth": "address of the canonical WETH in the current network.",
          "minDestination": "The minimum amount of output tokens that must be received for the transaction not to revert.",
          "path": "An array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.",
          "routerAddress": "address of the Uniswap Router v02.",
          "sourceAmount": "amount of source element (ETH or Tokens) to swap."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "swap(address,address,address[],uint256,uint256)": {
        "notice": "Swaps ETH/Tokens for Tokens/ETH using different Uniswap v2 Router 02 methods."
      }
    },
    "notice": "This mock is used to expose a payable fallback function on tests.f"
  }
}