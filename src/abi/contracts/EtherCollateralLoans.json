{
  "contractName": "EtherCollateralLoans",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        }
      ],
      "name": "CollateralDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        }
      ],
      "name": "CollateralWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensIn",
          "type": "uint256"
        }
      ],
      "name": "LoanLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalOwed",
          "type": "uint256"
        }
      ],
      "name": "LoanRepaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountBorrowed",
          "type": "uint256"
        }
      ],
      "name": "LoanTakenOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "interestRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxLoanAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "termsExpiry",
          "type": "uint256"
        }
      ],
      "name": "LoanTermsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldPriceOracle",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newPriceOracle",
          "type": "address"
        }
      ],
      "name": "PriceOracleUpdated",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "borrowerLoans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "canLiquidateLoan",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "collateralToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "getBorrowerLoans",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "getCollateralInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "neededInLendingTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "neededInCollateralTokens",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "moreCollateralRequired",
              "type": "bool"
            }
          ],
          "internalType": "struct TellerCommon.LoanCollateralInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "getLiquidationInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralInTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountToLiquidate",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "liquidable",
              "type": "bool"
            }
          ],
          "internalType": "struct TellerCommon.LoanLiquidationInfo",
          "name": "liquidationInfo",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "getTotalOwed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "isLoanSecured",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lendingPool",
      "outputs": [
        {
          "internalType": "contract LendingPoolInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lendingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "liquidateLoan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "loanIDCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "loanTermsConsensus",
      "outputs": [
        {
          "internalType": "contract LoanTermsConsensusInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            }
          ],
          "internalType": "struct TellerCommon.LoanTerms",
          "name": "loanTerms",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "termsExpiry",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastCollateralIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "principalOwed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestOwed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "internalType": "enum TellerCommon.LoanStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "liquidated",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "priceOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newPriceOracle",
          "type": "address"
        }
      ],
      "name": "setPriceOracle",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "contract SettingsInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBorrow",
          "type": "uint256"
        }
      ],
      "name": "takeOutLoan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "withdrawCollateral",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositCollateral",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "consensusAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requestNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requestTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct TellerCommon.LoanRequest",
          "name": "request",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "consensusAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "responseTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanAmount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "signerNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct TellerCommon.Signature",
              "name": "signature",
              "type": "tuple"
            }
          ],
          "internalType": "struct TellerCommon.LoanResponse[]",
          "name": "responses",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "createLoanWithTerms",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "priceOracleAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lendingPoolAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "loanTermsConsensusAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "settingsAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIn\",\"type\":\"uint256\"}],\"name\":\"LoanLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalOwed\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBorrowed\",\"type\":\"uint256\"}],\"name\":\"LoanTakenOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"termsExpiry\",\"type\":\"uint256\"}],\"name\":\"LoanTermsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPriceOracle\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"borrowerLoans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"canLiquidateLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"consensusAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestTime\",\"type\":\"uint256\"}],\"internalType\":\"struct TellerCommon.LoanRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"consensusAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"responseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"signerNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct TellerCommon.Signature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"struct TellerCommon.LoanResponse[]\",\"name\":\"responses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"createLoanWithTerms\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"getBorrowerLoans\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"getCollateralInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"neededInLendingTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"neededInCollateralTokens\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"moreCollateralRequired\",\"type\":\"bool\"}],\"internalType\":\"struct TellerCommon.LoanCollateralInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"getLiquidationInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralInTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountToLiquidate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"liquidable\",\"type\":\"bool\"}],\"internalType\":\"struct TellerCommon.LoanLiquidationInfo\",\"name\":\"liquidationInfo\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"getTotalOwed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lendingPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanTermsConsensusAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"settingsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"isLoanSecured\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingPool\",\"outputs\":[{\"internalType\":\"contract LendingPoolInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"liquidateLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"loanIDCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"loanTermsConsensus\",\"outputs\":[{\"internalType\":\"contract LoanTermsConsensusInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"internalType\":\"struct TellerCommon.LoanTerms\",\"name\":\"loanTerms\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"termsExpiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastCollateralIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"internalType\":\"enum TellerCommon.LoanStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"contract SettingsInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBorrow\",\"type\":\"uint256\"}],\"name\":\"takeOutLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"methods\":{\"cToken()\":{\"return\":\"Address of the cToken\"},\"canLiquidateLoan(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to check\"},\"return\":\"bool weather the loan can be liquidated\"},\"createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)\":{\"params\":{\"collateralAmount\":\"Amount of collateral required for the loan\",\"request\":\"Struct of the protocol loan request\",\"responses\":\"List of structs of the protocol loan responses\"}},\"depositCollateral(address,uint256,uint256)\":{\"params\":{\"borrower\":\"The address of the loan borrower.\",\"loanID\":\"The ID of the loan the collateral is for\"}},\"getBorrowerLoans(address)\":{\"params\":{\"borrower\":\"The borrower's address\"}},\"getCollateralInfo(uint256)\":{\"params\":{\"loanID\":\"of the loan to get info for\"},\"return\":\"memory TellerCommon.LoanCollateralInfo Collateral information of the loan\"},\"getLiquidationInfo(uint256)\":{\"params\":{\"loanID\":\"loan id to get the info.\"},\"return\":\"liquidationInfo get current liquidation info for the given loan id.\"},\"getTotalOwed(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to be queried\"},\"return\":\"uint256 The total amount owed remaining\"},\"initialize(address,address,address,address,address)\":{\"params\":{\"lendingPoolAddress\":\"Contract address of the lending pool\",\"loanTermsConsensusAddress\":\"Contract adddress for loan term consensus\",\"priceOracleAddress\":\"Contract address of the price oracle\",\"settingsAddress\":\"Contract address for the configuration of the platform\"}},\"initialized()\":{\"return\":\"true if contract is initialized. Otherwise it returns false.\"},\"isLoanSecured(uint256)\":{\"return\":\"bool value of it being secured or not.\"},\"lendingToken()\":{\"return\":\"Address of the lending token\"},\"liquidateLoan(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to be liquidated\"}},\"repay(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to pay back to the loan\",\"loanID\":\"The ID of the loan the payment is for\"}},\"setPriceOracle(address)\":{\"details\":\"It throws a require error if sender is not allowed.It throws a require error if new address is empty (0x0) or not a contract.\",\"params\":{\"newPriceOracle\":\"the new price oracle address.\"}},\"settings()\":{\"details\":\"This address should NOT change over the time. See details in the _setSettings(...) function.\"},\"tToken()\":{\"return\":\"Address of the tToken\"},\"takeOutLoan(uint256,uint256)\":{\"details\":\"collateral ratio is a percentage of the loan amount that's required in collateralthe percentage will be *(10**2). I.e. collateralRatio of 5244 means 52.44% collateralis required in the loan. Interest rate is also a percentage with 2 decimal points.\"},\"withdrawCollateral(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of collateral token or ether the caller is hoping to withdraw.\",\"loanID\":\"The ID of the loan the collateral is for\"}}}},\"userdoc\":{\"methods\":{\"cToken()\":{\"notice\":\"Returns the cToken in the lending pool\"},\"canLiquidateLoan(uint256)\":{\"notice\":\"A loan can be liquidated if it is: under collateralized or expired\"},\"createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)\":{\"notice\":\"Creates a loan with the loan request and terms\"},\"depositCollateral(address,uint256,uint256)\":{\"notice\":\"Deposit collateral into a loan\"},\"getBorrowerLoans(address)\":{\"notice\":\"Get a list of all loans for a borrower\"},\"getCollateralInfo(uint256)\":{\"notice\":\"Get collateral information of a specific loan\"},\"getLiquidationInfo(uint256)\":{\"notice\":\"It getss the current liquidation info for a given loan id.\"},\"getTotalOwed(uint256)\":{\"notice\":\"Returns the total owed amount remaining for a specified loan\"},\"initialize(address,address,address,address,address)\":{\"notice\":\"Initializes the current contract instance setting the required parameters\"},\"initialized()\":{\"notice\":\"Gets if the contract is initialized.\"},\"isLoanSecured(uint256)\":{\"notice\":\"Checks wheather the loan's collateral ratio is considered to be secured based on the settings collateral buffer value.\"},\"lendingToken()\":{\"notice\":\"Returns the lending token in the lending pool\"},\"liquidateLoan(uint256)\":{\"notice\":\"Liquidate a loan if it is expired or under collateralized\"},\"repay(uint256,uint256)\":{\"notice\":\"Make a payment to a loan\"},\"setPriceOracle(address)\":{\"notice\":\"Updates the current price oracle instance.\"},\"settings()\":{\"notice\":\"The gets the settings contract address from the SETTINGS_SLOT.\"},\"tToken()\":{\"notice\":\"Returns the tToken in the lending pool\"},\"takeOutLoan(uint256,uint256)\":{\"notice\":\"Take out a loan\"},\"withdrawCollateral(uint256,uint256)\":{\"notice\":\"Withdraw collateral from a loan, unless this isn't allowed\"}},\"notice\":\"This contract is used as a basis for the creation of Ether based loans across the platformIt implements the LoansBase contract from Teller\"}},\"settings\":{\"compilationTarget\":{\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/EtherCollateralLoans.sol\":\"EtherCollateralLoans\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/atm/ATMGovernanceInterface.sol\":{\"keccak256\":\"0x941d294aa385de623880428e08bf2e8ed4ef4e0f64b64297711748bbcf1e3e62\",\"urls\":[\"bzz-raw://e25e5830eb12b06fc560d5fc77112201fe6cce29a397ce32a982fffe1f0ea88d\",\"dweb:/ipfs/QmUoHemMNYziKTm9b7FwxQvZrtDYpLDw1HyUFchpwdbdw1\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/Base.sol\":{\"keccak256\":\"0x23e85149613cbc80bec3de065d969b361d19c61177f426199d10667769f97a49\",\"urls\":[\"bzz-raw://1fbac7f12b453df42a3bd1632962e5c8e0738f9dd65fbc070ab35099ef1ad89b\",\"dweb:/ipfs/QmW8NR5CdGkDfiE9QouSCUznPQde3gNZhjRNnLCCPbJX1Z\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/BaseUpgradeable.sol\":{\"keccak256\":\"0x0f0baf7e7aa38b47e749a28ab674cc94a97ca92244a9b2e919c372c1b06546cf\",\"urls\":[\"bzz-raw://4b05a358a1273734f3143d46309239b36c9dd933a7011b8bc408fb040c6c8486\",\"dweb:/ipfs/QmPrUGETWEMAafXcU528oW6A9rBDCy5qqS24xEYLntevYU\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/EtherCollateralLoans.sol\":{\"keccak256\":\"0x604ef6eac8ee18589aa59d28a94d1d42c280745dc5c2796cd368cafa542da53f\",\"urls\":[\"bzz-raw://708974fa2273e1658a0125789bd7b9016b3403e83369eb71cceb2476f8c2268c\",\"dweb:/ipfs/QmS5FumqVZ448pJYLmxBULDLnsy8Moxise3sqYPYF8Ws24\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/LoansBase.sol\":{\"keccak256\":\"0x57d2ba95a883af51e91492f0a6e77d8972a31bec2a5b1509b46f9752dde4cb6e\",\"urls\":[\"bzz-raw://f4f4014947627a60233e27c815e445426a37edea58d99d5a764a4b275cda5df7\",\"dweb:/ipfs/Qme1Emc7RFmyx3mGYE2HwBuAVWWSto9PexNGKxfwEZzUjQ\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/TInitializable.sol\":{\"keccak256\":\"0xfd04f8b08548b7a4aacbf26eaf65f64628c38f9fc34c363317daa593c7c25917\",\"urls\":[\"bzz-raw://025bbb10f643ebec3bc77303bca1585c572c76f8261ce42ed816b3c2a7799d20\",\"dweb:/ipfs/QmYS3L6u6f7ucRxGoap3RSD1jeJERnZk3XQRden1fEDQMs\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0x2f54118d65cd07ffb7a476768412b60cfacb12c6dc161b43e1c443d1d01563a2\",\"urls\":[\"bzz-raw://e56918727ce72a8526fbb96671fa4693d0b66bca321d3c93921ced6daecc69c5\",\"dweb:/ipfs/QmUeJuNbhZic68Fsv6fw9zJ5RAJXnvjsno4HfnPajZkrLp\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/EscrowInterface.sol\":{\"keccak256\":\"0x70cd662e5be72c959495fed96b6743c921fd29e7980538117c92bb36348c6066\",\"urls\":[\"bzz-raw://5c6b83cecae9e5c4c321d67b0ebccd8067e561305cd57d414a943d12ceb3e272\",\"dweb:/ipfs/QmXKVYc74rJE9j2bmwMUc5KLJVQSWVZuF226yAFCQSWkQF\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x91250ee3c1d73b5d1720f7b41f18072eb347d73e4d3de464537ece49e1fa1d93\",\"urls\":[\"bzz-raw://f11ce1d70152f6d19f9c23788b4458631df3fd748a52849b899183ce2dabc52b\",\"dweb:/ipfs/QmaNQybwKYW5BfT3h6z6P1SSUwYEyXQviisYjUr7cHLzQR\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/LendingPoolInterface.sol\":{\"keccak256\":\"0xcfa109416508b53f1e67f11040e0187ed8089d361cd1fdaec7f671058fc00168\",\"urls\":[\"bzz-raw://c9f0fcc3736ed10d81abae971b8702b08f14377dbc4c098c4f788ec8328ac666\",\"dweb:/ipfs/QmV3Dr9zyL5957GpWePJEBn5YewmRQTdr7T8vhxXXHPUFq\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/LoanTermsConsensusInterface.sol\":{\"keccak256\":\"0xde05860c55ab4fe8d4e19e53925fa4c7450c8d2f7cd78f295413d72f2db0b337\",\"urls\":[\"bzz-raw://1b5c07e4df8bb2b52c3a9414b0ec1e2c41b462798b74b5a5a6279517ed693497\",\"dweb:/ipfs/QmUhUyoYbhCsAwJpACQUGufj8aW6Mb6oY3usXST5fqY3xJ\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/LoansInterface.sol\":{\"keccak256\":\"0x324bc3edd8855129404f2669e996c868913631bbeae7b5a6d22ca5aea52e9abc\",\"urls\":[\"bzz-raw://0a55b6bb97812a07e6fff8e667ab972baa118f782d465cd92a6e5bcb7df12ac9\",\"dweb:/ipfs/Qme9oRW6u4t8Y5jX2g79TAQRYxNfssmk3b93FQg6JMZcty\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0x871da1c39455ad829fdff0eb86a3d069e041f03b9dfab82136719c2c2923b926\",\"urls\":[\"bzz-raw://aca54977104d1152ecfecf39465a34148236b1d973a339c442963dabf68dd05b\",\"dweb:/ipfs/QmeKnxn9hB3aLqgWPLFhCEuxySTUF1LA1tbCo8tGyhppxV\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/MarketsStateInterface.sol\":{\"keccak256\":\"0xf51bd2d361d9cf448f2c2a5bb37c2699b0d9605a8f1b6a8719f90d8f536f2a05\",\"urls\":[\"bzz-raw://415a4444e8f9aca25132f492b226b8d500081a4ba5be8e45b401a68e73e1895b\",\"dweb:/ipfs/QmUPGgnqUjidxeEpkgu4yYzhfuykgtNKehEwbps97nAAzZ\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/PairAggregatorInterface.sol\":{\"keccak256\":\"0xb3cf240d5e8c5c9f51e9e06cdb544bec5ff93e76e02ea76314d2980e6a984839\",\"urls\":[\"bzz-raw://083b3be86e38ad3ed877b1208c53349006095399e023a55ed28f81134c38cb08\",\"dweb:/ipfs/Qmd5Tfykos7QPqUgs4bqFGMwgrNawLoZneuFMzMsBYCkMr\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0xfc30266ba226c3cc0cb67780a236efd26864d7a48e13f95b14f030435329febd\",\"urls\":[\"bzz-raw://dcc8e7ad13a8cf3565ffed6c0c72a9c998671bef804b26c6f11e64dc17b60fc0\",\"dweb:/ipfs/QmdDxucgMTcPm42WA6LMvS2C42EEaGw1gsH37dCCen1KLm\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/providers/chainlink/IChainlinkPairAggregatorRegistry.sol\":{\"keccak256\":\"0xed52aaafc7e15756431c0c847e5f7e1d52578b0f3b7f8b02674ec5d5d5a44c29\",\"urls\":[\"bzz-raw://76821662fa9a0918b355bc969deadef055737d90067658791dbc13e843958b64\",\"dweb:/ipfs/QmQzKEJiQjxRyNED8aABw62KQys3StiGwEnMXiF8P8ZQcV\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0xc5453e6f1a43327a37db250dedb65561c4deb0f3eb3cad490a64fc56e0b6f7b7\",\"urls\":[\"bzz-raw://f6edcab27eebecb576c9a884a173a1a5fcf0c129c76b992ec77ca24518d92f91\",\"dweb:/ipfs/QmW3q6w39dg9RnxsQdfrFVudmiZh5asRnkWQVkrap9hnJf\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/AssetSettingsLib.sol\":{\"keccak256\":\"0x9c67a3de3bb62fdfbd5c116016e0693300bb9d71fe055bb6aa12da305aba3bf4\",\"urls\":[\"bzz-raw://a3c9ffdd1496a6192abb62b72625e5778db231656f2c8fffd09a83d089996aa6\",\"dweb:/ipfs/QmevJ5ojFaqG363CrnJZ9x3YvGMWKfUaFoUVbCsaSzqPfe\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/ERC20DetailedLib.sol\":{\"keccak256\":\"0x9d40e0f2512901e6f3dcb2d95756724e4a71d418e755730a9828435c2b5ce204\",\"urls\":[\"bzz-raw://31d1541bf87c9356b4b43decc8b55479a00ebacd1beb0377b0a04200eed278c7\",\"dweb:/ipfs/QmcRJk2JfYzp9HFpTeW1BKWQALF7cpYW3Bj3G7QyosVmRV\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0xf4caad9e4d96afe2721124eaf7203bb4e3a97beb3664c63297c4e68523f5bd65\",\"urls\":[\"bzz-raw://dcd6f564423c2cf83f3a56120f43eb6fd9f6e852cbb615be657f89e5114debf4\",\"dweb:/ipfs/QmRZStVoa5KbYRCHpzC7h998NnRhbFHfUZ71TRTiLzMTcX\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0xe49711d0c8193559f76dc5f399344c8f5f5e6a8b99bf78c6bcfd9aa1c456c306\",\"urls\":[\"bzz-raw://c6432c082145470691dfde04bf5c4220ccc32a5dccf6520c3122e47e470e6c22\",\"dweb:/ipfs/Qmd97DA5SB3d8Cuwf5M6vLtfDLHYXrMj5d3cXkYPP7iPpU\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/MarketStateLib.sol\":{\"keccak256\":\"0x760fff7588382659571b8fd078b5e332e010d7e97278895fc226e8ed551cb0c6\",\"urls\":[\"bzz-raw://ff9cf8b14a780c989b2f641bf8faaf8066e586245ede58196274f8f03789c0d4\",\"dweb:/ipfs/QmVnRsrQFuRXM1c4NFVz1iUaAywq73uHVsUzemn1x5fVgF\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0xa397bcb75a4e7d80fd1043b7dc3c3a69f8c12435d26d843e4be40e875b71e134\",\"urls\":[\"bzz-raw://aabd466bea9e95a2585d597ebf62025f7ab4f38d1d4fe1c9fa5be1d98d131789\",\"dweb:/ipfs/QmcRGMg8X5teSF3Ga8ECPH2HvenViySkdnzvpUWvMDWXJL\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0c6a7e0de89e1017166ef4f593b33c8d0bfc6bcf3cd3db0bb5c1610ce260b659\",\"urls\":[\"bzz-raw://926108ace9152ed12d86a74ccb98d8c0aa698bd48fd3b4bfedacf976a8dd59d3\",\"dweb:/ipfs/QmVYjChMWZJdpPoBNheHMfyoTVsAarfLJ6SxPHhEsd6kUB\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/SettingsConsts.sol\":{\"keccak256\":\"0xa1d17d7507cae083530ce51d4c503ca657ddecf3d3fc23cec9c566d7253e59e6\",\"urls\":[\"bzz-raw://6f14f64aa1d37bef1d4e7051f1733cbe52a1d5af9165faaf4b0336a68c6eb239\",\"dweb:/ipfs/QmcJE8USECc54etjpCBUGTCF5VvMLqLjo9DbkQ64Xf2R4T\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0x61d5a58019963b5b4394aa040d8661167da0aef0912cc7133dbc917a38a74698\",\"urls\":[\"bzz-raw://f2a48c517cbebc7ca530aced250a5389cba74ca1d16137b3b38116b1afd428b9\",\"dweb:/ipfs/QmcReNoiEiR3wvVVwwY6u6fQMTZivYtBn7uhMm3ud219Di\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x704e0cb521f0b571096a72266a34d9a2a59a89853b5b271bc97fa307a4cc4dcc\",\"urls\":[\"bzz-raw://96317e95d4c301e54ff42f2b6dede996ac4d714e50a6b5552c68fbb378330dcf\",\"dweb:/ipfs/QmawKJQVK7yXeBhGcvkmujYpo8n7CWQJizDV2dWzsxupnh\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb2fbd0f9a0bd0d99ace5603f1ce5388ed7d81031a188f5f4667e702fe690e61a\",\"urls\":[\"bzz-raw://b5a018485e3e184d24fabf939a2ca2b82a95b55ad7fcb109f2005d755ddedd29\",\"dweb:/ipfs/QmbpUfNbKjnVhARJRwMvD4h5z6ajYcdAB5Up6m1V3Rf2Ee\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101b75760003560e01c80638129fc1c116100ec578063c35d64ea1161008a578063e06174e411610064578063e06174e414610475578063e1ec3c681461048a578063e3ed1902146104c2578063eee8b7ff146104e2576101b7565b8063c35d64ea14610420578063ccdd9f5d14610435578063d8aed14514610455576101b7565b8063a59a9973116100c6578063a59a9973146103ce578063a5c5c7b2146103e3578063aaaca558146103f6578063b2016bd41461040b576101b7565b80638129fc1c14610379578063854768c01461038e578063934b5d13146103ae576101b7565b806350ef5c351161015957806358895e3d1161013357806358895e3d146103025780636948f32b1461032457806369e527da14610344578063767a7b0514610359576101b7565b806350ef5c35146102a057806351348454146102cd578063530e784f146102e2576101b7565b80631a74856b116101955780631a74856b146102295780632630c12f1461023c5780633b9293001461025e5780634ac8eb5f1461028b576101b7565b806302bc2cdb146101bc5780631459457a146101de578063158ef93e146101fe575b600080fd5b3480156101c857600080fd5b506101dc6101d7366004613eb7565b61050f565b005b3480156101ea57600080fd5b506101dc6101f9366004613cb9565b610bf6565b34801561020a57600080fd5b50610213610cc6565b6040516102209190614a9e565b60405180910390f35b6101dc610237366004613d68565b610ce5565b34801561024857600080fd5b50610251610ea6565b60405161022091906149f8565b34801561026a57600080fd5b5061027e610279366004613e99565b610eb5565b6040516102209190614aac565b34801561029757600080fd5b5061027e610ee5565b3480156102ac57600080fd5b506102c06102bb366004613e99565b610eeb565b6040516102209190614cb9565b3480156102d957600080fd5b5061027e610efc565b3480156102ee57600080fd5b506101dc6102fd366004613c7d565b610f02565b34801561030e57600080fd5b50610317611060565b6040516102209190614aba565b34801561033057600080fd5b5061021361033f366004613e99565b61106f565b34801561035057600080fd5b506102516111c8565b34801561036557600080fd5b506101dc610374366004613eb7565b61124a565b34801561038557600080fd5b506101dc611460565b34801561039a57600080fd5b506102136103a9366004613e99565b6114e8565b3480156103ba57600080fd5b506102c06103c9366004613e99565b61166f565b3480156103da57600080fd5b50610317611680565b6101dc6103f1366004613e0f565b61168f565b34801561040257600080fd5b50610251611c84565b34801561041757600080fd5b50610251611cc9565b34801561042c57600080fd5b50610251611cd8565b34801561044157600080fd5b506101dc610450366004613e99565b611d1d565b34801561046157600080fd5b506101dc610470366004613eb7565b611f4b565b34801561048157600080fd5b50610317612326565b34801561049657600080fd5b506104aa6104a5366004613e99565b612348565b6040516102209c9b9a99989796959493929190614d2d565b3480156104ce57600080fd5b5061027e6104dd366004613d2e565b612400565b3480156104ee57600080fd5b506105026104fd366004613c7d565b61242e565b6040516102209190614a8d565b8160016000828152606d60205260409020600e0154600160a01b900460ff16600381111561053957fe5b1461055f5760405162461bcd60e51b815260040161055690614c89565b60405180910390fd5b610567610cc6565b6105835760405162461bcd60e51b815260040161055690614c79565b61058b61249a565b156105a85760405162461bcd60e51b815260040161055690614ba9565b606a546001600160a01b03166105bd81612514565b156105da5760405162461bcd60e51b815260040161055690614af9565b603380546001908101918290556000868152606d6020526040902001546001600160a01b031633811461061f5760405162461bcd60e51b815260040161055690614c49565b6000868152606d60205260409020600501548511156106505760405162461bcd60e51b815260040161055690614b19565b6000868152606d60205260409020600701544211156106815760405162461bcd60e51b815260040161055690614bf9565b6107fb61068c612326565b6001600160a01b031663269012a06106a2612326565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106da57600080fd5b505afa1580156106ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107129190810190613df1565b6001600160a01b03166311880cc86040518163ffffffff1660e01b815260040160206040518083038186803b15801561074a57600080fd5b505afa15801561075e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107829190810190613dd3565b6040518263ffffffff1660e01b815260040161079e9190614aac565b60206040518083038186803b1580156107b657600080fd5b505afa1580156107ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107ee9190810190613dd3565b429063ffffffff61259916565b6000878152606d60205260409020600a0154111561082b5760405162461bcd60e51b815260040161055690614bd9565b6000868152606d60205260409020600d8101869055600b81018690556006810154600390910154610890916301e13380916108849161271091839190610878908c9063ffffffff6125e416565b9063ffffffff6125e416565b9063ffffffff61261e16565b6000878152606d60205260409020600c810191909155600e01805460ff60a01b1916600160a11b1790556108c2613a2b565b6108cb87612660565b90508060600151156108ef5760405162461bcd60e51b815260040161055690614bb9565b6000878152606d602052604090204260089091015561090d876126b1565b6000888152606d602052604090819020600e0180546001600160a01b0319166001600160a01b039384161790819055606a549151631397424760e11b81529183169263272e848e92610965928b921690600401614ce9565b600060405180830381600087803b15801561097f57600080fd5b505af1158015610993573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e0154905163cd6dc68760e01b81526001600160a01b03909116915063cd6dc687906109d99030908b90600401614a72565b600060405180830381600087803b1580156109f357600080fd5b505af1158015610a07573d6000803e3d6000fd5b50505050610a136127aa565b6001600160a01b031663c7bbb113606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015610a6f57600080fd5b505afa158015610a83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610aa79190810190613c9b565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b158015610ae057600080fd5b505afa158015610af4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b189190810190613c9b565b896040518463ffffffff1660e01b8152600401610b3793929190614a57565b600060405180830381600087803b158015610b5157600080fd5b505af1158015610b65573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e81015460019091015491516001600160a01b03918216935091169089907f85b5516a17ce775661a4b967b1fb30c852678f6598d86d9f3c99b7b60ff2d0ce90610bc4908b90614aac565b60405180910390a450506033548114610bef5760405162461bcd60e51b815260040161055690614c99565b5050505050565b610bfe610cc6565b15610c1b5760405162461bcd60e51b815260040161055690614ca9565b610c2785858585612824565b610c2f612326565b6001600160a01b031663a734f06e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c6757600080fd5b505afa158015610c7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c9f9190810190613c9b565b606780546001600160a01b0319166001600160a01b03929092169190911790555050505050565b600080604051610cd5906149e2565b6040519081900390205492915050565b8160016000828152606d60205260409020600e0154600160a01b900460ff166003811115610d0f57fe5b1480610d41575060026000828152606d60205260409020600e0154600160a01b900460ff166003811115610d3f57fe5b145b610d5d5760405162461bcd60e51b815260040161055690614b59565b610d65610cc6565b610d815760405162461bcd60e51b815260040161055690614c79565b610d8961249a565b15610da65760405162461bcd60e51b815260040161055690614ba9565b606a546001600160a01b0316610dbb81612514565b15610dd85760405162461bcd60e51b815260040161055690614af9565b6000848152606d60205260409020600101546001600160a01b03868116911614610e145760405162461bcd60e51b815260040161055690614b39565b823414610e335760405162461bcd60e51b815260040161055690614b49565b60003411610e535760405162461bcd60e51b815260040161055690614c29565b610e5d8484612975565b846001600160a01b0316847feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c85604051610e979190614aac565b60405180910390a35050505050565b6069546001600160a01b031681565b6000818152606d60205260408120600b810154600c90910154610edd9163ffffffff6129ce16565b90505b919050565b60665481565b610ef3613a2b565b610edd826129f3565b60685481565b610f0a610cc6565b610f265760405162461bcd60e51b815260040161055690614c79565b610f2e612326565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401610f599190614a06565b60006040518083038186803b158015610f7157600080fd5b505afa158015610f85573d6000803e3d6000fd5b50505050610f9b816001600160a01b0316612bcf565b610fb75760405162461bcd60e51b815260040161055690614c39565b60695460408051808201909152601b81527f4e45575f4f5241434c455f4d5553545f42455f50524f5649444544000000000060208201526001600160a01b039091169061100d908290849063ffffffff612c0b16565b606980546001600160a01b0319166001600160a01b03848116918217909255604051909183169033907ff51f0fffc8121ee3747e0536c487d894894cdba960ccfb4ab385a88d51b16fed90600090a45050565b606b546001600160a01b031681565b600061107961249a565b806110945750606a54611094906001600160a01b0316612514565b806110c6575060026000838152606d60205260409020600e0154600160a01b900460ff1660038111156110c357fe5b14155b156110d357506000610ee0565b6000828152606d6020526040812060088101546006909101549091426110ff848463ffffffff6129ce16565b10905080156111145760019350505050610ee0565b6000858152606d60205260409020600e01546001600160a01b031680156111b157806001600160a01b031663415dfa5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561116e57600080fd5b505afa158015611182573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111a69190810190613db5565b945050505050610ee0565b6111ba86612660565b606001519695505050505050565b606a54604080516334f293ed60e11b815290516000926001600160a01b0316916369e527da916004808301926020929190829003018186803b15801561120d57600080fd5b505afa158015611221573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112459190810190613c9b565b905090565b8060016000828152606d60205260409020600e0154600160a01b900460ff16600381111561127457fe5b14806112a6575060026000828152606d60205260409020600e0154600160a01b900460ff1660038111156112a457fe5b145b6112c25760405162461bcd60e51b815260040161055690614b59565b6112ca610cc6565b6112e65760405162461bcd60e51b815260040161055690614c79565b6112ee61249a565b1561130b5760405162461bcd60e51b815260040161055690614ba9565b606a546001600160a01b031661132081612514565b1561133d5760405162461bcd60e51b815260040161055690614af9565b603380546001908101918290556000858152606d6020526040902001546001600160a01b031633146113815760405162461bcd60e51b815260040161055690614c59565b600085116113a15760405162461bcd60e51b815260040161055690614b99565b6113a9613a2b565b6113b285612660565b604081015181519192506000916113ce9163ffffffff61259916565b9050868110156113f05760405162461bcd60e51b815260040161055690614be9565b6113fb868833612c34565b336001600160a01b0316867f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd41896040516114359190614aac565b60405180910390a350506033548114610bef5760405162461bcd60e51b815260040161055690614c99565b600054610100900460ff16806114795750611479612cb5565b80611487575060005460ff16155b6114a35760405162461bcd60e51b815260040161055690614c09565b600054610100900460ff161580156114ce576000805460ff1961ff0019909116610100171660011790555b600160335580156114e5576000805461ff00191690555b50565b60006114f2612326565b6001600160a01b031663269012a0611508612326565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561154057600080fd5b505afa158015611554573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115789190810190613df1565b6001600160a01b03166308b04f626040518163ffffffff1660e01b815260040160206040518083038186803b1580156115b057600080fd5b505afa1580156115c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115e89190810190613dd3565b6040518263ffffffff1660e01b81526004016116049190614aac565b60206040518083038186803b15801561161c57600080fd5b505afa158015611630573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116549190810190613dd3565b6000838152606d602052604090206004015410159050919050565b611677613a2b565b610edd82612660565b606a546001600160a01b031681565b611697610cc6565b6116b35760405162461bcd60e51b815260040161055690614c79565b6116bb61249a565b156116d85760405162461bcd60e51b815260040161055690614ba9565b6116e56020850185613c7d565b336001600160a01b0382161461170d5760405162461bcd60e51b815260040161055690614c49565b61171c36869003860186613e7b565b6000611726612326565b6001600160a01b031663269012a061173c612326565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561177457600080fd5b505afa158015611788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117ac9190810190613df1565b6001600160a01b031663cc44cadb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156117e457600080fd5b505afa1580156117f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061181c9190810190613dd3565b6040518263ffffffff1660e01b81526004016118389190614aac565b60206040518083038186803b15801561185057600080fd5b505afa158015611864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118889190810190613dd3565b90508160a001518110156118ae5760405162461bcd60e51b815260040161055690614ad9565b60006118b8612326565b6001600160a01b03166369ff7744606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561191457600080fd5b505afa158015611928573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061194c9190810190613c9b565b85608001516040518363ffffffff1660e01b815260040161196e929190614a72565b60206040518083038186803b15801561198657600080fd5b505afa15801561199a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119be9190810190613db5565b905080156119de5760405162461bcd60e51b815260040161055690614b09565b6119eb8360800151612cbb565b611a075760405162461bcd60e51b815260040161055690614c69565b843414611a265760405162461bcd60e51b815260040161055690614b49565b6000611a3061302b565b606b5460405163064e5d4960e01b8152919250600091829182916001600160a01b039091169063064e5d4990611a6e908f908f908f90600401614cc7565b606060405180830381600087803b158015611a8857600080fd5b505af1158015611a9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ac09190810190613ed6565b91945092509050611ae284611ada368f90038f018f613e7b565b858585613045565b6000858152606d6020908152604091829020835181558382015180516001830180546001600160a01b03199081166001600160a01b0393841617909155938201516002840180548616918316919091179055818501516003808501919091556060808401516004860155608080850151600587015560a0948501516006870155968801516007860155870151600885015594860151600984015590850151600a83015560c0850151600b83015560e0850151600c830155610100850151600d830155610120850151600e83018054909416911617808355610140850151919391929160ff60a01b1990911690600160a01b908490811115611bdf57fe5b02179055506101609190910151600e9091018054911515600160a81b0260ff60a81b199092169190911790553415611c1b57611c1b8434612975565b606c6000611c2c60208f018f613c7d565b6001600160a01b031681526020808201929092526040016000908120805460018101825590825291902001849055611c7684611c6d368f90038f018f613e7b565b85858534613294565b505050505050505050505050565b606a546040805163155594ab60e31b815290516000926001600160a01b03169163aaaca558916004808301926020929190829003018186803b15801561120d57600080fd5b6067546001600160a01b031681565b606a54604080516361aeb27560e11b815290516000926001600160a01b03169163c35d64ea916004808301926020929190829003018186803b15801561120d57600080fd5b8060026000828152606d60205260409020600e0154600160a01b900460ff166003811115611d4757fe5b14611d645760405162461bcd60e51b815260040161055690614b89565b611d6c610cc6565b611d885760405162461bcd60e51b815260040161055690614c79565b611d9061249a565b15611dad5760405162461bcd60e51b815260040161055690614ba9565b606a546001600160a01b0316611dc281612514565b15611ddf5760405162461bcd60e51b815260040161055690614af9565b6033805460010190819055611df2613a2b565b611dfb856129f3565b90508060600151611e1e5760405162461bcd60e51b815260040161055690614b79565b6000858152606d60205260409020600e01805460ff60a01b1916600360a01b1760ff60a81b1916600160a81b1790558051611e5b9086903361335f565b606a5460408083015190516382f7b02760e01b81526001600160a01b03909216916382f7b02791611e90913390600401614cf7565b600060405180830381600087803b158015611eaa57600080fd5b505af1158015611ebe573d6000803e3d6000fd5b5050506000868152606d6020526040908190206001015483518483015192516001600160a01b03909216935088927f9950a0562c02382e2e840daa73082d5be7660ce37601f28fa4c84089c11e8a0692611f1b9233929091614a14565b60405180910390a3506033548114611f455760405162461bcd60e51b815260040161055690614c99565b50505050565b8060026000828152606d60205260409020600e0154600160a01b900460ff166003811115611f7557fe5b14611f925760405162461bcd60e51b815260040161055690614b89565b611f9a610cc6565b611fb65760405162461bcd60e51b815260040161055690614c79565b611fbe61249a565b15611fdb5760405162461bcd60e51b815260040161055690614ba9565b606a546001600160a01b0316611ff081612514565b1561200d5760405162461bcd60e51b815260040161055690614af9565b6033805460010190819055846120355760405162461bcd60e51b815260040161055690614ae9565b84600061204186610eb5565b90508181101561204f578091505b61205f818363ffffffff61259916565b905061206b8683613402565b8061210f576000868152606d60205260409020600e8101805460ff60a01b1916600360a01b17905560098101546001909101546120b490889083906001600160a01b0316612c34565b6000878152606d6020526040908190206001015490516001600160a01b039091169088907f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd4190612105908590614aac565b60405180910390a3505b606a5460405163acb7081560e01b81526001600160a01b039091169063acb70815906121419085903390600401614cf7565b600060405180830381600087803b15801561215b57600080fd5b505af115801561216f573d6000803e3d6000fd5b5050505061217b6127aa565b6001600160a01b03166362e269ef606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156121d757600080fd5b505afa1580156121eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061220f9190810190613c9b565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b15801561224857600080fd5b505afa15801561225c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122809190810190613c9b565b856040518463ffffffff1660e01b815260040161229f93929190614a57565b600060405180830381600087803b1580156122b957600080fd5b505af11580156122cd573d6000803e3d6000fd5b5050506000878152606d6020526040908190206001015490516001600160a01b03909116915087907f20a1f2ec363af45dc5ee7d9d622f2dd68b52501c382126c7f04b53663c4c69bf9061143590869033908790614d12565b6000806000604051612337906149ed565b604051908190039020549250505090565b606d602090815260009182526040918290208054835160c08101855260018301546001600160a01b03908116825260028401548116948201949094526003830154948101949094526004820154606085015260058201546080850152600682015460a0850152600782015460088301546009840154600a850154600b860154600c870154600d880154600e9098015496999895979496939592949193909281169060ff600160a01b8204811691600160a81b9004168c565b606c602052816000526040600020818154811061241957fe5b90600052602060002001600091509150505481565b6001600160a01b0381166000908152606c602090815260409182902080548351818402810184019094528084526060939283018282801561248e57602002820191906000526020600020905b81548152602001906001019080831161247a575b50505050509050919050565b60006124a4612326565b6001600160a01b031663b187bd266040518163ffffffff1660e01b815260040160206040518083038186803b1580156124dc57600080fd5b505afa1580156124f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112459190810190613db5565b600061251e612326565b6001600160a01b0316633b668321836040518263ffffffff1660e01b815260040161254991906149f8565b60206040518083038186803b15801561256157600080fd5b505afa158015612575573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610edd9190810190613db5565b60006125db83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506134be565b90505b92915050565b6000826125f3575060006125de565b8282028284828161260057fe5b04146125db5760405162461bcd60e51b815260040161055690614bc9565b60006125db83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506134ef565b612668613a2b565b6000828152606d6020526040812060090154908061268585613526565b604080516080810182528681526020810193909352820181905293909311606084015250909392505050565b60006126bb612326565b6001600160a01b031663bdd1daaa6040518163ffffffff1660e01b815260040160206040518083038186803b1580156126f357600080fd5b505afa158015612707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061272b9190810190613df1565b6001600160a01b0316634614874e30846040518363ffffffff1660e01b8152600401612758929190614a72565b602060405180830381600087803b15801561277257600080fd5b505af1158015612786573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610edd9190810190613c9b565b60006127b4612326565b6001600160a01b0316631390f8d76040518163ffffffff1660e01b815260040160206040518083038186803b1580156127ec57600080fd5b505afa158015612800573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112459190810190613df1565b61282c610cc6565b156128495760405162461bcd60e51b815260040161055690614ca9565b60408051808201909152601681527550524f564944455f4f5241434c455f4144445245535360501b6020820152612890906001600160a01b0386169063ffffffff61354a16565b60408051808201909152601c81527f50524f564944455f4c454e44494e475f504f4f4c5f414444524553530000000060208201526128de906001600160a01b0385169063ffffffff61354a16565b60408051808201909152601b81527f50524f56494445445f4c4f414e5f5445524d535f414444524553530000000000602082015261292c906001600160a01b0384169063ffffffff61354a16565b61293581613572565b50606980546001600160a01b039485166001600160a01b031991821617909155606a805493851693821693909317909255606b8054919093169116179055565b606654612988908263ffffffff6129ce16565b6066556000828152606d60205260409020600901546129ad908263ffffffff6129ce16565b6000928352606d602052604090922060098101929092555042600a90910155565b6000828201838110156125db5760405162461bcd60e51b815260040161055690614b29565b6129fb613a2b565b6000828152606d602052604081206009015490612a16612326565b6001600160a01b031663269012a0612a2c612326565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b158015612a6457600080fd5b505afa158015612a78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612a9c9190810190613df1565b6001600160a01b0316631139087a6040518163ffffffff1660e01b815260040160206040518083038186803b158015612ad457600080fd5b505afa158015612ae8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b0c9190810190613dd3565b6040518263ffffffff1660e01b8152600401612b289190614aac565b60206040518083038186803b158015612b4057600080fd5b505afa158015612b54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b789190810190613dd3565b90506000612b8583613624565b60408051608081018252858152602081018390529192508101612bb4612710610884858763ffffffff6125e416565b8152602001612bc28761106f565b1515905295945050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590612c0357508115155b949350505050565b612c15838361375e565b8190611f455760405162461bcd60e51b81526004016105569190614ac8565b606654612c47908363ffffffff61259916565b6066556000838152606d6020526040902060090154612c6c908363ffffffff61259916565b6000848152606d60205260408082206009019290925590516001600160a01b0383169184156108fc02918591818181858888f19350505050158015611f45573d6000803e3d6000fd5b303b1590565b600080612cc6612326565b6001600160a01b031663dc21a6a06040518163ffffffff1660e01b815260040160206040518083038186803b158015612cfe57600080fd5b505afa158015612d12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d369190810190613df1565b6001600160a01b0316631fb7cec9606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612d9257600080fd5b505afa158015612da6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612dca9190810190613c9b565b6067546040516001600160e01b031960e085901b168152612df892916001600160a01b031690600401614a3c565b60206040518083038186803b158015612e1057600080fd5b505afa158015612e24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612e489190810190613c9b565b90506001600160a01b038116612e705760405162461bcd60e51b815260040161055690614c19565b604051632319178560e11b81526000906001600160a01b038316906346322f0a90612eae906b14dd5c1c1b1e551bd119589d60a21b90600401614aac565b60206040518083038186803b158015612ec657600080fd5b505afa158015612eda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612efe9190810190613dd3565b90506000612f0a6127aa565b6001600160a01b031663db63323e606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612f6657600080fd5b505afa158015612f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612f9e9190810190613c9b565b6067546040516001600160e01b031960e085901b168152612fce92916001600160a01b0316908a90600401614a57565b60206040518083038186803b158015612fe657600080fd5b505afa158015612ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061301e9190810190613dd3565b9190911115949350505050565b60685461303f81600163ffffffff6129ce16565b60685590565b61304d613a55565b6000613057612326565b6001600160a01b031663269012a061306d612326565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156130a557600080fd5b505afa1580156130b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506130dd9190810190613df1565b6001600160a01b031663e00a46156040518163ffffffff1660e01b815260040160206040518083038186803b15801561311557600080fd5b505afa158015613129573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061314d9190810190613dd3565b6040518263ffffffff1660e01b81526004016131699190614aac565b60206040518083038186803b15801561318157600080fd5b505afa158015613195573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506131b99190810190613dd3565b905060006131cd428363ffffffff6129ce16565b90506040518061018001604052808981526020016040518060c001604052808a600001516001600160a01b031681526020018a602001516001600160a01b031681526020018981526020018881526020018781526020018a60a00151815250815260200182815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681526020016001600381111561327e57fe5b8152600060209091015298975050505050505050565b84602001516001600160a01b031685600001516001600160a01b0316877f0358f509931cba53bbb6a94b7f05a5178220a0c7ddb54b1a1722df9e6ed6aa098787878b60a00151606d60008f815260200190815260200160002060070154604051613302959493929190614de5565b60405180910390a480156133575784600001516001600160a01b0316867feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c8360405161334e9190614aac565b60405180910390a35b505050505050565b6000838152606d60205260409020600e01546001600160a01b0316156133f2576000838152606d602052604090819020600e0154905163df8de3e760e01b81526001600160a01b039091169063df8de3e7906133bf908490600401614a06565b600060405180830381600087803b1580156133d957600080fd5b505af11580156133ed573d6000803e3d6000fd5b505050505b6133fd838383612c34565b505050565b6000828152606d60205260409020600b0154811115613485576000828152606d60205260409020600b0154819061344090829063ffffffff61259916565b6000848152606d60205260408120600b810191909155600c015490915061346d908263ffffffff61259916565b6000848152606d60205260409020600c0155506134ba565b6000828152606d60205260409020600b01546134a7908263ffffffff61259916565b6000838152606d60205260409020600b01555b5050565b600081848411156134e25760405162461bcd60e51b81526004016105569190614ac8565b50508183035b9392505050565b600081836135105760405162461bcd60e51b81526004016105569190614ac8565b50600083858161351c57fe5b0495945050505050565b600080600061353484613770565b90508061354082613819565b9250925050915091565b6135538261390f565b81906133fd5760405162461bcd60e51b81526004016105569190614ac8565b61357a610cc6565b156135975760405162461bcd60e51b815260040161055690614ca9565b60408051808201909152601981527f53455454494e47535f4d5553545f42455f50524f56494445440000000000000060208201526135e5906001600160a01b0383169063ffffffff61354a16565b6135f7816001600160a01b0316612bcf565b6136135760405162461bcd60e51b815260040161055690614b69565b61361b61391d565b6114e58161393b565b6000806136be606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561367857600080fd5b505afa15801561368c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506136b09190810190613c9b565b6001600160a01b03166139aa565b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b15801561371057600080fd5b505afa158015613724573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506137489190810190613dd3565b9050612c0381610884868563ffffffff6125e416565b6001600160a01b039081169116141590565b6000818152606d60205260408120600e0154600160a01b900460ff1681600182600381111561379b57fe5b14156137b957506000838152606d60205260409020600501546137e8565b60028260038111156137c757fe5b14156137dd576137d684610eb5565b90506137e8565b600092505050610ee0565b6000848152606d6020526040902060040154613810612710610884848463ffffffff6125e416565b95945050505050565b60008061386d606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561367857600080fd5b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b1580156138bf57600080fd5b505afa1580156138d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506138f79190810190613dd3565b9050600061381083610884878563ffffffff6125e416565b6001600160a01b0316151590565b600060405161392b906149e2565b6040519081900390206001905550565b613954613946612326565b6001600160a01b031661390f565b1561395e576114e5565b613970816001600160a01b0316612bcf565b61398c5760405162461bcd60e51b815260040161055690614b69565b600060405161399a906149ed565b6040519081900390208290555050565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156139e657600080fd5b505afa1580156139fa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613a1e9190810190613f19565b60ff16600a0a9392505050565b60405180608001604052806000815260200160008152602001600081526020016000151581525090565b60405180610180016040528060008152602001613a70613ad0565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006003811115613ac357fe5b8152600060209091015290565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b80356125de81614f33565b80516125de81614f33565b60008083601f840112613b4057600080fd5b50813567ffffffffffffffff811115613b5857600080fd5b60208301915083610140820283011115613b7157600080fd5b9250929050565b80516125de81614f47565b80356125de81614f50565b80516125de81614f50565b80516125de81614f59565b600060e08284031215613bb657600080fd5b50919050565b600060e08284031215613bce57600080fd5b613bd860e0614e31565b90506000613be68484613b18565b8252506020613bf784848301613b18565b6020830152506040613c0b84828501613b18565b6040830152506060613c1f84828501613b83565b6060830152506080613c3384828501613b83565b60808301525060a0613c4784828501613b83565b60a08301525060c0613c5b84828501613b83565b60c08301525092915050565b80356125de81614f62565b80516125de81614f62565b600060208284031215613c8f57600080fd5b6000612c038484613b18565b600060208284031215613cad57600080fd5b6000612c038484613b23565b600080600080600060a08688031215613cd157600080fd5b6000613cdd8888613b18565b9550506020613cee88828901613b18565b9450506040613cff88828901613b18565b9350506060613d1088828901613b18565b9250506080613d2188828901613b18565b9150509295509295909350565b60008060408385031215613d4157600080fd5b6000613d4d8585613b18565b9250506020613d5e85828601613b83565b9150509250929050565b600080600060608486031215613d7d57600080fd5b6000613d898686613b18565b9350506020613d9a86828701613b83565b9250506040613dab86828701613b83565b9150509250925092565b600060208284031215613dc757600080fd5b6000612c038484613b78565b600060208284031215613de557600080fd5b6000612c038484613b8e565b600060208284031215613e0357600080fd5b6000612c038484613b99565b6000806000806101208587031215613e2657600080fd5b6000613e328787613ba4565b94505060e085013567ffffffffffffffff811115613e4f57600080fd5b613e5b87828801613b2e565b9350935050610100613e6f87828801613b83565b91505092959194509250565b600060e08284031215613e8d57600080fd5b6000612c038484613bbc565b600060208284031215613eab57600080fd5b6000612c038484613b83565b60008060408385031215613eca57600080fd5b6000613d4d8585613b83565b600080600060608486031215613eeb57600080fd5b6000613ef78686613b8e565b9350506020613f0886828701613b8e565b9250506040613dab86828701613b8e565b600060208284031215613f2b57600080fd5b6000612c038484613c72565b6000613f438383614845565b50506101400190565b6000613f588383614027565b505060200190565b613f6981614edd565b82525050565b613f6981614ea6565b6000613f848385614e6c565b9350613f8f82614e58565b8060005b85811015613fc557613fa58284614e93565b613faf8882613f37565b9750613fba83614e65565b925050600101613f93565b509495945050505050565b6000613fdb82614e61565b613fe58185614e6c565b9350613ff083614e5b565b8060005b83811015613fc55781516140088882613f4c565b975061401383614e5b565b925050600101613ff4565b613f6981614eb1565b613f6981614e58565b613f6981614eb6565b613f6981614ee8565b600061404d82614e61565b6140578185614e6c565b9350614067818560208601614ef3565b61407081614f1f565b9093019392505050565b6000614087601d83614e6c565b7f4455524154494f4e5f455843454544535f4d41585f4455524154494f4e000000815260200192915050565b60006140c0601c83610ee0565b7f54496e697469616c697a61626c652e6973496e697469616c697a6564000000008152601c0192915050565b60006140f9601583614e6c565b74105353d5539517d59053155157d491545552549151605a1b815260200192915050565b600061412a601683614e6c565b7513115391125391d7d413d3d317d254d7d4105554d15160521b815260200192915050565b600061415c601983614e6c565b7f414d4f554e545f455843454544535f4d41585f414d4f554e5400000000000000815260200192915050565b6000614195601183614e6c565b7013505617d313d05397d15610d151511151607a1b815260200192915050565b60006141c2601b83614e6c565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b60006141fb601983614e6c565b7f424f52524f5745525f4c4f414e5f49445f4d49534d4154434800000000000000815260200192915050565b6000614234601483614e6c565b73125390d3d4949150d517d1551217d05353d5539560621b815260200192915050565b6000614264601683614e6c565b751313d05397d393d517d050d512559157d3d497d4d15560521b815260200192915050565b6000614296601b83614e6c565b7f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000815260200192915050565b60006142cf601783614e6c565b7f444f45534e545f4e4545445f4c49515549444154494f4e000000000000000000815260200192915050565b6000614308600f83614e6c565b6e4c4f414e5f4e4f545f41435449564560881b815260200192915050565b6000614333601483614e6c565b7343414e4e4f545f57495448445241575f5a45524f60601b815260200192915050565b6000614363601283614e6c565b71141310551193d49357d254d7d4105554d15160721b815260200192915050565b6000614391601883614e6c565b7f4d4f52455f434f4c4c41544552414c5f52455155495245440000000000000000815260200192915050565b60006143ca602183614e6c565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b600061440d601d83614e6c565b7f434f4c4c41544552414c5f4445504f53495445445f524543454e544c59000000815260200192915050565b6000614446601a83614e6c565b7f434f4c4c41544552414c5f414d4f554e545f544f4f5f48494748000000000000815260200192915050565b600061447f601283614e6c565b711313d05397d511549354d7d156141254915160721b815260200192915050565b60006144ad602e83614e6c565b7f436f6e747261637420696e7374616e63652068617320616c726561647920626581526d195b881a5b9a5d1a585b1a5e995960921b602082015260400192915050565b60006144fd601883614e6c565b7f41544d5f4e4f545f464f554e445f464f525f4d41524b45540000000000000000815260200192915050565b6000614536601383614e6c565b7243414e4e4f545f4445504f5349545f5a45524f60681b815260200192915050565b6000614565601e83614e6c565b7f4f5241434c455f4d5553545f434f4e54524143545f4e4f545f454d5054590000815260200192915050565b600061459e601783614e6c565b7f424f52524f5745525f4d5553545f42455f53454e444552000000000000000000815260200192915050565b60006145d7601683614e6c565b7521a0a62622a92fa227a2a9a72a2fa7aba72fa627a0a760511b815260200192915050565b6000614609601883610ee0565b7f426173655570677261646561626c652e73657474696e67730000000000000000815260180192915050565b6000614642601a83614e6c565b7f535550504c595f544f5f444542545f455843454544535f4d4158000000000000815260200192915050565b600061467b601883614e6c565b7f434f4e54524143545f4e4f545f494e495449414c495a45440000000000000000815260200192915050565b60006146b4600c83614e6c565b6b1313d05397d393d517d4d15560a21b815260200192915050565b60006146dc601f83614e6c565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b6000614715601c83614e6c565b7f434f4e54524143545f414c52454144595f494e495449414c495a454400000000815260200192915050565b805160808301906147528482614027565b5060208201516147656020850182614027565b5060408201516147786040850182614027565b506060820151611f45606085018261401e565b60e082016147998280614e75565b6147a38482613f6f565b506147b16020830183614e75565b6147be6020850182613f6f565b506147cc6040830183614e75565b6147d96040850182613f6f565b506147e76060830183614e84565b6147f46060850182614027565b506148026080830183614e84565b61480f6080850182614027565b5061481d60a0830183614e84565b61482a60a0850182614027565b5061483860c0830183614e84565b611f4560c0850182614027565b61014082016148548280614e75565b61485e8482613f6f565b5061486c6020830183614e75565b6148796020850182613f6f565b506148876040830183614e84565b6148946040850182614027565b506148a26060830183614e84565b6148af6060850182614027565b506148bd6080830183614e84565b6148ca6080850182614027565b506148d860a0830183614e84565b6148e560a0850182614027565b506148f360c0830183614e93565b611f4560c0850182614970565b805160c08301906149118482613f6f565b5060208201516149246020850182613f6f565b5060408201516149376040850182614027565b50606082015161494a6060850182614027565b50608082015161495d6080850182614027565b5060a0820151611f4560a0850182614027565b6080820161497e8280614e84565b6149888482614027565b506149966020830183614e97565b6149a360208501826149d9565b506149b16040830183614e84565b6149be6040850182614027565b506149cc6060830183614e84565b611f456060850182614027565b613f6981614ed7565b60006125de826140b3565b60006125de826145fc565b602081016125de8284613f6f565b602081016125de8284613f60565b60608101614a228286613f60565b614a2f6020830185614027565b612c036040830184614027565b60408101614a4a8285613f6f565b6134e86020830184613f6f565b60608101614a658286613f6f565b614a2f6020830185613f6f565b60408101614a808285613f6f565b6134e86020830184614027565b602080825281016125db8184613fd0565b602081016125de828461401e565b602081016125de8284614027565b602081016125de8284614030565b602080825281016125db8184614042565b60208082528101610edd8161407a565b60208082528101610edd816140ec565b60208082528101610edd8161411d565b60208082528101610edd8161414f565b60208082528101610edd81614188565b60208082528101610edd816141b5565b60208082528101610edd816141ee565b60208082528101610edd81614227565b60208082528101610edd81614257565b60208082528101610edd81614289565b60208082528101610edd816142c2565b60208082528101610edd816142fb565b60208082528101610edd81614326565b60208082528101610edd81614356565b60208082528101610edd81614384565b60208082528101610edd816143bd565b60208082528101610edd81614400565b60208082528101610edd81614439565b60208082528101610edd81614472565b60208082528101610edd816144a0565b60208082528101610edd816144f0565b60208082528101610edd81614529565b60208082528101610edd81614558565b60208082528101610edd81614591565b60208082528101610edd816145ca565b60208082528101610edd81614635565b60208082528101610edd8161466e565b60208082528101610edd816146a7565b60208082528101610edd816146cf565b60208082528101610edd81614708565b608081016125de8284614741565b6101008101614cd6828661478b565b81810360e0830152613810818486613f78565b60408101614a4a8285614027565b60408101614d058285614027565b6134e86020830184613f60565b60608101614d208286614027565b614a2f6020830185613f60565b6102208101614d3c828f614027565b614d49602083018e614900565b614d5660e083018d614027565b614d6461010083018c614027565b614d7261012083018b614027565b614d8061014083018a614027565b614d8e610160830189614027565b614d9c610180830188614027565b614daa6101a0830187614027565b614db86101c0830186613f6f565b614dc66101e0830185614039565b614dd461020083018461401e565b9d9c50505050505050505050505050565b60a08101614df38288614027565b614e006020830187614027565b614e0d6040830186614027565b614e1a6060830185614027565b614e276080830184614027565b9695505050505050565b60405181810167ffffffffffffffff81118282101715614e5057600080fd5b604052919050565b90565b60200190565b5190565b6101400190565b90815260200190565b60006125db6020840184613b18565b60006125db6020840184613b83565b5090565b60006125db6020840184613c67565b6000610edd82614ecb565b151590565b6000610edd82614ea6565b80610ee081614f29565b6001600160a01b031690565b60ff1690565b6000610edd82614eb6565b6000610edd82614ec1565b60005b83811015614f0e578181015183820152602001614ef6565b83811115611f455750506000910152565b601f01601f191690565b600481106114e557fe5b614f3c81614ea6565b81146114e557600080fd5b614f3c81614eb1565b614f3c81614e58565b614f3c81614eb6565b614f3c81614ed756fea365627a7a723158207220a6cb35c502d93c0bbfbb40a69c69c57aaee0d97c2c363e92821a380aace56c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "1347:3945:16:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:3945:16;;;;;;;",
  "deployedSourceMap": "1347:3945:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8764:2098:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8764:2098:22;;;;;;;;:::i;:::-;;4250:442:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4250:442:16;;;;;;;;:::i;1241:169:29:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1241:169:29;;;:::i;:::-;;;;;;;;;;;;;;;;1577:700:16;;;;;;;;;:::i;2960:26:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2960:26:22;;;:::i;:::-;;;;;;;;15327:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15327:151:22;;;;;;;;:::i;:::-;;;;;;;;2783:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2783:30:22;;;:::i;13942:203::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13942:203:22;;;;;;;;:::i;:::-;;;;;;;;2925:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2925:28:22;;;:::i;16180:518::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;16180:518:22;;;;;;;;:::i;3039:53::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3039:53:22;;;:::i;:::-;;;;;;;;14356:761;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14356:761:22;;;;;;;;:::i;6568:94::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6568:94:22;;;:::i;7398:1019::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7398:1019:22;;;;;;;;:::i;769:214:135:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;769:214:135;;;:::i;6873:272:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6873:272:22;;;;;;;;:::i;15702:184::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15702:184:22;;;;;;;;:::i;2993:39::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2993:39:22;;;:::i;2568:1259:16:-;;;;;;;;;:::i;6138:106:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6138:106:22;;;:::i;2820:30::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2820:30:22;;;:::i;6359:94::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6359:94:22;;;:::i;12711:1003::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12711:1003:22;;;;;;;;:::i;11049:1510::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11049:1510:22;;;;;;;;:::i;1259:263:11:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1259:263:11;;;:::i;3156:50:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3156:50:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3099;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3099:50:22;;;;;;;;:::i;5877:132::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5877:132:22;;;;;;;;:::i;:::-;;;;;;;;8764:2098;8861:6;4194:32;4170:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4170:20:22;;;;:56;;;;;;;;;4162:81;;;;-1:-1:-1;;;4162:81:22;;;;;;;;;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;8958:11:22;;-1:-1:-1;;;;;8958:11:22;2718:33:7;8958:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:135;:18;;1409:1;1392:18;;;;;;;:13;9014::22;;;:5;:13;;;;;:23;:32;-1:-1:-1;;;;;9014:32:22;3484:10;:22;;3476:58;;;;-1:-1:-1;;;3476:58:22;;;;;;;;;9083:13;;;;:5;:13;;;;;:37;;;:53;-1:-1:-1;9083:53:22;9062:117;;;;-1:-1:-1;;;9062:117:22;;;;;;;;;9198:13;;;;:5;:13;;;;;:25;;;9227:3;-1:-1:-1;9198:32:22;9190:63;;;;-1:-1:-1;;;9190:63:22;;;;;;;;;9335:174;9364:10;:8;:10::i;:::-;-1:-1:-1;;;;;9364:34:22;;9424:10;:8;:10::i;:::-;-1:-1:-1;;;;;9424:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9424:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9424:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9424:19:22;;;;;;;;;-1:-1:-1;;;;;9424:43:22;;:45;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9424:45:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9424:45:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9424:45:22;;;;;;;;;9364:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9364:127:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9364:127:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9364:127:22;;;;;;;;;9335:3;;:174;:7;:174;:::i;:::-;9285:13;;;;:5;:13;;;;;:30;;;:224;;9264:300;;;;-1:-1:-1;;;9264:300:22;;;;;;;;;9575:13;;;;:5;:13;;;;;:28;;;:43;;;9628:27;;;:42;;;9794:32;;;;9739:36;;;;;9709:188;;2431:8;;9709:149;;2695:5;;9709:149;;9794:32;9709:67;;9606:12;;9709:67;:29;:67;:::i;:::-;:84;:118;:84;:118;:::i;:::-;:135;:149;:135;:149;:::i;:188::-;9680:13;;;;:5;:13;;;;;:26;;;:217;;;;9907:20;;:53;;-1:-1:-1;;;;9907:53:22;-1:-1:-1;;;9907:53:22;;;10043;;:::i;:::-;10099:48;10131:6;10099:18;:48::i;:::-;10043:104;;10167:14;:37;;;10166:38;10158:75;;;;-1:-1:-1;;;10158:75:22;;;;;;;;;10244:13;;;;:5;:13;;;;;10274:3;10244:27;;;;:33;10310:21;10250:6;10310:13;:21::i;:::-;10287:13;;;;:5;:13;;;;;;;:20;;:44;;-1:-1:-1;;;;;;10287:44:22;-1:-1:-1;;;;;10287:44:22;;;;;;;;10403:11;;:58;;-1:-1:-1;;;10403:58:22;;:11;;;;:22;;:58;;10426:12;;10440:20;;10403:58;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10403:58:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;10488:13:22;;;;:5;:13;;;;;;;:20;;;10472:71;;-1:-1:-1;;;10472:71:22;;-1:-1:-1;;;;;10488:20:22;;;;-1:-1:-1;10472:48:22;;:71;;10529:4;;10494:6;;10472:71;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10472:71:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10472:71:22;;;;10554:10;:8;:10::i;:::-;-1:-1:-1;;;;;10554:25:22;;10593:11;;;;;;;;;-1:-1:-1;;;;;10593:11:22;-1:-1:-1;;;;;10593:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10593:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10593:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10593:26:22;;;;;;;;;10633:4;-1:-1:-1;;;;;10633:20:22;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10633:22:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10633:22:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10633:22:22;;;;;;;;;10669:12;10554:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10554:137:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;10799:13:22;;;;:5;:13;;;;;;;:20;;;;;10753:23;;;:32;10707:148;;-1:-1:-1;;;;;10799:20:22;;;;-1:-1:-1;10753:32:22;;;10805:6;;10707:148;;;;10833:12;;10707:148;;;;;;;;;;3544:1;1466::135;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:135;;;;;;;;;2788:1:7;2391;8764:2098:22;;;:::o;4250:442:16:-;706:13:29;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:29;;;;;;;;;4479:153:16;4504:18;4536;4568:25;4607:15;4479:11;:153::i;:::-;4661:10;:8;:10::i;:::-;-1:-1:-1;;;;;4661:22:16;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4661:24:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4661:24:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4661:24:16;;;;;;;;;4643:15;:42;;-1:-1:-1;;;;;;4643:42:16;-1:-1:-1;;;;;4643:42:16;;;;;;;;;;-1:-1:-1;;;;;4250:442:16:o;1241:169:29:-;1285:10;1307:12;421:55;;;;;;;;;;;;;;;1383:11;;1360:44;-1:-1:-1;;1360:44:29:o;1577:700:16:-;1741:6;4581:32:22;4557:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4557:20:22;;;;:56;;;;;;;;;:130;;;-1:-1:-1;4657:30:22;4633:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4633:20:22;;;;:54;;;;;;;;;4557:130;4536:199;;;;-1:-1:-1;;;4536:199:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;1838:11:16;;-1:-1:-1;;;;;1838:11:16;2718:33:7;1838:11:16;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1887:13:16;;;;:5;:13;;;;;:23;;:32;-1:-1:-1;;;;;1887:44:16;;;:32;;:44;1866:116;;;;-1:-1:-1;;;1866:116:16;;;;;;;;;2013:6;2000:9;:19;1992:52;;;;-1:-1:-1;;;1992:52:16;;;;;;;;;2074:1;2062:9;:13;2054:45;;;;-1:-1:-1;;;2054:45:16;;;;;;;;;2177:32;2194:6;2202;2177:16;:32::i;:::-;2253:8;-1:-1:-1;;;;;2225:45:16;2245:6;2225:45;2263:6;2225:45;;;;;;;;;;;;;;;2391:1:7;1577:700:16;;;;:::o;2960:26:22:-;;;-1:-1:-1;;;;;2960:26:22;;:::o;15327:151::-;15386:7;15443:13;;;:5;:13;;;;;:27;;;;15412:26;;;;;:59;;;:30;:59;:::i;:::-;15405:66;;15327:151;;;;:::o;2783:30::-;;;;:::o;13942:203::-;14033:55;;:::i;:::-;14111:27;14131:6;14111:19;:27::i;2925:28::-;;;;:::o;16180:518::-;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;964:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;964:28:11;;993:10;964:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;964:40:11;;;;16368:27:22;:14;-1:-1:-1;;;;;16368:25:22;;:27::i;:::-;16360:70;;;;-1:-1:-1;;;16360:70:22;;;;;;;;;16473:11;;16495:79;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16473:11:22;;;;16495:79;;16473:11;;16528:14;;16495:79;:32;:79;:::i;:::-;16585:11;:28;;-1:-1:-1;;;;;;16585:28:22;-1:-1:-1;;;;;16585:28:22;;;;;;;;;16629:62;;16585:28;;16629:62;;;16648:10;;16629:62;;-1:-1:-1;;16629:62:22;1014:1:11;16180:518:22;:::o;3039:53::-;;;-1:-1:-1;;;;;3039:53:22;;:::o;14356:761::-;14419:4;14452:11;:9;:11::i;:::-;:62;;;-1:-1:-1;14501:11:22;;14479:35;;-1:-1:-1;;;;;14501:11:22;14479:13;:35::i;:::-;14452:132;;;-1:-1:-1;14554:30:22;14530:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;14530:20:22;;;;:54;;;;;;;;;;14452:132;14435:197;;;-1:-1:-1;14616:5:22;14609:12;;14435:197;14642:17;14662:13;;;:5;:13;;;;;:27;;;;14718:32;;;;;14662:27;;14803:3;14777:23;14662:27;14718:32;14777:23;:13;:23;:::i;:::-;:29;14760:46;;14820:9;14816:51;;;14852:4;14845:11;;;;;;;14816:51;14877:21;14901:13;;;:5;:13;;;;;:20;;;-1:-1:-1;;;;;14901:20:22;14935:29;;14931:113;;15003:13;-1:-1:-1;;;;;14987:44:22;;:46;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14987:46:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14987:46:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14987:46:22;;;;;;;;;14980:53;;;;;;;;14931:113;15061:26;15080:6;15061:18;:26::i;:::-;:49;;;;14356:761;-1:-1:-1;;;;;;14356:761:22:o;6568:94::-;6635:11;;:20;;;-1:-1:-1;;;6635:20:22;;;;6609:7;;-1:-1:-1;;;;;6635:11:22;;:18;;:20;;;;;;;;;;;;;;:11;:20;;;5:2:-1;;;;30:1;27;20:12;5:2;6635:20:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6635:20:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6635:20:22;;;;;;;;;6628:27;;6568:94;:::o;7398:1019::-;7499:6;4581:32;4557:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4557:20:22;;;;:56;;;;;;;;;:130;;;-1:-1:-1;4657:30:22;4633:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4633:20:22;;;;:54;;;;;;;;;4557:130;4536:199;;;;-1:-1:-1;;;4536:199:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;7596:11:22;;-1:-1:-1;;;;;7596:11:22;2718:33:7;7596:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:135;:18;;1409:1;1392:18;;;;;;;-1:-1:-1;7669:13:22;;;:5;:13;;;;;:23;:32;-1:-1:-1;;;;;7669:32:22;7655:10;:46;7647:81;;;;-1:-1:-1;;;7647:81:22;;;;;;;;;7755:1;7746:6;:10;7738:43;;;;-1:-1:-1;;;7738:43:22;;;;;;;;;7836:53;;:::i;:::-;7892:48;7924:6;7892:18;:48::i;:::-;8100:39;;;;8057:25;;7836:104;;-1:-1:-1;8030:24:22;;8057:92;;;:29;:92;:::i;:::-;8030:119;;8187:6;8167:16;:26;;8159:65;;;;-1:-1:-1;;;8159:65:22;;;;;;;;;8302:45;8320:6;8328;8336:10;8302:17;:45::i;:::-;8391:10;-1:-1:-1;;;;;8363:47:22;8383:6;8363:47;8403:6;8363:47;;;;;;;;;;;;;;;1466:1:135;;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:135;;;;;;;;769:214;1024:12:136;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:136;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:136;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:136;;;;;1225:18;1213:4;1225:18;;;1170:80;975:1:135;959:13;:17;1264:55:136;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:136;;;1264:55;769:214:135;:::o;6873:272:22:-;6935:4;7025:10;:8;:10::i;:::-;-1:-1:-1;;;;;7025:34:22;;7077:10;:8;:10::i;:::-;-1:-1:-1;;;;;7077:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7077:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7077:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7077:19:22;;;;;;;;;-1:-1:-1;;;;;7077:45:22;;:47;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7077:47:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7077:47:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7077:47:22;;;;;;;;;7025:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7025:113:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7025:113:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7025:113:22;;;;;;;;;6970:13;;;;:5;:13;;;;;:39;;;:168;;;-1:-1:-1;6873:272:22;;;:::o;15702:184::-;15792:38;;:::i;:::-;15853:26;15872:6;15853:18;:26::i;2993:39::-;;;-1:-1:-1;;;;;2993:39:22;;:::o;2568:1259:16:-;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;2844:16:16;;;;:7;:16;;;3484:10:22;-1:-1:-1;;;;;3484:22:22;;;3476:58;;;;-1:-1:-1;;;3476:58:22;;;;;;;;;5074:679;;;;;;;2891:7:16;5074:679:22;;;5159:23;5185:10;:8;:10::i;:::-;-1:-1:-1;;;;;5185:34:22;;5233:10;:8;:10::i;:::-;-1:-1:-1;;;;;5233:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5233:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5233:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5233:19:22;;;;;;;;;-1:-1:-1;;;;;5233:49:22;;:51;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5233:51:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5233:51:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5233:51:22;;;;;;;;;5185:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5185:109:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5185:109:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5185:109:22;;;;;;;;;5159:135;;5331:11;:20;;;5312:15;:39;;5304:81;;;;-1:-1:-1;;;5304:81:22;;;;;;;;;5396:25;5424:10;:8;:10::i;:::-;-1:-1:-1;;;;;5424:31:22;;5469:11;;;;;;;;;-1:-1:-1;;;;;5469:11:22;-1:-1:-1;;;;;5469:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5469:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5469:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5469:26:22;;;;;;;;;5509:11;:18;;;5424:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5424:113:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5424:113:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5424:113:22;;;;;;;;;5396:141;;5556:20;5555:21;5547:59;;;;-1:-1:-1;;;5547:59:22;;;;;;;;;5638:45;5664:11;:18;;;5638:25;:45::i;:::-;5617:118;;;;-1:-1:-1;;;5617:118:22;;;;;;;;;2935:16:16;2922:9;:29;2914:62;;;;-1:-1:-1;;;2914:62:16;;;;;;;;;2987:14;3004:24;:22;:24::i;:::-;3157:18;;:53;;-1:-1:-1;;;3157:53:16;;2987:41;;-1:-1:-1;3052:20:16;;;;;;-1:-1:-1;;;;;3157:18:16;;;;:33;;:53;;3191:7;;3200:9;;;;3157:53;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3157:53:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3157:53:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3157:53:16;;;;;;;;;3038:172;;-1:-1:-1;3038:172:16;-1:-1:-1;3038:172:16;-1:-1:-1;3237:143:16;3261:6;3237:143;;;;;;;3281:7;3237:143;;;3302:12;3328:15;3357:13;3237:10;:143::i;:::-;3221:13;;;;:5;:13;;;;;;;;;:159;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3221:159:16;;;-1:-1:-1;;;;;3221:159:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;;:159;;;-1:-1:-1;;;;3221:159:16;;;;-1:-1:-1;;;3221:159:16;;;;;;;;;;;;;;-1:-1:-1;3221:159:16;;;;;;;;;;;;;;;-1:-1:-1;;;3221:159:16;-1:-1:-1;;;;3221:159:16;;;;;;;;;3395:9;:13;3391:151;;3496:35;3513:6;3521:9;3496:16;:35::i;:::-;3552:13;:31;3566:16;;;;:7;:16;;;-1:-1:-1;;;;;3552:31:16;;;;;;;;;;;;;-1:-1:-1;3552:31:16;;;27:10:-1;;39:1;23:18;;45:23;;3552:44:16;;;;;;;;;;3607:213;3589:6;3607:213;;;;;;;3698:7;3607:213;;;3719:12;3745:15;3774:13;3801:9;3607:57;:213::i;:::-;5745:1:22;;;;3544;;;2391::7;2568:1259:16;;;;:::o;6138:106:22:-;6211:11;;:26;;;-1:-1:-1;;;6211:26:22;;;;6185:7;;-1:-1:-1;;;;;6211:11:22;;:24;;:26;;;;;;;;;;;;;;:11;:26;;;5:2:-1;;;;30:1;27;20:12;2820:30:22;;;-1:-1:-1;;;;;2820:30:22;;:::o;6359:94::-;6426:11;;:20;;;-1:-1:-1;;;6426:20:22;;;;6400:7;;-1:-1:-1;;;;;6426:11:22;;:18;;:20;;;;;;;;;;;;;;:11;:20;;;5:2:-1;;;;30:1;27;20:12;12711:1003:22;12786:6;3830:30;3806:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;3806:20:22;;;;:54;;;;;;;;;3785:116;;;;-1:-1:-1;;;3785:116:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;12883:11:22;;-1:-1:-1;;;;;12883:11:22;2718:33:7;12883:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:135;:18;;1409:1;1392:18;;;;;12934:55:22;;:::i;:::-;12992:49;13025:6;12992:19;:49::i;:::-;12934:107;;13059:15;:26;;;13051:62;;;;-1:-1:-1;;;13051:62:22;;;;;;;;;13124:13;;;;:5;:13;;;;;:20;;:53;;-1:-1:-1;;;;13124:53:22;-1:-1:-1;;;13124:53:22;-1:-1:-1;;;;13187:31:22;-1:-1:-1;;;13187:31:22;;;13305:26;;13285:59;;13124:13;;13333:10;13285:11;:59::i;:::-;13413:11;;13444:33;;;;;13413:77;;-1:-1:-1;;;13413:77:22;;-1:-1:-1;;;;;13413:11:22;;;;:30;;:77;;13479:10;;13413:77;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13413:77:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;13554:13:22;;;;:5;:13;;;;;;;:23;;:32;13624:26;;13664:33;;;;13506:201;;-1:-1:-1;;;;;13554:32:22;;;;-1:-1:-1;13560:6:22;;13506:201;;;;13600:10;;13624:26;;13506:201;;;;;;;;;;1466:1:135;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:135;;;;;;;;;2788:1:7;2391;12711:1003:22;;:::o;11049:1510::-;11132:6;3830:30;3806:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;3806:20:22;;;;:54;;;;;;;;;3785:116;;;;-1:-1:-1;;;3785:116:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;11229:11:22;;-1:-1:-1;;;;;11229:11:22;2718:33:7;11229:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:135;:18;;1409:1;1392:18;;;;;11288:10:22;11280:44;;;;-1:-1:-1;;;11280:44:22;;;;;;;;;11398:6;11382:13;11434:20;11447:6;11434:12;:20::i;:::-;11414:40;;11480:5;11468:9;:17;11464:65;;;11509:9;11501:17;;11464:65;11597:20;:9;11611:5;11597:20;:13;:20;:::i;:::-;11585:32;;11627:23;11636:6;11644:5;11627:8;:23::i;:::-;11738:14;11734:416;;11768:13;;;;:5;:13;;;;;:20;;;:53;;-1:-1:-1;;;;11768:53:22;-1:-1:-1;;;11768:53:22;;;11863:24;;;;-1:-1:-1;11945:23:22;;;:32;11901:77;;11768:13;;11863:24;;-1:-1:-1;;;;;11945:32:22;11901:17;:77::i;:::-;12059:13;;;;:5;:13;;;;;;;:23;;:32;11998:141;;-1:-1:-1;;;;;12059:32:22;;;;12065:6;;11998:141;;;;12109:16;;11998:141;;;;;;;;;;11734:416;;12204:11;;:36;;-1:-1:-1;;;12204:36:22;;-1:-1:-1;;;;;12204:11:22;;;;:17;;:36;;12222:5;;12229:10;;12204:36;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12204:36:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12204:36:22;;;;12251:10;:8;:10::i;:::-;-1:-1:-1;;;;;12251:28:22;;12293:11;;;;;;;;;-1:-1:-1;;;;;12293:11:22;-1:-1:-1;;;;;12293:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12293:26:22;;;;;;;;;12333:4;-1:-1:-1;;;;;12333:20:22;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12333:22:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12333:22:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12333:22:22;;;;;;;;;12369:5;12251:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12251:133:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;12444:13:22;;;;:5;:13;;;;;;;:23;;:32;12400:152;;-1:-1:-1;;;;;12444:32:22;;;;-1:-1:-1;12450:6:22;;12400:152;;;;12490:5;;12509:10;;12533:9;;12400:152;;1259:263:11;1300:17;1329:23;1363:12;555:37;;;;;;;;;;;;;;;1443:11;;-1:-1:-1;;;1259:263:11;:::o;3156:50:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3156:50:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3156:50:22;;;;;-1:-1:-1;;;3156:50:22;;;;:::o;3099:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5877:132::-;-1:-1:-1;;;;;5979:23:22;;;;;;:13;:23;;;;;;;;;5972:30;;;;;;;;;;;;;;;;;5944:16;;5972:30;;;5979:23;5972:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5877:132;;;:::o;4524:95:7:-;4568:4;4591:10;:8;:10::i;:::-;-1:-1:-1;;;;;4591:19:7;;:21;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4591:21:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4591:21:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4591:21:7;;;;;;;;4237:138;4304:4;4327:10;:8;:10::i;:::-;-1:-1:-1;;;;;4327:28:7;;4356:11;4327:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4327:41:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4327:41:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4327:41:7;;;;;;;;1274:134:126;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;;:::o;2159:459::-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:126;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:126;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;17847:624:22:-;17938:38;;:::i;:::-;17992:18;18013:13;;;:5;:13;;;;;:24;;;;17992:18;18103:54;18019:6;18103:24;:54::i;:::-;18186:278;;;;;;;;;;;;;;;;;;;;;;;18418:31;;;;18186:278;;;;-1:-1:-1;18186:278:22;;17847:624;-1:-1:-1;;;17847:624:22:o;28918:152::-;28975:7;29001:10;:8;:10::i;:::-;-1:-1:-1;;;;;29001:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29001:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29001:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;29001:26:22;;;;;;;;;-1:-1:-1;;;;;29001:39:22;;29049:4;29056:6;29001:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29001:62:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29001:62:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;29001:62:22;;;;;;;;4625:115:7;4668:21;4708:10;:8;:10::i;:::-;-1:-1:-1;;;;;4708:23:7;;:25;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4708:25:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4708:25:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4708:25:7;;;;;;;;19636:669:22;706:13:29;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:29;;;;;;;;;19849:60:22;;;;;;;;;;;;-1:-1:-1;;;19849:60:22;;;;;;-1:-1:-1;;;;;19849:34:22;;;:60;:34;:60;:::i;:::-;19919:66;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19919:34:22;;;:66;:34;:66;:::i;:::-;19995:72;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19995:41:22;;;:72;:41;:72;:::i;:::-;20078:28;20090:15;20078:11;:28::i;:::-;-1:-1:-1;20117:11:22;:32;;-1:-1:-1;;;;;20117:32:22;;;-1:-1:-1;;;;;;20117:32:22;;;;;;;20159:11;:54;;;;;;;;;;;;;;;20223:18;:75;;;;;;;;;;;19636:669::o;20507:248::-;20602:15;;:27;;20622:6;20602:27;:19;:27;:::i;:::-;20584:15;:45;20666:13;;;;:5;:13;;;;;:24;;;:36;;20695:6;20666:36;:28;:36;:::i;:::-;20639:13;;;;:5;:13;;;;;;:24;;;:63;;;;-1:-1:-1;20745:3:22;20712:30;;;;:36;20507:248::o;834:176:126:-;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:126;;;;;;;;24159:731:22;24251:55;;:::i;:::-;24322:18;24343:13;;;:5;:13;;;;;:24;;;;24405:10;:8;:10::i;:::-;-1:-1:-1;;;;;24405:34:22;;24453:10;:8;:10::i;:::-;-1:-1:-1;;;;;24453:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24453:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24453:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;24453:19:22;;;;;;;;;-1:-1:-1;;;;;24453:47:22;;:49;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24453:49:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24453:49:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;24453:49:22;;;;;;;;;24405:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24405:107:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24405:107:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;24405:107:22;;;;;;;;;24377:135;;24522:26;24551:30;24570:10;24551:18;:30::i;:::-;24609:274;;;;;;;;;;;;;;;;;24522:59;;-1:-1:-1;24609:274:22;;24813:59;2695:5;24813:41;24522:59;24836:17;24813:41;:22;:41;:::i;:59::-;24609:274;;;;24668:24;24685:6;24668:16;:24::i;:::-;24609:274;;;;24591:292;24159:731;-1:-1:-1;;;;;24159:731:22:o;686:610:133:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:133;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:133:o;2749:183:105:-;2890:25;2903:4;2909:5;2890:12;:25::i;:::-;2917:7;2882:43;;;;;-1:-1:-1;;;2882:43:105;;;;;;;;;4994:296:16;5147:15;;:27;;5167:6;5147:27;:19;:27;:::i;:::-;5129:15;:45;5211:13;;;;:5;:13;;;;;:24;;;:36;;5240:6;5211:36;:28;:36;:::i;:::-;5184:13;;;;:5;:13;;;;;;:24;;:63;;;;5257:26;;-1:-1:-1;;;;;5257:18:16;;;:26;;;;;5276:6;;5257:26;5184:13;5257:26;5276:6;5257:18;:26;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;1409:498:136;1820:4;1864:17;1895:7;1409:498;:::o;27947:759:22:-;28052:4;28072:27;28102:10;:8;:10::i;:::-;-1:-1:-1;;;;;28102:22:22;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28102:24:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28102:24:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;28102:24:22;;;;;;;;;-1:-1:-1;;;;;28102:40:22;;28156:11;;;;;;;;;-1:-1:-1;;;;;28156:11:22;-1:-1:-1;;;;;28156:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28156:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28156:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;28156:26:22;;;;;;;;;28196:15;;28102:119;;-1:-1:-1;;;;;;28102:119:22;;;;;;;;;;-1:-1:-1;;;;;28196:15:22;;28102:119;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28102:119:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28102:119:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;28102:119:22;;;;;;;;;28072:149;-1:-1:-1;;;;;;28239:35:22;;28231:72;;;;-1:-1:-1;;;28231:72:22;;;;;;;;;28347:102;;-1:-1:-1;;;28347:102:22;;28313:31;;-1:-1:-1;;;;;28347:74:22;;;;;:102;;-1:-1:-1;;;28422:26:22;28347:102;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28347:102:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28347:102:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;28347:102:22;;;;;;;;;28313:136;;28459:33;28495:10;:8;:10::i;:::-;-1:-1:-1;;;;;28495:29:22;;28538:11;;;;;;;;;-1:-1:-1;;;;;28538:11:22;-1:-1:-1;;;;;28538:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28538:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28538:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;28538:26:22;;;;;;;;;28578:15;;28495:135;;-1:-1:-1;;;;;;28495:135:22;;;;;;;;;;-1:-1:-1;;;;;28578:15:22;;28607:13;;28495:135;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28495:135:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28495:135:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;28495:135:22;;;;;;;;;28647:52;;;;;;27947:759;-1:-1:-1;;;;27947:759:22:o;25043:159::-;25136:13;;25175:20;25136:13;25193:1;25175:20;:17;:20;:::i;:::-;25159:13;:36;25043:159;:::o;25703:1282::-;25919:24;;:::i;:::-;25955:23;25981:10;:8;:10::i;:::-;-1:-1:-1;;;;;25981:34:22;;26029:10;:8;:10::i;:::-;-1:-1:-1;;;;;26029:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26029:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26029:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26029:19:22;;;;;;;;;-1:-1:-1;;;;;26029:45:22;;:47;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26029:47:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26029:47:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26029:47:22;;;;;;;;;25981:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25981:105:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25981:105:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25981:105:22;;;;;;;;;25955:131;-1:-1:-1;26096:19:22;26118:24;:3;25955:131;26118:24;:7;:24;:::i;:::-;26096:46;;26171:807;;;;;;;;26211:6;26171:807;;;;26246:340;;;;;;;;26301:7;:16;;;-1:-1:-1;;;;;26246:340:22;;;;;26350:7;:17;;;-1:-1:-1;;;;;26246:340:22;;;;;26403:12;26246:340;;;;26454:15;26246:340;;;;26506:13;26246:340;;;;26551:7;:16;;;26246:340;;;26171:807;;;;26617:11;26171:807;;;;26661:1;26171:807;;;;26692:1;26171:807;;;;26729:1;26171:807;;;;26763:1;26171:807;;;;26796:1;26171:807;;;;26831:1;26171:807;;;;26866:3;-1:-1:-1;;;;;26171:807:22;;;;;26896:32;26171:807;;;;;;;;;;26958:5;26171:807;;;;;26152:826;25703:1282;-1:-1:-1;;;;;;;;25703:1282:22:o;26991:684::-;27364:7;:17;;;-1:-1:-1;;;;;27288:254:22;27334:7;:16;;;-1:-1:-1;;;;;27288:254:22;27314:6;27288:254;27395:12;27421:15;27450:13;27477:7;:16;;;27507:5;:13;27513:6;27507:13;;;;;;;;;;;:25;;;27288:254;;;;;;;;;;;;;;;;;;;27556:19;;27552:117;;27624:7;:16;;;-1:-1:-1;;;;;27596:62:22;27616:6;27596:62;27642:15;27596:62;;;;;;;;;;;;;;;27552:117;26991:684;;;;;;:::o;16907:317::-;17072:3;17040:13;;;:5;:13;;;;;:20;;;-1:-1:-1;;;;;17040:20:22;:36;17036:127;;17108:13;;;;:5;:13;;;;;;;:20;;;17092:60;;-1:-1:-1;;;17092:60:22;;-1:-1:-1;;;;;17108:20:22;;;;17092:49;;:60;;17142:9;;17092:60;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17092:60:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17092:60:22;;;;17036:127;17173:44;17191:6;17199;17207:9;17173:17;:44::i;:::-;16907:317;;;:::o;20985:461::-;21065:13;;;;:5;:13;;;;;:27;;;21057:35;;21053:387;;;21108:17;21173:13;;;:5;:13;;;;;:27;;;21128:5;;21159:42;;21128:5;;21159:42;:13;:42;:::i;:::-;21245:1;21215:13;;;:5;:13;;;;;:27;;;:31;;;;21289:26;;;21147:54;;-1:-1:-1;21289:41:22;;21147:54;21289:41;:30;:41;:::i;:::-;21260:13;;;;:5;:13;;;;;:26;;:70;-1:-1:-1;21053:387:22;;;21391:13;;;;:5;:13;;;;;:27;;;:38;;21423:5;21391:38;:31;:38;:::i;:::-;21361:13;;;;:5;:13;;;;;:27;;:68;21053:387;20985:461;;:::o;1732:187:126:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:126;;;;;;;;;;-1:-1:-1;;1888:5:126;;;1732:187;;;;;;:::o;3718:338::-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:126;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:126:o;18753:460:22:-;18850:29;18881:32;18981:29;19013:36;19042:6;19013:28;:36::i;:::-;18981:68;;19141:21;19164:41;19183:21;19164:18;:41::i;:::-;19133:73;;;;;18753:460;;;:::o;1583:127:105:-;1677:16;1688:4;1677:10;:16::i;:::-;1695:7;1669:34;;;;;-1:-1:-1;;;1669:34:105;;;;;;;;;3702:292:7;706:13:29;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:29;;;;;;;;;3786:60:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3786:31:7;;;:60;:31;:60;:::i;:::-;3864:28;:15;-1:-1:-1;;;;;3864:26:7;;:28::i;:::-;3856:68;;;;-1:-1:-1;;;3856:68:7;;;;;;;;;3935:13;:11;:13::i;:::-;3958:29;3971:15;3958:12;:29::i;22552:485:22:-;22622:7;22722:26;22751:71;22765:11;;;;;;;;;-1:-1:-1;;;;;22765:11:22;-1:-1:-1;;;;;22765:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22765:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22765:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;22765:26:22;;;;;;;;;-1:-1:-1;;;;;22751:69:22;;:71::i;:::-;22722:100;;22832:31;22911:11;;;;;;;;;-1:-1:-1;;;;;22911:11:22;-1:-1:-1;;;;;22887:52:22;;:54;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22887:54:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22887:54:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;22887:54:22;;;;;;;;;22832:119;-1:-1:-1;22968:62:22;22832:119;22968:33;:9;22982:18;22968:33;:13;:33;:::i;1018:117:105:-;-1:-1:-1;;;;;1115:13:105;;;;;;;;1018:117::o;21661:655:22:-;21762:7;21825:13;;;:5;:13;;;;;:20;;;-1:-1:-1;;;21825:20:22;;;;21762:7;21904:32;21887:13;:49;;;;;;;;;21883:286;;;-1:-1:-1;21965:13:22;;;;:5;:13;;;;;:37;;;21883:286;;;22040:30;22023:13;:47;;;;;;;;;22019:150;;;22099:20;22112:6;22099:12;:20::i;:::-;22086:33;;22019:150;;;22157:1;22150:8;;;;;;22019:150;22178:23;22204:13;;;:5;:13;;;;;:39;;;22260:49;2695:5;22260:31;:10;22204:39;22260:31;:14;:31;:::i;:49::-;22253:56;21661:655;-1:-1:-1;;;;;21661:655:22:o;23294:637::-;23366:7;23555:26;23584:71;23598:11;;;;;;;;;-1:-1:-1;;;;;23598:11:22;-1:-1:-1;;;;;23598:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;23584:71:22;23555:100;;23665:31;23744:11;;;;;;;;;-1:-1:-1;;;;;23744:11:22;-1:-1:-1;;;;;23720:52:22;;:54;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23720:54:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23720:54:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;23720:54:22;;;;;;;;;23665:119;-1:-1:-1;23794:16:22;23813:86;23871:18;23813:40;:11;23665:119;23813:40;:15;:40;:::i;1288:108:105:-;-1:-1:-1;;;;;1368:21:105;;;;1288:108::o;1509:171:29:-;1551:12;421:55;;;;;;;;;;;;;;;1608:4;1645:19;;-1:-1:-1;1631:43:29:o;2374:410:11:-;2525:32;2533:10;:8;:10::i;:::-;-1:-1:-1;;;;;2525:30:11;;:32::i;:::-;2521:69;;;2573:7;;2521:69;2607:28;:15;-1:-1:-1;;;;;2607:26:11;;:28::i;:::-;2599:68;;;;-1:-1:-1;;;2599:68:11;;;;;;;;;2678:12;555:37;;;;;;;;;;;;;;;2739:29;;;-1:-1:-1;2725:53:11;:::o;710:155:107:-;777:7;796:14;813:4;-1:-1:-1;;;;;813:13:107;;:15;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;813:15:107;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;813:15:107;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;813:15:107;;;;;;;;;845:13;;514:2;845:13;;710:155;-1:-1:-1;;;710:155:107:o;1347:3945:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1347:3945:16;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;1347:3945:16;;;;;;-1:-1:-1;;;;;1347:3945:16;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;479:383;;;638:3;631:4;623:6;619:17;615:27;605:2;;656:1;653;646:12;605:2;-1:-1;676:20;;716:18;705:30;;702:2;;;748:1;745;738:12;702:2;782:4;774:6;770:17;758:29;;835:3;825:6;817;813:19;803:8;799:34;796:43;793:2;;;852:1;849;842:12;793:2;598:264;;;;;;870:128;945:13;;963:30;945:13;963:30;;1005:130;1072:20;;1097:33;1072:20;1097:33;;1142:134;1220:13;;1238:33;1220:13;1238:33;;1283:198;1393:13;;1411:65;1393:13;1411:65;;2244:164;;2360:3;2351:6;2346:3;2342:16;2338:26;2335:2;;;2377:1;2374;2367:12;2335:2;-1:-1;2396:6;2328:80;-1:-1;2328:80;2453:1245;;2572:4;2560:9;2555:3;2551:19;2547:30;2544:2;;;2590:1;2587;2580:12;2544:2;2608:20;2623:4;2608:20;;;2599:29;-1:-1;2682:1;2714:57;2767:3;2747:9;2714:57;;;2689:83;;-1:-1;2838:2;2871:49;2916:3;2892:22;;;2871:49;;;2864:4;2857:5;2853:16;2846:75;2793:139;2994:2;3027:49;3072:3;3063:6;3052:9;3048:22;3027:49;;;3020:4;3013:5;3009:16;3002:75;2942:146;3146:2;3179:49;3224:3;3215:6;3204:9;3200:22;3179:49;;;3172:4;3165:5;3161:16;3154:75;3098:142;3292:3;3326:49;3371:3;3362:6;3351:9;3347:22;3326:49;;;3319:4;3312:5;3308:16;3301:75;3250:137;3441:3;3475:49;3520:3;3511:6;3500:9;3496:22;3475:49;;;3468:4;3461:5;3457:16;3450:75;3397:139;3593:3;3627:49;3672:3;3663:6;3652:9;3648:22;3627:49;;;3620:4;3613:5;3609:16;3602:75;3546:142;2538:1160;;;;;3983:126;4048:20;;4073:31;4048:20;4073:31;;4116:130;4192:13;;4210:31;4192:13;4210:31;;4253:241;;4357:2;4345:9;4336:7;4332:23;4328:32;4325:2;;;4373:1;4370;4363:12;4325:2;4408:1;4425:53;4470:7;4450:9;4425:53;;4501:263;;4616:2;4604:9;4595:7;4591:23;4587:32;4584:2;;;4632:1;4629;4622:12;4584:2;4667:1;4684:64;4740:7;4720:9;4684:64;;5035:743;;;;;;5207:3;5195:9;5186:7;5182:23;5178:33;5175:2;;;5224:1;5221;5214:12;5175:2;5259:1;5276:53;5321:7;5301:9;5276:53;;;5266:63;;5238:97;5366:2;5384:53;5429:7;5420:6;5409:9;5405:22;5384:53;;;5374:63;;5345:98;5474:2;5492:53;5537:7;5528:6;5517:9;5513:22;5492:53;;;5482:63;;5453:98;5582:2;5600:53;5645:7;5636:6;5625:9;5621:22;5600:53;;;5590:63;;5561:98;5690:3;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;;;5699:63;;5669:99;5169:609;;;;;;;;;5785:366;;;5906:2;5894:9;5885:7;5881:23;5877:32;5874:2;;;5922:1;5919;5912:12;5874:2;5957:1;5974:53;6019:7;5999:9;5974:53;;;5964:63;;5936:97;6064:2;6082:53;6127:7;6118:6;6107:9;6103:22;6082:53;;;6072:63;;6043:98;5868:283;;;;;;6158:491;;;;6296:2;6284:9;6275:7;6271:23;6267:32;6264:2;;;6312:1;6309;6302:12;6264:2;6347:1;6364:53;6409:7;6389:9;6364:53;;;6354:63;;6326:97;6454:2;6472:53;6517:7;6508:6;6497:9;6493:22;6472:53;;;6462:63;;6433:98;6562:2;6580:53;6625:7;6616:6;6605:9;6601:22;6580:53;;;6570:63;;6541:98;6258:391;;;;;;6656:257;;6768:2;6756:9;6747:7;6743:23;6739:32;6736:2;;;6784:1;6781;6774:12;6736:2;6819:1;6836:61;6889:7;6869:9;6836:61;;6920:263;;7035:2;7023:9;7014:7;7010:23;7006:32;7003:2;;;7051:1;7048;7041:12;7003:2;7086:1;7103:64;7159:7;7139:9;7103:64;;7190:327;;7337:2;7325:9;7316:7;7312:23;7308:32;7305:2;;;7353:1;7350;7343:12;7305:2;7388:1;7405:96;7493:7;7473:9;7405:96;;8756:772;;;;;8990:3;8978:9;8969:7;8965:23;8961:33;8958:2;;;9007:1;9004;8997:12;8958:2;9042:1;9059:85;9136:7;9116:9;9059:85;;;9049:95;;9021:129;9209:3;9198:9;9194:19;9181:33;9234:18;9226:6;9223:30;9220:2;;;9266:1;9263;9256:12;9220:2;9294:109;9395:7;9386:6;9375:9;9371:22;9294:109;;;9284:119;;;;9160:249;9440:3;9459:53;9504:7;9495:6;9484:9;9480:22;9459:53;;;9449:63;;9419:99;8952:576;;;;;;;;9535:302;;9669:3;9657:9;9648:7;9644:23;9640:33;9637:2;;;9686:1;9683;9676:12;9637:2;9721:1;9738:83;9813:7;9793:9;9738:83;;9844:241;;9948:2;9936:9;9927:7;9923:23;9919:32;9916:2;;;9964:1;9961;9954:12;9916:2;9999:1;10016:53;10061:7;10041:9;10016:53;;10362:366;;;10483:2;10471:9;10462:7;10458:23;10454:32;10451:2;;;10499:1;10496;10489:12;10451:2;10534:1;10551:53;10596:7;10576:9;10551:53;;10735:535;;;;10884:2;10872:9;10863:7;10859:23;10855:32;10852:2;;;10900:1;10897;10890:12;10852:2;10935:1;10952:64;11008:7;10988:9;10952:64;;;10942:74;;10914:108;11053:2;11071:64;11127:7;11118:6;11107:9;11103:22;11071:64;;;11061:74;;11032:109;11172:2;11190:64;11246:7;11237:6;11226:9;11222:22;11190:64;;11277:259;;11390:2;11378:9;11369:7;11365:23;11361:32;11358:2;;;11406:1;11403;11396:12;11358:2;11441:1;11458:62;11512:7;11492:9;11458:62;;11544:291;;11687:106;11789:3;11781:6;11687:106;;;-1:-1;;11822:6;11813:16;;11680:155;11844:173;;11931:46;11973:3;11965:6;11931:46;;;-1:-1;;12006:4;11997:14;;11924:93;12025:142;12116:45;12155:5;12116:45;;;12111:3;12104:58;12098:69;;;12174:127;12263:32;12289:5;12263:32;;12619:891;;12829:113;12935:6;12930:3;12829:113;;;12822:120;;12963:87;13044:5;12963:87;;;13070:7;13098:1;13083:405;13108:6;13105:1;13102:13;13083:405;;;13169:71;13233:6;13224:7;13169:71;;;13254:119;13369:3;13354:13;13254:119;;;13247:126;;13390:91;13474:6;13390:91;;;13380:101;-1:-1;;13130:1;13123:9;13083:405;;;-1:-1;13501:3;;12809:701;-1:-1;;;;;12809:701;13549:690;;13694:54;13742:5;13694:54;;;13761:86;13840:6;13835:3;13761:86;;;13754:93;;13868:56;13918:5;13868:56;;;13944:7;13972:1;13957:260;13982:6;13979:1;13976:13;13957:260;;;14049:6;14043:13;14070:63;14129:3;14114:13;14070:63;;;14063:70;;14150:60;14203:6;14150:60;;;14140:70;-1:-1;;14004:1;13997:9;13957:260;;14247:94;14314:21;14329:5;14314:21;;14459:103;14532:24;14550:5;14532:24;;14689:186;14802:67;14863:5;14802:67;;15276:154;15373:51;15418:5;15373:51;;15437:347;;15549:39;15582:5;15549:39;;;15600:71;15664:6;15659:3;15600:71;;;15593:78;;15676:52;15721:6;15716:3;15709:4;15702:5;15698:16;15676:52;;;15749:29;15771:6;15749:29;;;15740:39;;;;15529:255;-1:-1;;;15529:255;15792:329;;15952:67;16016:2;16011:3;15952:67;;;16052:31;16032:52;;16112:2;16103:12;;15938:183;-1:-1;;15938:183;16130:364;;16308:85;16390:2;16385:3;16308:85;;;16426:30;16406:51;;16485:2;16476:12;;16294:200;-1:-1;;16294:200;16503:321;;16663:67;16727:2;16722:3;16663:67;;;-1:-1;;;16743:44;;16815:2;16806:12;;16649:175;-1:-1;;16649:175;16833:322;;16993:67;17057:2;17052:3;16993:67;;;-1:-1;;;17073:45;;17146:2;17137:12;;16979:176;-1:-1;;16979:176;17164:325;;17324:67;17388:2;17383:3;17324:67;;;17424:27;17404:48;;17480:2;17471:12;;17310:179;-1:-1;;17310:179;17498:317;;17658:67;17722:2;17717:3;17658:67;;;-1:-1;;;17738:40;;17806:2;17797:12;;17644:171;-1:-1;;17644:171;17824:327;;17984:67;18048:2;18043:3;17984:67;;;18084:29;18064:50;;18142:2;18133:12;;17970:181;-1:-1;;17970:181;18160:325;;18320:67;18384:2;18379:3;18320:67;;;18420:27;18400:48;;18476:2;18467:12;;18306:179;-1:-1;;18306:179;18494:320;;18654:67;18718:2;18713:3;18654:67;;;-1:-1;;;18734:43;;18805:2;18796:12;;18640:174;-1:-1;;18640:174;18823:322;;18983:67;19047:2;19042:3;18983:67;;;-1:-1;;;19063:45;;19136:2;19127:12;;18969:176;-1:-1;;18969:176;19154:327;;19314:67;19378:2;19373:3;19314:67;;;19414:29;19394:50;;19472:2;19463:12;;19300:181;-1:-1;;19300:181;19490:323;;19650:67;19714:2;19709:3;19650:67;;;19750:25;19730:46;;19804:2;19795:12;;19636:177;-1:-1;;19636:177;19822:315;;19982:67;20046:2;20041:3;19982:67;;;-1:-1;;;20062:38;;20128:2;20119:12;;19968:169;-1:-1;;19968:169;20146:320;;20306:67;20370:2;20365:3;20306:67;;;-1:-1;;;20386:43;;20457:2;20448:12;;20292:174;-1:-1;;20292:174;20475:318;;20635:67;20699:2;20694:3;20635:67;;;-1:-1;;;20715:41;;20784:2;20775:12;;20621:172;-1:-1;;20621:172;20802:324;;20962:67;21026:2;21021:3;20962:67;;;21062:26;21042:47;;21117:2;21108:12;;20948:178;-1:-1;;20948:178;21135:370;;21295:67;21359:2;21354:3;21295:67;;;21395:34;21375:55;;-1:-1;;;21459:2;21450:12;;21443:25;21496:2;21487:12;;21281:224;-1:-1;;21281:224;21514:329;;21674:67;21738:2;21733:3;21674:67;;;21774:31;21754:52;;21834:2;21825:12;;21660:183;-1:-1;;21660:183;21852:326;;22012:67;22076:2;22071:3;22012:67;;;22112:28;22092:49;;22169:2;22160:12;;21998:180;-1:-1;;21998:180;22187:318;;22347:67;22411:2;22406:3;22347:67;;;-1:-1;;;22427:41;;22496:2;22487:12;;22333:172;-1:-1;;22333:172;22514:383;;22674:67;22738:2;22733:3;22674:67;;;22774:34;22754:55;;-1:-1;;;22838:2;22829:12;;22822:38;22888:2;22879:12;;22660:237;-1:-1;;22660:237;22906:324;;23066:67;23130:2;23125:3;23066:67;;;23166:26;23146:47;;23221:2;23212:12;;23052:178;-1:-1;;23052:178;23239:319;;23399:67;23463:2;23458:3;23399:67;;;-1:-1;;;23479:42;;23549:2;23540:12;;23385:173;-1:-1;;23385:173;23567:330;;23727:67;23791:2;23786:3;23727:67;;;23827:32;23807:53;;23888:2;23879:12;;23713:184;-1:-1;;23713:184;23906:323;;24066:67;24130:2;24125:3;24066:67;;;24166:25;24146:46;;24220:2;24211:12;;24052:177;-1:-1;;24052:177;24238:322;;24398:67;24462:2;24457:3;24398:67;;;-1:-1;;;24478:45;;24551:2;24542:12;;24384:176;-1:-1;;24384:176;24569:360;;24747:85;24829:2;24824:3;24747:85;;;24865:26;24845:47;;24920:2;24911:12;;24733:196;-1:-1;;24733:196;24938:326;;25098:67;25162:2;25157:3;25098:67;;;25198:28;25178:49;;25255:2;25246:12;;25084:180;-1:-1;;25084:180;25273:324;;25433:67;25497:2;25492:3;25433:67;;;25533:26;25513:47;;25588:2;25579:12;;25419:178;-1:-1;;25419:178;25606:312;;25766:67;25830:2;25825:3;25766:67;;;-1:-1;;;25846:35;;25909:2;25900:12;;25752:166;-1:-1;;25752:166;25927:331;;26087:67;26151:2;26146:3;26087:67;;;26187:33;26167:54;;26249:2;26240:12;;26073:185;-1:-1;;26073:185;26267:328;;26427:67;26491:2;26486:3;26427:67;;;26527:30;26507:51;;26586:2;26577:12;;26413:182;-1:-1;;26413:182;26690:863;26929:23;;26857:4;26848:14;;;26958:63;26852:3;26929:23;26958:63;;;26877:150;27117:4;27110:5;27106:16;27100:23;27129:63;27186:4;27181:3;27177:14;27163:12;27129:63;;;27037:161;27291:4;27284:5;27280:16;27274:23;27303:63;27360:4;27355:3;27351:14;27337:12;27303:63;;;27208:164;27463:4;27456:5;27452:16;27446:23;27475:57;27526:4;27521:3;27517:14;27503:12;27475:57;;28572:1513;28727:4;28718:14;;28797:58;28842:5;;28797:58;;;28861:79;28929:3;28911:12;28861:79;;;28747:199;29007:50;29051:4;29044:5;29040:16;29033:5;29007:50;;;29063:63;29120:4;29115:3;29111:14;29097:12;29063:63;;;28956:176;29200:50;29244:4;29237:5;29233:16;29226:5;29200:50;;;29256:63;29313:4;29308:3;29304:14;29290:12;29256:63;;;29142:183;29389:50;29433:4;29426:5;29422:16;29415:5;29389:50;;;29445:63;29502:4;29497:3;29493:14;29479:12;29445:63;;;29335:179;29572:50;29616:4;29609:5;29605:16;29598:5;29572:50;;;29628:63;29685:4;29680:3;29676:14;29662:12;29628:63;;;29524:173;29757:50;29801:4;29794:5;29790:16;29783:5;29757:50;;;29813:63;29870:4;29865:3;29861:14;29847:12;29813:63;;;29707:175;29945:50;29989:4;29982:5;29978:16;29971:5;29945:50;;;30001:63;30058:4;30053:3;30049:14;30035:12;30001:63;;30167:1572;30310:6;30301:16;;30380:50;30417:5;;30380:50;;;30436:63;30488:3;30470:12;30436:63;;;30332:173;30573:50;30617:4;30610:5;30606:16;30599:5;30573:50;;;30629:63;30686:4;30681:3;30677:14;30663:12;30629:63;;;30515:183;30762:50;30806:4;30799:5;30795:16;30788:5;30762:50;;;30818:63;30875:4;30870:3;30866:14;30852:12;30818:63;;;30708:179;30951:50;30995:4;30988:5;30984:16;30977:5;30951:50;;;31007:63;31064:4;31059:3;31055:14;31041:12;31007:63;;;30897:179;31143:50;31187:4;31180:5;31176:16;31169:5;31143:50;;;31199:63;31256:4;31251:3;31247:14;31233:12;31199:63;;;31086:182;31333:50;31377:4;31370:5;31366:16;31359:5;31333:50;;;31389:63;31446:4;31441:3;31437:14;31423:12;31389:63;;;31278:180;31519:76;31589:4;31582:5;31578:16;31571:5;31519:76;;;31601:117;31712:4;31707:3;31703:14;31689:12;31601:117;;31815:1151;32030:23;;31960:4;31951:14;;;32059:79;31955:3;32030:23;32059:79;;;31980:164;32222:4;32215:5;32211:16;32205:23;32234:63;32291:4;32286:3;32282:14;32268:12;32234:63;;;32154:149;32384:4;32377:5;32373:16;32367:23;32396:63;32453:4;32448:3;32444:14;32430:12;32396:63;;;32313:152;32549:4;32542:5;32538:16;32532:23;32561:63;32618:4;32613:3;32609:14;32595:12;32561:63;;;32475:155;32712:4;32705:5;32701:16;32695:23;32724:63;32781:4;32776:3;32772:14;32758:12;32724:63;;;32640:153;32870:4;32863:5;32859:16;32853:23;32882:63;32939:4;32934:3;32930:14;32916:12;32882:63;;33042:878;33179:4;33170:14;;33252:50;33289:5;;33252:50;;;33308:63;33360:3;33342:12;33308:63;;;33199:178;33430:48;33472:4;33465:5;33461:16;33454:5;33430:48;;;33484:59;33537:4;33532:3;33528:14;33514:12;33484:59;;;33387:162;33602:50;33646:4;33639:5;33635:16;33628:5;33602:50;;;33658:63;33715:4;33710:3;33706:14;33692:12;33658:63;;;33559:168;33780:50;33824:4;33817:5;33813:16;33806:5;33780:50;;;33836:63;33893:4;33888:3;33884:14;33870:12;33836:63;;34157:97;34226:22;34242:5;34226:22;;34261:372;;34460:148;34604:3;34460:148;;34640:372;;34839:148;34983:3;34839:148;;35019:213;35137:2;35122:18;;35151:71;35126:9;35195:6;35151:71;;35239:229;35365:2;35350:18;;35379:79;35354:9;35431:6;35379:79;;35475:451;35657:2;35642:18;;35671:79;35646:9;35723:6;35671:79;;;35761:72;35829:2;35818:9;35814:18;35805:6;35761:72;;;35844;35912:2;35901:9;35897:18;35888:6;35844:72;;35933:324;36079:2;36064:18;;36093:71;36068:9;36137:6;36093:71;;;36175:72;36243:2;36232:9;36228:18;36219:6;36175:72;;36264:435;36438:2;36423:18;;36452:71;36427:9;36496:6;36452:71;;;36534:72;36602:2;36591:9;36587:18;36578:6;36534:72;;36706:324;36852:2;36837:18;;36866:71;36841:9;36910:6;36866:71;;;36948:72;37016:2;37005:9;37001:18;36992:6;36948:72;;37037:361;37205:2;37219:47;;;37190:18;;37280:108;37190:18;37374:6;37280:108;;37405:201;37517:2;37502:18;;37531:65;37506:9;37569:6;37531:65;;37613:213;37731:2;37716:18;;37745:71;37720:9;37789:6;37745:71;;37833:273;37981:2;37966:18;;37995:101;37970:9;38069:6;37995:101;;38681:301;38819:2;38833:47;;;38804:18;;38894:78;38804:18;38958:6;38894:78;;38989:407;39180:2;39194:47;;;39165:18;;39255:131;39165:18;39255:131;;39403:407;39594:2;39608:47;;;39579:18;;39669:131;39579:18;39669:131;;39817:407;40008:2;40022:47;;;39993:18;;40083:131;39993:18;40083:131;;40231:407;40422:2;40436:47;;;40407:18;;40497:131;40407:18;40497:131;;40645:407;40836:2;40850:47;;;40821:18;;40911:131;40821:18;40911:131;;41059:407;41250:2;41264:47;;;41235:18;;41325:131;41235:18;41325:131;;41473:407;41664:2;41678:47;;;41649:18;;41739:131;41649:18;41739:131;;41887:407;42078:2;42092:47;;;42063:18;;42153:131;42063:18;42153:131;;42301:407;42492:2;42506:47;;;42477:18;;42567:131;42477:18;42567:131;;42715:407;42906:2;42920:47;;;42891:18;;42981:131;42891:18;42981:131;;43129:407;43320:2;43334:47;;;43305:18;;43395:131;43305:18;43395:131;;43543:407;43734:2;43748:47;;;43719:18;;43809:131;43719:18;43809:131;;43957:407;44148:2;44162:47;;;44133:18;;44223:131;44133:18;44223:131;;44371:407;44562:2;44576:47;;;44547:18;;44637:131;44547:18;44637:131;;44785:407;44976:2;44990:47;;;44961:18;;45051:131;44961:18;45051:131;;45199:407;45390:2;45404:47;;;45375:18;;45465:131;45375:18;45465:131;;45613:407;45804:2;45818:47;;;45789:18;;45879:131;45789:18;45879:131;;46027:407;46218:2;46232:47;;;46203:18;;46293:131;46203:18;46293:131;;46441:407;46632:2;46646:47;;;46617:18;;46707:131;46617:18;46707:131;;46855:407;47046:2;47060:47;;;47031:18;;47121:131;47031:18;47121:131;;47269:407;47460:2;47474:47;;;47445:18;;47535:131;47445:18;47535:131;;47683:407;47874:2;47888:47;;;47859:18;;47949:131;47859:18;47949:131;;48097:407;48288:2;48302:47;;;48273:18;;48363:131;48273:18;48363:131;;48511:407;48702:2;48716:47;;;48687:18;;48777:131;48687:18;48777:131;;48925:407;49116:2;49130:47;;;49101:18;;49191:131;49101:18;49191:131;;49339:407;49530:2;49544:47;;;49515:18;;49605:131;49515:18;49605:131;;49753:407;49944:2;49958:47;;;49929:18;;50019:131;49929:18;50019:131;;50167:407;50358:2;50372:47;;;50343:18;;50433:131;50343:18;50433:131;;50581:407;50772:2;50786:47;;;50757:18;;50847:131;50757:18;50847:131;;50995:407;51186:2;51200:47;;;51171:18;;51261:131;51171:18;51261:131;;51409:362;51601:3;51586:19;;51616:145;51590:9;51734:6;51616:145;;52151:730;52475:3;52460:19;;52490:133;52464:9;52596:6;52490:133;;;52672:9;52666:4;52662:20;52656:3;52645:9;52641:19;52634:49;52697:174;52866:4;52857:6;52849;52697:174;;53108:324;53254:2;53239:18;;53268:71;53243:9;53312:6;53268:71;;53439:340;53593:2;53578:18;;53607:71;53582:9;53651:6;53607:71;;;53689:80;53765:2;53754:9;53750:18;53741:6;53689:80;;53786:451;53968:2;53953:18;;53982:71;53957:9;54026:6;53982:71;;;54064:80;54140:2;54129:9;54125:18;54116:6;54064:80;;54244:1569;54732:3;54717:19;;54747:71;54721:9;54791:6;54747:71;;;54829:124;54949:2;54938:9;54934:18;54925:6;54829:124;;;54964:73;55032:3;55021:9;55017:19;55008:6;54964:73;;;55048;55116:3;55105:9;55101:19;55092:6;55048:73;;;55132;55200:3;55189:9;55185:19;55176:6;55132:73;;;55216;55284:3;55273:9;55269:19;55260:6;55216:73;;;55300;55368:3;55357:9;55353:19;55344:6;55300:73;;;55384;55452:3;55441:9;55437:19;55428:6;55384:73;;;55468;55536:3;55525:9;55521:19;55512:6;55468:73;;;55552;55620:3;55609:9;55605:19;55596:6;55552:73;;;55636:88;55719:3;55708:9;55704:19;55694:7;55636:88;;;55735:68;55798:3;55787:9;55783:19;55773:7;55735:68;;;54703:1110;;;;;;;;;;;;;;;;55820:659;56050:3;56035:19;;56065:71;56039:9;56109:6;56065:71;;;56147:72;56215:2;56204:9;56200:18;56191:6;56147:72;;;56230;56298:2;56287:9;56283:18;56274:6;56230:72;;;56313;56381:2;56370:9;56366:18;56357:6;56313:72;;;56396:73;56464:3;56453:9;56449:19;56440:6;56396:73;;;56021:458;;;;;;;;;56486:256;56548:2;56542:9;56574:17;;;56649:18;56634:34;;56670:22;;;56631:62;56628:2;;;56706:1;56703;56696:12;56628:2;56722;56715:22;56526:216;;-1:-1;56526:216;56749:147;56866:3;56852:44;56903:151;57027:4;57018:14;;56975:79;57061:137;57164:12;;57135:63;57334:141;57463:6;57454:16;;57440:35;57598:205;57743:19;;;57792:4;57783:14;;57736:67;58325:119;;58399:39;58434:2;58429:3;58425:12;58420:3;58399:39;;58597:119;;58671:39;58706:2;58701:3;58697:12;58692:3;58671:39;;58725:112;-1:-1;58828:3;58812:25;59092:115;;59164:37;59197:2;59192:3;59188:12;59183:3;59164:37;;59215:91;;59277:24;59295:5;59277:24;;59419:85;59485:13;59478:21;;59461:43;59590:123;;59684:24;59702:5;59684:24;;60091:138;60169:5;60175:49;60169:5;60175:49;;60314:121;-1:-1;;;;;60376:54;;60359:76;60521:81;60592:4;60581:16;;60564:38;60609:129;;60696:37;60727:5;60696:37;;61756:138;;61849:40;61883:5;61849:40;;62145:268;62210:1;62217:101;62231:6;62228:1;62225:13;62217:101;;;62298:11;;;62292:18;62279:11;;;62272:39;62253:2;62246:10;62217:101;;;62333:6;62330:1;62327:13;62324:2;;;-1:-1;;62398:1;62380:16;;62373:27;62194:219;62421:97;62509:2;62489:14;-1:-1;;62485:28;;62469:49;62526:107;62611:1;62604:5;62601:12;62591:2;;62617:9;62640:117;62709:24;62727:5;62709:24;;;62702:5;62699:35;62689:2;;62748:1;62745;62738:12;62904:111;62970:21;62985:5;62970:21;;63022:117;63091:24;63109:5;63091:24;;63146:181;63247:56;63297:5;63247:56;;64106:113;64173:22;64189:5;64173:22;",
  "source": "pragma solidity 0.5.17;\npragma experimental ABIEncoderV2;\n\n// Contracts\nimport \"./LoansBase.sol\";\n\n/*****************************************************************************************************/\n/**                                             WARNING                                             **/\n/**                                  THIS CONTRACT IS UPGRADEABLE!                                  **/\n/**  ---------------------------------------------------------------------------------------------  **/\n/**  Do NOT change the order of or PREPEND any storage variables to this or new versions of this    **/\n/**  contract as this will cause the the storage slots to be overwritten on the proxy contract!!    **/\n/**                                                                                                 **/\n/**  Visit https://docs.openzeppelin.com/upgrades/2.6/proxies#upgrading-via-the-proxy-pattern for   **/\n/**  more information.                                                                              **/\n/*****************************************************************************************************/\n/**\n    @notice This contract is used as a basis for the creation of Ether based loans across the platform\n    @notice It implements the LoansBase contract from Teller\n\n    @author develop@teller.finance\n */\ncontract EtherCollateralLoans is LoansBase {\n    /**\n     * @notice Deposit collateral into a loan\n     * @param borrower The address of the loan borrower.\n     * @param loanID The ID of the loan the collateral is for\n     */\n    function depositCollateral(\n        address borrower,\n        uint256 loanID,\n        uint256 amount\n    )\n        external\n        payable\n        loanActiveOrSet(loanID)\n        isInitialized()\n        whenNotPaused()\n        whenLendingPoolNotPaused(address(lendingPool))\n    {\n        require(\n            loans[loanID].loanTerms.borrower == borrower,\n            \"BORROWER_LOAN_ID_MISMATCH\"\n        );\n        require(msg.value == amount, \"INCORRECT_ETH_AMOUNT\");\n        require(msg.value > 0, \"CANNOT_DEPOSIT_ZERO\");\n\n        // Update the contract total and the loan collateral total\n        _payInCollateral(loanID, amount);\n\n        emit CollateralDeposited(loanID, borrower, amount);\n    }\n\n    /**\n        @notice Creates a loan with the loan request and terms\n        @param request Struct of the protocol loan request\n        @param responses List of structs of the protocol loan responses\n        @param collateralAmount Amount of collateral required for the loan\n     */\n    function createLoanWithTerms(\n        TellerCommon.LoanRequest calldata request,\n        TellerCommon.LoanResponse[] calldata responses,\n        uint256 collateralAmount\n    )\n        external\n        payable\n        isInitialized()\n        whenNotPaused()\n        isBorrower(request.borrower)\n        withValidLoanRequest(request)\n    {\n        require(msg.value == collateralAmount, \"INCORRECT_ETH_AMOUNT\");\n\n        uint256 loanID = _getAndIncrementLoanID();\n        (\n            uint256 interestRate,\n            uint256 collateralRatio,\n            uint256 maxLoanAmount\n        ) = loanTermsConsensus.processRequest(request, responses);\n\n        loans[loanID] = createLoan(\n            loanID,\n            request,\n            interestRate,\n            collateralRatio,\n            maxLoanAmount\n        );\n\n        if (msg.value > 0) {\n            // Update collateral, totalCollateral, and lastCollateralIn\n            _payInCollateral(loanID, msg.value);\n        }\n\n        borrowerLoans[request.borrower].push(loanID);\n\n        _emitLoanTermsSetAndCollateralDepositedEventsIfApplicable(\n            loanID,\n            request,\n            interestRate,\n            collateralRatio,\n            maxLoanAmount,\n            msg.value\n        );\n    }\n\n    /**\n        @notice Initializes the current contract instance setting the required parameters\n        @param priceOracleAddress Contract address of the price oracle\n        @param lendingPoolAddress Contract address of the lending pool\n        @param loanTermsConsensusAddress Contract adddress for loan term consensus\n        @param settingsAddress Contract address for the configuration of the platform\n     */\n    function initialize(\n        address priceOracleAddress,\n        address lendingPoolAddress,\n        address loanTermsConsensusAddress,\n        address settingsAddress,\n        address\n    ) external isNotInitialized() {\n        _initialize(\n            priceOracleAddress,\n            lendingPoolAddress,\n            loanTermsConsensusAddress,\n            settingsAddress\n        );\n\n        collateralToken = settings().ETH_ADDRESS();\n    }\n\n    /** Internal Functions */\n    /**\n        @notice Pays out collateral for the associated loan\n        @param loanID The ID of the loan the collateral is for\n        @param amount The amount of collateral to be paid\n        @param recipient address that will receive the given amount.\n     */\n    function _payOutCollateral(\n        uint256 loanID,\n        uint256 amount,\n        address payable recipient\n    ) internal {\n        totalCollateral = totalCollateral.sub(amount);\n        loans[loanID].collateral = loans[loanID].collateral.sub(amount);\n        recipient.transfer(amount);\n    }\n}\n",
  "sourcePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/EtherCollateralLoans.sol",
  "ast": {
    "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/EtherCollateralLoans.sol",
    "exportedSymbols": {
      "EtherCollateralLoans": [
        4076
      ]
    },
    "id": 4077,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3856,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:16"
      },
      {
        "id": 3857,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:16"
      },
      {
        "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/LoansBase.sol",
        "file": "./LoansBase.sol",
        "id": 3858,
        "nodeType": "ImportDirective",
        "scope": 4077,
        "sourceUnit": 7158,
        "src": "72:25:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3859,
              "name": "LoansBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7157,
              "src": "1380:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LoansBase_$7157",
                "typeString": "contract LoansBase"
              }
            },
            "id": 3860,
            "nodeType": "InheritanceSpecifier",
            "src": "1380:9:16"
          }
        ],
        "contractDependencies": [
          2345,
          2627,
          7157,
          9187,
          10886,
          21702,
          21771
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract is used as a basis for the creation of Ether based loans across the platform\n@notice It implements the LoansBase contract from Teller\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 4076,
        "linearizedBaseContracts": [
          4076,
          7157,
          2345,
          21702,
          21771,
          2627,
          9187,
          10886
        ],
        "name": "EtherCollateralLoans",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3919,
              "nodeType": "Block",
              "src": "1856:421:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 3882,
                                "name": "loans",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5645,
                                "src": "1887:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$18357_storage_$",
                                  "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                                }
                              },
                              "id": 3884,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 3883,
                                "name": "loanID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3864,
                                "src": "1893:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1887:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$18357_storage",
                                "typeString": "struct TellerCommon.Loan storage ref"
                              }
                            },
                            "id": 3885,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "loanTerms",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18336,
                            "src": "1887:23:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanTerms_$18332_storage",
                              "typeString": "struct TellerCommon.LoanTerms storage ref"
                            }
                          },
                          "id": 3886,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18321,
                          "src": "1887:32:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3887,
                          "name": "borrower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3862,
                          "src": "1923:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1887:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "424f52524f5745525f4c4f414e5f49445f4d49534d41544348",
                        "id": 3889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1945:27:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        },
                        "value": "BORROWER_LOAN_ID_MISMATCH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        }
                      ],
                      "id": 3881,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21904,
                        21905
                      ],
                      "referencedDeclaration": 21905,
                      "src": "1866:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:116:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3891,
                  "nodeType": "ExpressionStatement",
                  "src": "1866:116:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3893,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21901,
                            "src": "2000:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2000:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3895,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "2013:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2000:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e434f52524543545f4554485f414d4f554e54",
                        "id": 3897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2021:22:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        },
                        "value": "INCORRECT_ETH_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        }
                      ],
                      "id": 3892,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21904,
                        21905
                      ],
                      "referencedDeclaration": 21905,
                      "src": "1992:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1992:52:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3899,
                  "nodeType": "ExpressionStatement",
                  "src": "1992:52:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3901,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21901,
                            "src": "2062:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2062:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2074:1:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2062:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43414e4e4f545f4445504f5349545f5a45524f",
                        "id": 3905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2077:21:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        },
                        "value": "CANNOT_DEPOSIT_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        }
                      ],
                      "id": 3900,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21904,
                        21905
                      ],
                      "referencedDeclaration": 21905,
                      "src": "2054:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2054:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3907,
                  "nodeType": "ExpressionStatement",
                  "src": "2054:45:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3909,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3864,
                        "src": "2194:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3910,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "2202:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3908,
                      "name": "_payInCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6694,
                      "src": "2177:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 3911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2177:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3912,
                  "nodeType": "ExpressionStatement",
                  "src": "2177:32:16"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3914,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3864,
                        "src": "2245:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3915,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3862,
                        "src": "2253:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3916,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "2263:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3913,
                      "name": "CollateralDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10659,
                      "src": "2225:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 3917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2225:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3918,
                  "nodeType": "EmitStatement",
                  "src": "2220:50:16"
                }
              ]
            },
            "documentation": "@notice Deposit collateral into a loan\n@param borrower The address of the loan borrower.\n@param loanID The ID of the loan the collateral is for",
            "id": 3920,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3869,
                    "name": "loanID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3864,
                    "src": "1741:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3870,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3868,
                  "name": "loanActiveOrSet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5722,
                  "src": "1725:15:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1725:23:16"
              },
              {
                "arguments": [],
                "id": 3872,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3871,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9162,
                  "src": "1757:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1757:15:16"
              },
              {
                "arguments": [],
                "id": 3874,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3873,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2232,
                  "src": "1781:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1781:15:16"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3877,
                        "name": "lendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5634,
                        "src": "1838:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10590",
                          "typeString": "contract LendingPoolInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10590",
                          "typeString": "contract LendingPoolInterface"
                        }
                      ],
                      "id": 3876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1830:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 3878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1830:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3879,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3875,
                  "name": "whenLendingPoolNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2246,
                  "src": "1805:24:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1805:46:16"
              }
            ],
            "name": "depositCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3862,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 3920,
                  "src": "1613:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3864,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3920,
                  "src": "1639:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1639:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3866,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3920,
                  "src": "1663:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1603:80:16"
            },
            "returnParameters": {
              "id": 3880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1856:0:16"
            },
            "scope": 4076,
            "src": "1577:700:16",
            "stateMutability": "payable",
            "superFunction": 10751,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4008,
              "nodeType": "Block",
              "src": "2904:923:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3942,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21901,
                            "src": "2922:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2922:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3944,
                          "name": "collateralAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3927,
                          "src": "2935:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2922:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e434f52524543545f4554485f414d4f554e54",
                        "id": 3946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2953:22:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        },
                        "value": "INCORRECT_ETH_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        }
                      ],
                      "id": 3941,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21904,
                        21905
                      ],
                      "referencedDeclaration": 21905,
                      "src": "2914:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2914:62:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3948,
                  "nodeType": "ExpressionStatement",
                  "src": "2914:62:16"
                },
                {
                  "assignments": [
                    3950
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3950,
                      "name": "loanID",
                      "nodeType": "VariableDeclaration",
                      "scope": 4008,
                      "src": "2987:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3949,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2987:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3953,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3951,
                      "name": "_getAndIncrementLoanID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6970,
                      "src": "3004:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 3952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3004:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2987:41:16"
                },
                {
                  "assignments": [
                    3955,
                    3957,
                    3959
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3955,
                      "name": "interestRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 4008,
                      "src": "3052:20:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3954,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3052:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3957,
                      "name": "collateralRatio",
                      "nodeType": "VariableDeclaration",
                      "scope": 4008,
                      "src": "3086:23:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3956,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3086:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3959,
                      "name": "maxLoanAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 4008,
                      "src": "3123:21:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3958,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3123:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3965,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3962,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3922,
                        "src": "3191:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3963,
                        "name": "responses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3925,
                        "src": "3200:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$18312_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$18312_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3960,
                        "name": "loanTermsConsensus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5636,
                        "src": "3157:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LoanTermsConsensusInterface_$10646",
                          "typeString": "contract LoanTermsConsensusInterface"
                        }
                      },
                      "id": 3961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10636,
                      "src": "3157:33:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LoanRequest_$18297_memory_ptr_$_t_array$_t_struct$_LoanResponse_$18312_memory_$dyn_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct TellerCommon.LoanRequest memory,struct TellerCommon.LoanResponse memory[] memory) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 3964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3157:53:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3038:172:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3966,
                        "name": "loans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5645,
                        "src": "3221:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$18357_storage_$",
                          "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                        }
                      },
                      "id": 3968,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3967,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3950,
                        "src": "3227:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3221:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$18357_storage",
                        "typeString": "struct TellerCommon.Loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3970,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3950,
                          "src": "3261:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3971,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3922,
                          "src": "3281:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3972,
                          "name": "interestRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3955,
                          "src": "3302:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3973,
                          "name": "collateralRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3957,
                          "src": "3328:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3974,
                          "name": "maxLoanAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3959,
                          "src": "3357:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3969,
                        "name": "createLoan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7037,
                        "src": "3237:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_LoanRequest_$18297_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_Loan_$18357_memory_ptr_$",
                          "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256) view returns (struct TellerCommon.Loan memory)"
                        }
                      },
                      "id": 3975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3237:143:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$18357_memory_ptr",
                        "typeString": "struct TellerCommon.Loan memory"
                      }
                    },
                    "src": "3221:159:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$18357_storage",
                      "typeString": "struct TellerCommon.Loan storage ref"
                    }
                  },
                  "id": 3977,
                  "nodeType": "ExpressionStatement",
                  "src": "3221:159:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3978,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21901,
                        "src": "3395:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3395:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3407:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3395:13:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3989,
                  "nodeType": "IfStatement",
                  "src": "3391:151:16",
                  "trueBody": {
                    "id": 3988,
                    "nodeType": "Block",
                    "src": "3410:132:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3983,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3950,
                              "src": "3513:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3984,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21901,
                                "src": "3521:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3521:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3982,
                            "name": "_payInCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6694,
                            "src": "3496:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 3986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3496:35:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3987,
                        "nodeType": "ExpressionStatement",
                        "src": "3496:35:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3995,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3950,
                        "src": "3589:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3990,
                          "name": "borrowerLoans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5641,
                          "src": "3552:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 3993,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3991,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3922,
                            "src": "3566:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                              "typeString": "struct TellerCommon.LoanRequest calldata"
                            }
                          },
                          "id": 3992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18284,
                          "src": "3566:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3552:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 3994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3552:36:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 3996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3552:44:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3997,
                  "nodeType": "ExpressionStatement",
                  "src": "3552:44:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3999,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3950,
                        "src": "3678:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4000,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3922,
                        "src": "3698:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4001,
                        "name": "interestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3955,
                        "src": "3719:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4002,
                        "name": "collateralRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3957,
                        "src": "3745:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4003,
                        "name": "maxLoanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3959,
                        "src": "3774:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4004,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21901,
                          "src": "3801:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3801:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3998,
                      "name": "_emitLoanTermsSetAndCollateralDepositedEventsIfApplicable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7082,
                      "src": "3607:57:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_LoanRequest_$18297_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 4006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3607:213:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4007,
                  "nodeType": "ExpressionStatement",
                  "src": "3607:213:16"
                }
              ]
            },
            "documentation": "@notice Creates a loan with the loan request and terms\n@param request Struct of the protocol loan request\n@param responses List of structs of the protocol loan responses\n@param collateralAmount Amount of collateral required for the loan",
            "id": 4009,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3930,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3929,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9162,
                  "src": "2785:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2785:15:16"
              },
              {
                "arguments": [],
                "id": 3932,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3931,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2232,
                  "src": "2809:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2809:15:16"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 3934,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3922,
                      "src": "2844:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                        "typeString": "struct TellerCommon.LoanRequest calldata"
                      }
                    },
                    "id": 3935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "borrower",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 18284,
                    "src": "2844:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 3936,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3933,
                  "name": "isBorrower",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5659,
                  "src": "2833:10:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2833:28:16"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3938,
                    "name": "request",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3922,
                    "src": "2891:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                      "typeString": "struct TellerCommon.LoanRequest calldata"
                    }
                  }
                ],
                "id": 3939,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3937,
                  "name": "withValidLoanRequest",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5775,
                  "src": "2870:20:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_LoanRequest_$18297_memory_ptr_$",
                    "typeString": "modifier (struct TellerCommon.LoanRequest memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2870:29:16"
              }
            ],
            "name": "createLoanWithTerms",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3922,
                  "name": "request",
                  "nodeType": "VariableDeclaration",
                  "scope": 4009,
                  "src": "2606:41:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanRequest"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3921,
                    "name": "TellerCommon.LoanRequest",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18297,
                    "src": "2606:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$18297_storage_ptr",
                      "typeString": "struct TellerCommon.LoanRequest"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3925,
                  "name": "responses",
                  "nodeType": "VariableDeclaration",
                  "scope": 4009,
                  "src": "2657:46:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_LoanResponse_$18312_calldata_$dyn_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanResponse[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 3923,
                      "name": "TellerCommon.LoanResponse",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 18312,
                      "src": "2657:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanResponse_$18312_storage_ptr",
                        "typeString": "struct TellerCommon.LoanResponse"
                      }
                    },
                    "id": 3924,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2657:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_LoanResponse_$18312_storage_$dyn_storage_ptr",
                      "typeString": "struct TellerCommon.LoanResponse[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3927,
                  "name": "collateralAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4009,
                  "src": "2713:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2713:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2596:147:16"
            },
            "returnParameters": {
              "id": 3940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2904:0:16"
            },
            "scope": 4076,
            "src": "2568:1259:16",
            "stateMutability": "payable",
            "superFunction": 10768,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4038,
              "nodeType": "Block",
              "src": "4469:223:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4025,
                        "name": "priceOracleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4011,
                        "src": "4504:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4026,
                        "name": "lendingPoolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4013,
                        "src": "4536:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4027,
                        "name": "loanTermsConsensusAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4015,
                        "src": "4568:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4028,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4017,
                        "src": "4607:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4024,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6659,
                        2297,
                        9186
                      ],
                      "referencedDeclaration": 6659,
                      "src": "4479:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address)"
                      }
                    },
                    "id": 4029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4479:153:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4030,
                  "nodeType": "ExpressionStatement",
                  "src": "4479:153:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4031,
                      "name": "collateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5628,
                      "src": "4643:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4032,
                            "name": "settings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2558,
                            "src": "4661:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_SettingsInterface_$11501_$",
                              "typeString": "function () view returns (contract SettingsInterface)"
                            }
                          },
                          "id": 4033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4661:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SettingsInterface_$11501",
                            "typeString": "contract SettingsInterface"
                          }
                        },
                        "id": 4034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ETH_ADDRESS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11495,
                        "src": "4661:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 4035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4661:24:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4643:42:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4037,
                  "nodeType": "ExpressionStatement",
                  "src": "4643:42:16"
                }
              ]
            },
            "documentation": "@notice Initializes the current contract instance setting the required parameters\n@param priceOracleAddress Contract address of the price oracle\n@param lendingPoolAddress Contract address of the lending pool\n@param loanTermsConsensusAddress Contract adddress for loan term consensus\n@param settingsAddress Contract address for the configuration of the platform",
            "id": 4039,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 4022,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4021,
                  "name": "isNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9152,
                  "src": "4450:16:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4450:18:16"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4011,
                  "name": "priceOracleAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4039,
                  "src": "4279:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4279:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4013,
                  "name": "lendingPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4039,
                  "src": "4315:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4315:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4015,
                  "name": "loanTermsConsensusAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4039,
                  "src": "4351:33:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4351:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4017,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4039,
                  "src": "4394:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4394:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4019,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4039,
                  "src": "4427:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4427:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4269:171:16"
            },
            "returnParameters": {
              "id": 4023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4469:0:16"
            },
            "scope": 4076,
            "src": "4250:442:16",
            "stateMutability": "nonpayable",
            "superFunction": 10861,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4074,
              "nodeType": "Block",
              "src": "5119:171:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4048,
                      "name": "totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5626,
                      "src": "5129:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4051,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4043,
                          "src": "5167:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4049,
                          "name": "totalCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5626,
                          "src": "5147:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20597,
                        "src": "5147:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5147:27:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5129:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4054,
                  "nodeType": "ExpressionStatement",
                  "src": "5129:45:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4055,
                          "name": "loans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5645,
                          "src": "5184:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$18357_storage_$",
                            "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                          }
                        },
                        "id": 4057,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 4056,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4041,
                          "src": "5190:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5184:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$18357_storage",
                          "typeString": "struct TellerCommon.Loan storage ref"
                        }
                      },
                      "id": 4058,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18342,
                      "src": "5184:24:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4064,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4043,
                          "src": "5240:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 4059,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5645,
                              "src": "5211:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$18357_storage_$",
                                "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                              }
                            },
                            "id": 4061,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 4060,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4041,
                              "src": "5217:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5211:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$18357_storage",
                              "typeString": "struct TellerCommon.Loan storage ref"
                            }
                          },
                          "id": 4062,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18342,
                          "src": "5211:24:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20597,
                        "src": "5211:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5211:36:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5184:63:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4067,
                  "nodeType": "ExpressionStatement",
                  "src": "5184:63:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4071,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4043,
                        "src": "5276:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4068,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4045,
                        "src": "5257:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 4070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5257:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5257:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4073,
                  "nodeType": "ExpressionStatement",
                  "src": "5257:26:16"
                }
              ]
            },
            "documentation": "@notice Pays out collateral for the associated loan\n@param loanID The ID of the loan the collateral is for\n@param amount The amount of collateral to be paid\n@param recipient address that will receive the given amount.",
            "id": 4075,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOutCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4041,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 4075,
                  "src": "5030:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5030:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4043,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4075,
                  "src": "5054:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5054:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4045,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 4075,
                  "src": "5078:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5078:15:16",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5020:89:16"
            },
            "returnParameters": {
              "id": 4047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5119:0:16"
            },
            "scope": 4076,
            "src": "4994:296:16",
            "stateMutability": "nonpayable",
            "superFunction": 6552,
            "visibility": "internal"
          }
        ],
        "scope": 4077,
        "src": "1347:3945:16"
      }
    ],
    "src": "0:5293:16"
  },
  "legacyAST": {
    "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/EtherCollateralLoans.sol",
    "exportedSymbols": {
      "EtherCollateralLoans": [
        4076
      ]
    },
    "id": 4077,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3856,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:16"
      },
      {
        "id": 3857,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:16"
      },
      {
        "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/LoansBase.sol",
        "file": "./LoansBase.sol",
        "id": 3858,
        "nodeType": "ImportDirective",
        "scope": 4077,
        "sourceUnit": 7158,
        "src": "72:25:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3859,
              "name": "LoansBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7157,
              "src": "1380:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LoansBase_$7157",
                "typeString": "contract LoansBase"
              }
            },
            "id": 3860,
            "nodeType": "InheritanceSpecifier",
            "src": "1380:9:16"
          }
        ],
        "contractDependencies": [
          2345,
          2627,
          7157,
          9187,
          10886,
          21702,
          21771
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract is used as a basis for the creation of Ether based loans across the platform\n@notice It implements the LoansBase contract from Teller\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 4076,
        "linearizedBaseContracts": [
          4076,
          7157,
          2345,
          21702,
          21771,
          2627,
          9187,
          10886
        ],
        "name": "EtherCollateralLoans",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3919,
              "nodeType": "Block",
              "src": "1856:421:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 3882,
                                "name": "loans",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5645,
                                "src": "1887:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$18357_storage_$",
                                  "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                                }
                              },
                              "id": 3884,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 3883,
                                "name": "loanID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3864,
                                "src": "1893:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1887:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$18357_storage",
                                "typeString": "struct TellerCommon.Loan storage ref"
                              }
                            },
                            "id": 3885,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "loanTerms",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18336,
                            "src": "1887:23:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanTerms_$18332_storage",
                              "typeString": "struct TellerCommon.LoanTerms storage ref"
                            }
                          },
                          "id": 3886,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18321,
                          "src": "1887:32:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3887,
                          "name": "borrower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3862,
                          "src": "1923:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1887:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "424f52524f5745525f4c4f414e5f49445f4d49534d41544348",
                        "id": 3889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1945:27:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        },
                        "value": "BORROWER_LOAN_ID_MISMATCH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        }
                      ],
                      "id": 3881,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21904,
                        21905
                      ],
                      "referencedDeclaration": 21905,
                      "src": "1866:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:116:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3891,
                  "nodeType": "ExpressionStatement",
                  "src": "1866:116:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3893,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21901,
                            "src": "2000:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2000:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3895,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "2013:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2000:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e434f52524543545f4554485f414d4f554e54",
                        "id": 3897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2021:22:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        },
                        "value": "INCORRECT_ETH_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        }
                      ],
                      "id": 3892,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21904,
                        21905
                      ],
                      "referencedDeclaration": 21905,
                      "src": "1992:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1992:52:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3899,
                  "nodeType": "ExpressionStatement",
                  "src": "1992:52:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3901,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21901,
                            "src": "2062:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2062:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2074:1:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2062:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43414e4e4f545f4445504f5349545f5a45524f",
                        "id": 3905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2077:21:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        },
                        "value": "CANNOT_DEPOSIT_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        }
                      ],
                      "id": 3900,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21904,
                        21905
                      ],
                      "referencedDeclaration": 21905,
                      "src": "2054:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2054:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3907,
                  "nodeType": "ExpressionStatement",
                  "src": "2054:45:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3909,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3864,
                        "src": "2194:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3910,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "2202:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3908,
                      "name": "_payInCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6694,
                      "src": "2177:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 3911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2177:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3912,
                  "nodeType": "ExpressionStatement",
                  "src": "2177:32:16"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3914,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3864,
                        "src": "2245:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3915,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3862,
                        "src": "2253:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3916,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "2263:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3913,
                      "name": "CollateralDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10659,
                      "src": "2225:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 3917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2225:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3918,
                  "nodeType": "EmitStatement",
                  "src": "2220:50:16"
                }
              ]
            },
            "documentation": "@notice Deposit collateral into a loan\n@param borrower The address of the loan borrower.\n@param loanID The ID of the loan the collateral is for",
            "id": 3920,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3869,
                    "name": "loanID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3864,
                    "src": "1741:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3870,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3868,
                  "name": "loanActiveOrSet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5722,
                  "src": "1725:15:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1725:23:16"
              },
              {
                "arguments": [],
                "id": 3872,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3871,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9162,
                  "src": "1757:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1757:15:16"
              },
              {
                "arguments": [],
                "id": 3874,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3873,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2232,
                  "src": "1781:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1781:15:16"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3877,
                        "name": "lendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5634,
                        "src": "1838:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10590",
                          "typeString": "contract LendingPoolInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10590",
                          "typeString": "contract LendingPoolInterface"
                        }
                      ],
                      "id": 3876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1830:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 3878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1830:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3879,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3875,
                  "name": "whenLendingPoolNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2246,
                  "src": "1805:24:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1805:46:16"
              }
            ],
            "name": "depositCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3862,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 3920,
                  "src": "1613:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3864,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3920,
                  "src": "1639:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1639:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3866,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3920,
                  "src": "1663:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1603:80:16"
            },
            "returnParameters": {
              "id": 3880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1856:0:16"
            },
            "scope": 4076,
            "src": "1577:700:16",
            "stateMutability": "payable",
            "superFunction": 10751,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4008,
              "nodeType": "Block",
              "src": "2904:923:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3942,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21901,
                            "src": "2922:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2922:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3944,
                          "name": "collateralAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3927,
                          "src": "2935:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2922:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e434f52524543545f4554485f414d4f554e54",
                        "id": 3946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2953:22:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        },
                        "value": "INCORRECT_ETH_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        }
                      ],
                      "id": 3941,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21904,
                        21905
                      ],
                      "referencedDeclaration": 21905,
                      "src": "2914:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2914:62:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3948,
                  "nodeType": "ExpressionStatement",
                  "src": "2914:62:16"
                },
                {
                  "assignments": [
                    3950
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3950,
                      "name": "loanID",
                      "nodeType": "VariableDeclaration",
                      "scope": 4008,
                      "src": "2987:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3949,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2987:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3953,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3951,
                      "name": "_getAndIncrementLoanID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6970,
                      "src": "3004:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 3952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3004:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2987:41:16"
                },
                {
                  "assignments": [
                    3955,
                    3957,
                    3959
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3955,
                      "name": "interestRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 4008,
                      "src": "3052:20:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3954,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3052:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3957,
                      "name": "collateralRatio",
                      "nodeType": "VariableDeclaration",
                      "scope": 4008,
                      "src": "3086:23:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3956,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3086:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3959,
                      "name": "maxLoanAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 4008,
                      "src": "3123:21:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3958,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3123:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3965,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3962,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3922,
                        "src": "3191:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3963,
                        "name": "responses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3925,
                        "src": "3200:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$18312_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$18312_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3960,
                        "name": "loanTermsConsensus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5636,
                        "src": "3157:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LoanTermsConsensusInterface_$10646",
                          "typeString": "contract LoanTermsConsensusInterface"
                        }
                      },
                      "id": 3961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10636,
                      "src": "3157:33:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LoanRequest_$18297_memory_ptr_$_t_array$_t_struct$_LoanResponse_$18312_memory_$dyn_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct TellerCommon.LoanRequest memory,struct TellerCommon.LoanResponse memory[] memory) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 3964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3157:53:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3038:172:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3966,
                        "name": "loans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5645,
                        "src": "3221:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$18357_storage_$",
                          "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                        }
                      },
                      "id": 3968,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3967,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3950,
                        "src": "3227:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3221:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$18357_storage",
                        "typeString": "struct TellerCommon.Loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3970,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3950,
                          "src": "3261:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3971,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3922,
                          "src": "3281:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3972,
                          "name": "interestRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3955,
                          "src": "3302:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3973,
                          "name": "collateralRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3957,
                          "src": "3328:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3974,
                          "name": "maxLoanAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3959,
                          "src": "3357:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3969,
                        "name": "createLoan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7037,
                        "src": "3237:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_LoanRequest_$18297_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_Loan_$18357_memory_ptr_$",
                          "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256) view returns (struct TellerCommon.Loan memory)"
                        }
                      },
                      "id": 3975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3237:143:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$18357_memory_ptr",
                        "typeString": "struct TellerCommon.Loan memory"
                      }
                    },
                    "src": "3221:159:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$18357_storage",
                      "typeString": "struct TellerCommon.Loan storage ref"
                    }
                  },
                  "id": 3977,
                  "nodeType": "ExpressionStatement",
                  "src": "3221:159:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3978,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21901,
                        "src": "3395:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3395:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3407:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3395:13:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3989,
                  "nodeType": "IfStatement",
                  "src": "3391:151:16",
                  "trueBody": {
                    "id": 3988,
                    "nodeType": "Block",
                    "src": "3410:132:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3983,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3950,
                              "src": "3513:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3984,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21901,
                                "src": "3521:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3521:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3982,
                            "name": "_payInCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6694,
                            "src": "3496:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 3986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3496:35:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3987,
                        "nodeType": "ExpressionStatement",
                        "src": "3496:35:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3995,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3950,
                        "src": "3589:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3990,
                          "name": "borrowerLoans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5641,
                          "src": "3552:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 3993,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3991,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3922,
                            "src": "3566:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                              "typeString": "struct TellerCommon.LoanRequest calldata"
                            }
                          },
                          "id": 3992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18284,
                          "src": "3566:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3552:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 3994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3552:36:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 3996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3552:44:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3997,
                  "nodeType": "ExpressionStatement",
                  "src": "3552:44:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3999,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3950,
                        "src": "3678:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4000,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3922,
                        "src": "3698:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4001,
                        "name": "interestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3955,
                        "src": "3719:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4002,
                        "name": "collateralRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3957,
                        "src": "3745:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4003,
                        "name": "maxLoanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3959,
                        "src": "3774:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4004,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21901,
                          "src": "3801:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3801:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3998,
                      "name": "_emitLoanTermsSetAndCollateralDepositedEventsIfApplicable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7082,
                      "src": "3607:57:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_LoanRequest_$18297_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 4006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3607:213:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4007,
                  "nodeType": "ExpressionStatement",
                  "src": "3607:213:16"
                }
              ]
            },
            "documentation": "@notice Creates a loan with the loan request and terms\n@param request Struct of the protocol loan request\n@param responses List of structs of the protocol loan responses\n@param collateralAmount Amount of collateral required for the loan",
            "id": 4009,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3930,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3929,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9162,
                  "src": "2785:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2785:15:16"
              },
              {
                "arguments": [],
                "id": 3932,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3931,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2232,
                  "src": "2809:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2809:15:16"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 3934,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3922,
                      "src": "2844:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                        "typeString": "struct TellerCommon.LoanRequest calldata"
                      }
                    },
                    "id": 3935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "borrower",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 18284,
                    "src": "2844:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 3936,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3933,
                  "name": "isBorrower",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5659,
                  "src": "2833:10:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2833:28:16"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3938,
                    "name": "request",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3922,
                    "src": "2891:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                      "typeString": "struct TellerCommon.LoanRequest calldata"
                    }
                  }
                ],
                "id": 3939,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3937,
                  "name": "withValidLoanRequest",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5775,
                  "src": "2870:20:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_LoanRequest_$18297_memory_ptr_$",
                    "typeString": "modifier (struct TellerCommon.LoanRequest memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2870:29:16"
              }
            ],
            "name": "createLoanWithTerms",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3922,
                  "name": "request",
                  "nodeType": "VariableDeclaration",
                  "scope": 4009,
                  "src": "2606:41:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanRequest"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3921,
                    "name": "TellerCommon.LoanRequest",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18297,
                    "src": "2606:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$18297_storage_ptr",
                      "typeString": "struct TellerCommon.LoanRequest"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3925,
                  "name": "responses",
                  "nodeType": "VariableDeclaration",
                  "scope": 4009,
                  "src": "2657:46:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_LoanResponse_$18312_calldata_$dyn_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanResponse[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 3923,
                      "name": "TellerCommon.LoanResponse",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 18312,
                      "src": "2657:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanResponse_$18312_storage_ptr",
                        "typeString": "struct TellerCommon.LoanResponse"
                      }
                    },
                    "id": 3924,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2657:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_LoanResponse_$18312_storage_$dyn_storage_ptr",
                      "typeString": "struct TellerCommon.LoanResponse[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3927,
                  "name": "collateralAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4009,
                  "src": "2713:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2713:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2596:147:16"
            },
            "returnParameters": {
              "id": 3940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2904:0:16"
            },
            "scope": 4076,
            "src": "2568:1259:16",
            "stateMutability": "payable",
            "superFunction": 10768,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4038,
              "nodeType": "Block",
              "src": "4469:223:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4025,
                        "name": "priceOracleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4011,
                        "src": "4504:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4026,
                        "name": "lendingPoolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4013,
                        "src": "4536:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4027,
                        "name": "loanTermsConsensusAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4015,
                        "src": "4568:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4028,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4017,
                        "src": "4607:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4024,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6659,
                        2297,
                        9186
                      ],
                      "referencedDeclaration": 6659,
                      "src": "4479:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address)"
                      }
                    },
                    "id": 4029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4479:153:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4030,
                  "nodeType": "ExpressionStatement",
                  "src": "4479:153:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4031,
                      "name": "collateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5628,
                      "src": "4643:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4032,
                            "name": "settings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2558,
                            "src": "4661:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_SettingsInterface_$11501_$",
                              "typeString": "function () view returns (contract SettingsInterface)"
                            }
                          },
                          "id": 4033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4661:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SettingsInterface_$11501",
                            "typeString": "contract SettingsInterface"
                          }
                        },
                        "id": 4034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ETH_ADDRESS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11495,
                        "src": "4661:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 4035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4661:24:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4643:42:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4037,
                  "nodeType": "ExpressionStatement",
                  "src": "4643:42:16"
                }
              ]
            },
            "documentation": "@notice Initializes the current contract instance setting the required parameters\n@param priceOracleAddress Contract address of the price oracle\n@param lendingPoolAddress Contract address of the lending pool\n@param loanTermsConsensusAddress Contract adddress for loan term consensus\n@param settingsAddress Contract address for the configuration of the platform",
            "id": 4039,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 4022,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4021,
                  "name": "isNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9152,
                  "src": "4450:16:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4450:18:16"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4011,
                  "name": "priceOracleAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4039,
                  "src": "4279:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4279:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4013,
                  "name": "lendingPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4039,
                  "src": "4315:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4315:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4015,
                  "name": "loanTermsConsensusAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4039,
                  "src": "4351:33:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4351:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4017,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4039,
                  "src": "4394:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4394:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4019,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4039,
                  "src": "4427:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4427:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4269:171:16"
            },
            "returnParameters": {
              "id": 4023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4469:0:16"
            },
            "scope": 4076,
            "src": "4250:442:16",
            "stateMutability": "nonpayable",
            "superFunction": 10861,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4074,
              "nodeType": "Block",
              "src": "5119:171:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4048,
                      "name": "totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5626,
                      "src": "5129:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4051,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4043,
                          "src": "5167:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4049,
                          "name": "totalCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5626,
                          "src": "5147:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20597,
                        "src": "5147:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5147:27:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5129:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4054,
                  "nodeType": "ExpressionStatement",
                  "src": "5129:45:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4055,
                          "name": "loans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5645,
                          "src": "5184:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$18357_storage_$",
                            "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                          }
                        },
                        "id": 4057,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 4056,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4041,
                          "src": "5190:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5184:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$18357_storage",
                          "typeString": "struct TellerCommon.Loan storage ref"
                        }
                      },
                      "id": 4058,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18342,
                      "src": "5184:24:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4064,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4043,
                          "src": "5240:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 4059,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5645,
                              "src": "5211:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$18357_storage_$",
                                "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                              }
                            },
                            "id": 4061,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 4060,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4041,
                              "src": "5217:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5211:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$18357_storage",
                              "typeString": "struct TellerCommon.Loan storage ref"
                            }
                          },
                          "id": 4062,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18342,
                          "src": "5211:24:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20597,
                        "src": "5211:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5211:36:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5184:63:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4067,
                  "nodeType": "ExpressionStatement",
                  "src": "5184:63:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4071,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4043,
                        "src": "5276:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4068,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4045,
                        "src": "5257:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 4070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5257:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5257:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4073,
                  "nodeType": "ExpressionStatement",
                  "src": "5257:26:16"
                }
              ]
            },
            "documentation": "@notice Pays out collateral for the associated loan\n@param loanID The ID of the loan the collateral is for\n@param amount The amount of collateral to be paid\n@param recipient address that will receive the given amount.",
            "id": 4075,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOutCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4041,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 4075,
                  "src": "5030:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5030:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4043,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4075,
                  "src": "5054:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5054:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4045,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 4075,
                  "src": "5078:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5078:15:16",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5020:89:16"
            },
            "returnParameters": {
              "id": 4047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5119:0:16"
            },
            "scope": 4076,
            "src": "4994:296:16",
            "stateMutability": "nonpayable",
            "superFunction": 6552,
            "visibility": "internal"
          }
        ],
        "scope": 4077,
        "src": "1347:3945:16"
      }
    ],
    "src": "0:5293:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0xeec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "loanID",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            }
          ],
          "name": "CollateralDeposited",
          "type": "event"
        },
        "0x7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd41": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "loanID",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "withdrawalAmount",
              "type": "uint256"
            }
          ],
          "name": "CollateralWithdrawn",
          "type": "event"
        },
        "0x9950a0562c02382e2e840daa73082d5be7660ce37601f28fa4c84089c11e8a06": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "loanID",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "liquidator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "collateralOut",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokensIn",
              "type": "uint256"
            }
          ],
          "name": "LoanLiquidated",
          "type": "event"
        },
        "0x20a1f2ec363af45dc5ee7d9d622f2dd68b52501c382126c7f04b53663c4c69bf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "loanID",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountPaid",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalOwed",
              "type": "uint256"
            }
          ],
          "name": "LoanRepaid",
          "type": "event"
        },
        "0x85b5516a17ce775661a4b967b1fb30c852678f6598d86d9f3c99b7b60ff2d0ce": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "loanID",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "escrow",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountBorrowed",
              "type": "uint256"
            }
          ],
          "name": "LoanTakenOut",
          "type": "event"
        },
        "0x0358f509931cba53bbb6a94b7f05a5178220a0c7ddb54b1a1722df9e6ed6aa09": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "loanID",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "collateralRatio",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "maxLoanAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "termsExpiry",
              "type": "uint256"
            }
          ],
          "name": "LoanTermsSet",
          "type": "event"
        },
        "0xf51f0fffc8121ee3747e0536c487d894894cdba960ccfb4ab385a88d51b16fed": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "oldPriceOracle",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newPriceOracle",
              "type": "address"
            }
          ],
          "name": "PriceOracleUpdated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xBff73C7aED1C5C1267863f41196449e99F4Eb50a",
      "transactionHash": "0xc96c57f28aaac1bc3011826cc136ac1a5429d6dfcc3187758ccb826aa0816d9c"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-12T16:12:27.694Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "develop@teller.finance",
    "methods": {
      "cToken()": {
        "return": "Address of the cToken"
      },
      "canLiquidateLoan(uint256)": {
        "params": {
          "loanID": "The ID of the loan to check"
        },
        "return": "bool weather the loan can be liquidated"
      },
      "createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)": {
        "params": {
          "collateralAmount": "Amount of collateral required for the loan",
          "request": "Struct of the protocol loan request",
          "responses": "List of structs of the protocol loan responses"
        }
      },
      "depositCollateral(address,uint256,uint256)": {
        "params": {
          "borrower": "The address of the loan borrower.",
          "loanID": "The ID of the loan the collateral is for"
        }
      },
      "getBorrowerLoans(address)": {
        "params": {
          "borrower": "The borrower's address"
        }
      },
      "getCollateralInfo(uint256)": {
        "params": {
          "loanID": "of the loan to get info for"
        },
        "return": "memory TellerCommon.LoanCollateralInfo Collateral information of the loan"
      },
      "getLiquidationInfo(uint256)": {
        "params": {
          "loanID": "loan id to get the info."
        },
        "return": "liquidationInfo get current liquidation info for the given loan id."
      },
      "getTotalOwed(uint256)": {
        "params": {
          "loanID": "The ID of the loan to be queried"
        },
        "return": "uint256 The total amount owed remaining"
      },
      "initialize(address,address,address,address,address)": {
        "params": {
          "lendingPoolAddress": "Contract address of the lending pool",
          "loanTermsConsensusAddress": "Contract adddress for loan term consensus",
          "priceOracleAddress": "Contract address of the price oracle",
          "settingsAddress": "Contract address for the configuration of the platform"
        }
      },
      "initialized()": {
        "return": "true if contract is initialized. Otherwise it returns false."
      },
      "isLoanSecured(uint256)": {
        "return": "bool value of it being secured or not."
      },
      "lendingToken()": {
        "return": "Address of the lending token"
      },
      "liquidateLoan(uint256)": {
        "params": {
          "loanID": "The ID of the loan to be liquidated"
        }
      },
      "repay(uint256,uint256)": {
        "params": {
          "amount": "The amount of tokens to pay back to the loan",
          "loanID": "The ID of the loan the payment is for"
        }
      },
      "setPriceOracle(address)": {
        "details": "It throws a require error if sender is not allowed.It throws a require error if new address is empty (0x0) or not a contract.",
        "params": {
          "newPriceOracle": "the new price oracle address."
        }
      },
      "settings()": {
        "details": "This address should NOT change over the time. See details in the _setSettings(...) function."
      },
      "tToken()": {
        "return": "Address of the tToken"
      },
      "takeOutLoan(uint256,uint256)": {
        "details": "collateral ratio is a percentage of the loan amount that's required in collateralthe percentage will be *(10**2). I.e. collateralRatio of 5244 means 52.44% collateralis required in the loan. Interest rate is also a percentage with 2 decimal points."
      },
      "withdrawCollateral(uint256,uint256)": {
        "params": {
          "amount": "The amount of collateral token or ether the caller is hoping to withdraw.",
          "loanID": "The ID of the loan the collateral is for"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "cToken()": {
        "notice": "Returns the cToken in the lending pool"
      },
      "canLiquidateLoan(uint256)": {
        "notice": "A loan can be liquidated if it is: under collateralized or expired"
      },
      "createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)": {
        "notice": "Creates a loan with the loan request and terms"
      },
      "depositCollateral(address,uint256,uint256)": {
        "notice": "Deposit collateral into a loan"
      },
      "getBorrowerLoans(address)": {
        "notice": "Get a list of all loans for a borrower"
      },
      "getCollateralInfo(uint256)": {
        "notice": "Get collateral information of a specific loan"
      },
      "getLiquidationInfo(uint256)": {
        "notice": "It getss the current liquidation info for a given loan id."
      },
      "getTotalOwed(uint256)": {
        "notice": "Returns the total owed amount remaining for a specified loan"
      },
      "initialize(address,address,address,address,address)": {
        "notice": "Initializes the current contract instance setting the required parameters"
      },
      "initialized()": {
        "notice": "Gets if the contract is initialized."
      },
      "isLoanSecured(uint256)": {
        "notice": "Checks wheather the loan's collateral ratio is considered to be secured based on the settings collateral buffer value."
      },
      "lendingToken()": {
        "notice": "Returns the lending token in the lending pool"
      },
      "liquidateLoan(uint256)": {
        "notice": "Liquidate a loan if it is expired or under collateralized"
      },
      "repay(uint256,uint256)": {
        "notice": "Make a payment to a loan"
      },
      "setPriceOracle(address)": {
        "notice": "Updates the current price oracle instance."
      },
      "settings()": {
        "notice": "The gets the settings contract address from the SETTINGS_SLOT."
      },
      "tToken()": {
        "notice": "Returns the tToken in the lending pool"
      },
      "takeOutLoan(uint256,uint256)": {
        "notice": "Take out a loan"
      },
      "withdrawCollateral(uint256,uint256)": {
        "notice": "Withdraw collateral from a loan, unless this isn't allowed"
      }
    },
    "notice": "This contract is used as a basis for the creation of Ether based loans across the platformIt implements the LoansBase contract from Teller"
  }
}