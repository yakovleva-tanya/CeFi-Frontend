{
  "contractName": "EtherCollateralLoans",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        }
      ],
      "name": "CollateralDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        }
      ],
      "name": "CollateralWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensIn",
          "type": "uint256"
        }
      ],
      "name": "LoanLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalOwed",
          "type": "uint256"
        }
      ],
      "name": "LoanRepaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountBorrowed",
          "type": "uint256"
        }
      ],
      "name": "LoanTakenOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "interestRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxLoanAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "termsExpiry",
          "type": "uint256"
        }
      ],
      "name": "LoanTermsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldPriceOracle",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newPriceOracle",
          "type": "address"
        }
      ],
      "name": "PriceOracleUpdated",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "borrowerLoans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "canLiquidateLoan",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "collateralToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "consts",
      "outputs": [
        {
          "internalType": "contract SettingsConsts",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "getBorrowerLoans",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "getCollateralInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "neededInLendingTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "neededInCollateralTokens",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "moreCollateralRequired",
              "type": "bool"
            }
          ],
          "internalType": "struct TellerCommon.LoanCollateralInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "getTotalOwed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lendingPool",
      "outputs": [
        {
          "internalType": "contract LendingPoolInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lendingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "liquidateLoan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "loanIDCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "loanTermsConsensus",
      "outputs": [
        {
          "internalType": "contract LoanTermsConsensusInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            }
          ],
          "internalType": "struct TellerCommon.LoanTerms",
          "name": "loanTerms",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "termsExpiry",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastCollateralIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "principalOwed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestOwed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "internalType": "enum TellerCommon.LoanStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "liquidated",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "priceOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newPriceOracle",
          "type": "address"
        }
      ],
      "name": "setPriceOracle",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "contract SettingsInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBorrow",
          "type": "uint256"
        }
      ],
      "name": "takeOutLoan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "withdrawCollateral",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositCollateral",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "consensusAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requestNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requestTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct TellerCommon.LoanRequest",
          "name": "request",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "consensusAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "responseTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanAmount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "signerNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct TellerCommon.Signature",
              "name": "signature",
              "type": "tuple"
            }
          ],
          "internalType": "struct TellerCommon.LoanResponse[]",
          "name": "responses",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "createLoanWithTerms",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "priceOracleAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lendingPoolAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "loanTermsConsensusAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "settingsAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIn\",\"type\":\"uint256\"}],\"name\":\"LoanLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalOwed\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBorrowed\",\"type\":\"uint256\"}],\"name\":\"LoanTakenOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"termsExpiry\",\"type\":\"uint256\"}],\"name\":\"LoanTermsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPriceOracle\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"borrowerLoans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"canLiquidateLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"consts\",\"outputs\":[{\"internalType\":\"contract SettingsConsts\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"consensusAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestTime\",\"type\":\"uint256\"}],\"internalType\":\"struct TellerCommon.LoanRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"consensusAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"responseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"signerNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct TellerCommon.Signature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"struct TellerCommon.LoanResponse[]\",\"name\":\"responses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"createLoanWithTerms\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"getBorrowerLoans\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"getCollateralInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"neededInLendingTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"neededInCollateralTokens\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"moreCollateralRequired\",\"type\":\"bool\"}],\"internalType\":\"struct TellerCommon.LoanCollateralInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"getTotalOwed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lendingPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanTermsConsensusAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"settingsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingPool\",\"outputs\":[{\"internalType\":\"contract LendingPoolInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"liquidateLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"loanIDCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"loanTermsConsensus\",\"outputs\":[{\"internalType\":\"contract LoanTermsConsensusInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"internalType\":\"struct TellerCommon.LoanTerms\",\"name\":\"loanTerms\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"termsExpiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastCollateralIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"internalType\":\"enum TellerCommon.LoanStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"contract SettingsInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBorrow\",\"type\":\"uint256\"}],\"name\":\"takeOutLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"methods\":{\"canLiquidateLoan(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to check\"},\"return\":\"bool weather the loan can be liquidated\"},\"createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)\":{\"params\":{\"collateralAmount\":\"Amount of collateral required for the loan\",\"request\":\"Struct of the protocol loan request\",\"responses\":\"List of structs of the protocol loan responses\"}},\"depositCollateral(address,uint256,uint256)\":{\"params\":{\"borrower\":\"The address of the loan borrower.\",\"loanID\":\"The ID of the loan the collateral is for\"}},\"getBorrowerLoans(address)\":{\"params\":{\"borrower\":\"The borrower's address\"}},\"getCollateralInfo(uint256)\":{\"params\":{\"loanID\":\"of the loan to get info for\"},\"return\":\"memory TellerCommon.LoanCollateralInfo Collateral information of the loan\"},\"getTotalOwed(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to be queried\"},\"return\":\"uint256 The total amount owed remaining\"},\"initialize(address,address,address,address,address)\":{\"params\":{\"lendingPoolAddress\":\"Contract address of the lending pool\",\"loanTermsConsensusAddress\":\"Contract adddress for loan term consensus\",\"priceOracleAddress\":\"Contract address of the price oracle\",\"settingsAddress\":\"Contract address for the configuration of the platform\"}},\"initialized()\":{\"return\":\"true if contract is initialized. Otherwise it returns false.\"},\"lendingToken()\":{\"return\":\"Address of the lending token\"},\"liquidateLoan(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to be liquidated\"}},\"repay(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to pay back to the loan\",\"loanID\":\"The ID of the loan the payment is for\"}},\"setPriceOracle(address)\":{\"details\":\"It throws a require error if sender is not allowed.It throws a require error if new address is empty (0x0) or not a contract.\",\"params\":{\"newPriceOracle\":\"the new price oracle address.\"}},\"takeOutLoan(uint256,uint256)\":{\"details\":\"collateral ratio is a percentage of the loan amount that's required in collateralthe percentage will be *(10**2). I.e. collateralRatio of 5244 means 52.44% collateralis required in the loan. Interest rate is also a percentage with 2 decimal points.\"},\"withdrawCollateral(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of collateral token or ether the caller is hoping to withdraw.\",\"loanID\":\"The ID of the loan the collateral is for\"}}}},\"userdoc\":{\"methods\":{\"canLiquidateLoan(uint256)\":{\"notice\":\"A loan can be liquidated if it is: under collateralized or expired\"},\"createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)\":{\"notice\":\"Creates a loan with the loan request and terms\"},\"depositCollateral(address,uint256,uint256)\":{\"notice\":\"Deposit collateral into a loan\"},\"getBorrowerLoans(address)\":{\"notice\":\"Get a list of all loans for a borrower\"},\"getCollateralInfo(uint256)\":{\"notice\":\"Get collateral information of a specific loan\"},\"getTotalOwed(uint256)\":{\"notice\":\"Returns the total owed amount remaining for a specified loan\"},\"initialize(address,address,address,address,address)\":{\"notice\":\"Initializes the current contract instance setting the required parameters\"},\"initialized()\":{\"notice\":\"Gets if the contract is initialized.\"},\"lendingToken()\":{\"notice\":\"Returns the lending token in the lending pool\"},\"liquidateLoan(uint256)\":{\"notice\":\"Liquidate a loan if it is expired or under collateralized\"},\"repay(uint256,uint256)\":{\"notice\":\"Make a payment to a loan\"},\"setPriceOracle(address)\":{\"notice\":\"Updates the current price oracle instance.\"},\"settings()\":{\"notice\":\"The settings contract.\"},\"takeOutLoan(uint256,uint256)\":{\"notice\":\"Take out a loan\"},\"withdrawCollateral(uint256,uint256)\":{\"notice\":\"Withdraw collateral from a loan, unless this isn't allowed\"}},\"notice\":\"This contract is used as a basis for the creation of Ether based loans across the platformIt implements the LoansBase contract from Teller\"}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/EtherCollateralLoans.sol\":\"EtherCollateralLoans\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/atm/ATMGovernanceInterface.sol\":{\"keccak256\":\"0x941d294aa385de623880428e08bf2e8ed4ef4e0f64b64297711748bbcf1e3e62\",\"urls\":[\"bzz-raw://e25e5830eb12b06fc560d5fc77112201fe6cce29a397ce32a982fffe1f0ea88d\",\"dweb:/ipfs/QmUoHemMNYziKTm9b7FwxQvZrtDYpLDw1HyUFchpwdbdw1\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/Base.sol\":{\"keccak256\":\"0xcc1904a218af2a97dfe9ffb2d787975f14cfca658f24441eb84b1b83fcc12d59\",\"urls\":[\"bzz-raw://a1fab6b5c3ad79014661b17640b22a5c912749986cd1163133edab64194ac5ac\",\"dweb:/ipfs/QmVdH23D6pd28LtQLc4xcEsvRxVsmZ9qwW3XBxeTYYjn5s\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol\":{\"keccak256\":\"0xea409b9c0704a8f308295740e8595eb5fdc670b298ae9b63f5bb538783619a35\",\"urls\":[\"bzz-raw://22490fcd6a157faa8f1bdf7f715435c2a2572277c46e67d39533b411026b580d\",\"dweb:/ipfs/QmW5nUYb9oLpZALaWabBA45MnfGB4MJspZEkvbuRJfSSg7\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/EtherCollateralLoans.sol\":{\"keccak256\":\"0x01740c9491fe408e9e87c6675954a1d65147529b93683062079144eec4d6ef2c\",\"urls\":[\"bzz-raw://53960c3f288581ea592e0eff94fa8038f9a216c68953f1efe93c7af2eb9b24bb\",\"dweb:/ipfs/QmbE1rPoth4pAxbM9aYL4cniVBsv116cWo7Bp2SMbrF3vn\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LoansBase.sol\":{\"keccak256\":\"0xbefffd410d92d6d7df37f99b48e4bcef4f0c205696607c2d2638ecd5b58cb201\",\"urls\":[\"bzz-raw://2bfc7faf1584db8c30c71d1f0885f2cc96f18d8d2f3a9ab3b3f091c9948c8f0a\",\"dweb:/ipfs/QmdX4Eq7iGMgtYQGjcGmNTyGedYeCy3yj6jMUvLr7Udsx4\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TInitializable.sol\":{\"keccak256\":\"0xfd04f8b08548b7a4aacbf26eaf65f64628c38f9fc34c363317daa593c7c25917\",\"urls\":[\"bzz-raw://025bbb10f643ebec3bc77303bca1585c572c76f8261ce42ed816b3c2a7799d20\",\"dweb:/ipfs/QmYS3L6u6f7ucRxGoap3RSD1jeJERnZk3XQRden1fEDQMs\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0xb5b2225e4f6db57d59d5292f542acc0675e9f95b3e3094d9be4cf6ec079cb86e\",\"urls\":[\"bzz-raw://f0c822f79ebb3f775b4fea591a5555c3efacba6719d4adbab83571dd35f059e3\",\"dweb:/ipfs/QmYiHmtPJsJD67g7Pk7kM72hsHS7BVVJtciKjCoUioW4gS\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowInterface.sol\":{\"keccak256\":\"0x65c08f6f62a51becac639418b7ebe9781decdc89e1f0bc21acfa609418dfa8cb\",\"urls\":[\"bzz-raw://dabc828f30fae14e7d70643480cb1202ec2c85cf654517f18440a0f5b8062101\",\"dweb:/ipfs/QmP3LXe9upby2uN3KunXhBeKm1Mj9xqf31sqDFEMYnwXYt\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x91250ee3c1d73b5d1720f7b41f18072eb347d73e4d3de464537ece49e1fa1d93\",\"urls\":[\"bzz-raw://f11ce1d70152f6d19f9c23788b4458631df3fd748a52849b899183ce2dabc52b\",\"dweb:/ipfs/QmaNQybwKYW5BfT3h6z6P1SSUwYEyXQviisYjUr7cHLzQR\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LendingPoolInterface.sol\":{\"keccak256\":\"0x6fff3f4e065b2d00d8ef933f3e4a173524c2b9888bf86a6081092e5893efe294\",\"urls\":[\"bzz-raw://46411a67543dde454785d65bc33d4b920c271ac27c0353666d307a2210341d47\",\"dweb:/ipfs/QmbgZu2hQZkDgKnSU9J7XR5DvN7gKVfd8ffvSnDS6DWREA\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LoanTermsConsensusInterface.sol\":{\"keccak256\":\"0x93381688f1f920d3c445cd373603eb0aedea609c1827d4341a504ffc9f05e53a\",\"urls\":[\"bzz-raw://bb98e5e3728055be581c59ca924e7e194f81332dd8cdaf527c07ffd35d93b64c\",\"dweb:/ipfs/QmSccwLhRNdgF5x6f1fwF77pHyWJrCDAsaCqKCECpa4FsD\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LoansInterface.sol\":{\"keccak256\":\"0xc0da81ededdf5bb3f9019d14dbb1dd7ff64a852fe30b07a6d495f726df3920a6\",\"urls\":[\"bzz-raw://1e944e166028ecf924802edd10e704562c9f1d19531e5777f10c0b57badc3995\",\"dweb:/ipfs/QmXF9uBwoXKBw5pQqURKL1otKHV6m9MmrP7hHiBWG8UhqV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0xd8a98393b51d4533d7515d82c4640ff5cb4c5d84ec154be20ae2d70244c6bd8e\",\"urls\":[\"bzz-raw://19a1d2b6aa47db3488c4ce2531a4a82d79cc66b089ecebb3d06bc9a6c2ca2c04\",\"dweb:/ipfs/QmY1rhfogBfWyu4Bs3dbwrXjYvkvLLnwgi5hLuRcMgtjDy\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/MarketsStateInterface.sol\":{\"keccak256\":\"0xf51bd2d361d9cf448f2c2a5bb37c2699b0d9605a8f1b6a8719f90d8f536f2a05\",\"urls\":[\"bzz-raw://415a4444e8f9aca25132f492b226b8d500081a4ba5be8e45b401a68e73e1895b\",\"dweb:/ipfs/QmUPGgnqUjidxeEpkgu4yYzhfuykgtNKehEwbps97nAAzZ\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/PairAggregatorInterface.sol\":{\"keccak256\":\"0x4331fd21591542fda69505ce457c03f9ef66f2b8fea50db669864f517c4f95a1\",\"urls\":[\"bzz-raw://3cd373c888a2b4f6d1a93f540e9a0f4982316f743c0891d310a5e712c0f8eb78\",\"dweb:/ipfs/QmYA6Z3HFYj8MZSJwKP7NjawaD5TehE6Lmtx2VbTfqEHfb\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0xb2b1050602a2c4b8fac7053462a7a71c4a8ac91ffa7622dc003b07867dd2d04a\",\"urls\":[\"bzz-raw://2d38d083992ace8e9b361e763c1ba8ec35dc6604a1829fb09df8750a1c517d78\",\"dweb:/ipfs/QmQjba8A9c4q3AmEJf7GMytSyFPdG5rniSvL7Kw8QrUEoT\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/IChainlinkPairAggregatorRegistry.sol\":{\"keccak256\":\"0xa6f747fa1fecfef304721bc5b95ff34f1057ffeebd096d72051c013191879388\",\"urls\":[\"bzz-raw://27a99f0483fd2950126fd56cca827bab0cb3635e4512380acd65f161960906eb\",\"dweb:/ipfs/QmUR6GkPEpzqo4G76eeTNDLgxi3M4P7G338Jr4uoCQqrx9\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0xc5453e6f1a43327a37db250dedb65561c4deb0f3eb3cad490a64fc56e0b6f7b7\",\"urls\":[\"bzz-raw://f6edcab27eebecb576c9a884a173a1a5fcf0c129c76b992ec77ca24518d92f91\",\"dweb:/ipfs/QmW3q6w39dg9RnxsQdfrFVudmiZh5asRnkWQVkrap9hnJf\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AssetSettingsLib.sol\":{\"keccak256\":\"0x9c67a3de3bb62fdfbd5c116016e0693300bb9d71fe055bb6aa12da305aba3bf4\",\"urls\":[\"bzz-raw://a3c9ffdd1496a6192abb62b72625e5778db231656f2c8fffd09a83d089996aa6\",\"dweb:/ipfs/QmevJ5ojFaqG363CrnJZ9x3YvGMWKfUaFoUVbCsaSzqPfe\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/ERC20DetailedLib.sol\":{\"keccak256\":\"0x9d40e0f2512901e6f3dcb2d95756724e4a71d418e755730a9828435c2b5ce204\",\"urls\":[\"bzz-raw://31d1541bf87c9356b4b43decc8b55479a00ebacd1beb0377b0a04200eed278c7\",\"dweb:/ipfs/QmcRJk2JfYzp9HFpTeW1BKWQALF7cpYW3Bj3G7QyosVmRV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0xf4caad9e4d96afe2721124eaf7203bb4e3a97beb3664c63297c4e68523f5bd65\",\"urls\":[\"bzz-raw://dcd6f564423c2cf83f3a56120f43eb6fd9f6e852cbb615be657f89e5114debf4\",\"dweb:/ipfs/QmRZStVoa5KbYRCHpzC7h998NnRhbFHfUZ71TRTiLzMTcX\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0xe49711d0c8193559f76dc5f399344c8f5f5e6a8b99bf78c6bcfd9aa1c456c306\",\"urls\":[\"bzz-raw://c6432c082145470691dfde04bf5c4220ccc32a5dccf6520c3122e47e470e6c22\",\"dweb:/ipfs/Qmd97DA5SB3d8Cuwf5M6vLtfDLHYXrMj5d3cXkYPP7iPpU\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/MarketStateLib.sol\":{\"keccak256\":\"0x8212e9e0d7c8d79d53087c5fb4735374f50cf6644c27b13e5faba5344c9b2087\",\"urls\":[\"bzz-raw://68b3d876f4e6569b57abfe9e7e69675a362a9d45f92c51b3a3a089d1c226817b\",\"dweb:/ipfs/QmSirrURGaLUYVkSeedjsrzF1kFB7gsuoHBpmWb9ed8eZt\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0xa397bcb75a4e7d80fd1043b7dc3c3a69f8c12435d26d843e4be40e875b71e134\",\"urls\":[\"bzz-raw://aabd466bea9e95a2585d597ebf62025f7ab4f38d1d4fe1c9fa5be1d98d131789\",\"dweb:/ipfs/QmcRGMg8X5teSF3Ga8ECPH2HvenViySkdnzvpUWvMDWXJL\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0c6a7e0de89e1017166ef4f593b33c8d0bfc6bcf3cd3db0bb5c1610ce260b659\",\"urls\":[\"bzz-raw://926108ace9152ed12d86a74ccb98d8c0aa698bd48fd3b4bfedacf976a8dd59d3\",\"dweb:/ipfs/QmVYjChMWZJdpPoBNheHMfyoTVsAarfLJ6SxPHhEsd6kUB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/SettingsConsts.sol\":{\"keccak256\":\"0xf357c4edd90efe656a6011cdb942deb119251fabf4fb15745fa6ba76ebdc359b\",\"urls\":[\"bzz-raw://fc2be5bb87e63ff544bb6167c3aecc163253f53c42fa956341784891caf78bee\",\"dweb:/ipfs/QmaJQKkUdSbESvbt768gCFL8ZSZ2BAE8xAW1FcvsubfFmR\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0xbe70455cee756e9498c220e13c1550d163a4cbcb09e8afe2f0ee94f717c80315\",\"urls\":[\"bzz-raw://0ad4a0a6394e560e40da2fee213381db0184878c29078b2f570eaacf116bb855\",\"dweb:/ipfs/QmTF87YYagh3WrxNZyi2uxhzcxyGsdtJCLu9nwmXGGaoMz\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x704e0cb521f0b571096a72266a34d9a2a59a89853b5b271bc97fa307a4cc4dcc\",\"urls\":[\"bzz-raw://96317e95d4c301e54ff42f2b6dede996ac4d714e50a6b5552c68fbb378330dcf\",\"dweb:/ipfs/QmawKJQVK7yXeBhGcvkmujYpo8n7CWQJizDV2dWzsxupnh\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb2fbd0f9a0bd0d99ace5603f1ce5388ed7d81031a188f5f4667e702fe690e61a\",\"urls\":[\"bzz-raw://b5a018485e3e184d24fabf939a2ca2b82a95b55ad7fcb109f2005d755ddedd29\",\"dweb:/ipfs/QmbpUfNbKjnVhARJRwMvD4h5z6ajYcdAB5Up6m1V3Rf2Ee\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50614c49806100206000396000f3fe6080604052600436106101665760003560e01c80638129fc1c116100d1578063ccdd9f5d1161008a578063e06174e411610064578063e06174e4146103cf578063e1ec3c68146103e4578063e3ed19021461041c578063eee8b7ff1461043c57610166565b8063ccdd9f5d1461037a578063d86d744e1461039a578063d8aed145146103af57610166565b80638129fc1c146102e6578063934b5d13146102fb578063a59a997314610328578063a5c5c7b21461033d578063aaaca55814610350578063b2016bd41461036557610166565b80634ac8eb5f116101235780634ac8eb5f1461023a578063513484541461024f578063530e784f1461026457806358895e3d146102845780636948f32b146102a6578063767a7b05146102c657610166565b806302bc2cdb1461016b5780631459457a1461018d578063158ef93e146101ad5780631a74856b146101d85780632630c12f146101eb5780633b9293001461020d575b600080fd5b34801561017757600080fd5b5061018b610186366004613970565b610469565b005b34801561019957600080fd5b5061018b6101a8366004613772565b610ae8565b3480156101b957600080fd5b506101c2610bb8565b6040516101cf919061451e565b60405180910390f35b61018b6101e6366004613821565b610bd7565b3480156101f757600080fd5b50610200610d98565b6040516101cf9190614478565b34801561021957600080fd5b5061022d610228366004613952565b610da7565b6040516101cf919061452c565b34801561024657600080fd5b5061022d610dd7565b34801561025b57600080fd5b5061022d610ddd565b34801561027057600080fd5b5061018b61027f366004613736565b610de3565b34801561029057600080fd5b50610299610f41565b6040516101cf919061453a565b3480156102b257600080fd5b506101c26102c1366004613952565b610f50565b3480156102d257600080fd5b5061018b6102e1366004613970565b6110a9565b3480156102f257600080fd5b5061018b6112c2565b34801561030757600080fd5b5061031b610316366004613952565b61134a565b6040516101cf9190614729565b34801561033457600080fd5b5061029961135b565b61018b61034b3660046138c8565b61136a565b34801561035c57600080fd5b506102006118f1565b34801561037157600080fd5b50610200611973565b34801561038657600080fd5b5061018b610395366004613952565b611982565b3480156103a657600080fd5b50610299611ccb565b3480156103bb57600080fd5b5061018b6103ca366004613970565b611cda565b3480156103db57600080fd5b506102996120e0565b3480156103f057600080fd5b506104046103ff366004613952565b612102565b6040516101cf9c9b9a9998979695949392919061479d565b34801561042857600080fd5b5061022d6104373660046137e7565b6121ba565b34801561044857600080fd5b5061045c610457366004613736565b6121e8565b6040516101cf919061450d565b8160016000828152606d60205260409020600e0154600160a01b900460ff16600381111561049357fe5b146104b95760405162461bcd60e51b81526004016104b0906146f9565b60405180910390fd5b6104c1610bb8565b6104dd5760405162461bcd60e51b81526004016104b0906146e9565b6104e5612254565b156105025760405162461bcd60e51b81526004016104b090614629565b606a546001600160a01b0316610517816122ce565b156105345760405162461bcd60e51b81526004016104b090614579565b603380546001908101918290556000868152606d6020526040902001546001600160a01b03163381146105795760405162461bcd60e51b81526004016104b0906146b9565b6000868152606d60205260409020600501548511156105aa5760405162461bcd60e51b81526004016104b090614599565b6000868152606d60205260409020600701544211156105db5760405162461bcd60e51b81526004016104b090614669565b6106f36105e66120e0565b6001600160a01b031663269012a0606e60009054906101000a90046001600160a01b03166001600160a01b03166311880cc86040518163ffffffff1660e01b815260040160206040518083038186803b15801561064257600080fd5b505afa158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061067a919081019061388c565b6040518263ffffffff1660e01b8152600401610696919061452c565b60206040518083038186803b1580156106ae57600080fd5b505afa1580156106c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106e6919081019061388c565b429063ffffffff61235316565b6000878152606d60205260409020600a015411156107235760405162461bcd60e51b81526004016104b090614659565b6000868152606d60205260409020600d8101869055600b81018690556006810154600390910154610787916237b1d09161077b916127109183919061076f908c9063ffffffff61239e16565b9063ffffffff61239e16565b9063ffffffff6123d816565b6000878152606d60205260409020600c01556107a16134d7565b6107aa8761241a565b90508060600151156107ce5760405162461bcd60e51b81526004016104b090614639565b6000878152606d60205260409020426008820155600e01805460ff60a01b1916600160a11b1790556107ff8761246b565b6000888152606d602052604090819020600e0180546001600160a01b0319166001600160a01b039384161790819055606a549151631397424760e11b81529183169263272e848e92610857928b921690600401614759565b600060405180830381600087803b15801561087157600080fd5b505af1158015610885573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e0154905163cd6dc68760e01b81526001600160a01b03909116915063cd6dc687906108cb9030908b906004016144f2565b600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b50505050610905612564565b6001600160a01b031663c7bbb113606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561096157600080fd5b505afa158015610975573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109999190810190613754565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b1580156109d257600080fd5b505afa1580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a0a9190810190613754565b896040518463ffffffff1660e01b8152600401610a29939291906144d7565b600060405180830381600087803b158015610a4357600080fd5b505af1158015610a57573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e81015460019091015491516001600160a01b03918216935091169089907f85b5516a17ce775661a4b967b1fb30c852678f6598d86d9f3c99b7b60ff2d0ce90610ab6908b9061452c565b60405180910390a450506033548114610ae15760405162461bcd60e51b81526004016104b090614709565b5050505050565b610af0610bb8565b15610b0d5760405162461bcd60e51b81526004016104b090614719565b610b19858585856125de565b610b216120e0565b6001600160a01b031663a734f06e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b5957600080fd5b505afa158015610b6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b919190810190613754565b606780546001600160a01b0319166001600160a01b03929092169190911790555050505050565b600080604051610bc790614462565b6040519081900390205492915050565b8160016000828152606d60205260409020600e0154600160a01b900460ff166003811115610c0157fe5b1480610c33575060026000828152606d60205260409020600e0154600160a01b900460ff166003811115610c3157fe5b145b610c4f5760405162461bcd60e51b81526004016104b0906145d9565b610c57610bb8565b610c735760405162461bcd60e51b81526004016104b0906146e9565b610c7b612254565b15610c985760405162461bcd60e51b81526004016104b090614629565b606a546001600160a01b0316610cad816122ce565b15610cca5760405162461bcd60e51b81526004016104b090614579565b6000848152606d60205260409020600101546001600160a01b03868116911614610d065760405162461bcd60e51b81526004016104b0906145b9565b823414610d255760405162461bcd60e51b81526004016104b0906145c9565b60003411610d455760405162461bcd60e51b81526004016104b090614699565b610d4f848461277b565b846001600160a01b0316847feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c85604051610d89919061452c565b60405180910390a35050505050565b6069546001600160a01b031681565b6000818152606d60205260408120600b810154600c90910154610dcf9163ffffffff6127d416565b90505b919050565b60665481565b60685481565b610deb610bb8565b610e075760405162461bcd60e51b81526004016104b0906146e9565b610e0f6120e0565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401610e3a9190614486565b60006040518083038186803b158015610e5257600080fd5b505afa158015610e66573d6000803e3d6000fd5b50505050610e7c816001600160a01b03166127f9565b610e985760405162461bcd60e51b81526004016104b0906146a9565b60695460408051808201909152601b81527f4e45575f4f5241434c455f4d5553545f42455f50524f5649444544000000000060208201526001600160a01b0390911690610eee908290849063ffffffff61283516565b606980546001600160a01b0319166001600160a01b03848116918217909255604051909183169033907ff51f0fffc8121ee3747e0536c487d894894cdba960ccfb4ab385a88d51b16fed90600090a45050565b606b546001600160a01b031681565b6000610f5a612254565b80610f755750606a54610f75906001600160a01b03166122ce565b80610fa7575060026000838152606d60205260409020600e0154600160a01b900460ff166003811115610fa457fe5b14155b15610fb457506000610dd2565b6000828152606d602052604081206008810154600690910154909142610fe0848463ffffffff6127d416565b1090508015610ff55760019350505050610dd2565b6000858152606d60205260409020600e01546001600160a01b0316801561109257806001600160a01b031663415dfa5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561104f57600080fd5b505afa158015611063573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611087919081019061386e565b945050505050610dd2565b61109b8661241a565b606001519695505050505050565b8060016000828152606d60205260409020600e0154600160a01b900460ff1660038111156110d357fe5b1480611105575060026000828152606d60205260409020600e0154600160a01b900460ff16600381111561110357fe5b145b6111215760405162461bcd60e51b81526004016104b0906145d9565b611129610bb8565b6111455760405162461bcd60e51b81526004016104b0906146e9565b61114d612254565b1561116a5760405162461bcd60e51b81526004016104b090614629565b606a546001600160a01b031661117f816122ce565b1561119c5760405162461bcd60e51b81526004016104b090614579565b603380546001908101918290556000858152606d6020526040902001546001600160a01b031633146111e05760405162461bcd60e51b81526004016104b0906146c9565b600085116112005760405162461bcd60e51b81526004016104b090614619565b600061120b8561285e565b9050600061121882612895565b6000878152606d60205260408120600901549192509061123e908363ffffffff61235316565b90508781111561124b5750865b801561125c5761125c8782336129da565b336001600160a01b0316877f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd4183604051611296919061452c565b60405180910390a35050506033548114610ae15760405162461bcd60e51b81526004016104b090614709565b600054610100900460ff16806112db57506112db612a5b565b806112e9575060005460ff16155b6113055760405162461bcd60e51b81526004016104b090614679565b600054610100900460ff16158015611330576000805460ff1961ff0019909116610100171660011790555b60016033558015611347576000805461ff00191690555b50565b6113526134d7565b610dcf8261241a565b606a546001600160a01b031681565b611372610bb8565b61138e5760405162461bcd60e51b81526004016104b0906146e9565b611396612254565b156113b35760405162461bcd60e51b81526004016104b090614629565b6113c06020850185613736565b336001600160a01b038216146113e85760405162461bcd60e51b81526004016104b0906146b9565b6113f736869003860186613934565b8060a001516114046120e0565b6001600160a01b031663269012a0606e60009054906101000a90046001600160a01b03166001600160a01b031663cc44cadb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561146057600080fd5b505afa158015611474573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611498919081019061388c565b6040518263ffffffff1660e01b81526004016114b4919061452c565b60206040518083038186803b1580156114cc57600080fd5b505afa1580156114e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611504919081019061388c565b10156115225760405162461bcd60e51b81526004016104b090614559565b61152a6120e0565b6001600160a01b03166369ff7744606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561158657600080fd5b505afa15801561159a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115be9190810190613754565b83608001516040518363ffffffff1660e01b81526004016115e09291906144f2565b60206040518083038186803b1580156115f857600080fd5b505afa15801561160c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611630919081019061386e565b1561164d5760405162461bcd60e51b81526004016104b090614589565b61165a8160800151612a61565b6116765760405162461bcd60e51b81526004016104b0906146d9565b8234146116955760405162461bcd60e51b81526004016104b0906145c9565b600061169f612dd1565b606b5460405163064e5d4960e01b8152919250600091829182916001600160a01b039091169063064e5d49906116dd908d908d908d90600401614737565b606060405180830381600087803b1580156116f757600080fd5b505af115801561170b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061172f919081019061398f565b9194509250905061175184611749368d90038d018d613934565b858585612ddf565b6000858152606d6020908152604091829020835181558382015180516001830180546001600160a01b03199081166001600160a01b0393841617909155938201516002840180548616918316919091179055818501516003808501919091556060808401516004860155608080850151600587015560a0948501516006870155968801516007860155870151600885015594860151600984015590850151600a83015560c0850151600b83015560e0850151600c830155610100850151600d830155610120850151600e83018054909416911617808355610140850151919391929160ff60a01b1990911690600160a01b90849081111561184e57fe5b02179055506101609190910151600e9091018054911515600160a81b0260ff60a81b19909216919091179055341561188a5761188a843461277b565b606c600061189b60208d018d613736565b6001600160a01b0316815260208082019290925260400160009081208054600181018255908252919020018490556118e5846118dc368d90038d018d613934565b85858534612fc7565b50505050505050505050565b606a546040805163155594ab60e31b815290516000926001600160a01b03169163aaaca558916004808301926020929190829003018186803b15801561193657600080fd5b505afa15801561194a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061196e9190810190613754565b905090565b6067546001600160a01b031681565b8060026000828152606d60205260409020600e0154600160a01b900460ff1660038111156119ac57fe5b146119c95760405162461bcd60e51b81526004016104b090614609565b6119d1610bb8565b6119ed5760405162461bcd60e51b81526004016104b0906146e9565b6119f5612254565b15611a125760405162461bcd60e51b81526004016104b090614629565b606a546001600160a01b0316611a27816122ce565b15611a445760405162461bcd60e51b81526004016104b090614579565b6033805460010190819055611a5884610f50565b611a745760405162461bcd60e51b81526004016104b0906145f9565b6000848152606d60205260408120600e8101805460ff60a01b1916600360a01b1760ff60a81b1916600160a81b1790556009015490611ab282613092565b9050611abf8683336129da565b6000611bdf61271061077b611ad26120e0565b6001600160a01b031663269012a0606e60009054906101000a90046001600160a01b03166001600160a01b0316631139087a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b2e57600080fd5b505afa158015611b42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b66919081019061388c565b6040518263ffffffff1660e01b8152600401611b82919061452c565b60206040518083038186803b158015611b9a57600080fd5b505afa158015611bae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611bd2919081019061388c565b859063ffffffff61239e16565b606a546040516382f7b02760e01b81529192506001600160a01b0316906382f7b02790611c129084903390600401614767565b600060405180830381600087803b158015611c2c57600080fd5b505af1158015611c40573d6000803e3d6000fd5b5050506000888152606d6020526040908190206001015490516001600160a01b03909116915088907f9950a0562c02382e2e840daa73082d5be7660ce37601f28fa4c84089c11e8a0690611c9990339088908790614494565b60405180910390a35050506033548114611cc55760405162461bcd60e51b81526004016104b090614709565b50505050565b606e546001600160a01b031681565b8060026000828152606d60205260409020600e0154600160a01b900460ff166003811115611d0457fe5b14611d215760405162461bcd60e51b81526004016104b090614609565b611d29610bb8565b611d455760405162461bcd60e51b81526004016104b0906146e9565b611d4d612254565b15611d6a5760405162461bcd60e51b81526004016104b090614629565b606a546001600160a01b0316611d7f816122ce565b15611d9c5760405162461bcd60e51b81526004016104b090614579565b603380546001019081905584611dc45760405162461bcd60e51b81526004016104b090614569565b846000611dd086610da7565b905081811015611dde578091505b611dee818363ffffffff61235316565b9050611dfa8683613188565b80611e9e576000868152606d60205260409020600e8101805460ff60a01b1916600360a01b1790556009810154600190910154611e4390889083906001600160a01b03166129da565b6000878152606d6020526040908190206001015490516001600160a01b039091169088907f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd4190611e9490859061452c565b60405180910390a3505b606a5460405163acb7081560e01b81526001600160a01b039091169063acb7081590611ed09085903390600401614767565b600060405180830381600087803b158015611eea57600080fd5b505af1158015611efe573d6000803e3d6000fd5b50505050611f0a612564565b6001600160a01b03166362e269ef606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015611f6657600080fd5b505afa158015611f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f9e9190810190613754565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b158015611fd757600080fd5b505afa158015611feb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061200f9190810190613754565b856040518463ffffffff1660e01b815260040161202e939291906144d7565b600060405180830381600087803b15801561204857600080fd5b505af115801561205c573d6000803e3d6000fd5b5050506000878152606d6020526040908190206001015490516001600160a01b03909116915087907f20a1f2ec363af45dc5ee7d9d622f2dd68b52501c382126c7f04b53663c4c69bf906120b590869033908790614782565b60405180910390a350506033548114610ae15760405162461bcd60e51b81526004016104b090614709565b60008060006040516120f19061446d565b604051908190039020549250505090565b606d602090815260009182526040918290208054835160c08101855260018301546001600160a01b03908116825260028401548116948201949094526003830154948101949094526004820154606085015260058201546080850152600682015460a0850152600782015460088301546009840154600a850154600b860154600c870154600d880154600e9098015496999895979496939592949193909281169060ff600160a01b8204811691600160a81b9004168c565b606c60205281600052604060002081815481106121d357fe5b90600052602060002001600091509150505481565b6001600160a01b0381166000908152606c602090815260409182902080548351818402810184019094528084526060939283018282801561224857602002820191906000526020600020905b815481526020019060010190808311612234575b50505050509050919050565b600061225e6120e0565b6001600160a01b031663b187bd266040518163ffffffff1660e01b815260040160206040518083038186803b15801561229657600080fd5b505afa1580156122aa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061196e919081019061386e565b60006122d86120e0565b6001600160a01b0316633b668321836040518263ffffffff1660e01b81526004016123039190614478565b60206040518083038186803b15801561231b57600080fd5b505afa15801561232f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dcf919081019061386e565b600061239583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613244565b90505b92915050565b6000826123ad57506000612398565b828202828482816123ba57fe5b04146123955760405162461bcd60e51b81526004016104b090614649565b600061239583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613275565b6124226134d7565b6000828152606d6020526040812060090154908061243f856132ac565b604080516080810182528681526020810193909352820181905293909311606084015250909392505050565b60006124756120e0565b6001600160a01b031663bdd1daaa6040518163ffffffff1660e01b815260040160206040518083038186803b1580156124ad57600080fd5b505afa1580156124c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124e591908101906138aa565b6001600160a01b0316634614874e30846040518363ffffffff1660e01b81526004016125129291906144f2565b602060405180830381600087803b15801561252c57600080fd5b505af1158015612540573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dcf9190810190613754565b600061256e6120e0565b6001600160a01b0316631390f8d76040518163ffffffff1660e01b815260040160206040518083038186803b1580156125a657600080fd5b505afa1580156125ba573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061196e91908101906138aa565b6125e6610bb8565b156126035760405162461bcd60e51b81526004016104b090614719565b60408051808201909152601681527550524f564944455f4f5241434c455f4144445245535360501b602082015261264a906001600160a01b0386169063ffffffff6132d016565b60408051808201909152601c81527f50524f564944455f4c454e44494e475f504f4f4c5f41444452455353000000006020820152612698906001600160a01b0385169063ffffffff6132d016565b60408051808201909152601b81527f50524f56494445445f4c4f414e5f5445524d535f41444452455353000000000060208201526126e6906001600160a01b0384169063ffffffff6132d016565b6126ef816132fd565b606980546001600160a01b038087166001600160a01b031992831617909255606a8054868416908316179055606b80549285169290911691909117905560405161273890613501565b604051809103906000f080158015612754573d6000803e3d6000fd5b50606e80546001600160a01b0319166001600160a01b039290921691909117905550505050565b60665461278e908263ffffffff6127d416565b6066556000828152606d60205260409020600901546127b3908263ffffffff6127d416565b6000928352606d602052604090922060098101929092555042600a90910155565b6000828201838110156123955760405162461bcd60e51b81526004016104b0906145a9565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061282d57508115155b949350505050565b61283f83836133af565b8190611cc55760405162461bcd60e51b81526004016104b09190614548565b60008061286a83610da7565b6000848152606d602052604090206004015490915061282d61271061077b848463ffffffff61239e16565b60008061292f606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156128e957600080fd5b505afa1580156128fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129219190810190613754565b6001600160a01b03166133c1565b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b15801561298157600080fd5b505afa158015612995573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129b9919081019061388c565b905060006129d18361077b878563ffffffff61239e16565b95945050505050565b6066546129ed908363ffffffff61235316565b6066556000838152606d6020526040902060090154612a12908363ffffffff61235316565b6000848152606d60205260408082206009019290925590516001600160a01b0383169184156108fc02918591818181858888f19350505050158015611cc5573d6000803e3d6000fd5b303b1590565b600080612a6c6120e0565b6001600160a01b031663dc21a6a06040518163ffffffff1660e01b815260040160206040518083038186803b158015612aa457600080fd5b505afa158015612ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612adc91908101906138aa565b6001600160a01b0316631fb7cec9606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612b3857600080fd5b505afa158015612b4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b709190810190613754565b6067546040516001600160e01b031960e085901b168152612b9e92916001600160a01b0316906004016144bc565b60206040518083038186803b158015612bb657600080fd5b505afa158015612bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612bee9190810190613754565b90506001600160a01b038116612c165760405162461bcd60e51b81526004016104b090614689565b604051632319178560e11b81526000906001600160a01b038316906346322f0a90612c54906b14dd5c1c1b1e551bd119589d60a21b9060040161452c565b60206040518083038186803b158015612c6c57600080fd5b505afa158015612c80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612ca4919081019061388c565b90506000612cb0612564565b6001600160a01b031663db63323e606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612d0c57600080fd5b505afa158015612d20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d449190810190613754565b6067546040516001600160e01b031960e085901b168152612d7492916001600160a01b0316908a906004016144d7565b60206040518083038186803b158015612d8c57600080fd5b505afa158015612da0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612dc4919081019061388c565b9190911115949350505050565b606880546001810190915590565b612de761350e565b6000612f01612df46120e0565b6001600160a01b031663269012a0606e60009054906101000a90046001600160a01b03166001600160a01b031663e00a46156040518163ffffffff1660e01b815260040160206040518083038186803b158015612e5057600080fd5b505afa158015612e64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612e88919081019061388c565b6040518263ffffffff1660e01b8152600401612ea4919061452c565b60206040518083038186803b158015612ebc57600080fd5b505afa158015612ed0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612ef4919081019061388c565b429063ffffffff6127d416565b90506040518061018001604052808881526020016040518060c0016040528089600001516001600160a01b0316815260200189602001516001600160a01b031681526020018881526020018781526020018681526020018960a00151815250815260200182815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160016003811115612fb257fe5b81526000602090910152979650505050505050565b84602001516001600160a01b031685600001516001600160a01b0316877f0358f509931cba53bbb6a94b7f05a5178220a0c7ddb54b1a1722df9e6ed6aa098787878b60a00151606d60008f815260200190815260200160002060070154604051613035959493929190614855565b60405180910390a4801561308a5784600001516001600160a01b0316867feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c83604051613081919061452c565b60405180910390a35b505050505050565b6000806130e6606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156128e957600080fd5b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b15801561313857600080fd5b505afa15801561314c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613170919081019061388c565b905060006129d18261077b878663ffffffff61239e16565b6000828152606d60205260409020600b015481111561320b576000828152606d60205260409020600b015481906131c690829063ffffffff61235316565b6000848152606d60205260408120600b810191909155600c01549091506131f3908263ffffffff61235316565b6000848152606d60205260409020600c015550613240565b6000828152606d60205260409020600b015461322d908263ffffffff61235316565b6000838152606d60205260409020600b01555b5050565b600081848411156132685760405162461bcd60e51b81526004016104b09190614548565b50508183035b9392505050565b600081836132965760405162461bcd60e51b81526004016104b09190614548565b5060008385816132a257fe5b0495945050505050565b60008060006132ba8461285e565b9050806132c682612895565b9250925050915091565b6132d982613442565b81906132f85760405162461bcd60e51b81526004016104b09190614548565b505050565b613305610bb8565b156133225760405162461bcd60e51b81526004016104b090614719565b60408051808201909152601981527f53455454494e47535f4d5553545f42455f50524f5649444544000000000000006020820152613370906001600160a01b0383169063ffffffff6132d016565b613382816001600160a01b03166127f9565b61339e5760405162461bcd60e51b81526004016104b0906145e9565b6133a6613450565b6113478161346e565b6001600160a01b039081169116141590565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156133fd57600080fd5b505afa158015613411573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061343591908101906139d2565b60ff16600a0a9392505050565b6001600160a01b0316151590565b600060405161345e90614462565b6040519081900390206001905550565b60006134786120e0565b6001600160a01b0316146134b957613498816001600160a01b03166127f9565b6134b45760405162461bcd60e51b81526004016104b0906145e9565b611347565b60006040516134c79061446d565b6040519081900390208290555050565b60405180608001604052806000815260200160008152602001600081526020016000151581525090565b61022b806149dc83390190565b60405180610180016040528060008152602001613529613589565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681526020016000600381111561357c57fe5b8152600060209091015290565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b8035612398816149a3565b8051612398816149a3565b60008083601f8401126135f957600080fd5b50813567ffffffffffffffff81111561361157600080fd5b6020830191508361014082028301111561362a57600080fd5b9250929050565b8051612398816149b7565b8035612398816149c0565b8051612398816149c0565b8051612398816149c9565b600060e0828403121561366f57600080fd5b50919050565b600060e0828403121561368757600080fd5b61369160e06148a1565b9050600061369f84846135d1565b82525060206136b0848483016135d1565b60208301525060406136c4848285016135d1565b60408301525060606136d88482850161363c565b60608301525060806136ec8482850161363c565b60808301525060a06137008482850161363c565b60a08301525060c06137148482850161363c565b60c08301525092915050565b8035612398816149d2565b8051612398816149d2565b60006020828403121561374857600080fd5b600061282d84846135d1565b60006020828403121561376657600080fd5b600061282d84846135dc565b600080600080600060a0868803121561378a57600080fd5b600061379688886135d1565b95505060206137a7888289016135d1565b94505060406137b8888289016135d1565b93505060606137c9888289016135d1565b92505060806137da888289016135d1565b9150509295509295909350565b600080604083850312156137fa57600080fd5b600061380685856135d1565b92505060206138178582860161363c565b9150509250929050565b60008060006060848603121561383657600080fd5b600061384286866135d1565b93505060206138538682870161363c565b92505060406138648682870161363c565b9150509250925092565b60006020828403121561388057600080fd5b600061282d8484613631565b60006020828403121561389e57600080fd5b600061282d8484613647565b6000602082840312156138bc57600080fd5b600061282d8484613652565b60008060008061012085870312156138df57600080fd5b60006138eb878761365d565b94505060e085013567ffffffffffffffff81111561390857600080fd5b613914878288016135e7565b93509350506101006139288782880161363c565b91505092959194509250565b600060e0828403121561394657600080fd5b600061282d8484613675565b60006020828403121561396457600080fd5b600061282d848461363c565b6000806040838503121561398357600080fd5b6000613806858561363c565b6000806000606084860312156139a457600080fd5b60006139b08686613647565b93505060206139c186828701613647565b925050604061386486828701613647565b6000602082840312156139e457600080fd5b600061282d848461372b565b60006139fc83836142c5565b50506101400190565b6000613a118383613ae0565b505060200190565b613a228161494d565b82525050565b613a2281614916565b6000613a3d83856148dc565b9350613a48826148c8565b8060005b85811015613a7e57613a5e8284614903565b613a6888826139f0565b9750613a73836148d5565b925050600101613a4c565b509495945050505050565b6000613a94826148d1565b613a9e81856148dc565b9350613aa9836148cb565b8060005b83811015613a7e578151613ac18882613a05565b9750613acc836148cb565b925050600101613aad565b613a2281614921565b613a22816148c8565b613a2281614926565b613a2281614958565b6000613b06826148d1565b613b1081856148dc565b9350613b20818560208601614963565b613b298161498f565b9093019392505050565b6000613b40601d836148dc565b7f4455524154494f4e5f455843454544535f4d41585f4455524154494f4e000000815260200192915050565b6000613b79601c83610dd2565b7f54496e697469616c697a61626c652e6973496e697469616c697a6564000000008152601c0192915050565b6000613bb26015836148dc565b74105353d5539517d59053155157d491545552549151605a1b815260200192915050565b6000613be36016836148dc565b7513115391125391d7d413d3d317d254d7d4105554d15160521b815260200192915050565b6000613c156019836148dc565b7f414d4f554e545f455843454544535f4d41585f414d4f554e5400000000000000815260200192915050565b6000613c4e6011836148dc565b7013505617d313d05397d15610d151511151607a1b815260200192915050565b6000613c7b601b836148dc565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000613cb46019836148dc565b7f424f52524f5745525f4c4f414e5f49445f4d49534d4154434800000000000000815260200192915050565b6000613ced6014836148dc565b73125390d3d4949150d517d1551217d05353d5539560621b815260200192915050565b6000613d1d6016836148dc565b751313d05397d393d517d050d512559157d3d497d4d15560521b815260200192915050565b6000613d4f601b836148dc565b7f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000815260200192915050565b6000613d886017836148dc565b7f444f45534e545f4e4545445f4c49515549444154494f4e000000000000000000815260200192915050565b6000613dc1600f836148dc565b6e4c4f414e5f4e4f545f41435449564560881b815260200192915050565b6000613dec6014836148dc565b7343414e4e4f545f57495448445241575f5a45524f60601b815260200192915050565b6000613e1c6012836148dc565b71141310551193d49357d254d7d4105554d15160721b815260200192915050565b6000613e4a6018836148dc565b7f4d4f52455f434f4c4c41544552414c5f52455155495245440000000000000000815260200192915050565b6000613e836021836148dc565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000613ec6601d836148dc565b7f434f4c4c41544552414c5f4445504f53495445445f524543454e544c59000000815260200192915050565b6000613eff6012836148dc565b711313d05397d511549354d7d156141254915160721b815260200192915050565b6000613f2d602e836148dc565b7f436f6e747261637420696e7374616e63652068617320616c726561647920626581526d195b881a5b9a5d1a585b1a5e995960921b602082015260400192915050565b6000613f7d6018836148dc565b7f41544d5f4e4f545f464f554e445f464f525f4d41524b45540000000000000000815260200192915050565b6000613fb66013836148dc565b7243414e4e4f545f4445504f5349545f5a45524f60681b815260200192915050565b6000613fe5601e836148dc565b7f4f5241434c455f4d5553545f434f4e54524143545f4e4f545f454d5054590000815260200192915050565b600061401e6017836148dc565b7f424f52524f5745525f4d5553545f42455f53454e444552000000000000000000815260200192915050565b60006140576016836148dc565b7521a0a62622a92fa227a2a9a72a2fa7aba72fa627a0a760511b815260200192915050565b6000614089601883610dd2565b7f426173655570677261646561626c652e73657474696e67730000000000000000815260180192915050565b60006140c2601a836148dc565b7f535550504c595f544f5f444542545f455843454544535f4d4158000000000000815260200192915050565b60006140fb6018836148dc565b7f434f4e54524143545f4e4f545f494e495449414c495a45440000000000000000815260200192915050565b6000614134600c836148dc565b6b1313d05397d393d517d4d15560a21b815260200192915050565b600061415c601f836148dc565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b6000614195601c836148dc565b7f434f4e54524143545f414c52454144595f494e495449414c495a454400000000815260200192915050565b805160808301906141d28482613ae0565b5060208201516141e56020850182613ae0565b5060408201516141f86040850182613ae0565b506060820151611cc56060850182613ad7565b60e0820161421982806148e5565b6142238482613a28565b5061423160208301836148e5565b61423e6020850182613a28565b5061424c60408301836148e5565b6142596040850182613a28565b5061426760608301836148f4565b6142746060850182613ae0565b5061428260808301836148f4565b61428f6080850182613ae0565b5061429d60a08301836148f4565b6142aa60a0850182613ae0565b506142b860c08301836148f4565b611cc560c0850182613ae0565b61014082016142d482806148e5565b6142de8482613a28565b506142ec60208301836148e5565b6142f96020850182613a28565b5061430760408301836148f4565b6143146040850182613ae0565b5061432260608301836148f4565b61432f6060850182613ae0565b5061433d60808301836148f4565b61434a6080850182613ae0565b5061435860a08301836148f4565b61436560a0850182613ae0565b5061437360c0830183614903565b611cc560c08501826143f0565b805160c08301906143918482613a28565b5060208201516143a46020850182613a28565b5060408201516143b76040850182613ae0565b5060608201516143ca6060850182613ae0565b5060808201516143dd6080850182613ae0565b5060a0820151611cc560a0850182613ae0565b608082016143fe82806148f4565b6144088482613ae0565b506144166020830183614907565b6144236020850182614459565b5061443160408301836148f4565b61443e6040850182613ae0565b5061444c60608301836148f4565b611cc56060850182613ae0565b613a2281614947565b600061239882613b6c565b60006123988261407c565b602081016123988284613a28565b602081016123988284613a19565b606081016144a28286613a19565b6144af6020830185613ae0565b61282d6040830184613ae0565b604081016144ca8285613a28565b61326e6020830184613a28565b606081016144e58286613a28565b6144af6020830185613a28565b604081016145008285613a28565b61326e6020830184613ae0565b602080825281016123958184613a89565b602081016123988284613ad7565b602081016123988284613ae0565b602081016123988284613ae9565b602080825281016123958184613afb565b60208082528101610dcf81613b33565b60208082528101610dcf81613ba5565b60208082528101610dcf81613bd6565b60208082528101610dcf81613c08565b60208082528101610dcf81613c41565b60208082528101610dcf81613c6e565b60208082528101610dcf81613ca7565b60208082528101610dcf81613ce0565b60208082528101610dcf81613d10565b60208082528101610dcf81613d42565b60208082528101610dcf81613d7b565b60208082528101610dcf81613db4565b60208082528101610dcf81613ddf565b60208082528101610dcf81613e0f565b60208082528101610dcf81613e3d565b60208082528101610dcf81613e76565b60208082528101610dcf81613eb9565b60208082528101610dcf81613ef2565b60208082528101610dcf81613f20565b60208082528101610dcf81613f70565b60208082528101610dcf81613fa9565b60208082528101610dcf81613fd8565b60208082528101610dcf81614011565b60208082528101610dcf8161404a565b60208082528101610dcf816140b5565b60208082528101610dcf816140ee565b60208082528101610dcf81614127565b60208082528101610dcf8161414f565b60208082528101610dcf81614188565b6080810161239882846141c1565b6101008101614746828661420b565b81810360e08301526129d1818486613a31565b604081016144ca8285613ae0565b604081016147758285613ae0565b61326e6020830184613a19565b606081016147908286613ae0565b6144af6020830185613a19565b61022081016147ac828f613ae0565b6147b9602083018e614380565b6147c660e083018d613ae0565b6147d461010083018c613ae0565b6147e261012083018b613ae0565b6147f061014083018a613ae0565b6147fe610160830189613ae0565b61480c610180830188613ae0565b61481a6101a0830187613ae0565b6148286101c0830186613a28565b6148366101e0830185613af2565b614844610200830184613ad7565b9d9c50505050505050505050505050565b60a081016148638288613ae0565b6148706020830187613ae0565b61487d6040830186613ae0565b61488a6060830185613ae0565b6148976080830184613ae0565b9695505050505050565b60405181810167ffffffffffffffff811182821017156148c057600080fd5b604052919050565b90565b60200190565b5190565b6101400190565b90815260200190565b600061239560208401846135d1565b6000612395602084018461363c565b5090565b60006123956020840184613720565b6000610dcf8261493b565b151590565b6000610dcf82614916565b80610dd281614999565b6001600160a01b031690565b60ff1690565b6000610dcf82614926565b6000610dcf82614931565b60005b8381101561497e578181015183820152602001614966565b83811115611cc55750506000910152565b601f01601f191690565b6004811061134757fe5b6149ac81614916565b811461134757600080fd5b6149ac81614921565b6149ac816148c8565b6149ac81614926565b6149ac8161494756fe608060405234801561001057600080fd5b5061020b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80633ff591d9116100665780633ff591d9146100ca578063c41dd8ce146100d2578063cc44cadb146100da578063e00a4615146100e2578063e3f33d00146100ea57610093565b806308b04f62146100985780631139087a146100b257806311880cc8146100ba5780633b98dfdb146100c2575b600080fd5b6100a06100f2565b60408051918252519081900360200190f35b6100a0610109565b6100a0610121565b6100a0610136565b6100a061015a565b6100a0610174565b6100a061018b565b6100a06101a5565b6100a06101bb565b6f21b7b63630ba32b930b6213ab33332b960811b81565b704c6971756964617465457468507269636560781b81565b6d14d859995d1e525b9d195c9d985b60921b81565b7f526571756573744c6f616e5465726d73526174654c696d69740000000000000081565b7252657175697265645375626d697373696f6e7360681b81565b6f4d6178696d756d546f6c6572616e636560801b81565b7226b0bc34b6bab6a637b0b7223ab930ba34b7b760691b81565b6e5465726d7345787069727954696d6560881b81565b730a4cae6e0dedce6ca8af0e0d2e4f298cadccee8d60631b8156fea265627a7a72315820b6cc93d12d39f205ac91b27ee8876405b81cd752a680e010a2828f9ed81bbbb364736f6c63430005110032a365627a7a72315820063dbd5abca9eef8097d9e6dd74ec037f39829b98fdf7f7d247806f8946d36616c6578706572696d656e74616cf564736f6c63430005110040",
  "deployedBytecode": "0x6080604052600436106101665760003560e01c80638129fc1c116100d1578063ccdd9f5d1161008a578063e06174e411610064578063e06174e4146103cf578063e1ec3c68146103e4578063e3ed19021461041c578063eee8b7ff1461043c57610166565b8063ccdd9f5d1461037a578063d86d744e1461039a578063d8aed145146103af57610166565b80638129fc1c146102e6578063934b5d13146102fb578063a59a997314610328578063a5c5c7b21461033d578063aaaca55814610350578063b2016bd41461036557610166565b80634ac8eb5f116101235780634ac8eb5f1461023a578063513484541461024f578063530e784f1461026457806358895e3d146102845780636948f32b146102a6578063767a7b05146102c657610166565b806302bc2cdb1461016b5780631459457a1461018d578063158ef93e146101ad5780631a74856b146101d85780632630c12f146101eb5780633b9293001461020d575b600080fd5b34801561017757600080fd5b5061018b610186366004613970565b610469565b005b34801561019957600080fd5b5061018b6101a8366004613772565b610ae8565b3480156101b957600080fd5b506101c2610bb8565b6040516101cf919061451e565b60405180910390f35b61018b6101e6366004613821565b610bd7565b3480156101f757600080fd5b50610200610d98565b6040516101cf9190614478565b34801561021957600080fd5b5061022d610228366004613952565b610da7565b6040516101cf919061452c565b34801561024657600080fd5b5061022d610dd7565b34801561025b57600080fd5b5061022d610ddd565b34801561027057600080fd5b5061018b61027f366004613736565b610de3565b34801561029057600080fd5b50610299610f41565b6040516101cf919061453a565b3480156102b257600080fd5b506101c26102c1366004613952565b610f50565b3480156102d257600080fd5b5061018b6102e1366004613970565b6110a9565b3480156102f257600080fd5b5061018b6112c2565b34801561030757600080fd5b5061031b610316366004613952565b61134a565b6040516101cf9190614729565b34801561033457600080fd5b5061029961135b565b61018b61034b3660046138c8565b61136a565b34801561035c57600080fd5b506102006118f1565b34801561037157600080fd5b50610200611973565b34801561038657600080fd5b5061018b610395366004613952565b611982565b3480156103a657600080fd5b50610299611ccb565b3480156103bb57600080fd5b5061018b6103ca366004613970565b611cda565b3480156103db57600080fd5b506102996120e0565b3480156103f057600080fd5b506104046103ff366004613952565b612102565b6040516101cf9c9b9a9998979695949392919061479d565b34801561042857600080fd5b5061022d6104373660046137e7565b6121ba565b34801561044857600080fd5b5061045c610457366004613736565b6121e8565b6040516101cf919061450d565b8160016000828152606d60205260409020600e0154600160a01b900460ff16600381111561049357fe5b146104b95760405162461bcd60e51b81526004016104b0906146f9565b60405180910390fd5b6104c1610bb8565b6104dd5760405162461bcd60e51b81526004016104b0906146e9565b6104e5612254565b156105025760405162461bcd60e51b81526004016104b090614629565b606a546001600160a01b0316610517816122ce565b156105345760405162461bcd60e51b81526004016104b090614579565b603380546001908101918290556000868152606d6020526040902001546001600160a01b03163381146105795760405162461bcd60e51b81526004016104b0906146b9565b6000868152606d60205260409020600501548511156105aa5760405162461bcd60e51b81526004016104b090614599565b6000868152606d60205260409020600701544211156105db5760405162461bcd60e51b81526004016104b090614669565b6106f36105e66120e0565b6001600160a01b031663269012a0606e60009054906101000a90046001600160a01b03166001600160a01b03166311880cc86040518163ffffffff1660e01b815260040160206040518083038186803b15801561064257600080fd5b505afa158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061067a919081019061388c565b6040518263ffffffff1660e01b8152600401610696919061452c565b60206040518083038186803b1580156106ae57600080fd5b505afa1580156106c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106e6919081019061388c565b429063ffffffff61235316565b6000878152606d60205260409020600a015411156107235760405162461bcd60e51b81526004016104b090614659565b6000868152606d60205260409020600d8101869055600b81018690556006810154600390910154610787916237b1d09161077b916127109183919061076f908c9063ffffffff61239e16565b9063ffffffff61239e16565b9063ffffffff6123d816565b6000878152606d60205260409020600c01556107a16134d7565b6107aa8761241a565b90508060600151156107ce5760405162461bcd60e51b81526004016104b090614639565b6000878152606d60205260409020426008820155600e01805460ff60a01b1916600160a11b1790556107ff8761246b565b6000888152606d602052604090819020600e0180546001600160a01b0319166001600160a01b039384161790819055606a549151631397424760e11b81529183169263272e848e92610857928b921690600401614759565b600060405180830381600087803b15801561087157600080fd5b505af1158015610885573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e0154905163cd6dc68760e01b81526001600160a01b03909116915063cd6dc687906108cb9030908b906004016144f2565b600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b50505050610905612564565b6001600160a01b031663c7bbb113606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561096157600080fd5b505afa158015610975573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109999190810190613754565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b1580156109d257600080fd5b505afa1580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a0a9190810190613754565b896040518463ffffffff1660e01b8152600401610a29939291906144d7565b600060405180830381600087803b158015610a4357600080fd5b505af1158015610a57573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e81015460019091015491516001600160a01b03918216935091169089907f85b5516a17ce775661a4b967b1fb30c852678f6598d86d9f3c99b7b60ff2d0ce90610ab6908b9061452c565b60405180910390a450506033548114610ae15760405162461bcd60e51b81526004016104b090614709565b5050505050565b610af0610bb8565b15610b0d5760405162461bcd60e51b81526004016104b090614719565b610b19858585856125de565b610b216120e0565b6001600160a01b031663a734f06e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b5957600080fd5b505afa158015610b6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b919190810190613754565b606780546001600160a01b0319166001600160a01b03929092169190911790555050505050565b600080604051610bc790614462565b6040519081900390205492915050565b8160016000828152606d60205260409020600e0154600160a01b900460ff166003811115610c0157fe5b1480610c33575060026000828152606d60205260409020600e0154600160a01b900460ff166003811115610c3157fe5b145b610c4f5760405162461bcd60e51b81526004016104b0906145d9565b610c57610bb8565b610c735760405162461bcd60e51b81526004016104b0906146e9565b610c7b612254565b15610c985760405162461bcd60e51b81526004016104b090614629565b606a546001600160a01b0316610cad816122ce565b15610cca5760405162461bcd60e51b81526004016104b090614579565b6000848152606d60205260409020600101546001600160a01b03868116911614610d065760405162461bcd60e51b81526004016104b0906145b9565b823414610d255760405162461bcd60e51b81526004016104b0906145c9565b60003411610d455760405162461bcd60e51b81526004016104b090614699565b610d4f848461277b565b846001600160a01b0316847feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c85604051610d89919061452c565b60405180910390a35050505050565b6069546001600160a01b031681565b6000818152606d60205260408120600b810154600c90910154610dcf9163ffffffff6127d416565b90505b919050565b60665481565b60685481565b610deb610bb8565b610e075760405162461bcd60e51b81526004016104b0906146e9565b610e0f6120e0565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401610e3a9190614486565b60006040518083038186803b158015610e5257600080fd5b505afa158015610e66573d6000803e3d6000fd5b50505050610e7c816001600160a01b03166127f9565b610e985760405162461bcd60e51b81526004016104b0906146a9565b60695460408051808201909152601b81527f4e45575f4f5241434c455f4d5553545f42455f50524f5649444544000000000060208201526001600160a01b0390911690610eee908290849063ffffffff61283516565b606980546001600160a01b0319166001600160a01b03848116918217909255604051909183169033907ff51f0fffc8121ee3747e0536c487d894894cdba960ccfb4ab385a88d51b16fed90600090a45050565b606b546001600160a01b031681565b6000610f5a612254565b80610f755750606a54610f75906001600160a01b03166122ce565b80610fa7575060026000838152606d60205260409020600e0154600160a01b900460ff166003811115610fa457fe5b14155b15610fb457506000610dd2565b6000828152606d602052604081206008810154600690910154909142610fe0848463ffffffff6127d416565b1090508015610ff55760019350505050610dd2565b6000858152606d60205260409020600e01546001600160a01b0316801561109257806001600160a01b031663415dfa5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561104f57600080fd5b505afa158015611063573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611087919081019061386e565b945050505050610dd2565b61109b8661241a565b606001519695505050505050565b8060016000828152606d60205260409020600e0154600160a01b900460ff1660038111156110d357fe5b1480611105575060026000828152606d60205260409020600e0154600160a01b900460ff16600381111561110357fe5b145b6111215760405162461bcd60e51b81526004016104b0906145d9565b611129610bb8565b6111455760405162461bcd60e51b81526004016104b0906146e9565b61114d612254565b1561116a5760405162461bcd60e51b81526004016104b090614629565b606a546001600160a01b031661117f816122ce565b1561119c5760405162461bcd60e51b81526004016104b090614579565b603380546001908101918290556000858152606d6020526040902001546001600160a01b031633146111e05760405162461bcd60e51b81526004016104b0906146c9565b600085116112005760405162461bcd60e51b81526004016104b090614619565b600061120b8561285e565b9050600061121882612895565b6000878152606d60205260408120600901549192509061123e908363ffffffff61235316565b90508781111561124b5750865b801561125c5761125c8782336129da565b336001600160a01b0316877f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd4183604051611296919061452c565b60405180910390a35050506033548114610ae15760405162461bcd60e51b81526004016104b090614709565b600054610100900460ff16806112db57506112db612a5b565b806112e9575060005460ff16155b6113055760405162461bcd60e51b81526004016104b090614679565b600054610100900460ff16158015611330576000805460ff1961ff0019909116610100171660011790555b60016033558015611347576000805461ff00191690555b50565b6113526134d7565b610dcf8261241a565b606a546001600160a01b031681565b611372610bb8565b61138e5760405162461bcd60e51b81526004016104b0906146e9565b611396612254565b156113b35760405162461bcd60e51b81526004016104b090614629565b6113c06020850185613736565b336001600160a01b038216146113e85760405162461bcd60e51b81526004016104b0906146b9565b6113f736869003860186613934565b8060a001516114046120e0565b6001600160a01b031663269012a0606e60009054906101000a90046001600160a01b03166001600160a01b031663cc44cadb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561146057600080fd5b505afa158015611474573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611498919081019061388c565b6040518263ffffffff1660e01b81526004016114b4919061452c565b60206040518083038186803b1580156114cc57600080fd5b505afa1580156114e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611504919081019061388c565b10156115225760405162461bcd60e51b81526004016104b090614559565b61152a6120e0565b6001600160a01b03166369ff7744606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561158657600080fd5b505afa15801561159a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115be9190810190613754565b83608001516040518363ffffffff1660e01b81526004016115e09291906144f2565b60206040518083038186803b1580156115f857600080fd5b505afa15801561160c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611630919081019061386e565b1561164d5760405162461bcd60e51b81526004016104b090614589565b61165a8160800151612a61565b6116765760405162461bcd60e51b81526004016104b0906146d9565b8234146116955760405162461bcd60e51b81526004016104b0906145c9565b600061169f612dd1565b606b5460405163064e5d4960e01b8152919250600091829182916001600160a01b039091169063064e5d49906116dd908d908d908d90600401614737565b606060405180830381600087803b1580156116f757600080fd5b505af115801561170b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061172f919081019061398f565b9194509250905061175184611749368d90038d018d613934565b858585612ddf565b6000858152606d6020908152604091829020835181558382015180516001830180546001600160a01b03199081166001600160a01b0393841617909155938201516002840180548616918316919091179055818501516003808501919091556060808401516004860155608080850151600587015560a0948501516006870155968801516007860155870151600885015594860151600984015590850151600a83015560c0850151600b83015560e0850151600c830155610100850151600d830155610120850151600e83018054909416911617808355610140850151919391929160ff60a01b1990911690600160a01b90849081111561184e57fe5b02179055506101609190910151600e9091018054911515600160a81b0260ff60a81b19909216919091179055341561188a5761188a843461277b565b606c600061189b60208d018d613736565b6001600160a01b0316815260208082019290925260400160009081208054600181018255908252919020018490556118e5846118dc368d90038d018d613934565b85858534612fc7565b50505050505050505050565b606a546040805163155594ab60e31b815290516000926001600160a01b03169163aaaca558916004808301926020929190829003018186803b15801561193657600080fd5b505afa15801561194a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061196e9190810190613754565b905090565b6067546001600160a01b031681565b8060026000828152606d60205260409020600e0154600160a01b900460ff1660038111156119ac57fe5b146119c95760405162461bcd60e51b81526004016104b090614609565b6119d1610bb8565b6119ed5760405162461bcd60e51b81526004016104b0906146e9565b6119f5612254565b15611a125760405162461bcd60e51b81526004016104b090614629565b606a546001600160a01b0316611a27816122ce565b15611a445760405162461bcd60e51b81526004016104b090614579565b6033805460010190819055611a5884610f50565b611a745760405162461bcd60e51b81526004016104b0906145f9565b6000848152606d60205260408120600e8101805460ff60a01b1916600360a01b1760ff60a81b1916600160a81b1790556009015490611ab282613092565b9050611abf8683336129da565b6000611bdf61271061077b611ad26120e0565b6001600160a01b031663269012a0606e60009054906101000a90046001600160a01b03166001600160a01b0316631139087a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b2e57600080fd5b505afa158015611b42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b66919081019061388c565b6040518263ffffffff1660e01b8152600401611b82919061452c565b60206040518083038186803b158015611b9a57600080fd5b505afa158015611bae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611bd2919081019061388c565b859063ffffffff61239e16565b606a546040516382f7b02760e01b81529192506001600160a01b0316906382f7b02790611c129084903390600401614767565b600060405180830381600087803b158015611c2c57600080fd5b505af1158015611c40573d6000803e3d6000fd5b5050506000888152606d6020526040908190206001015490516001600160a01b03909116915088907f9950a0562c02382e2e840daa73082d5be7660ce37601f28fa4c84089c11e8a0690611c9990339088908790614494565b60405180910390a35050506033548114611cc55760405162461bcd60e51b81526004016104b090614709565b50505050565b606e546001600160a01b031681565b8060026000828152606d60205260409020600e0154600160a01b900460ff166003811115611d0457fe5b14611d215760405162461bcd60e51b81526004016104b090614609565b611d29610bb8565b611d455760405162461bcd60e51b81526004016104b0906146e9565b611d4d612254565b15611d6a5760405162461bcd60e51b81526004016104b090614629565b606a546001600160a01b0316611d7f816122ce565b15611d9c5760405162461bcd60e51b81526004016104b090614579565b603380546001019081905584611dc45760405162461bcd60e51b81526004016104b090614569565b846000611dd086610da7565b905081811015611dde578091505b611dee818363ffffffff61235316565b9050611dfa8683613188565b80611e9e576000868152606d60205260409020600e8101805460ff60a01b1916600360a01b1790556009810154600190910154611e4390889083906001600160a01b03166129da565b6000878152606d6020526040908190206001015490516001600160a01b039091169088907f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd4190611e9490859061452c565b60405180910390a3505b606a5460405163acb7081560e01b81526001600160a01b039091169063acb7081590611ed09085903390600401614767565b600060405180830381600087803b158015611eea57600080fd5b505af1158015611efe573d6000803e3d6000fd5b50505050611f0a612564565b6001600160a01b03166362e269ef606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015611f6657600080fd5b505afa158015611f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f9e9190810190613754565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b158015611fd757600080fd5b505afa158015611feb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061200f9190810190613754565b856040518463ffffffff1660e01b815260040161202e939291906144d7565b600060405180830381600087803b15801561204857600080fd5b505af115801561205c573d6000803e3d6000fd5b5050506000878152606d6020526040908190206001015490516001600160a01b03909116915087907f20a1f2ec363af45dc5ee7d9d622f2dd68b52501c382126c7f04b53663c4c69bf906120b590869033908790614782565b60405180910390a350506033548114610ae15760405162461bcd60e51b81526004016104b090614709565b60008060006040516120f19061446d565b604051908190039020549250505090565b606d602090815260009182526040918290208054835160c08101855260018301546001600160a01b03908116825260028401548116948201949094526003830154948101949094526004820154606085015260058201546080850152600682015460a0850152600782015460088301546009840154600a850154600b860154600c870154600d880154600e9098015496999895979496939592949193909281169060ff600160a01b8204811691600160a81b9004168c565b606c60205281600052604060002081815481106121d357fe5b90600052602060002001600091509150505481565b6001600160a01b0381166000908152606c602090815260409182902080548351818402810184019094528084526060939283018282801561224857602002820191906000526020600020905b815481526020019060010190808311612234575b50505050509050919050565b600061225e6120e0565b6001600160a01b031663b187bd266040518163ffffffff1660e01b815260040160206040518083038186803b15801561229657600080fd5b505afa1580156122aa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061196e919081019061386e565b60006122d86120e0565b6001600160a01b0316633b668321836040518263ffffffff1660e01b81526004016123039190614478565b60206040518083038186803b15801561231b57600080fd5b505afa15801561232f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dcf919081019061386e565b600061239583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613244565b90505b92915050565b6000826123ad57506000612398565b828202828482816123ba57fe5b04146123955760405162461bcd60e51b81526004016104b090614649565b600061239583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613275565b6124226134d7565b6000828152606d6020526040812060090154908061243f856132ac565b604080516080810182528681526020810193909352820181905293909311606084015250909392505050565b60006124756120e0565b6001600160a01b031663bdd1daaa6040518163ffffffff1660e01b815260040160206040518083038186803b1580156124ad57600080fd5b505afa1580156124c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124e591908101906138aa565b6001600160a01b0316634614874e30846040518363ffffffff1660e01b81526004016125129291906144f2565b602060405180830381600087803b15801561252c57600080fd5b505af1158015612540573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dcf9190810190613754565b600061256e6120e0565b6001600160a01b0316631390f8d76040518163ffffffff1660e01b815260040160206040518083038186803b1580156125a657600080fd5b505afa1580156125ba573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061196e91908101906138aa565b6125e6610bb8565b156126035760405162461bcd60e51b81526004016104b090614719565b60408051808201909152601681527550524f564944455f4f5241434c455f4144445245535360501b602082015261264a906001600160a01b0386169063ffffffff6132d016565b60408051808201909152601c81527f50524f564944455f4c454e44494e475f504f4f4c5f41444452455353000000006020820152612698906001600160a01b0385169063ffffffff6132d016565b60408051808201909152601b81527f50524f56494445445f4c4f414e5f5445524d535f41444452455353000000000060208201526126e6906001600160a01b0384169063ffffffff6132d016565b6126ef816132fd565b606980546001600160a01b038087166001600160a01b031992831617909255606a8054868416908316179055606b80549285169290911691909117905560405161273890613501565b604051809103906000f080158015612754573d6000803e3d6000fd5b50606e80546001600160a01b0319166001600160a01b039290921691909117905550505050565b60665461278e908263ffffffff6127d416565b6066556000828152606d60205260409020600901546127b3908263ffffffff6127d416565b6000928352606d602052604090922060098101929092555042600a90910155565b6000828201838110156123955760405162461bcd60e51b81526004016104b0906145a9565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061282d57508115155b949350505050565b61283f83836133af565b8190611cc55760405162461bcd60e51b81526004016104b09190614548565b60008061286a83610da7565b6000848152606d602052604090206004015490915061282d61271061077b848463ffffffff61239e16565b60008061292f606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156128e957600080fd5b505afa1580156128fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129219190810190613754565b6001600160a01b03166133c1565b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b15801561298157600080fd5b505afa158015612995573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129b9919081019061388c565b905060006129d18361077b878563ffffffff61239e16565b95945050505050565b6066546129ed908363ffffffff61235316565b6066556000838152606d6020526040902060090154612a12908363ffffffff61235316565b6000848152606d60205260408082206009019290925590516001600160a01b0383169184156108fc02918591818181858888f19350505050158015611cc5573d6000803e3d6000fd5b303b1590565b600080612a6c6120e0565b6001600160a01b031663dc21a6a06040518163ffffffff1660e01b815260040160206040518083038186803b158015612aa457600080fd5b505afa158015612ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612adc91908101906138aa565b6001600160a01b0316631fb7cec9606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612b3857600080fd5b505afa158015612b4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b709190810190613754565b6067546040516001600160e01b031960e085901b168152612b9e92916001600160a01b0316906004016144bc565b60206040518083038186803b158015612bb657600080fd5b505afa158015612bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612bee9190810190613754565b90506001600160a01b038116612c165760405162461bcd60e51b81526004016104b090614689565b604051632319178560e11b81526000906001600160a01b038316906346322f0a90612c54906b14dd5c1c1b1e551bd119589d60a21b9060040161452c565b60206040518083038186803b158015612c6c57600080fd5b505afa158015612c80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612ca4919081019061388c565b90506000612cb0612564565b6001600160a01b031663db63323e606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612d0c57600080fd5b505afa158015612d20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d449190810190613754565b6067546040516001600160e01b031960e085901b168152612d7492916001600160a01b0316908a906004016144d7565b60206040518083038186803b158015612d8c57600080fd5b505afa158015612da0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612dc4919081019061388c565b9190911115949350505050565b606880546001810190915590565b612de761350e565b6000612f01612df46120e0565b6001600160a01b031663269012a0606e60009054906101000a90046001600160a01b03166001600160a01b031663e00a46156040518163ffffffff1660e01b815260040160206040518083038186803b158015612e5057600080fd5b505afa158015612e64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612e88919081019061388c565b6040518263ffffffff1660e01b8152600401612ea4919061452c565b60206040518083038186803b158015612ebc57600080fd5b505afa158015612ed0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612ef4919081019061388c565b429063ffffffff6127d416565b90506040518061018001604052808881526020016040518060c0016040528089600001516001600160a01b0316815260200189602001516001600160a01b031681526020018881526020018781526020018681526020018960a00151815250815260200182815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160016003811115612fb257fe5b81526000602090910152979650505050505050565b84602001516001600160a01b031685600001516001600160a01b0316877f0358f509931cba53bbb6a94b7f05a5178220a0c7ddb54b1a1722df9e6ed6aa098787878b60a00151606d60008f815260200190815260200160002060070154604051613035959493929190614855565b60405180910390a4801561308a5784600001516001600160a01b0316867feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c83604051613081919061452c565b60405180910390a35b505050505050565b6000806130e6606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156128e957600080fd5b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b15801561313857600080fd5b505afa15801561314c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613170919081019061388c565b905060006129d18261077b878663ffffffff61239e16565b6000828152606d60205260409020600b015481111561320b576000828152606d60205260409020600b015481906131c690829063ffffffff61235316565b6000848152606d60205260408120600b810191909155600c01549091506131f3908263ffffffff61235316565b6000848152606d60205260409020600c015550613240565b6000828152606d60205260409020600b015461322d908263ffffffff61235316565b6000838152606d60205260409020600b01555b5050565b600081848411156132685760405162461bcd60e51b81526004016104b09190614548565b50508183035b9392505050565b600081836132965760405162461bcd60e51b81526004016104b09190614548565b5060008385816132a257fe5b0495945050505050565b60008060006132ba8461285e565b9050806132c682612895565b9250925050915091565b6132d982613442565b81906132f85760405162461bcd60e51b81526004016104b09190614548565b505050565b613305610bb8565b156133225760405162461bcd60e51b81526004016104b090614719565b60408051808201909152601981527f53455454494e47535f4d5553545f42455f50524f5649444544000000000000006020820152613370906001600160a01b0383169063ffffffff6132d016565b613382816001600160a01b03166127f9565b61339e5760405162461bcd60e51b81526004016104b0906145e9565b6133a6613450565b6113478161346e565b6001600160a01b039081169116141590565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156133fd57600080fd5b505afa158015613411573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061343591908101906139d2565b60ff16600a0a9392505050565b6001600160a01b0316151590565b600060405161345e90614462565b6040519081900390206001905550565b60006134786120e0565b6001600160a01b0316146134b957613498816001600160a01b03166127f9565b6134b45760405162461bcd60e51b81526004016104b0906145e9565b611347565b60006040516134c79061446d565b6040519081900390208290555050565b60405180608001604052806000815260200160008152602001600081526020016000151581525090565b61022b806149dc83390190565b60405180610180016040528060008152602001613529613589565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681526020016000600381111561357c57fe5b8152600060209091015290565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b8035612398816149a3565b8051612398816149a3565b60008083601f8401126135f957600080fd5b50813567ffffffffffffffff81111561361157600080fd5b6020830191508361014082028301111561362a57600080fd5b9250929050565b8051612398816149b7565b8035612398816149c0565b8051612398816149c0565b8051612398816149c9565b600060e0828403121561366f57600080fd5b50919050565b600060e0828403121561368757600080fd5b61369160e06148a1565b9050600061369f84846135d1565b82525060206136b0848483016135d1565b60208301525060406136c4848285016135d1565b60408301525060606136d88482850161363c565b60608301525060806136ec8482850161363c565b60808301525060a06137008482850161363c565b60a08301525060c06137148482850161363c565b60c08301525092915050565b8035612398816149d2565b8051612398816149d2565b60006020828403121561374857600080fd5b600061282d84846135d1565b60006020828403121561376657600080fd5b600061282d84846135dc565b600080600080600060a0868803121561378a57600080fd5b600061379688886135d1565b95505060206137a7888289016135d1565b94505060406137b8888289016135d1565b93505060606137c9888289016135d1565b92505060806137da888289016135d1565b9150509295509295909350565b600080604083850312156137fa57600080fd5b600061380685856135d1565b92505060206138178582860161363c565b9150509250929050565b60008060006060848603121561383657600080fd5b600061384286866135d1565b93505060206138538682870161363c565b92505060406138648682870161363c565b9150509250925092565b60006020828403121561388057600080fd5b600061282d8484613631565b60006020828403121561389e57600080fd5b600061282d8484613647565b6000602082840312156138bc57600080fd5b600061282d8484613652565b60008060008061012085870312156138df57600080fd5b60006138eb878761365d565b94505060e085013567ffffffffffffffff81111561390857600080fd5b613914878288016135e7565b93509350506101006139288782880161363c565b91505092959194509250565b600060e0828403121561394657600080fd5b600061282d8484613675565b60006020828403121561396457600080fd5b600061282d848461363c565b6000806040838503121561398357600080fd5b6000613806858561363c565b6000806000606084860312156139a457600080fd5b60006139b08686613647565b93505060206139c186828701613647565b925050604061386486828701613647565b6000602082840312156139e457600080fd5b600061282d848461372b565b60006139fc83836142c5565b50506101400190565b6000613a118383613ae0565b505060200190565b613a228161494d565b82525050565b613a2281614916565b6000613a3d83856148dc565b9350613a48826148c8565b8060005b85811015613a7e57613a5e8284614903565b613a6888826139f0565b9750613a73836148d5565b925050600101613a4c565b509495945050505050565b6000613a94826148d1565b613a9e81856148dc565b9350613aa9836148cb565b8060005b83811015613a7e578151613ac18882613a05565b9750613acc836148cb565b925050600101613aad565b613a2281614921565b613a22816148c8565b613a2281614926565b613a2281614958565b6000613b06826148d1565b613b1081856148dc565b9350613b20818560208601614963565b613b298161498f565b9093019392505050565b6000613b40601d836148dc565b7f4455524154494f4e5f455843454544535f4d41585f4455524154494f4e000000815260200192915050565b6000613b79601c83610dd2565b7f54496e697469616c697a61626c652e6973496e697469616c697a6564000000008152601c0192915050565b6000613bb26015836148dc565b74105353d5539517d59053155157d491545552549151605a1b815260200192915050565b6000613be36016836148dc565b7513115391125391d7d413d3d317d254d7d4105554d15160521b815260200192915050565b6000613c156019836148dc565b7f414d4f554e545f455843454544535f4d41585f414d4f554e5400000000000000815260200192915050565b6000613c4e6011836148dc565b7013505617d313d05397d15610d151511151607a1b815260200192915050565b6000613c7b601b836148dc565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000613cb46019836148dc565b7f424f52524f5745525f4c4f414e5f49445f4d49534d4154434800000000000000815260200192915050565b6000613ced6014836148dc565b73125390d3d4949150d517d1551217d05353d5539560621b815260200192915050565b6000613d1d6016836148dc565b751313d05397d393d517d050d512559157d3d497d4d15560521b815260200192915050565b6000613d4f601b836148dc565b7f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000815260200192915050565b6000613d886017836148dc565b7f444f45534e545f4e4545445f4c49515549444154494f4e000000000000000000815260200192915050565b6000613dc1600f836148dc565b6e4c4f414e5f4e4f545f41435449564560881b815260200192915050565b6000613dec6014836148dc565b7343414e4e4f545f57495448445241575f5a45524f60601b815260200192915050565b6000613e1c6012836148dc565b71141310551193d49357d254d7d4105554d15160721b815260200192915050565b6000613e4a6018836148dc565b7f4d4f52455f434f4c4c41544552414c5f52455155495245440000000000000000815260200192915050565b6000613e836021836148dc565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000613ec6601d836148dc565b7f434f4c4c41544552414c5f4445504f53495445445f524543454e544c59000000815260200192915050565b6000613eff6012836148dc565b711313d05397d511549354d7d156141254915160721b815260200192915050565b6000613f2d602e836148dc565b7f436f6e747261637420696e7374616e63652068617320616c726561647920626581526d195b881a5b9a5d1a585b1a5e995960921b602082015260400192915050565b6000613f7d6018836148dc565b7f41544d5f4e4f545f464f554e445f464f525f4d41524b45540000000000000000815260200192915050565b6000613fb66013836148dc565b7243414e4e4f545f4445504f5349545f5a45524f60681b815260200192915050565b6000613fe5601e836148dc565b7f4f5241434c455f4d5553545f434f4e54524143545f4e4f545f454d5054590000815260200192915050565b600061401e6017836148dc565b7f424f52524f5745525f4d5553545f42455f53454e444552000000000000000000815260200192915050565b60006140576016836148dc565b7521a0a62622a92fa227a2a9a72a2fa7aba72fa627a0a760511b815260200192915050565b6000614089601883610dd2565b7f426173655570677261646561626c652e73657474696e67730000000000000000815260180192915050565b60006140c2601a836148dc565b7f535550504c595f544f5f444542545f455843454544535f4d4158000000000000815260200192915050565b60006140fb6018836148dc565b7f434f4e54524143545f4e4f545f494e495449414c495a45440000000000000000815260200192915050565b6000614134600c836148dc565b6b1313d05397d393d517d4d15560a21b815260200192915050565b600061415c601f836148dc565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b6000614195601c836148dc565b7f434f4e54524143545f414c52454144595f494e495449414c495a454400000000815260200192915050565b805160808301906141d28482613ae0565b5060208201516141e56020850182613ae0565b5060408201516141f86040850182613ae0565b506060820151611cc56060850182613ad7565b60e0820161421982806148e5565b6142238482613a28565b5061423160208301836148e5565b61423e6020850182613a28565b5061424c60408301836148e5565b6142596040850182613a28565b5061426760608301836148f4565b6142746060850182613ae0565b5061428260808301836148f4565b61428f6080850182613ae0565b5061429d60a08301836148f4565b6142aa60a0850182613ae0565b506142b860c08301836148f4565b611cc560c0850182613ae0565b61014082016142d482806148e5565b6142de8482613a28565b506142ec60208301836148e5565b6142f96020850182613a28565b5061430760408301836148f4565b6143146040850182613ae0565b5061432260608301836148f4565b61432f6060850182613ae0565b5061433d60808301836148f4565b61434a6080850182613ae0565b5061435860a08301836148f4565b61436560a0850182613ae0565b5061437360c0830183614903565b611cc560c08501826143f0565b805160c08301906143918482613a28565b5060208201516143a46020850182613a28565b5060408201516143b76040850182613ae0565b5060608201516143ca6060850182613ae0565b5060808201516143dd6080850182613ae0565b5060a0820151611cc560a0850182613ae0565b608082016143fe82806148f4565b6144088482613ae0565b506144166020830183614907565b6144236020850182614459565b5061443160408301836148f4565b61443e6040850182613ae0565b5061444c60608301836148f4565b611cc56060850182613ae0565b613a2281614947565b600061239882613b6c565b60006123988261407c565b602081016123988284613a28565b602081016123988284613a19565b606081016144a28286613a19565b6144af6020830185613ae0565b61282d6040830184613ae0565b604081016144ca8285613a28565b61326e6020830184613a28565b606081016144e58286613a28565b6144af6020830185613a28565b604081016145008285613a28565b61326e6020830184613ae0565b602080825281016123958184613a89565b602081016123988284613ad7565b602081016123988284613ae0565b602081016123988284613ae9565b602080825281016123958184613afb565b60208082528101610dcf81613b33565b60208082528101610dcf81613ba5565b60208082528101610dcf81613bd6565b60208082528101610dcf81613c08565b60208082528101610dcf81613c41565b60208082528101610dcf81613c6e565b60208082528101610dcf81613ca7565b60208082528101610dcf81613ce0565b60208082528101610dcf81613d10565b60208082528101610dcf81613d42565b60208082528101610dcf81613d7b565b60208082528101610dcf81613db4565b60208082528101610dcf81613ddf565b60208082528101610dcf81613e0f565b60208082528101610dcf81613e3d565b60208082528101610dcf81613e76565b60208082528101610dcf81613eb9565b60208082528101610dcf81613ef2565b60208082528101610dcf81613f20565b60208082528101610dcf81613f70565b60208082528101610dcf81613fa9565b60208082528101610dcf81613fd8565b60208082528101610dcf81614011565b60208082528101610dcf8161404a565b60208082528101610dcf816140b5565b60208082528101610dcf816140ee565b60208082528101610dcf81614127565b60208082528101610dcf8161414f565b60208082528101610dcf81614188565b6080810161239882846141c1565b6101008101614746828661420b565b81810360e08301526129d1818486613a31565b604081016144ca8285613ae0565b604081016147758285613ae0565b61326e6020830184613a19565b606081016147908286613ae0565b6144af6020830185613a19565b61022081016147ac828f613ae0565b6147b9602083018e614380565b6147c660e083018d613ae0565b6147d461010083018c613ae0565b6147e261012083018b613ae0565b6147f061014083018a613ae0565b6147fe610160830189613ae0565b61480c610180830188613ae0565b61481a6101a0830187613ae0565b6148286101c0830186613a28565b6148366101e0830185613af2565b614844610200830184613ad7565b9d9c50505050505050505050505050565b60a081016148638288613ae0565b6148706020830187613ae0565b61487d6040830186613ae0565b61488a6060830185613ae0565b6148976080830184613ae0565b9695505050505050565b60405181810167ffffffffffffffff811182821017156148c057600080fd5b604052919050565b90565b60200190565b5190565b6101400190565b90815260200190565b600061239560208401846135d1565b6000612395602084018461363c565b5090565b60006123956020840184613720565b6000610dcf8261493b565b151590565b6000610dcf82614916565b80610dd281614999565b6001600160a01b031690565b60ff1690565b6000610dcf82614926565b6000610dcf82614931565b60005b8381101561497e578181015183820152602001614966565b83811115611cc55750506000910152565b601f01601f191690565b6004811061134757fe5b6149ac81614916565b811461134757600080fd5b6149ac81614921565b6149ac816148c8565b6149ac81614926565b6149ac8161494756fe608060405234801561001057600080fd5b5061020b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80633ff591d9116100665780633ff591d9146100ca578063c41dd8ce146100d2578063cc44cadb146100da578063e00a4615146100e2578063e3f33d00146100ea57610093565b806308b04f62146100985780631139087a146100b257806311880cc8146100ba5780633b98dfdb146100c2575b600080fd5b6100a06100f2565b60408051918252519081900360200190f35b6100a0610109565b6100a0610121565b6100a0610136565b6100a061015a565b6100a0610174565b6100a061018b565b6100a06101a5565b6100a06101bb565b6f21b7b63630ba32b930b6213ab33332b960811b81565b704c6971756964617465457468507269636560781b81565b6d14d859995d1e525b9d195c9d985b60921b81565b7f526571756573744c6f616e5465726d73526174654c696d69740000000000000081565b7252657175697265645375626d697373696f6e7360681b81565b6f4d6178696d756d546f6c6572616e636560801b81565b7226b0bc34b6bab6a637b0b7223ab930ba34b7b760691b81565b6e5465726d7345787069727954696d6560881b81565b730a4cae6e0dedce6ca8af0e0d2e4f298cadccee8d60631b8156fea265627a7a72315820b6cc93d12d39f205ac91b27ee8876405b81cd752a680e010a2828f9ed81bbbb364736f6c63430005110032a365627a7a72315820063dbd5abca9eef8097d9e6dd74ec037f39829b98fdf7f7d247806f8946d36616c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "1347:3944:20:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:3944:20;;;;;;;",
  "deployedSourceMap": "1347:3944:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8011:2036:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8011:2036:26;;;;;;;;:::i;:::-;;4249:442:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4249:442:20;;;;;;;;:::i;1241:169:33:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1241:169:33;;;:::i;:::-;;;;;;;;;;;;;;;;1577:700:20;;;;;;;;;:::i;2989:26:26:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2989:26:26;;;:::i;:::-;;;;;;;;14192:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14192:151:26;;;;;;;;:::i;:::-;;;;;;;;2812:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2812:30:26;;;:::i;2954:28::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2954:28:26;;;:::i;15045:518::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15045:518:26;;;;;;;;:::i;3068:53::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3068:53:26;;;:::i;:::-;;;;;;;;13221:761;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13221:761:26;;;;;;;;:::i;6511:1153::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6511:1153:26;;;;;;;;:::i;769:214:134:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;769:214:134;;;:::i;14567:184:26:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14567:184:26;;;;;;;;:::i;:::-;;;;;;;;3022:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3022:39:26;;;:::i;2568:1258:20:-;;;;;;;;;:::i;6152:106:26:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6152:106:26;;;:::i;2849:30::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2849:30:26;;;:::i;11896:1114::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11896:1114:26;;;;;;;;:::i;3242:28::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3242:28:26;;;:::i;10234:1510::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10234:1510:26;;;;;;;;:::i;839:263:11:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;839:263:11;;;:::i;3185:50:26:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3185:50:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3128;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3128:50:26;;;;;;;;:::i;5891:132::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5891:132:26;;;;;;;;:::i;:::-;;;;;;;;8011:2036;8108:6;4258:32;4234:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4234:20:26;;;;:56;;;;;;;;;4226:81;;;;-1:-1:-1;;;4226:81:26;;;;;;;;;;;;;;;;;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;8205:11:26;;-1:-1:-1;;;;;8205:11:26;2718:33:7;8205:11:26;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:134;:18;;1409:1;1392:18;;;;;;;:13;8261::26;;;:5;:13;;;;;:23;:32;-1:-1:-1;;;;;8261:32:26;3548:10;:22;;3540:58;;;;-1:-1:-1;;;3540:58:26;;;;;;;;;8330:13;;;;:5;:13;;;;;:37;;;:53;-1:-1:-1;8330:53:26;8309:117;;;;-1:-1:-1;;;8309:117:26;;;;;;;;;8445:13;;;;:5;:13;;;;;:25;;;8474:3;-1:-1:-1;8445:32:26;8437:63;;;;-1:-1:-1;;;8437:63:26;;;;;;;;;8582:115;8611:10;:8;:10::i;:::-;-1:-1:-1;;;;;8611:34:26;;8646:6;;;;;;;;;-1:-1:-1;;;;;8646:6:26;-1:-1:-1;;;;;8646:30:26;;:32;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8646:32:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8646:32:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8646:32:26;;;;;;;;;8611:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8611:68:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8611:68:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8611:68:26;;;;;;;;;8582:3;;:115;:7;:115;:::i;:::-;8532:13;;;;:5;:13;;;;;:30;;;:165;;8511:241;;;;-1:-1:-1;;;8511:241:26;;;;;;;;;8763:13;;;;:5;:13;;;;;:28;;;:43;;;8816:27;;;:42;;;8982:32;;;;8927:36;;;;;8897:185;;2461:7;;8897:149;;2724:5;;8897:149;;8982:32;8897:67;;8794:12;;8897:67;:29;:67;:::i;:::-;:84;:118;:84;:118;:::i;:::-;:135;:149;:135;:149;:::i;:185::-;8868:13;;;;:5;:13;;;;;:26;;:214;9165:53;;:::i;:::-;9221:48;9253:6;9221:18;:48::i;:::-;9165:104;;9289:14;:37;;;9288:38;9280:75;;;;-1:-1:-1;;;9280:75:26;;;;;;;;;9366:13;;;;:5;:13;;;;;9396:3;9366:27;;;:33;9409:20;;:53;;-1:-1:-1;;;;9409:53:26;-1:-1:-1;;;9409:53:26;;;9495:21;9366:13;9495;:21::i;:::-;9472:13;;;;:5;:13;;;;;;;:20;;:44;;-1:-1:-1;;;;;;9472:44:26;-1:-1:-1;;;;;9472:44:26;;;;;;;;9588:11;;:58;;-1:-1:-1;;;9588:58:26;;:11;;;;:22;;:58;;9611:12;;9625:20;;9588:58;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9588:58:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;9673:13:26;;;;:5;:13;;;;;;;:20;;;9657:71;;-1:-1:-1;;;9657:71:26;;-1:-1:-1;;;;;9673:20:26;;;;-1:-1:-1;9657:48:26;;:71;;9714:4;;9679:6;;9657:71;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9657:71:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9657:71:26;;;;9739:10;:8;:10::i;:::-;-1:-1:-1;;;;;9739:25:26;;9778:11;;;;;;;;;-1:-1:-1;;;;;9778:11:26;-1:-1:-1;;;;;9778:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9778:26:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9778:26:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9778:26:26;;;;;;;;;9818:4;-1:-1:-1;;;;;9818:20:26;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9818:22:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9818:22:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9818:22:26;;;;;;;;;9854:12;9739:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9739:137:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;9984:13:26;;;;:5;:13;;;;;;;:20;;;;;9938:23;;;:32;9892:148;;-1:-1:-1;;;;;9984:20:26;;;;-1:-1:-1;9938:32:26;;;9990:6;;9892:148;;;;10018:12;;9892:148;;;;;;;;;;3608:1;1466::134;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:134;;;;;;;;;2788:1:7;2391;8011:2036:26;;;:::o;4249:442:20:-;706:13:33;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:33;;;;;;;;;4478:153:20;4503:18;4535;4567:25;4606:15;4478:11;:153::i;:::-;4660:10;:8;:10::i;:::-;-1:-1:-1;;;;;4660:22:20;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4660:24:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4660:24:20;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4660:24:20;;;;;;;;;4642:15;:42;;-1:-1:-1;;;;;;4642:42:20;-1:-1:-1;;;;;4642:42:20;;;;;;;;;;-1:-1:-1;;;;;4249:442:20:o;1241:169:33:-;1285:10;1307:12;421:55;;;;;;;;;;;;;;;1383:11;;1360:44;-1:-1:-1;;1360:44:33:o;1577:700:20:-;1741:6;4645:32:26;4621:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4621:20:26;;;;:56;;;;;;;;;:130;;;-1:-1:-1;4721:30:26;4697:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4697:20:26;;;;:54;;;;;;;;;4621:130;4600:199;;;;-1:-1:-1;;;4600:199:26;;;;;;;;;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;1838:11:20;;-1:-1:-1;;;;;1838:11:20;2718:33:7;1838:11:20;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1887:13:20;;;;:5;:13;;;;;:23;;:32;-1:-1:-1;;;;;1887:44:20;;;:32;;:44;1866:116;;;;-1:-1:-1;;;1866:116:20;;;;;;;;;2013:6;2000:9;:19;1992:52;;;;-1:-1:-1;;;1992:52:20;;;;;;;;;2074:1;2062:9;:13;2054:45;;;;-1:-1:-1;;;2054:45:20;;;;;;;;;2177:32;2194:6;2202;2177:16;:32::i;:::-;2253:8;-1:-1:-1;;;;;2225:45:20;2245:6;2225:45;2263:6;2225:45;;;;;;;;;;;;;;;2391:1:7;1577:700:20;;;;:::o;2989:26:26:-;;;-1:-1:-1;;;;;2989:26:26;;:::o;14192:151::-;14251:7;14308:13;;;:5;:13;;;;;:27;;;;14277:26;;;;;:59;;;:30;:59;:::i;:::-;14270:66;;14192:151;;;;:::o;2812:30::-;;;;:::o;2954:28::-;;;;:::o;15045:518::-;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;690:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;690:28:11;;719:10;690:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;690:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;690:40:11;;;;15233:27:26;:14;-1:-1:-1;;;;;15233:25:26;;:27::i;:::-;15225:70;;;;-1:-1:-1;;;15225:70:26;;;;;;;;;15338:11;;15360:79;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15338:11:26;;;;15360:79;;15338:11;;15393:14;;15360:79;:32;:79;:::i;:::-;15450:11;:28;;-1:-1:-1;;;;;;15450:28:26;-1:-1:-1;;;;;15450:28:26;;;;;;;;;15494:62;;15450:28;;15494:62;;;15513:10;;15494:62;;-1:-1:-1;;15494:62:26;740:1:11;15045:518:26;:::o;3068:53::-;;;-1:-1:-1;;;;;3068:53:26;;:::o;13221:761::-;13284:4;13317:11;:9;:11::i;:::-;:62;;;-1:-1:-1;13366:11:26;;13344:35;;-1:-1:-1;;;;;13366:11:26;13344:13;:35::i;:::-;13317:132;;;-1:-1:-1;13419:30:26;13395:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;13395:20:26;;;;:54;;;;;;;;;;13317:132;13300:197;;;-1:-1:-1;13481:5:26;13474:12;;13300:197;13507:17;13527:13;;;:5;:13;;;;;:27;;;;13583:32;;;;;13527:27;;13668:3;13642:23;13527:27;13583:32;13642:23;:13;:23;:::i;:::-;:29;13625:46;;13685:9;13681:51;;;13717:4;13710:11;;;;;;;13681:51;13742:21;13766:13;;;:5;:13;;;;;:20;;;-1:-1:-1;;;;;13766:20:26;13800:29;;13796:113;;13868:13;-1:-1:-1;;;;;13852:44:26;;:46;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13852:46:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13852:46:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13852:46:26;;;;;;;;;13845:53;;;;;;;;13796:113;13926:26;13945:6;13926:18;:26::i;:::-;:49;;;;13221:761;-1:-1:-1;;;;;;13221:761:26:o;6511:1153::-;6612:6;4645:32;4621:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4621:20:26;;;;:56;;;;;;;;;:130;;;-1:-1:-1;4721:30:26;4697:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4697:20:26;;;;:54;;;;;;;;;4621:130;4600:199;;;;-1:-1:-1;;;4600:199:26;;;;;;;;;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;6709:11:26;;-1:-1:-1;;;;;6709:11:26;2718:33:7;6709:11:26;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:134;:18;;1409:1;1392:18;;;;;;;-1:-1:-1;6782:13:26;;;:5;:13;;;;;:23;:32;-1:-1:-1;;;;;6782:32:26;6768:10;:46;6760:81;;;;-1:-1:-1;;;6760:81:26;;;;;;;;;6868:1;6859:6;:10;6851:43;;;;-1:-1:-1;;;6851:43:26;;;;;;;;;6992:29;7024:36;7053:6;7024:28;:36::i;:::-;6992:68;;7070:27;7100:41;7119:21;7100:18;:41::i;:::-;7231:24;7258:13;;;:5;:13;;;;;:24;;;7070:71;;-1:-1:-1;7231:24:26;7258:49;;7070:71;7258:49;:28;:49;:::i;:::-;7231:76;;7340:6;7321:16;:25;7317:81;;;-1:-1:-1;7381:6:26;7317:81;7412:20;;7408:177;;7519:55;7537:6;7545:16;7563:10;7519:17;:55::i;:::-;7628:10;-1:-1:-1;;;;;7600:57:26;7620:6;7600:57;7640:16;7600:57;;;;;;;;;;;;;;;1466:1:134;;;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:134;;;;;;;;769:214;1024:12:135;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:135;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:135;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:135;;;;;1225:18;1213:4;1225:18;;;1170:80;975:1:134;959:13;:17;1264:55:135;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:135;;;1264:55;769:214:134;:::o;14567:184:26:-;14657:38;;:::i;:::-;14718:26;14737:6;14718:18;:26::i;3022:39::-;;;-1:-1:-1;;;;;3022:39:26;;:::o;2568:1258:20:-;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;2844:16:20;;;;:7;:16;;;3548:10:26;-1:-1:-1;;;;;3548:22:26;;;3540:58;;;;-1:-1:-1;;;3540:58:26;;;;;;;;;5138:629;;;;;;;2891:7:20;5138:629:26;;;5338:11;:20;;;5244:10;:8;:10::i;:::-;-1:-1:-1;;;;;5244:34:26;;5279:6;;;;;;;;;-1:-1:-1;;;;;5279:6:26;-1:-1:-1;;;;;5279:36:26;;:38;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5279:38:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5279:38:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5279:38:26;;;;;;;;;5244:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5244:74:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5244:74:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5244:74:26;;;;;;;;;:114;;5223:190;;;;-1:-1:-1;;;5223:190:26;;;;;;;;;5445:10;:8;:10::i;:::-;-1:-1:-1;;;;;5445:31:26;;5494:11;;;;;;;;;-1:-1:-1;;;;;5494:11:26;-1:-1:-1;;;;;5494:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5494:26:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5494:26:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5494:26:26;;;;;;;;;5538:11;:18;;;5445:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5445:125:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5445:125:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5445:125:26;;;;;;;;;5444:126;5423:198;;;;-1:-1:-1;;;5423:198:26;;;;;;;;;5652:45;5678:11;:18;;;5652:25;:45::i;:::-;5631:118;;;;-1:-1:-1;;;5631:118:26;;;;;;;;;2935:16:20;2922:9;:29;2914:62;;;;-1:-1:-1;;;2914:62:20;;;;;;;;;2987:14;3004:23;:21;:23::i;:::-;3156:18;;:53;;-1:-1:-1;;;3156:53:20;;2987:40;;-1:-1:-1;3051:20:20;;;;;;-1:-1:-1;;;;;3156:18:20;;;;:33;;:53;;3190:7;;3199:9;;;;3156:53;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3156:53:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3156:53:20;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3156:53:20;;;;;;;;;3037:172;;-1:-1:-1;3037:172:20;-1:-1:-1;3037:172:20;-1:-1:-1;3236:143:20;3260:6;3236:143;;;;;;;3280:7;3236:143;;;3301:12;3327:15;3356:13;3236:10;:143::i;:::-;3220:13;;;;:5;:13;;;;;;;;;:159;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3220:159:20;;;-1:-1:-1;;;;;3220:159:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;;:159;;;-1:-1:-1;;;;3220:159:20;;;;-1:-1:-1;;;3220:159:20;;;;;;;;;;;;;;-1:-1:-1;3220:159:20;;;;;;;;;;;;;;;-1:-1:-1;;;3220:159:20;-1:-1:-1;;;;3220:159:20;;;;;;;;;3394:9;:13;3390:151;;3495:35;3512:6;3520:9;3495:16;:35::i;:::-;3551:13;:31;3565:16;;;;:7;:16;;;-1:-1:-1;;;;;3551:31:20;;;;;;;;;;;;;-1:-1:-1;3551:31:20;;;27:10:-1;;39:1;23:18;;45:23;;3551:44:20;;;;;;;;;;3606:213;3588:6;3606:213;;;;;;;3697:7;3606:213;;;3718:12;3744:15;3773:13;3800:9;3606:57;:213::i;:::-;5759:1:26;;;;3608;2391::7;2568:1258:20;;;;:::o;6152:106:26:-;6225:11;;:26;;;-1:-1:-1;;;6225:26:26;;;;6199:7;;-1:-1:-1;;;;;6225:11:26;;:24;;:26;;;;;;;;;;;;;;:11;:26;;;5:2:-1;;;;30:1;27;20:12;5:2;6225:26:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6225:26:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6225:26:26;;;;;;;;;6218:33;;6152:106;:::o;2849:30::-;;;-1:-1:-1;;;;;2849:30:26;;:::o;11896:1114::-;11971:6;3894:30;3870:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;3870:20:26;;;;:54;;;;;;;;;3849:116;;;;-1:-1:-1;;;3849:116:26;;;;;;;;;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;12068:11:26;;-1:-1:-1;;;;;12068:11:26;2718:33:7;12068:11:26;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:134;:18;;1409:1;1392:18;;;;;12127:24:26;12144:6;12127:16;:24::i;:::-;12119:60;;;;-1:-1:-1;;;12119:60:26;;;;;;;;;12190:13;;;;:5;:13;;;;;:20;;;:53;;-1:-1:-1;;;;12190:53:26;-1:-1:-1;;;12190:53:26;-1:-1:-1;;;;12253:31:26;-1:-1:-1;;;12253:31:26;;;12316:24;;;;12379:30;12316:24;12379:18;:30::i;:::-;12350:59;;12476:49;12494:6;12502:10;12514;12476:17;:49::i;:::-;12536:20;12559:140;2724:5;12559:109;12595:10;:8;:10::i;:::-;-1:-1:-1;;;;;12595:34:26;;12630:6;;;;;;;;;-1:-1:-1;;;;;12630:6:26;-1:-1:-1;;;;;12630:34:26;;:36;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12630:36:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12630:36:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12630:36:26;;;;;;;;;12595:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12595:72:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12595:72:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12595:72:26;;;;;;;;;12559:18;;:109;:35;:109;:::i;:140::-;12767:11;;:56;;-1:-1:-1;;;12767:56:26;;12536:163;;-1:-1:-1;;;;;;12767:11:26;;:30;;:56;;12536:163;;12812:10;;12767:56;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12767:56:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;12887:13:26;;;;:5;:13;;;;;;;:23;;:32;12839:164;;-1:-1:-1;;;;;12887:32:26;;;;-1:-1:-1;12893:6:26;;12839:164;;;;12933:10;;12957;;12981:12;;12839:164;;;;;;;;;;1466:1:134;;;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:134;;;;;;;;;2788:1:7;2391;11896:1114:26;;:::o;3242:28::-;;;-1:-1:-1;;;;;3242:28:26;;:::o;10234:1510::-;10317:6;3894:30;3870:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;3870:20:26;;;;:54;;;;;;;;;3849:116;;;;-1:-1:-1;;;3849:116:26;;;;;;;;;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;10414:11:26;;-1:-1:-1;;;;;10414:11:26;2718:33:7;10414:11:26;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:134;:18;;1409:1;1392:18;;;;;10473:10:26;10465:44;;;;-1:-1:-1;;;10465:44:26;;;;;;;;;10583:6;10567:13;10619:20;10632:6;10619:12;:20::i;:::-;10599:40;;10665:5;10653:9;:17;10649:65;;;10694:9;10686:17;;10649:65;10782:20;:9;10796:5;10782:20;:13;:20;:::i;:::-;10770:32;;10812:23;10821:6;10829:5;10812:8;:23::i;:::-;10923:14;10919:416;;10953:13;;;;:5;:13;;;;;:20;;;:53;;-1:-1:-1;;;;10953:53:26;-1:-1:-1;;;10953:53:26;;;11048:24;;;;-1:-1:-1;11130:23:26;;;:32;11086:77;;10953:13;;11048:24;;-1:-1:-1;;;;;11130:32:26;11086:17;:77::i;:::-;11244:13;;;;:5;:13;;;;;;;:23;;:32;11183:141;;-1:-1:-1;;;;;11244:32:26;;;;11250:6;;11183:141;;;;11294:16;;11183:141;;;;;;;;;;10919:416;;11389:11;;:36;;-1:-1:-1;;;11389:36:26;;-1:-1:-1;;;;;11389:11:26;;;;:17;;:36;;11407:5;;11414:10;;11389:36;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11389:36:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11389:36:26;;;;11436:10;:8;:10::i;:::-;-1:-1:-1;;;;;11436:28:26;;11478:11;;;;;;;;;-1:-1:-1;;;;;11478:11:26;-1:-1:-1;;;;;11478:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11478:26:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11478:26:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11478:26:26;;;;;;;;;11518:4;-1:-1:-1;;;;;11518:20:26;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11518:22:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11518:22:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11518:22:26;;;;;;;;;11554:5;11436:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11436:133:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;11629:13:26;;;;:5;:13;;;;;;;:23;;:32;11585:152;;-1:-1:-1;;;;;11629:32:26;;;;-1:-1:-1;11635:6:26;;11585:152;;;;11675:5;;11694:10;;11718:9;;11585:152;;;;;;;;;;1466:1:134;;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:134;;;;;;;;839:263:11;880:17;909:23;943:12;370:37;;;;;;;;;;;;;;;1023:11;;-1:-1:-1;;;839:263:11;:::o;3185:50:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3185:50:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3185:50:26;;;;;-1:-1:-1;;;3185:50:26;;;;:::o;3128:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5891:132::-;-1:-1:-1;;;;;5993:23:26;;;;;;:13;:23;;;;;;;;;5986:30;;;;;;;;;;;;;;;;;5958:16;;5986:30;;;5993:23;5986:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5891:132;;;:::o;4894:95:7:-;4938:4;4961:10;:8;:10::i;:::-;-1:-1:-1;;;;;4961:19:7;;:21;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4961:21:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4961:21:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4961:21:7;;;;;;;;4607:138;4674:4;4697:10;:8;:10::i;:::-;-1:-1:-1;;;;;4697:28:7;;4726:11;4697:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4697:41:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4697:41:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4697:41:7;;;;;;;;1274:134:125;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;;:::o;2159:459::-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:125;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:125;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;16216:624:26:-;16307:38;;:::i;:::-;16361:18;16382:13;;;:5;:13;;;;;:24;;;;16361:18;16472:54;16388:6;16472:24;:54::i;:::-;16555:278;;;;;;;;;;;;;;;;;;;;;;;16787:31;;;;16555:278;;;;-1:-1:-1;16555:278:26;;16216:624;-1:-1:-1;;;16216:624:26:o;26005:152::-;26062:7;26088:10;:8;:10::i;:::-;-1:-1:-1;;;;;26088:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26088:26:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26088:26:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26088:26:26;;;;;;;;;-1:-1:-1;;;;;26088:39:26;;26136:4;26143:6;26088:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26088:62:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26088:62:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26088:62:26;;;;;;;;4995:115:7;5038:21;5078:10;:8;:10::i;:::-;-1:-1:-1;;;;;5078:23:7;;:25;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5078:25:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5078:25:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5078:25:7;;;;;;;;18005:708:26;706:13:33;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:33;;;;;;;;;18218:60:26;;;;;;;;;;;;-1:-1:-1;;;18218:60:26;;;;;;-1:-1:-1;;;;;18218:34:26;;;:60;:34;:60;:::i;:::-;18288:66;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18288:34:26;;;:66;:34;:66;:::i;:::-;18364:72;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18364:41:26;;;:72;:41;:72;:::i;:::-;18447:28;18459:15;18447:11;:28::i;:::-;18486:11;:32;;-1:-1:-1;;;;;18486:32:26;;;-1:-1:-1;;;;;;18486:32:26;;;;;;;18528:11;:54;;;;;;;;;;;18592:18;:75;;;;;;;;;;;;;;;18686:20;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;18677:6:26;:29;;-1:-1:-1;;;;;;18677:29:26;-1:-1:-1;;;;;18677:29:26;;;;;;;;;;-1:-1:-1;;;;18005:708:26:o;18915:248::-;19010:15;;:27;;19030:6;19010:27;:19;:27;:::i;:::-;18992:15;:45;19074:13;;;;:5;:13;;;;;:24;;;:36;;19103:6;19074:36;:28;:36;:::i;:::-;19047:13;;;;:5;:13;;;;;;:24;;;:63;;;;-1:-1:-1;19153:3:26;19120:30;;;;:36;18915:248::o;834:176:125:-;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:125;;;;;;;;686:610:132;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:132;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:132:o;2749:183:104:-;2890:25;2903:4;2909:5;2890:12;:25::i;:::-;2917:7;2882:43;;;;;-1:-1:-1;;;2882:43:104;;;;;;;;;20069:313:26;20170:7;20193:18;20214:20;20227:6;20214:12;:20::i;:::-;20244:23;20270:13;;;:5;:13;;;;;:39;;;20193:41;;-1:-1:-1;20326:49:26;2724:5;20326:31;20193:41;20270:39;20326:31;:14;:31;:::i;21423:637::-;21495:7;21684:26;21713:71;21727:11;;;;;;;;;-1:-1:-1;;;;;21727:11:26;-1:-1:-1;;;;;21727:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21727:26:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21727:26:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;21727:26:26;;;;;;;;;-1:-1:-1;;;;;21713:69:26;;:71::i;:::-;21684:100;;21794:31;21873:11;;;;;;;;;-1:-1:-1;;;;;21873:11:26;-1:-1:-1;;;;;21849:52:26;;:54;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21849:54:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21849:54:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;21849:54:26;;;;;;;;;21794:119;-1:-1:-1;21923:16:26;21942:86;22000:18;21942:40;:11;21794:119;21942:40;:15;:40;:::i;:86::-;21923:105;21423:637;-1:-1:-1;;;;;21423:637:26:o;4993:296:20:-;5146:15;;:27;;5166:6;5146:27;:19;:27;:::i;:::-;5128:15;:45;5210:13;;;;:5;:13;;;;;:24;;;:36;;5239:6;5210:36;:28;:36;:::i;:::-;5183:13;;;;:5;:13;;;;;;:24;;:63;;;;5256:26;;-1:-1:-1;;;;;5256:18:20;;;:26;;;;;5275:6;;5256:26;5183:13;5256:26;5275:6;5256:18;:26;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;1409:498:135;1820:4;1864:17;1895:7;1409:498;:::o;25034:759:26:-;25139:4;25159:27;25189:10;:8;:10::i;:::-;-1:-1:-1;;;;;25189:22:26;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25189:24:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25189:24:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25189:24:26;;;;;;;;;-1:-1:-1;;;;;25189:40:26;;25243:11;;;;;;;;;-1:-1:-1;;;;;25243:11:26;-1:-1:-1;;;;;25243:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25243:26:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25243:26:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25243:26:26;;;;;;;;;25283:15;;25189:119;;-1:-1:-1;;;;;;25189:119:26;;;;;;;;;;-1:-1:-1;;;;;25283:15:26;;25189:119;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25189:119:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25189:119:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25189:119:26;;;;;;;;;25159:149;-1:-1:-1;;;;;;25326:35:26;;25318:72;;;;-1:-1:-1;;;25318:72:26;;;;;;;;;25434:102;;-1:-1:-1;;;25434:102:26;;25400:31;;-1:-1:-1;;;;;25434:74:26;;;;;:102;;-1:-1:-1;;;25509:26:26;25434:102;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25434:102:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25434:102:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25434:102:26;;;;;;;;;25400:136;;25546:33;25582:10;:8;:10::i;:::-;-1:-1:-1;;;;;25582:29:26;;25625:11;;;;;;;;;-1:-1:-1;;;;;25625:11:26;-1:-1:-1;;;;;25625:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25625:26:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25625:26:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25625:26:26;;;;;;;;;25665:15;;25582:135;;-1:-1:-1;;;;;;25582:135:26;;;;;;;;;;-1:-1:-1;;;;;25665:15:26;;25694:13;;25582:135;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25582:135:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25582:135:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25582:135:26;;;;;;;;;25734:52;;;;;;25034:759;-1:-1:-1;;;;25034:759:26:o;22213:140::-;22305:13;;;22345:1;22328:18;;;;;22305:13;22213:140::o;22854:1218::-;23070:24;;:::i;:::-;23106:19;23128:101;23149:10;:8;:10::i;:::-;-1:-1:-1;;;;;23149:34:26;;23184:6;;;;;;;;;-1:-1:-1;;;;;23184:6:26;-1:-1:-1;;;;;23184:32:26;;:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23184:34:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23184:34:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;23184:34:26;;;;;;;;;23149:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23149:70:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23149:70:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;23149:70:26;;;;;;;;;23128:3;;:101;:7;:101;:::i;:::-;23106:123;;23258:807;;;;;;;;23298:6;23258:807;;;;23333:340;;;;;;;;23388:7;:16;;;-1:-1:-1;;;;;23333:340:26;;;;;23437:7;:17;;;-1:-1:-1;;;;;23333:340:26;;;;;23490:12;23333:340;;;;23541:15;23333:340;;;;23593:13;23333:340;;;;23638:7;:16;;;23333:340;;;23258:807;;;;23704:11;23258:807;;;;23748:1;23258:807;;;;23779:1;23258:807;;;;23816:1;23258:807;;;;23850:1;23258:807;;;;23883:1;23258:807;;;;23918:1;23258:807;;;;23953:3;-1:-1:-1;;;;;23258:807:26;;;;;23983:32;23258:807;;;;;;;;;;24045:5;23258:807;;;;;23239:826;22854:1218;-1:-1:-1;;;;;;;22854:1218:26:o;24078:684::-;24451:7;:17;;;-1:-1:-1;;;;;24375:254:26;24421:7;:16;;;-1:-1:-1;;;;;24375:254:26;24401:6;24375:254;24482:12;24508:15;24537:13;24564:7;:16;;;24594:5;:13;24600:6;24594:13;;;;;;;;;;;:25;;;24375:254;;;;;;;;;;;;;;;;;;;24643:19;;24639:117;;24711:7;:16;;;-1:-1:-1;;;;;24683:62:26;24703:6;24683:62;24729:15;24683:62;;;;;;;;;;;;;;;24639:117;24078:684;;;;;;:::o;20618:548::-;20688:7;20788:26;20817:71;20831:11;;;;;;;;;-1:-1:-1;;;;;20831:11:26;-1:-1:-1;;;;;20831:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;20817:71:26;20788:100;;20898:31;20977:11;;;;;;;;;-1:-1:-1;;;;;20977:11:26;-1:-1:-1;;;;;20953:52:26;;:54;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20953:54:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20953:54:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;20953:54:26;;;;;;;;;20898:119;-1:-1:-1;21027:18:26;21048:84;20898:119;21048:33;:9;21062:18;21048:33;:13;:33;:::i;19393:461::-;19473:13;;;;:5;:13;;;;;:27;;;19465:35;;19461:387;;;19516:17;19581:13;;;:5;:13;;;;;:27;;;19536:5;;19567:42;;19536:5;;19567:42;:13;:42;:::i;:::-;19653:1;19623:13;;;:5;:13;;;;;:27;;;:31;;;;19697:26;;;19555:54;;-1:-1:-1;19697:41:26;;19555:54;19697:41;:30;:41;:::i;:::-;19668:13;;;;:5;:13;;;;;:26;;:70;-1:-1:-1;19461:387:26;;;19799:13;;;;:5;:13;;;;;:27;;;:38;;19831:5;19799:38;:31;:38;:::i;:::-;19769:13;;;;:5;:13;;;;;:27;;:68;19461:387;19393:461;;:::o;1732:187:125:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:125;;;;;;;;;;-1:-1:-1;;1888:5:125;;;1732:187;;;;;;:::o;3718:338::-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:125;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:125:o;17122:460:26:-;17219:29;17250:32;17350:29;17382:36;17411:6;17382:28;:36::i;:::-;17350:68;;17510:21;17533:41;17552:21;17533:18;:41::i;:::-;17502:73;;;;;17122:460;;;:::o;1583:127:104:-;1677:16;1688:4;1677:10;:16::i;:::-;1695:7;1669:34;;;;;-1:-1:-1;;;1669:34:104;;;;;;;;;;;1583:127;;:::o;4072:292:7:-;706:13:33;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:33;;;;;;;;;4156:60:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4156:31:7;;;:60;:31;:60;:::i;:::-;4234:28;:15;-1:-1:-1;;;;;4234:26:7;;:28::i;:::-;4226:68;;;;-1:-1:-1;;;4226:68:7;;;;;;;;;4305:13;:11;:13::i;:::-;4328:29;4341:15;4328:12;:29::i;1018:117:104:-;-1:-1:-1;;;;;1115:13:104;;;;;;;;1018:117::o;710:155:106:-;777:7;796:14;813:4;-1:-1:-1;;;;;813:13:106;;:15;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;813:15:106;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;813:15:106;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;813:15:106;;;;;;;;;845:13;;514:2;845:13;;710:155;-1:-1:-1;;;710:155:106:o;1288:108:104:-;-1:-1:-1;;;;;1368:21:104;;;;1288:108::o;1509:171:33:-;1551:12;421:55;;;;;;;;;;;;;;;1608:4;1645:19;;-1:-1:-1;1631:43:33:o;1649:392:11:-;1831:3;1808:10;:8;:10::i;:::-;-1:-1:-1;;;;;1800:35:11;;1796:128;;1864:28;:15;-1:-1:-1;;;;;1864:26:11;;:28::i;:::-;1856:68;;;;-1:-1:-1;;;1856:68:11;;;;;;;;;1849:75;;1796:128;1935:12;370:37;;;;;;;;;;;;;;;1996:29;;;-1:-1:-1;1982:53:11;:::o;1347:3944:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1347:3944:20;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;1347:3944:20;;;;;;-1:-1:-1;;;;;1347:3944:20;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;479:383;;;638:3;631:4;623:6;619:17;615:27;605:2;;656:1;653;646:12;605:2;-1:-1;676:20;;716:18;705:30;;702:2;;;748:1;745;738:12;702:2;782:4;774:6;770:17;758:29;;835:3;825:6;817;813:19;803:8;799:34;796:43;793:2;;;852:1;849;842:12;793:2;598:264;;;;;;870:128;945:13;;963:30;945:13;963:30;;1005:130;1072:20;;1097:33;1072:20;1097:33;;1142:134;1220:13;;1238:33;1220:13;1238:33;;1283:198;1393:13;;1411:65;1393:13;1411:65;;2055:164;;2171:3;2162:6;2157:3;2153:16;2149:26;2146:2;;;2188:1;2185;2178:12;2146:2;-1:-1;2207:6;2139:80;-1:-1;2139:80;2264:1245;;2383:4;2371:9;2366:3;2362:19;2358:30;2355:2;;;2401:1;2398;2391:12;2355:2;2419:20;2434:4;2419:20;;;2410:29;-1:-1;2493:1;2525:57;2578:3;2558:9;2525:57;;;2500:83;;-1:-1;2649:2;2682:49;2727:3;2703:22;;;2682:49;;;2675:4;2668:5;2664:16;2657:75;2604:139;2805:2;2838:49;2883:3;2874:6;2863:9;2859:22;2838:49;;;2831:4;2824:5;2820:16;2813:75;2753:146;2957:2;2990:49;3035:3;3026:6;3015:9;3011:22;2990:49;;;2983:4;2976:5;2972:16;2965:75;2909:142;3103:3;3137:49;3182:3;3173:6;3162:9;3158:22;3137:49;;;3130:4;3123:5;3119:16;3112:75;3061:137;3252:3;3286:49;3331:3;3322:6;3311:9;3307:22;3286:49;;;3279:4;3272:5;3268:16;3261:75;3208:139;3404:3;3438:49;3483:3;3474:6;3463:9;3459:22;3438:49;;;3431:4;3424:5;3420:16;3413:75;3357:142;2349:1160;;;;;3794:126;3859:20;;3884:31;3859:20;3884:31;;3927:130;4003:13;;4021:31;4003:13;4021:31;;4064:241;;4168:2;4156:9;4147:7;4143:23;4139:32;4136:2;;;4184:1;4181;4174:12;4136:2;4219:1;4236:53;4281:7;4261:9;4236:53;;4312:263;;4427:2;4415:9;4406:7;4402:23;4398:32;4395:2;;;4443:1;4440;4433:12;4395:2;4478:1;4495:64;4551:7;4531:9;4495:64;;4846:743;;;;;;5018:3;5006:9;4997:7;4993:23;4989:33;4986:2;;;5035:1;5032;5025:12;4986:2;5070:1;5087:53;5132:7;5112:9;5087:53;;;5077:63;;5049:97;5177:2;5195:53;5240:7;5231:6;5220:9;5216:22;5195:53;;;5185:63;;5156:98;5285:2;5303:53;5348:7;5339:6;5328:9;5324:22;5303:53;;;5293:63;;5264:98;5393:2;5411:53;5456:7;5447:6;5436:9;5432:22;5411:53;;;5401:63;;5372:98;5501:3;5520:53;5565:7;5556:6;5545:9;5541:22;5520:53;;;5510:63;;5480:99;4980:609;;;;;;;;;5596:366;;;5717:2;5705:9;5696:7;5692:23;5688:32;5685:2;;;5733:1;5730;5723:12;5685:2;5768:1;5785:53;5830:7;5810:9;5785:53;;;5775:63;;5747:97;5875:2;5893:53;5938:7;5929:6;5918:9;5914:22;5893:53;;;5883:63;;5854:98;5679:283;;;;;;5969:491;;;;6107:2;6095:9;6086:7;6082:23;6078:32;6075:2;;;6123:1;6120;6113:12;6075:2;6158:1;6175:53;6220:7;6200:9;6175:53;;;6165:63;;6137:97;6265:2;6283:53;6328:7;6319:6;6308:9;6304:22;6283:53;;;6273:63;;6244:98;6373:2;6391:53;6436:7;6427:6;6416:9;6412:22;6391:53;;;6381:63;;6352:98;6069:391;;;;;;6467:257;;6579:2;6567:9;6558:7;6554:23;6550:32;6547:2;;;6595:1;6592;6585:12;6547:2;6630:1;6647:61;6700:7;6680:9;6647:61;;6731:263;;6846:2;6834:9;6825:7;6821:23;6817:32;6814:2;;;6862:1;6859;6852:12;6814:2;6897:1;6914:64;6970:7;6950:9;6914:64;;7001:327;;7148:2;7136:9;7127:7;7123:23;7119:32;7116:2;;;7164:1;7161;7154:12;7116:2;7199:1;7216:96;7304:7;7284:9;7216:96;;8249:772;;;;;8483:3;8471:9;8462:7;8458:23;8454:33;8451:2;;;8500:1;8497;8490:12;8451:2;8535:1;8552:85;8629:7;8609:9;8552:85;;;8542:95;;8514:129;8702:3;8691:9;8687:19;8674:33;8727:18;8719:6;8716:30;8713:2;;;8759:1;8756;8749:12;8713:2;8787:109;8888:7;8879:6;8868:9;8864:22;8787:109;;;8777:119;;;;8653:249;8933:3;8952:53;8997:7;8988:6;8977:9;8973:22;8952:53;;;8942:63;;8912:99;8445:576;;;;;;;;9028:302;;9162:3;9150:9;9141:7;9137:23;9133:33;9130:2;;;9179:1;9176;9169:12;9130:2;9214:1;9231:83;9306:7;9286:9;9231:83;;9337:241;;9441:2;9429:9;9420:7;9416:23;9412:32;9409:2;;;9457:1;9454;9447:12;9409:2;9492:1;9509:53;9554:7;9534:9;9509:53;;9855:366;;;9976:2;9964:9;9955:7;9951:23;9947:32;9944:2;;;9992:1;9989;9982:12;9944:2;10027:1;10044:53;10089:7;10069:9;10044:53;;10228:535;;;;10377:2;10365:9;10356:7;10352:23;10348:32;10345:2;;;10393:1;10390;10383:12;10345:2;10428:1;10445:64;10501:7;10481:9;10445:64;;;10435:74;;10407:108;10546:2;10564:64;10620:7;10611:6;10600:9;10596:22;10564:64;;;10554:74;;10525:109;10665:2;10683:64;10739:7;10730:6;10719:9;10715:22;10683:64;;10770:259;;10883:2;10871:9;10862:7;10858:23;10854:32;10851:2;;;10899:1;10896;10889:12;10851:2;10934:1;10951:62;11005:7;10985:9;10951:62;;11037:291;;11180:106;11282:3;11274:6;11180:106;;;-1:-1;;11315:6;11306:16;;11173:155;11337:173;;11424:46;11466:3;11458:6;11424:46;;;-1:-1;;11499:4;11490:14;;11417:93;11518:142;11609:45;11648:5;11609:45;;;11604:3;11597:58;11591:69;;;11667:127;11756:32;11782:5;11756:32;;12112:891;;12322:113;12428:6;12423:3;12322:113;;;12315:120;;12456:87;12537:5;12456:87;;;12563:7;12591:1;12576:405;12601:6;12598:1;12595:13;12576:405;;;12662:71;12726:6;12717:7;12662:71;;;12747:119;12862:3;12847:13;12747:119;;;12740:126;;12883:91;12967:6;12883:91;;;12873:101;-1:-1;;12623:1;12616:9;12576:405;;;-1:-1;12994:3;;12302:701;-1:-1;;;;;12302:701;13042:690;;13187:54;13235:5;13187:54;;;13254:86;13333:6;13328:3;13254:86;;;13247:93;;13361:56;13411:5;13361:56;;;13437:7;13465:1;13450:260;13475:6;13472:1;13469:13;13450:260;;;13542:6;13536:13;13563:63;13622:3;13607:13;13563:63;;;13556:70;;13643:60;13696:6;13643:60;;;13633:70;-1:-1;;13497:1;13490:9;13450:260;;13740:94;13807:21;13822:5;13807:21;;13952:103;14025:24;14043:5;14025:24;;14182:186;14295:67;14356:5;14295:67;;14950:154;15047:51;15092:5;15047:51;;15111:347;;15223:39;15256:5;15223:39;;;15274:71;15338:6;15333:3;15274:71;;;15267:78;;15350:52;15395:6;15390:3;15383:4;15376:5;15372:16;15350:52;;;15423:29;15445:6;15423:29;;;15414:39;;;;15203:255;-1:-1;;;15203:255;15466:329;;15626:67;15690:2;15685:3;15626:67;;;15726:31;15706:52;;15786:2;15777:12;;15612:183;-1:-1;;15612:183;15804:364;;15982:85;16064:2;16059:3;15982:85;;;16100:30;16080:51;;16159:2;16150:12;;15968:200;-1:-1;;15968:200;16177:321;;16337:67;16401:2;16396:3;16337:67;;;-1:-1;;;16417:44;;16489:2;16480:12;;16323:175;-1:-1;;16323:175;16507:322;;16667:67;16731:2;16726:3;16667:67;;;-1:-1;;;16747:45;;16820:2;16811:12;;16653:176;-1:-1;;16653:176;16838:325;;16998:67;17062:2;17057:3;16998:67;;;17098:27;17078:48;;17154:2;17145:12;;16984:179;-1:-1;;16984:179;17172:317;;17332:67;17396:2;17391:3;17332:67;;;-1:-1;;;17412:40;;17480:2;17471:12;;17318:171;-1:-1;;17318:171;17498:327;;17658:67;17722:2;17717:3;17658:67;;;17758:29;17738:50;;17816:2;17807:12;;17644:181;-1:-1;;17644:181;17834:325;;17994:67;18058:2;18053:3;17994:67;;;18094:27;18074:48;;18150:2;18141:12;;17980:179;-1:-1;;17980:179;18168:320;;18328:67;18392:2;18387:3;18328:67;;;-1:-1;;;18408:43;;18479:2;18470:12;;18314:174;-1:-1;;18314:174;18497:322;;18657:67;18721:2;18716:3;18657:67;;;-1:-1;;;18737:45;;18810:2;18801:12;;18643:176;-1:-1;;18643:176;18828:327;;18988:67;19052:2;19047:3;18988:67;;;19088:29;19068:50;;19146:2;19137:12;;18974:181;-1:-1;;18974:181;19164:323;;19324:67;19388:2;19383:3;19324:67;;;19424:25;19404:46;;19478:2;19469:12;;19310:177;-1:-1;;19310:177;19496:315;;19656:67;19720:2;19715:3;19656:67;;;-1:-1;;;19736:38;;19802:2;19793:12;;19642:169;-1:-1;;19642:169;19820:320;;19980:67;20044:2;20039:3;19980:67;;;-1:-1;;;20060:43;;20131:2;20122:12;;19966:174;-1:-1;;19966:174;20149:318;;20309:67;20373:2;20368:3;20309:67;;;-1:-1;;;20389:41;;20458:2;20449:12;;20295:172;-1:-1;;20295:172;20476:324;;20636:67;20700:2;20695:3;20636:67;;;20736:26;20716:47;;20791:2;20782:12;;20622:178;-1:-1;;20622:178;20809:370;;20969:67;21033:2;21028:3;20969:67;;;21069:34;21049:55;;-1:-1;;;21133:2;21124:12;;21117:25;21170:2;21161:12;;20955:224;-1:-1;;20955:224;21188:329;;21348:67;21412:2;21407:3;21348:67;;;21448:31;21428:52;;21508:2;21499:12;;21334:183;-1:-1;;21334:183;21526:318;;21686:67;21750:2;21745:3;21686:67;;;-1:-1;;;21766:41;;21835:2;21826:12;;21672:172;-1:-1;;21672:172;21853:383;;22013:67;22077:2;22072:3;22013:67;;;22113:34;22093:55;;-1:-1;;;22177:2;22168:12;;22161:38;22227:2;22218:12;;21999:237;-1:-1;;21999:237;22245:324;;22405:67;22469:2;22464:3;22405:67;;;22505:26;22485:47;;22560:2;22551:12;;22391:178;-1:-1;;22391:178;22578:319;;22738:67;22802:2;22797:3;22738:67;;;-1:-1;;;22818:42;;22888:2;22879:12;;22724:173;-1:-1;;22724:173;22906:330;;23066:67;23130:2;23125:3;23066:67;;;23166:32;23146:53;;23227:2;23218:12;;23052:184;-1:-1;;23052:184;23245:323;;23405:67;23469:2;23464:3;23405:67;;;23505:25;23485:46;;23559:2;23550:12;;23391:177;-1:-1;;23391:177;23577:322;;23737:67;23801:2;23796:3;23737:67;;;-1:-1;;;23817:45;;23890:2;23881:12;;23723:176;-1:-1;;23723:176;23908:360;;24086:85;24168:2;24163:3;24086:85;;;24204:26;24184:47;;24259:2;24250:12;;24072:196;-1:-1;;24072:196;24277:326;;24437:67;24501:2;24496:3;24437:67;;;24537:28;24517:49;;24594:2;24585:12;;24423:180;-1:-1;;24423:180;24612:324;;24772:67;24836:2;24831:3;24772:67;;;24872:26;24852:47;;24927:2;24918:12;;24758:178;-1:-1;;24758:178;24945:312;;25105:67;25169:2;25164:3;25105:67;;;-1:-1;;;25185:35;;25248:2;25239:12;;25091:166;-1:-1;;25091:166;25266:331;;25426:67;25490:2;25485:3;25426:67;;;25526:33;25506:54;;25588:2;25579:12;;25412:185;-1:-1;;25412:185;25606:328;;25766:67;25830:2;25825:3;25766:67;;;25866:30;25846:51;;25925:2;25916:12;;25752:182;-1:-1;;25752:182;26029:863;26268:23;;26196:4;26187:14;;;26297:63;26191:3;26268:23;26297:63;;;26216:150;26456:4;26449:5;26445:16;26439:23;26468:63;26525:4;26520:3;26516:14;26502:12;26468:63;;;26376:161;26630:4;26623:5;26619:16;26613:23;26642:63;26699:4;26694:3;26690:14;26676:12;26642:63;;;26547:164;26802:4;26795:5;26791:16;26785:23;26814:57;26865:4;26860:3;26856:14;26842:12;26814:57;;26972:1513;27127:4;27118:14;;27197:58;27242:5;;27197:58;;;27261:79;27329:3;27311:12;27261:79;;;27147:199;27407:50;27451:4;27444:5;27440:16;27433:5;27407:50;;;27463:63;27520:4;27515:3;27511:14;27497:12;27463:63;;;27356:176;27600:50;27644:4;27637:5;27633:16;27626:5;27600:50;;;27656:63;27713:4;27708:3;27704:14;27690:12;27656:63;;;27542:183;27789:50;27833:4;27826:5;27822:16;27815:5;27789:50;;;27845:63;27902:4;27897:3;27893:14;27879:12;27845:63;;;27735:179;27972:50;28016:4;28009:5;28005:16;27998:5;27972:50;;;28028:63;28085:4;28080:3;28076:14;28062:12;28028:63;;;27924:173;28157:50;28201:4;28194:5;28190:16;28183:5;28157:50;;;28213:63;28270:4;28265:3;28261:14;28247:12;28213:63;;;28107:175;28345:50;28389:4;28382:5;28378:16;28371:5;28345:50;;;28401:63;28458:4;28453:3;28449:14;28435:12;28401:63;;28567:1572;28710:6;28701:16;;28780:50;28817:5;;28780:50;;;28836:63;28888:3;28870:12;28836:63;;;28732:173;28973:50;29017:4;29010:5;29006:16;28999:5;28973:50;;;29029:63;29086:4;29081:3;29077:14;29063:12;29029:63;;;28915:183;29162:50;29206:4;29199:5;29195:16;29188:5;29162:50;;;29218:63;29275:4;29270:3;29266:14;29252:12;29218:63;;;29108:179;29351:50;29395:4;29388:5;29384:16;29377:5;29351:50;;;29407:63;29464:4;29459:3;29455:14;29441:12;29407:63;;;29297:179;29543:50;29587:4;29580:5;29576:16;29569:5;29543:50;;;29599:63;29656:4;29651:3;29647:14;29633:12;29599:63;;;29486:182;29733:50;29777:4;29770:5;29766:16;29759:5;29733:50;;;29789:63;29846:4;29841:3;29837:14;29823:12;29789:63;;;29678:180;29919:76;29989:4;29982:5;29978:16;29971:5;29919:76;;;30001:117;30112:4;30107:3;30103:14;30089:12;30001:117;;30215:1151;30430:23;;30360:4;30351:14;;;30459:79;30355:3;30430:23;30459:79;;;30380:164;30622:4;30615:5;30611:16;30605:23;30634:63;30691:4;30686:3;30682:14;30668:12;30634:63;;;30554:149;30784:4;30777:5;30773:16;30767:23;30796:63;30853:4;30848:3;30844:14;30830:12;30796:63;;;30713:152;30949:4;30942:5;30938:16;30932:23;30961:63;31018:4;31013:3;31009:14;30995:12;30961:63;;;30875:155;31112:4;31105:5;31101:16;31095:23;31124:63;31181:4;31176:3;31172:14;31158:12;31124:63;;;31040:153;31270:4;31263:5;31259:16;31253:23;31282:63;31339:4;31334:3;31330:14;31316:12;31282:63;;31442:878;31579:4;31570:14;;31652:50;31689:5;;31652:50;;;31708:63;31760:3;31742:12;31708:63;;;31599:178;31830:48;31872:4;31865:5;31861:16;31854:5;31830:48;;;31884:59;31937:4;31932:3;31928:14;31914:12;31884:59;;;31787:162;32002:50;32046:4;32039:5;32035:16;32028:5;32002:50;;;32058:63;32115:4;32110:3;32106:14;32092:12;32058:63;;;31959:168;32180:50;32224:4;32217:5;32213:16;32206:5;32180:50;;;32236:63;32293:4;32288:3;32284:14;32270:12;32236:63;;32557:97;32626:22;32642:5;32626:22;;32661:372;;32860:148;33004:3;32860:148;;33040:372;;33239:148;33383:3;33239:148;;33419:213;33537:2;33522:18;;33551:71;33526:9;33595:6;33551:71;;33639:229;33765:2;33750:18;;33779:79;33754:9;33831:6;33779:79;;33875:451;34057:2;34042:18;;34071:79;34046:9;34123:6;34071:79;;;34161:72;34229:2;34218:9;34214:18;34205:6;34161:72;;;34244;34312:2;34301:9;34297:18;34288:6;34244:72;;34333:324;34479:2;34464:18;;34493:71;34468:9;34537:6;34493:71;;;34575:72;34643:2;34632:9;34628:18;34619:6;34575:72;;34664:435;34838:2;34823:18;;34852:71;34827:9;34896:6;34852:71;;;34934:72;35002:2;34991:9;34987:18;34978:6;34934:72;;35106:324;35252:2;35237:18;;35266:71;35241:9;35310:6;35266:71;;;35348:72;35416:2;35405:9;35401:18;35392:6;35348:72;;35437:361;35605:2;35619:47;;;35590:18;;35680:108;35590:18;35774:6;35680:108;;35805:201;35917:2;35902:18;;35931:65;35906:9;35969:6;35931:65;;36013:213;36131:2;36116:18;;36145:71;36120:9;36189:6;36145:71;;36233:273;36381:2;36366:18;;36395:101;36370:9;36469:6;36395:101;;37349:301;37487:2;37501:47;;;37472:18;;37562:78;37472:18;37626:6;37562:78;;37657:407;37848:2;37862:47;;;37833:18;;37923:131;37833:18;37923:131;;38071:407;38262:2;38276:47;;;38247:18;;38337:131;38247:18;38337:131;;38485:407;38676:2;38690:47;;;38661:18;;38751:131;38661:18;38751:131;;38899:407;39090:2;39104:47;;;39075:18;;39165:131;39075:18;39165:131;;39313:407;39504:2;39518:47;;;39489:18;;39579:131;39489:18;39579:131;;39727:407;39918:2;39932:47;;;39903:18;;39993:131;39903:18;39993:131;;40141:407;40332:2;40346:47;;;40317:18;;40407:131;40317:18;40407:131;;40555:407;40746:2;40760:47;;;40731:18;;40821:131;40731:18;40821:131;;40969:407;41160:2;41174:47;;;41145:18;;41235:131;41145:18;41235:131;;41383:407;41574:2;41588:47;;;41559:18;;41649:131;41559:18;41649:131;;41797:407;41988:2;42002:47;;;41973:18;;42063:131;41973:18;42063:131;;42211:407;42402:2;42416:47;;;42387:18;;42477:131;42387:18;42477:131;;42625:407;42816:2;42830:47;;;42801:18;;42891:131;42801:18;42891:131;;43039:407;43230:2;43244:47;;;43215:18;;43305:131;43215:18;43305:131;;43453:407;43644:2;43658:47;;;43629:18;;43719:131;43629:18;43719:131;;43867:407;44058:2;44072:47;;;44043:18;;44133:131;44043:18;44133:131;;44281:407;44472:2;44486:47;;;44457:18;;44547:131;44457:18;44547:131;;44695:407;44886:2;44900:47;;;44871:18;;44961:131;44871:18;44961:131;;45109:407;45300:2;45314:47;;;45285:18;;45375:131;45285:18;45375:131;;45523:407;45714:2;45728:47;;;45699:18;;45789:131;45699:18;45789:131;;45937:407;46128:2;46142:47;;;46113:18;;46203:131;46113:18;46203:131;;46351:407;46542:2;46556:47;;;46527:18;;46617:131;46527:18;46617:131;;46765:407;46956:2;46970:47;;;46941:18;;47031:131;46941:18;47031:131;;47179:407;47370:2;47384:47;;;47355:18;;47445:131;47355:18;47445:131;;47593:407;47784:2;47798:47;;;47769:18;;47859:131;47769:18;47859:131;;48007:407;48198:2;48212:47;;;48183:18;;48273:131;48183:18;48273:131;;48421:407;48612:2;48626:47;;;48597:18;;48687:131;48597:18;48687:131;;48835:407;49026:2;49040:47;;;49011:18;;49101:131;49011:18;49101:131;;49249:407;49440:2;49454:47;;;49425:18;;49515:131;49425:18;49515:131;;49663:362;49855:3;49840:19;;49870:145;49844:9;49988:6;49870:145;;50032:730;50356:3;50341:19;;50371:133;50345:9;50477:6;50371:133;;;50553:9;50547:4;50543:20;50537:3;50526:9;50522:19;50515:49;50578:174;50747:4;50738:6;50730;50578:174;;50989:324;51135:2;51120:18;;51149:71;51124:9;51193:6;51149:71;;51320:340;51474:2;51459:18;;51488:71;51463:9;51532:6;51488:71;;;51570:80;51646:2;51635:9;51631:18;51622:6;51570:80;;51667:451;51849:2;51834:18;;51863:71;51838:9;51907:6;51863:71;;;51945:80;52021:2;52010:9;52006:18;51997:6;51945:80;;52125:1569;52613:3;52598:19;;52628:71;52602:9;52672:6;52628:71;;;52710:124;52830:2;52819:9;52815:18;52806:6;52710:124;;;52845:73;52913:3;52902:9;52898:19;52889:6;52845:73;;;52929;52997:3;52986:9;52982:19;52973:6;52929:73;;;53013;53081:3;53070:9;53066:19;53057:6;53013:73;;;53097;53165:3;53154:9;53150:19;53141:6;53097:73;;;53181;53249:3;53238:9;53234:19;53225:6;53181:73;;;53265;53333:3;53322:9;53318:19;53309:6;53265:73;;;53349;53417:3;53406:9;53402:19;53393:6;53349:73;;;53433;53501:3;53490:9;53486:19;53477:6;53433:73;;;53517:88;53600:3;53589:9;53585:19;53575:7;53517:88;;;53616:68;53679:3;53668:9;53664:19;53654:7;53616:68;;;52584:1110;;;;;;;;;;;;;;;;53701:659;53931:3;53916:19;;53946:71;53920:9;53990:6;53946:71;;;54028:72;54096:2;54085:9;54081:18;54072:6;54028:72;;;54111;54179:2;54168:9;54164:18;54155:6;54111:72;;;54194;54262:2;54251:9;54247:18;54238:6;54194:72;;;54277:73;54345:3;54334:9;54330:19;54321:6;54277:73;;;53902:458;;;;;;;;;54367:256;54429:2;54423:9;54455:17;;;54530:18;54515:34;;54551:22;;;54512:62;54509:2;;;54587:1;54584;54577:12;54509:2;54603;54596:22;54407:216;;-1:-1;54407:216;54630:147;54747:3;54733:44;54784:151;54908:4;54899:14;;54856:79;54942:137;55045:12;;55016:63;55215:141;55344:6;55335:16;;55321:35;55479:205;55624:19;;;55673:4;55664:14;;55617:67;56206:119;;56280:39;56315:2;56310:3;56306:12;56301:3;56280:39;;56478:119;;56552:39;56587:2;56582:3;56578:12;56573:3;56552:39;;56606:112;-1:-1;56709:3;56693:25;56973:115;;57045:37;57078:2;57073:3;57069:12;57064:3;57045:37;;57096:91;;57158:24;57176:5;57158:24;;57300:85;57366:13;57359:21;;57342:43;57471:123;;57565:24;57583:5;57565:24;;57850:138;57928:5;57934:49;57928:5;57934:49;;58073:121;-1:-1;;;;;58135:54;;58118:76;58280:81;58351:4;58340:16;;58323:38;58368:129;;58455:37;58486:5;58455:37;;59830:138;;59923:40;59957:5;59923:40;;60219:268;60284:1;60291:101;60305:6;60302:1;60299:13;60291:101;;;60372:11;;;60366:18;60353:11;;;60346:39;60327:2;60320:10;60291:101;;;60407:6;60404:1;60401:13;60398:2;;;-1:-1;;60472:1;60454:16;;60447:27;60268:219;60495:97;60583:2;60563:14;-1:-1;;60559:28;;60543:49;60600:107;60685:1;60678:5;60675:12;60665:2;;60691:9;60714:117;60783:24;60801:5;60783:24;;;60776:5;60773:35;60763:2;;60822:1;60819;60812:12;60978:111;61044:21;61059:5;61044:21;;61096:117;61165:24;61183:5;61165:24;;61220:181;61321:56;61371:5;61321:56;;62008:113;62075:22;62091:5;62075:22;",
  "source": "pragma solidity 0.5.17;\npragma experimental ABIEncoderV2;\n\n// Contracts\nimport \"./LoansBase.sol\";\n\n/*****************************************************************************************************/\n/**                                             WARNING                                             **/\n/**                                  THIS CONTRACT IS UPGRADEABLE!                                  **/\n/**  ---------------------------------------------------------------------------------------------  **/\n/**  Do NOT change the order of or PREPEND any storage variables to this or new versions of this    **/\n/**  contract as this will cause the the storage slots to be overwritten on the proxy contract!!    **/\n/**                                                                                                 **/\n/**  Visit https://docs.openzeppelin.com/upgrades/2.6/proxies#upgrading-via-the-proxy-pattern for   **/\n/**  more information.                                                                              **/\n/*****************************************************************************************************/\n/**\n    @notice This contract is used as a basis for the creation of Ether based loans across the platform\n    @notice It implements the LoansBase contract from Teller\n\n    @author develop@teller.finance\n */\ncontract EtherCollateralLoans is LoansBase {\n    /**\n     * @notice Deposit collateral into a loan\n     * @param borrower The address of the loan borrower.\n     * @param loanID The ID of the loan the collateral is for\n     */\n    function depositCollateral(\n        address borrower,\n        uint256 loanID,\n        uint256 amount\n    )\n        external\n        payable\n        loanActiveOrSet(loanID)\n        isInitialized()\n        whenNotPaused()\n        whenLendingPoolNotPaused(address(lendingPool))\n    {\n        require(\n            loans[loanID].loanTerms.borrower == borrower,\n            \"BORROWER_LOAN_ID_MISMATCH\"\n        );\n        require(msg.value == amount, \"INCORRECT_ETH_AMOUNT\");\n        require(msg.value > 0, \"CANNOT_DEPOSIT_ZERO\");\n\n        // Update the contract total and the loan collateral total\n        _payInCollateral(loanID, amount);\n\n        emit CollateralDeposited(loanID, borrower, amount);\n    }\n\n    /**\n        @notice Creates a loan with the loan request and terms\n        @param request Struct of the protocol loan request\n        @param responses List of structs of the protocol loan responses\n        @param collateralAmount Amount of collateral required for the loan\n     */\n    function createLoanWithTerms(\n        TellerCommon.LoanRequest calldata request,\n        TellerCommon.LoanResponse[] calldata responses,\n        uint256 collateralAmount\n    )\n        external\n        payable\n        isInitialized()\n        whenNotPaused()\n        isBorrower(request.borrower)\n        withValidLoanRequest(request)\n    {\n        require(msg.value == collateralAmount, \"INCORRECT_ETH_AMOUNT\");\n\n        uint256 loanID = getAndIncrementLoanID();\n        (\n            uint256 interestRate,\n            uint256 collateralRatio,\n            uint256 maxLoanAmount\n        ) = loanTermsConsensus.processRequest(request, responses);\n\n        loans[loanID] = createLoan(\n            loanID,\n            request,\n            interestRate,\n            collateralRatio,\n            maxLoanAmount\n        );\n\n        if (msg.value > 0) {\n            // Update collateral, totalCollateral, and lastCollateralIn\n            _payInCollateral(loanID, msg.value);\n        }\n\n        borrowerLoans[request.borrower].push(loanID);\n\n        _emitLoanTermsSetAndCollateralDepositedEventsIfApplicable(\n            loanID,\n            request,\n            interestRate,\n            collateralRatio,\n            maxLoanAmount,\n            msg.value\n        );\n    }\n\n    /**\n        @notice Initializes the current contract instance setting the required parameters\n        @param priceOracleAddress Contract address of the price oracle\n        @param lendingPoolAddress Contract address of the lending pool\n        @param loanTermsConsensusAddress Contract adddress for loan term consensus\n        @param settingsAddress Contract address for the configuration of the platform\n     */\n    function initialize(\n        address priceOracleAddress,\n        address lendingPoolAddress,\n        address loanTermsConsensusAddress,\n        address settingsAddress,\n        address\n    ) external isNotInitialized() {\n        _initialize(\n            priceOracleAddress,\n            lendingPoolAddress,\n            loanTermsConsensusAddress,\n            settingsAddress\n        );\n\n        collateralToken = settings().ETH_ADDRESS();\n    }\n\n    /** Internal Functions */\n    /**\n        @notice Pays out collateral for the associated loan\n        @param loanID The ID of the loan the collateral is for\n        @param amount The amount of collateral to be paid\n        @param recipient address that will receive the given amount.\n     */\n    function _payOutCollateral(\n        uint256 loanID,\n        uint256 amount,\n        address payable recipient\n    ) internal {\n        totalCollateral = totalCollateral.sub(amount);\n        loans[loanID].collateral = loans[loanID].collateral.sub(amount);\n        recipient.transfer(amount);\n    }\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/EtherCollateralLoans.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/EtherCollateralLoans.sol",
    "exportedSymbols": {
      "EtherCollateralLoans": [
        4409
      ]
    },
    "id": 4410,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4189,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:20"
      },
      {
        "id": 4190,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:20"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LoansBase.sol",
        "file": "./LoansBase.sol",
        "id": 4191,
        "nodeType": "ImportDirective",
        "scope": 4410,
        "sourceUnit": 7316,
        "src": "72:25:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4192,
              "name": "LoansBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7315,
              "src": "1380:9:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LoansBase_$7315",
                "typeString": "contract LoansBase"
              }
            },
            "id": 4193,
            "nodeType": "InheritanceSpecifier",
            "src": "1380:9:20"
          }
        ],
        "contractDependencies": [
          2329,
          2593,
          7315,
          9277,
          10850,
          21268,
          21337
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract is used as a basis for the creation of Ether based loans across the platform\n@notice It implements the LoansBase contract from Teller\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 4409,
        "linearizedBaseContracts": [
          4409,
          7315,
          2329,
          21268,
          21337,
          2593,
          9277,
          10850
        ],
        "name": "EtherCollateralLoans",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4252,
              "nodeType": "Block",
              "src": "1856:421:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 4215,
                                "name": "loans",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5967,
                                "src": "1887:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17942_storage_$",
                                  "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                                }
                              },
                              "id": 4217,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 4216,
                                "name": "loanID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4197,
                                "src": "1893:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1887:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$17942_storage",
                                "typeString": "struct TellerCommon.Loan storage ref"
                              }
                            },
                            "id": 4218,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "loanTerms",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17921,
                            "src": "1887:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanTerms_$17917_storage",
                              "typeString": "struct TellerCommon.LoanTerms storage ref"
                            }
                          },
                          "id": 4219,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17906,
                          "src": "1887:32:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4220,
                          "name": "borrower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4195,
                          "src": "1923:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1887:44:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "424f52524f5745525f4c4f414e5f49445f4d49534d41544348",
                        "id": 4222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1945:27:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        },
                        "value": "BORROWER_LOAN_ID_MISMATCH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        }
                      ],
                      "id": 4214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21470,
                        21471
                      ],
                      "referencedDeclaration": 21471,
                      "src": "1866:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:116:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4224,
                  "nodeType": "ExpressionStatement",
                  "src": "1866:116:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4226,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21467,
                            "src": "2000:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2000:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4228,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4199,
                          "src": "2013:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2000:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e434f52524543545f4554485f414d4f554e54",
                        "id": 4230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2021:22:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        },
                        "value": "INCORRECT_ETH_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        }
                      ],
                      "id": 4225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21470,
                        21471
                      ],
                      "referencedDeclaration": 21471,
                      "src": "1992:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1992:52:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4232,
                  "nodeType": "ExpressionStatement",
                  "src": "1992:52:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4234,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21467,
                            "src": "2062:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2062:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2074:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2062:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43414e4e4f545f4445504f5349545f5a45524f",
                        "id": 4238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2077:21:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        },
                        "value": "CANNOT_DEPOSIT_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        }
                      ],
                      "id": 4233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21470,
                        21471
                      ],
                      "referencedDeclaration": 21471,
                      "src": "2054:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2054:45:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4240,
                  "nodeType": "ExpressionStatement",
                  "src": "2054:45:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4242,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4197,
                        "src": "2194:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4243,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4199,
                        "src": "2202:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4241,
                      "name": "_payInCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6947,
                      "src": "2177:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2177:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4245,
                  "nodeType": "ExpressionStatement",
                  "src": "2177:32:20"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4247,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4197,
                        "src": "2245:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4248,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4195,
                        "src": "2253:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4249,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4199,
                        "src": "2263:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4246,
                      "name": "CollateralDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10647,
                      "src": "2225:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 4250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2225:45:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4251,
                  "nodeType": "EmitStatement",
                  "src": "2220:50:20"
                }
              ]
            },
            "documentation": "@notice Deposit collateral into a loan\n@param borrower The address of the loan borrower.\n@param loanID The ID of the loan the collateral is for",
            "id": 4253,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4202,
                    "name": "loanID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4197,
                    "src": "1741:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4203,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4201,
                  "name": "loanActiveOrSet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6046,
                  "src": "1725:15:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1725:23:20"
              },
              {
                "arguments": [],
                "id": 4205,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4204,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "1757:13:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1757:15:20"
              },
              {
                "arguments": [],
                "id": 4207,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4206,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2201,
                  "src": "1781:13:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1781:15:20"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4210,
                        "name": "lendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5956,
                        "src": "1838:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10580",
                          "typeString": "contract LendingPoolInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10580",
                          "typeString": "contract LendingPoolInterface"
                        }
                      ],
                      "id": 4209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1830:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 4211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1830:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 4212,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4208,
                  "name": "whenLendingPoolNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2215,
                  "src": "1805:24:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1805:46:20"
              }
            ],
            "name": "depositCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4195,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 4253,
                  "src": "1613:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4197,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 4253,
                  "src": "1639:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1639:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4199,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4253,
                  "src": "1663:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1603:80:20"
            },
            "returnParameters": {
              "id": 4213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1856:0:20"
            },
            "scope": 4409,
            "src": "1577:700:20",
            "stateMutability": "payable",
            "superFunction": 10739,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4341,
              "nodeType": "Block",
              "src": "2904:922:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4275,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21467,
                            "src": "2922:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2922:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4277,
                          "name": "collateralAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4260,
                          "src": "2935:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2922:29:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e434f52524543545f4554485f414d4f554e54",
                        "id": 4279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2953:22:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        },
                        "value": "INCORRECT_ETH_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        }
                      ],
                      "id": 4274,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21470,
                        21471
                      ],
                      "referencedDeclaration": 21471,
                      "src": "2914:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2914:62:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4281,
                  "nodeType": "ExpressionStatement",
                  "src": "2914:62:20"
                },
                {
                  "assignments": [
                    4283
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4283,
                      "name": "loanID",
                      "nodeType": "VariableDeclaration",
                      "scope": 4341,
                      "src": "2987:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4282,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2987:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4286,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4284,
                      "name": "getAndIncrementLoanID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7135,
                      "src": "3004:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 4285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3004:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2987:40:20"
                },
                {
                  "assignments": [
                    4288,
                    4290,
                    4292
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4288,
                      "name": "interestRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 4341,
                      "src": "3051:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4287,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3051:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4290,
                      "name": "collateralRatio",
                      "nodeType": "VariableDeclaration",
                      "scope": 4341,
                      "src": "3085:23:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4289,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3085:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4292,
                      "name": "maxLoanAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 4341,
                      "src": "3122:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4291,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3122:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4298,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4295,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4255,
                        "src": "3190:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4296,
                        "name": "responses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4258,
                        "src": "3199:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17897_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17897_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4293,
                        "name": "loanTermsConsensus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5958,
                        "src": "3156:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LoanTermsConsensusInterface_$10634",
                          "typeString": "contract LoanTermsConsensusInterface"
                        }
                      },
                      "id": 4294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10624,
                      "src": "3156:33:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LoanRequest_$17882_memory_ptr_$_t_array$_t_struct$_LoanResponse_$17897_memory_$dyn_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct TellerCommon.LoanRequest memory,struct TellerCommon.LoanResponse memory[] memory) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 4297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3156:53:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3037:172:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4299,
                        "name": "loans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5967,
                        "src": "3220:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17942_storage_$",
                          "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                        }
                      },
                      "id": 4301,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4300,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4283,
                        "src": "3226:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3220:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17942_storage",
                        "typeString": "struct TellerCommon.Loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4303,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4283,
                          "src": "3260:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4304,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4255,
                          "src": "3280:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4305,
                          "name": "interestRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4288,
                          "src": "3301:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4306,
                          "name": "collateralRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4290,
                          "src": "3327:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4307,
                          "name": "maxLoanAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4292,
                          "src": "3356:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4302,
                        "name": "createLoan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7195,
                        "src": "3236:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_LoanRequest_$17882_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_Loan_$17942_memory_ptr_$",
                          "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256) view returns (struct TellerCommon.Loan memory)"
                        }
                      },
                      "id": 4308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3236:143:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17942_memory_ptr",
                        "typeString": "struct TellerCommon.Loan memory"
                      }
                    },
                    "src": "3220:159:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$17942_storage",
                      "typeString": "struct TellerCommon.Loan storage ref"
                    }
                  },
                  "id": 4310,
                  "nodeType": "ExpressionStatement",
                  "src": "3220:159:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4311,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21467,
                        "src": "3394:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3394:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3406:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3394:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4322,
                  "nodeType": "IfStatement",
                  "src": "3390:151:20",
                  "trueBody": {
                    "id": 4321,
                    "nodeType": "Block",
                    "src": "3409:132:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4316,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4283,
                              "src": "3512:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4317,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21467,
                                "src": "3520:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3520:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4315,
                            "name": "_payInCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6947,
                            "src": "3495:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 4319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3495:35:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4320,
                        "nodeType": "ExpressionStatement",
                        "src": "3495:35:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4328,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4283,
                        "src": "3588:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4323,
                          "name": "borrowerLoans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5963,
                          "src": "3551:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 4326,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4324,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4255,
                            "src": "3565:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                              "typeString": "struct TellerCommon.LoanRequest calldata"
                            }
                          },
                          "id": 4325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17869,
                          "src": "3565:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3551:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 4327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3551:36:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 4329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3551:44:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4330,
                  "nodeType": "ExpressionStatement",
                  "src": "3551:44:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4332,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4283,
                        "src": "3677:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4333,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4255,
                        "src": "3697:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4334,
                        "name": "interestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4288,
                        "src": "3718:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4335,
                        "name": "collateralRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4290,
                        "src": "3744:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4336,
                        "name": "maxLoanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4292,
                        "src": "3773:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4337,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21467,
                          "src": "3800:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3800:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4331,
                      "name": "_emitLoanTermsSetAndCollateralDepositedEventsIfApplicable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7240,
                      "src": "3606:57:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_LoanRequest_$17882_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 4339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3606:213:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4340,
                  "nodeType": "ExpressionStatement",
                  "src": "3606:213:20"
                }
              ]
            },
            "documentation": "@notice Creates a loan with the loan request and terms\n@param request Struct of the protocol loan request\n@param responses List of structs of the protocol loan responses\n@param collateralAmount Amount of collateral required for the loan",
            "id": 4342,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 4263,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4262,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "2785:13:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2785:15:20"
              },
              {
                "arguments": [],
                "id": 4265,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4264,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2201,
                  "src": "2809:13:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2809:15:20"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 4267,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4255,
                      "src": "2844:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                        "typeString": "struct TellerCommon.LoanRequest calldata"
                      }
                    },
                    "id": 4268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "borrower",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17869,
                    "src": "2844:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 4269,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4266,
                  "name": "isBorrower",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5983,
                  "src": "2833:10:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2833:28:20"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4271,
                    "name": "request",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4255,
                    "src": "2891:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                      "typeString": "struct TellerCommon.LoanRequest calldata"
                    }
                  }
                ],
                "id": 4272,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4270,
                  "name": "withValidLoanRequest",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6088,
                  "src": "2870:20:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_LoanRequest_$17882_memory_ptr_$",
                    "typeString": "modifier (struct TellerCommon.LoanRequest memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2870:29:20"
              }
            ],
            "name": "createLoanWithTerms",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4255,
                  "name": "request",
                  "nodeType": "VariableDeclaration",
                  "scope": 4342,
                  "src": "2606:41:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanRequest"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4254,
                    "name": "TellerCommon.LoanRequest",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17882,
                    "src": "2606:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$17882_storage_ptr",
                      "typeString": "struct TellerCommon.LoanRequest"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4258,
                  "name": "responses",
                  "nodeType": "VariableDeclaration",
                  "scope": 4342,
                  "src": "2657:46:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17897_calldata_$dyn_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanResponse[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 4256,
                      "name": "TellerCommon.LoanResponse",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 17897,
                      "src": "2657:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanResponse_$17897_storage_ptr",
                        "typeString": "struct TellerCommon.LoanResponse"
                      }
                    },
                    "id": 4257,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2657:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17897_storage_$dyn_storage_ptr",
                      "typeString": "struct TellerCommon.LoanResponse[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4260,
                  "name": "collateralAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4342,
                  "src": "2713:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2713:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2596:147:20"
            },
            "returnParameters": {
              "id": 4273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2904:0:20"
            },
            "scope": 4409,
            "src": "2568:1258:20",
            "stateMutability": "payable",
            "superFunction": 10756,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4371,
              "nodeType": "Block",
              "src": "4468:223:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4358,
                        "name": "priceOracleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4344,
                        "src": "4503:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4359,
                        "name": "lendingPoolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4346,
                        "src": "4535:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4360,
                        "name": "loanTermsConsensusAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4348,
                        "src": "4567:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4361,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4350,
                        "src": "4606:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4357,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6912,
                        2281,
                        9276
                      ],
                      "referencedDeclaration": 6912,
                      "src": "4478:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address)"
                      }
                    },
                    "id": 4362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4478:153:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4363,
                  "nodeType": "ExpressionStatement",
                  "src": "4478:153:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4364,
                      "name": "collateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5950,
                      "src": "4642:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4365,
                            "name": "settings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2532,
                            "src": "4660:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_SettingsInterface_$11431_$",
                              "typeString": "function () view returns (contract SettingsInterface)"
                            }
                          },
                          "id": 4366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4660:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SettingsInterface_$11431",
                            "typeString": "contract SettingsInterface"
                          }
                        },
                        "id": 4367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ETH_ADDRESS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11430,
                        "src": "4660:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 4368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4660:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4642:42:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4370,
                  "nodeType": "ExpressionStatement",
                  "src": "4642:42:20"
                }
              ]
            },
            "documentation": "@notice Initializes the current contract instance setting the required parameters\n@param priceOracleAddress Contract address of the price oracle\n@param lendingPoolAddress Contract address of the lending pool\n@param loanTermsConsensusAddress Contract adddress for loan term consensus\n@param settingsAddress Contract address for the configuration of the platform",
            "id": 4372,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 4355,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4354,
                  "name": "isNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9242,
                  "src": "4449:16:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4449:18:20"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4344,
                  "name": "priceOracleAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4372,
                  "src": "4278:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4278:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4346,
                  "name": "lendingPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4372,
                  "src": "4314:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4314:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4348,
                  "name": "loanTermsConsensusAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4372,
                  "src": "4350:33:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4350:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4350,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4372,
                  "src": "4393:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4393:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4352,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4372,
                  "src": "4426:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4426:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4268:171:20"
            },
            "returnParameters": {
              "id": 4356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4468:0:20"
            },
            "scope": 4409,
            "src": "4249:442:20",
            "stateMutability": "nonpayable",
            "superFunction": 10849,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4407,
              "nodeType": "Block",
              "src": "5118:171:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4381,
                      "name": "totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5948,
                      "src": "5128:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4384,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4376,
                          "src": "5166:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4382,
                          "name": "totalCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5948,
                          "src": "5146:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20163,
                        "src": "5146:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5146:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5128:45:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4387,
                  "nodeType": "ExpressionStatement",
                  "src": "5128:45:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4388,
                          "name": "loans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5967,
                          "src": "5183:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17942_storage_$",
                            "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                          }
                        },
                        "id": 4390,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 4389,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4374,
                          "src": "5189:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5183:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$17942_storage",
                          "typeString": "struct TellerCommon.Loan storage ref"
                        }
                      },
                      "id": 4391,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17927,
                      "src": "5183:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4397,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4376,
                          "src": "5239:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 4392,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5967,
                              "src": "5210:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17942_storage_$",
                                "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                              }
                            },
                            "id": 4394,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 4393,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4374,
                              "src": "5216:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5210:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$17942_storage",
                              "typeString": "struct TellerCommon.Loan storage ref"
                            }
                          },
                          "id": 4395,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17927,
                          "src": "5210:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20163,
                        "src": "5210:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5210:36:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5183:63:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4400,
                  "nodeType": "ExpressionStatement",
                  "src": "5183:63:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4404,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4376,
                        "src": "5275:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4401,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4378,
                        "src": "5256:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 4403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5256:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5256:26:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4406,
                  "nodeType": "ExpressionStatement",
                  "src": "5256:26:20"
                }
              ]
            },
            "documentation": "@notice Pays out collateral for the associated loan\n@param loanID The ID of the loan the collateral is for\n@param amount The amount of collateral to be paid\n@param recipient address that will receive the given amount.",
            "id": 4408,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOutCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4374,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 4408,
                  "src": "5029:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5029:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4376,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4408,
                  "src": "5053:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5053:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4378,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 4408,
                  "src": "5077:25:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5077:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5019:89:20"
            },
            "returnParameters": {
              "id": 4380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5118:0:20"
            },
            "scope": 4409,
            "src": "4993:296:20",
            "stateMutability": "nonpayable",
            "superFunction": 6799,
            "visibility": "internal"
          }
        ],
        "scope": 4410,
        "src": "1347:3944:20"
      }
    ],
    "src": "0:5292:20"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/EtherCollateralLoans.sol",
    "exportedSymbols": {
      "EtherCollateralLoans": [
        4409
      ]
    },
    "id": 4410,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4189,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:20"
      },
      {
        "id": 4190,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:20"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LoansBase.sol",
        "file": "./LoansBase.sol",
        "id": 4191,
        "nodeType": "ImportDirective",
        "scope": 4410,
        "sourceUnit": 7316,
        "src": "72:25:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4192,
              "name": "LoansBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7315,
              "src": "1380:9:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LoansBase_$7315",
                "typeString": "contract LoansBase"
              }
            },
            "id": 4193,
            "nodeType": "InheritanceSpecifier",
            "src": "1380:9:20"
          }
        ],
        "contractDependencies": [
          2329,
          2593,
          7315,
          9277,
          10850,
          21268,
          21337
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract is used as a basis for the creation of Ether based loans across the platform\n@notice It implements the LoansBase contract from Teller\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 4409,
        "linearizedBaseContracts": [
          4409,
          7315,
          2329,
          21268,
          21337,
          2593,
          9277,
          10850
        ],
        "name": "EtherCollateralLoans",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4252,
              "nodeType": "Block",
              "src": "1856:421:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 4215,
                                "name": "loans",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5967,
                                "src": "1887:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17942_storage_$",
                                  "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                                }
                              },
                              "id": 4217,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 4216,
                                "name": "loanID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4197,
                                "src": "1893:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1887:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$17942_storage",
                                "typeString": "struct TellerCommon.Loan storage ref"
                              }
                            },
                            "id": 4218,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "loanTerms",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17921,
                            "src": "1887:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanTerms_$17917_storage",
                              "typeString": "struct TellerCommon.LoanTerms storage ref"
                            }
                          },
                          "id": 4219,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17906,
                          "src": "1887:32:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4220,
                          "name": "borrower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4195,
                          "src": "1923:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1887:44:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "424f52524f5745525f4c4f414e5f49445f4d49534d41544348",
                        "id": 4222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1945:27:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        },
                        "value": "BORROWER_LOAN_ID_MISMATCH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        }
                      ],
                      "id": 4214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21470,
                        21471
                      ],
                      "referencedDeclaration": 21471,
                      "src": "1866:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:116:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4224,
                  "nodeType": "ExpressionStatement",
                  "src": "1866:116:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4226,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21467,
                            "src": "2000:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2000:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4228,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4199,
                          "src": "2013:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2000:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e434f52524543545f4554485f414d4f554e54",
                        "id": 4230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2021:22:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        },
                        "value": "INCORRECT_ETH_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        }
                      ],
                      "id": 4225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21470,
                        21471
                      ],
                      "referencedDeclaration": 21471,
                      "src": "1992:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1992:52:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4232,
                  "nodeType": "ExpressionStatement",
                  "src": "1992:52:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4234,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21467,
                            "src": "2062:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2062:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2074:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2062:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43414e4e4f545f4445504f5349545f5a45524f",
                        "id": 4238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2077:21:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        },
                        "value": "CANNOT_DEPOSIT_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        }
                      ],
                      "id": 4233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21470,
                        21471
                      ],
                      "referencedDeclaration": 21471,
                      "src": "2054:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2054:45:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4240,
                  "nodeType": "ExpressionStatement",
                  "src": "2054:45:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4242,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4197,
                        "src": "2194:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4243,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4199,
                        "src": "2202:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4241,
                      "name": "_payInCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6947,
                      "src": "2177:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2177:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4245,
                  "nodeType": "ExpressionStatement",
                  "src": "2177:32:20"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4247,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4197,
                        "src": "2245:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4248,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4195,
                        "src": "2253:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4249,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4199,
                        "src": "2263:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4246,
                      "name": "CollateralDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10647,
                      "src": "2225:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 4250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2225:45:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4251,
                  "nodeType": "EmitStatement",
                  "src": "2220:50:20"
                }
              ]
            },
            "documentation": "@notice Deposit collateral into a loan\n@param borrower The address of the loan borrower.\n@param loanID The ID of the loan the collateral is for",
            "id": 4253,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4202,
                    "name": "loanID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4197,
                    "src": "1741:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4203,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4201,
                  "name": "loanActiveOrSet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6046,
                  "src": "1725:15:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1725:23:20"
              },
              {
                "arguments": [],
                "id": 4205,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4204,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "1757:13:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1757:15:20"
              },
              {
                "arguments": [],
                "id": 4207,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4206,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2201,
                  "src": "1781:13:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1781:15:20"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4210,
                        "name": "lendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5956,
                        "src": "1838:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10580",
                          "typeString": "contract LendingPoolInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10580",
                          "typeString": "contract LendingPoolInterface"
                        }
                      ],
                      "id": 4209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1830:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 4211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1830:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 4212,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4208,
                  "name": "whenLendingPoolNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2215,
                  "src": "1805:24:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1805:46:20"
              }
            ],
            "name": "depositCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4195,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 4253,
                  "src": "1613:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4197,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 4253,
                  "src": "1639:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1639:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4199,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4253,
                  "src": "1663:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1603:80:20"
            },
            "returnParameters": {
              "id": 4213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1856:0:20"
            },
            "scope": 4409,
            "src": "1577:700:20",
            "stateMutability": "payable",
            "superFunction": 10739,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4341,
              "nodeType": "Block",
              "src": "2904:922:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4275,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21467,
                            "src": "2922:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2922:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4277,
                          "name": "collateralAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4260,
                          "src": "2935:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2922:29:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e434f52524543545f4554485f414d4f554e54",
                        "id": 4279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2953:22:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        },
                        "value": "INCORRECT_ETH_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        }
                      ],
                      "id": 4274,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21470,
                        21471
                      ],
                      "referencedDeclaration": 21471,
                      "src": "2914:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2914:62:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4281,
                  "nodeType": "ExpressionStatement",
                  "src": "2914:62:20"
                },
                {
                  "assignments": [
                    4283
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4283,
                      "name": "loanID",
                      "nodeType": "VariableDeclaration",
                      "scope": 4341,
                      "src": "2987:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4282,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2987:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4286,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4284,
                      "name": "getAndIncrementLoanID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7135,
                      "src": "3004:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 4285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3004:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2987:40:20"
                },
                {
                  "assignments": [
                    4288,
                    4290,
                    4292
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4288,
                      "name": "interestRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 4341,
                      "src": "3051:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4287,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3051:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4290,
                      "name": "collateralRatio",
                      "nodeType": "VariableDeclaration",
                      "scope": 4341,
                      "src": "3085:23:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4289,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3085:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4292,
                      "name": "maxLoanAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 4341,
                      "src": "3122:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4291,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3122:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4298,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4295,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4255,
                        "src": "3190:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4296,
                        "name": "responses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4258,
                        "src": "3199:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17897_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17897_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4293,
                        "name": "loanTermsConsensus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5958,
                        "src": "3156:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LoanTermsConsensusInterface_$10634",
                          "typeString": "contract LoanTermsConsensusInterface"
                        }
                      },
                      "id": 4294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10624,
                      "src": "3156:33:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LoanRequest_$17882_memory_ptr_$_t_array$_t_struct$_LoanResponse_$17897_memory_$dyn_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct TellerCommon.LoanRequest memory,struct TellerCommon.LoanResponse memory[] memory) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 4297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3156:53:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3037:172:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4299,
                        "name": "loans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5967,
                        "src": "3220:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17942_storage_$",
                          "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                        }
                      },
                      "id": 4301,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4300,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4283,
                        "src": "3226:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3220:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17942_storage",
                        "typeString": "struct TellerCommon.Loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4303,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4283,
                          "src": "3260:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4304,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4255,
                          "src": "3280:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4305,
                          "name": "interestRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4288,
                          "src": "3301:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4306,
                          "name": "collateralRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4290,
                          "src": "3327:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4307,
                          "name": "maxLoanAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4292,
                          "src": "3356:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4302,
                        "name": "createLoan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7195,
                        "src": "3236:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_LoanRequest_$17882_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_Loan_$17942_memory_ptr_$",
                          "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256) view returns (struct TellerCommon.Loan memory)"
                        }
                      },
                      "id": 4308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3236:143:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17942_memory_ptr",
                        "typeString": "struct TellerCommon.Loan memory"
                      }
                    },
                    "src": "3220:159:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$17942_storage",
                      "typeString": "struct TellerCommon.Loan storage ref"
                    }
                  },
                  "id": 4310,
                  "nodeType": "ExpressionStatement",
                  "src": "3220:159:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4311,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21467,
                        "src": "3394:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3394:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3406:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3394:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4322,
                  "nodeType": "IfStatement",
                  "src": "3390:151:20",
                  "trueBody": {
                    "id": 4321,
                    "nodeType": "Block",
                    "src": "3409:132:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4316,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4283,
                              "src": "3512:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4317,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21467,
                                "src": "3520:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3520:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4315,
                            "name": "_payInCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6947,
                            "src": "3495:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 4319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3495:35:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4320,
                        "nodeType": "ExpressionStatement",
                        "src": "3495:35:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4328,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4283,
                        "src": "3588:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4323,
                          "name": "borrowerLoans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5963,
                          "src": "3551:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 4326,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4324,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4255,
                            "src": "3565:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                              "typeString": "struct TellerCommon.LoanRequest calldata"
                            }
                          },
                          "id": 4325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17869,
                          "src": "3565:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3551:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 4327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3551:36:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 4329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3551:44:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4330,
                  "nodeType": "ExpressionStatement",
                  "src": "3551:44:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4332,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4283,
                        "src": "3677:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4333,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4255,
                        "src": "3697:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4334,
                        "name": "interestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4288,
                        "src": "3718:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4335,
                        "name": "collateralRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4290,
                        "src": "3744:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4336,
                        "name": "maxLoanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4292,
                        "src": "3773:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4337,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21467,
                          "src": "3800:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3800:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4331,
                      "name": "_emitLoanTermsSetAndCollateralDepositedEventsIfApplicable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7240,
                      "src": "3606:57:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_LoanRequest_$17882_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 4339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3606:213:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4340,
                  "nodeType": "ExpressionStatement",
                  "src": "3606:213:20"
                }
              ]
            },
            "documentation": "@notice Creates a loan with the loan request and terms\n@param request Struct of the protocol loan request\n@param responses List of structs of the protocol loan responses\n@param collateralAmount Amount of collateral required for the loan",
            "id": 4342,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 4263,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4262,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "2785:13:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2785:15:20"
              },
              {
                "arguments": [],
                "id": 4265,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4264,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2201,
                  "src": "2809:13:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2809:15:20"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 4267,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4255,
                      "src": "2844:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                        "typeString": "struct TellerCommon.LoanRequest calldata"
                      }
                    },
                    "id": 4268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "borrower",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17869,
                    "src": "2844:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 4269,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4266,
                  "name": "isBorrower",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5983,
                  "src": "2833:10:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2833:28:20"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4271,
                    "name": "request",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4255,
                    "src": "2891:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                      "typeString": "struct TellerCommon.LoanRequest calldata"
                    }
                  }
                ],
                "id": 4272,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4270,
                  "name": "withValidLoanRequest",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6088,
                  "src": "2870:20:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_LoanRequest_$17882_memory_ptr_$",
                    "typeString": "modifier (struct TellerCommon.LoanRequest memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2870:29:20"
              }
            ],
            "name": "createLoanWithTerms",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4255,
                  "name": "request",
                  "nodeType": "VariableDeclaration",
                  "scope": 4342,
                  "src": "2606:41:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanRequest"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4254,
                    "name": "TellerCommon.LoanRequest",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17882,
                    "src": "2606:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$17882_storage_ptr",
                      "typeString": "struct TellerCommon.LoanRequest"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4258,
                  "name": "responses",
                  "nodeType": "VariableDeclaration",
                  "scope": 4342,
                  "src": "2657:46:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17897_calldata_$dyn_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanResponse[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 4256,
                      "name": "TellerCommon.LoanResponse",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 17897,
                      "src": "2657:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanResponse_$17897_storage_ptr",
                        "typeString": "struct TellerCommon.LoanResponse"
                      }
                    },
                    "id": 4257,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2657:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17897_storage_$dyn_storage_ptr",
                      "typeString": "struct TellerCommon.LoanResponse[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4260,
                  "name": "collateralAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4342,
                  "src": "2713:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2713:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2596:147:20"
            },
            "returnParameters": {
              "id": 4273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2904:0:20"
            },
            "scope": 4409,
            "src": "2568:1258:20",
            "stateMutability": "payable",
            "superFunction": 10756,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4371,
              "nodeType": "Block",
              "src": "4468:223:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4358,
                        "name": "priceOracleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4344,
                        "src": "4503:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4359,
                        "name": "lendingPoolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4346,
                        "src": "4535:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4360,
                        "name": "loanTermsConsensusAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4348,
                        "src": "4567:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4361,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4350,
                        "src": "4606:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4357,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6912,
                        2281,
                        9276
                      ],
                      "referencedDeclaration": 6912,
                      "src": "4478:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address)"
                      }
                    },
                    "id": 4362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4478:153:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4363,
                  "nodeType": "ExpressionStatement",
                  "src": "4478:153:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4364,
                      "name": "collateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5950,
                      "src": "4642:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4365,
                            "name": "settings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2532,
                            "src": "4660:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_SettingsInterface_$11431_$",
                              "typeString": "function () view returns (contract SettingsInterface)"
                            }
                          },
                          "id": 4366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4660:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SettingsInterface_$11431",
                            "typeString": "contract SettingsInterface"
                          }
                        },
                        "id": 4367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ETH_ADDRESS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11430,
                        "src": "4660:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 4368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4660:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4642:42:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4370,
                  "nodeType": "ExpressionStatement",
                  "src": "4642:42:20"
                }
              ]
            },
            "documentation": "@notice Initializes the current contract instance setting the required parameters\n@param priceOracleAddress Contract address of the price oracle\n@param lendingPoolAddress Contract address of the lending pool\n@param loanTermsConsensusAddress Contract adddress for loan term consensus\n@param settingsAddress Contract address for the configuration of the platform",
            "id": 4372,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 4355,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4354,
                  "name": "isNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9242,
                  "src": "4449:16:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4449:18:20"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4344,
                  "name": "priceOracleAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4372,
                  "src": "4278:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4278:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4346,
                  "name": "lendingPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4372,
                  "src": "4314:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4314:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4348,
                  "name": "loanTermsConsensusAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4372,
                  "src": "4350:33:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4350:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4350,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4372,
                  "src": "4393:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4393:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4352,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4372,
                  "src": "4426:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4426:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4268:171:20"
            },
            "returnParameters": {
              "id": 4356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4468:0:20"
            },
            "scope": 4409,
            "src": "4249:442:20",
            "stateMutability": "nonpayable",
            "superFunction": 10849,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4407,
              "nodeType": "Block",
              "src": "5118:171:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4381,
                      "name": "totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5948,
                      "src": "5128:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4384,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4376,
                          "src": "5166:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4382,
                          "name": "totalCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5948,
                          "src": "5146:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20163,
                        "src": "5146:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5146:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5128:45:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4387,
                  "nodeType": "ExpressionStatement",
                  "src": "5128:45:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4388,
                          "name": "loans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5967,
                          "src": "5183:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17942_storage_$",
                            "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                          }
                        },
                        "id": 4390,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 4389,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4374,
                          "src": "5189:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5183:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$17942_storage",
                          "typeString": "struct TellerCommon.Loan storage ref"
                        }
                      },
                      "id": 4391,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17927,
                      "src": "5183:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4397,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4376,
                          "src": "5239:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 4392,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5967,
                              "src": "5210:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17942_storage_$",
                                "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                              }
                            },
                            "id": 4394,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 4393,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4374,
                              "src": "5216:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5210:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$17942_storage",
                              "typeString": "struct TellerCommon.Loan storage ref"
                            }
                          },
                          "id": 4395,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17927,
                          "src": "5210:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20163,
                        "src": "5210:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5210:36:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5183:63:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4400,
                  "nodeType": "ExpressionStatement",
                  "src": "5183:63:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4404,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4376,
                        "src": "5275:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4401,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4378,
                        "src": "5256:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 4403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5256:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5256:26:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4406,
                  "nodeType": "ExpressionStatement",
                  "src": "5256:26:20"
                }
              ]
            },
            "documentation": "@notice Pays out collateral for the associated loan\n@param loanID The ID of the loan the collateral is for\n@param amount The amount of collateral to be paid\n@param recipient address that will receive the given amount.",
            "id": 4408,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOutCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4374,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 4408,
                  "src": "5029:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5029:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4376,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4408,
                  "src": "5053:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5053:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4378,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 4408,
                  "src": "5077:25:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5077:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5019:89:20"
            },
            "returnParameters": {
              "id": 4380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5118:0:20"
            },
            "scope": 4409,
            "src": "4993:296:20",
            "stateMutability": "nonpayable",
            "superFunction": 6799,
            "visibility": "internal"
          }
        ],
        "scope": 4410,
        "src": "1347:3944:20"
      }
    ],
    "src": "0:5292:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-06T02:15:12.200Z",
  "devdoc": {
    "author": "develop@teller.finance",
    "methods": {
      "canLiquidateLoan(uint256)": {
        "params": {
          "loanID": "The ID of the loan to check"
        },
        "return": "bool weather the loan can be liquidated"
      },
      "createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)": {
        "params": {
          "collateralAmount": "Amount of collateral required for the loan",
          "request": "Struct of the protocol loan request",
          "responses": "List of structs of the protocol loan responses"
        }
      },
      "depositCollateral(address,uint256,uint256)": {
        "params": {
          "borrower": "The address of the loan borrower.",
          "loanID": "The ID of the loan the collateral is for"
        }
      },
      "getBorrowerLoans(address)": {
        "params": {
          "borrower": "The borrower's address"
        }
      },
      "getCollateralInfo(uint256)": {
        "params": {
          "loanID": "of the loan to get info for"
        },
        "return": "memory TellerCommon.LoanCollateralInfo Collateral information of the loan"
      },
      "getTotalOwed(uint256)": {
        "params": {
          "loanID": "The ID of the loan to be queried"
        },
        "return": "uint256 The total amount owed remaining"
      },
      "initialize(address,address,address,address,address)": {
        "params": {
          "lendingPoolAddress": "Contract address of the lending pool",
          "loanTermsConsensusAddress": "Contract adddress for loan term consensus",
          "priceOracleAddress": "Contract address of the price oracle",
          "settingsAddress": "Contract address for the configuration of the platform"
        }
      },
      "initialized()": {
        "return": "true if contract is initialized. Otherwise it returns false."
      },
      "lendingToken()": {
        "return": "Address of the lending token"
      },
      "liquidateLoan(uint256)": {
        "params": {
          "loanID": "The ID of the loan to be liquidated"
        }
      },
      "repay(uint256,uint256)": {
        "params": {
          "amount": "The amount of tokens to pay back to the loan",
          "loanID": "The ID of the loan the payment is for"
        }
      },
      "setPriceOracle(address)": {
        "details": "It throws a require error if sender is not allowed.It throws a require error if new address is empty (0x0) or not a contract.",
        "params": {
          "newPriceOracle": "the new price oracle address."
        }
      },
      "takeOutLoan(uint256,uint256)": {
        "details": "collateral ratio is a percentage of the loan amount that's required in collateralthe percentage will be *(10**2). I.e. collateralRatio of 5244 means 52.44% collateralis required in the loan. Interest rate is also a percentage with 2 decimal points."
      },
      "withdrawCollateral(uint256,uint256)": {
        "params": {
          "amount": "The amount of collateral token or ether the caller is hoping to withdraw.",
          "loanID": "The ID of the loan the collateral is for"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "canLiquidateLoan(uint256)": {
        "notice": "A loan can be liquidated if it is: under collateralized or expired"
      },
      "createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)": {
        "notice": "Creates a loan with the loan request and terms"
      },
      "depositCollateral(address,uint256,uint256)": {
        "notice": "Deposit collateral into a loan"
      },
      "getBorrowerLoans(address)": {
        "notice": "Get a list of all loans for a borrower"
      },
      "getCollateralInfo(uint256)": {
        "notice": "Get collateral information of a specific loan"
      },
      "getTotalOwed(uint256)": {
        "notice": "Returns the total owed amount remaining for a specified loan"
      },
      "initialize(address,address,address,address,address)": {
        "notice": "Initializes the current contract instance setting the required parameters"
      },
      "initialized()": {
        "notice": "Gets if the contract is initialized."
      },
      "lendingToken()": {
        "notice": "Returns the lending token in the lending pool"
      },
      "liquidateLoan(uint256)": {
        "notice": "Liquidate a loan if it is expired or under collateralized"
      },
      "repay(uint256,uint256)": {
        "notice": "Make a payment to a loan"
      },
      "setPriceOracle(address)": {
        "notice": "Updates the current price oracle instance."
      },
      "settings()": {
        "notice": "The settings contract."
      },
      "takeOutLoan(uint256,uint256)": {
        "notice": "Take out a loan"
      },
      "withdrawCollateral(uint256,uint256)": {
        "notice": "Withdraw collateral from a loan, unless this isn't allowed"
      }
    },
    "notice": "This contract is used as a basis for the creation of Ether based loans across the platformIt implements the LoansBase contract from Teller"
  }
}