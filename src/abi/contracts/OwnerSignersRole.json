{
  "contractName": "OwnerSignersRole",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "SignerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "SignerRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isSigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addSigner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "name": "addSigners",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeSigner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"SignerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"SignerRemoved\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"addSigners\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"details\":\"It uses the Roles contract from OpenZeppelin.\",\"methods\":{\"addSigner(address)\":{\"details\":\"The sender must be the owner.It throws a require error if the sender is not the owner.\",\"params\":{\"account\":\"address to add.\"}},\"addSigners(address[])\":{\"details\":\"The sender must be the owner.It throws a require error if the sender is not the owner.\",\"params\":{\"accounts\":\"addresses to add.\"}},\"initialize(address)\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"isSigner(address)\":{\"params\":{\"account\":\"address to test.\"},\"return\":\"true if account is a signer. Otherwise it returns false.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeSigner(address)\":{\"details\":\"The sender must be the owner.It throws a require error if the sender is not the owner.\",\"params\":{\"account\":\"address to remove.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"addSigner(address)\":{\"notice\":\"It adds a new account as a signer.\"},\"addSigners(address[])\":{\"notice\":\"It adds a list of account as signers.\"},\"isSigner(address)\":{\"notice\":\"Gets whether an account address is a signer or not.\"},\"removeSigner(address)\":{\"notice\":\"It removes an account as signer.\"}},\"notice\":\"This contract manages the signer role for the consensus contracts.It includes an owner role who has the ability to grant the signer role.\"}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/OwnerSignersRole.sol\":\"OwnerSignersRole\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/OwnerSignersRole.sol\":{\"keccak256\":\"0x93b1668e14fa27f5a10baed29ab1aa150b6e56ed708337c5e5fe98c1bbec1bef\",\"urls\":[\"bzz-raw://de833bc5c97bbae6f8d77070dc30e226d9fb78a1bca85ded5fba531ed4d9606c\",\"dweb:/ipfs/QmfUc6yWTso4WUw28AHynjZB9v25qxTkbN3mUak6Kh7Hkb\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzz-raw://a3f816aa3e6161b4cf882ad34755673848d835f7fb964db49bcef9df14570cef\",\"dweb:/ipfs/QmQACSH1W7pKQnqTAqpuEP8ychp3PvosfnyondLaLE1nVq\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x6080604052610953806100136000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638f32d59b116100665780638f32d59b14610126578063c4d66de81461012e578063e8906a2d14610154578063eb12d61e146101f7578063f2fde38b1461021d57610093565b80630e316ab714610098578063715018a6146100c05780637df73e27146100c85780638da5cb5b14610102575b600080fd5b6100be600480360360208110156100ae57600080fd5b50356001600160a01b0316610243565b005b6100be610296565b6100ee600480360360208110156100de57600080fd5b50356001600160a01b0316610327565b604080519115158252519081900360200190f35b61010a610340565b604080516001600160a01b039092168252519081900360200190f35b6100ee61034f565b6100be6004803603602081101561014457600080fd5b50356001600160a01b0316610375565b6100be6004803603602081101561016a57600080fd5b81019060208101813564010000000081111561018557600080fd5b82018360208201111561019757600080fd5b803590602001918460208302840111640100000000831117156101b957600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610467945050505050565b6100be6004803603602081101561020d57600080fd5b50356001600160a01b031661053d565b6100be6004803603602081101561023357600080fd5b50356001600160a01b031661058d565b61024b61034f565b61028a576040805162461bcd60e51b815260206004820181905260248201526000805160206108af833981519152604482015290519081900360640190fd5b610293816105dd565b50565b61029e61034f565b6102dd576040805162461bcd60e51b815260206004820181905260248201526000805160206108af833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b600061033a60668363ffffffff61062516565b92915050565b6033546001600160a01b031690565b6033546000906001600160a01b031661036661068c565b6001600160a01b031614905090565b600054610100900460ff168061038e575061038e610690565b8061039c575060005460ff16155b6103d75760405162461bcd60e51b815260040180806020018281038252602e8152602001806108f1602e913960400191505060405180910390fd5b600054610100900460ff16158015610402576000805460ff1961ff0019909116610100171660011790555b603380546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38015610463576000805461ff00191690555b5050565b61046f61034f565b6104ae576040805162461bcd60e51b815260206004820181905260248201526000805160206108af833981519152604482015290519081900360640190fd5b60008151116104fa576040805162461bcd60e51b81526020600482015260136024820152724143434f554e54535f4c4953545f454d50545960681b604482015290519081900360640190fd5b60005b815181101561046357600082828151811061051457fe5b6020026020010151905061052781610327565b6105345761053481610696565b506001016104fd565b61054561034f565b610584576040805162461bcd60e51b815260206004820181905260248201526000805160206108af833981519152604482015290519081900360640190fd5b61029381610696565b61059561034f565b6105d4576040805162461bcd60e51b815260206004820181905260248201526000805160206108af833981519152604482015290519081900360640190fd5b610293816106de565b6105ee60668263ffffffff61077f16565b6040516001600160a01b038216907f3525e22824a8a7df2c9a6029941c824cf95b6447f1e13d5128fd3826d35afe8b90600090a250565b60006001600160a01b03821661066c5760405162461bcd60e51b81526004018080602001828103825260228152602001806108cf6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b3390565b303b1590565b6106a760668263ffffffff6107e616565b6040516001600160a01b038216907f47d1c22a25bb3a5d4e481b9b1e6944c2eade3181a0a20b495ed61d35b5323f2490600090a250565b6001600160a01b0381166107235760405162461bcd60e51b81526004018080602001828103825260268152602001806108686026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b6107898282610625565b6107c45760405162461bcd60e51b815260040180806020018281038252602181526020018061088e6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6107f08282610625565b15610842576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff1916600117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72315820a97080b339d420032bf3dcddd3ed1244777e319aa46d0b698157cc4fd67f3ec264736f6c63430005110032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80638f32d59b116100665780638f32d59b14610126578063c4d66de81461012e578063e8906a2d14610154578063eb12d61e146101f7578063f2fde38b1461021d57610093565b80630e316ab714610098578063715018a6146100c05780637df73e27146100c85780638da5cb5b14610102575b600080fd5b6100be600480360360208110156100ae57600080fd5b50356001600160a01b0316610243565b005b6100be610296565b6100ee600480360360208110156100de57600080fd5b50356001600160a01b0316610327565b604080519115158252519081900360200190f35b61010a610340565b604080516001600160a01b039092168252519081900360200190f35b6100ee61034f565b6100be6004803603602081101561014457600080fd5b50356001600160a01b0316610375565b6100be6004803603602081101561016a57600080fd5b81019060208101813564010000000081111561018557600080fd5b82018360208201111561019757600080fd5b803590602001918460208302840111640100000000831117156101b957600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610467945050505050565b6100be6004803603602081101561020d57600080fd5b50356001600160a01b031661053d565b6100be6004803603602081101561023357600080fd5b50356001600160a01b031661058d565b61024b61034f565b61028a576040805162461bcd60e51b815260206004820181905260248201526000805160206108af833981519152604482015290519081900360640190fd5b610293816105dd565b50565b61029e61034f565b6102dd576040805162461bcd60e51b815260206004820181905260248201526000805160206108af833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b600061033a60668363ffffffff61062516565b92915050565b6033546001600160a01b031690565b6033546000906001600160a01b031661036661068c565b6001600160a01b031614905090565b600054610100900460ff168061038e575061038e610690565b8061039c575060005460ff16155b6103d75760405162461bcd60e51b815260040180806020018281038252602e8152602001806108f1602e913960400191505060405180910390fd5b600054610100900460ff16158015610402576000805460ff1961ff0019909116610100171660011790555b603380546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38015610463576000805461ff00191690555b5050565b61046f61034f565b6104ae576040805162461bcd60e51b815260206004820181905260248201526000805160206108af833981519152604482015290519081900360640190fd5b60008151116104fa576040805162461bcd60e51b81526020600482015260136024820152724143434f554e54535f4c4953545f454d50545960681b604482015290519081900360640190fd5b60005b815181101561046357600082828151811061051457fe5b6020026020010151905061052781610327565b6105345761053481610696565b506001016104fd565b61054561034f565b610584576040805162461bcd60e51b815260206004820181905260248201526000805160206108af833981519152604482015290519081900360640190fd5b61029381610696565b61059561034f565b6105d4576040805162461bcd60e51b815260206004820181905260248201526000805160206108af833981519152604482015290519081900360640190fd5b610293816106de565b6105ee60668263ffffffff61077f16565b6040516001600160a01b038216907f3525e22824a8a7df2c9a6029941c824cf95b6447f1e13d5128fd3826d35afe8b90600090a250565b60006001600160a01b03821661066c5760405162461bcd60e51b81526004018080602001828103825260228152602001806108cf6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b3390565b303b1590565b6106a760668263ffffffff6107e616565b6040516001600160a01b038216907f47d1c22a25bb3a5d4e481b9b1e6944c2eade3181a0a20b495ed61d35b5323f2490600090a250565b6001600160a01b0381166107235760405162461bcd60e51b81526004018080602001828103825260268152602001806108686026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b6107898282610625565b6107c45760405162461bcd60e51b815260040180806020018281038252602181526020018061088e6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6107f08282610625565b15610842576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff1916600117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72315820a97080b339d420032bf3dcddd3ed1244777e319aa46d0b698157cc4fd67f3ec264736f6c63430005110032",
  "sourceMap": "449:2513:30:-;;;;;;;;;",
  "deployedSourceMap": "449:2513:30:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;449:2513:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2331:95;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2331:95:30;-1:-1:-1;;;;;2331:95:30;;:::i;:::-;;1746:137:126;;;:::i;1104:107:30:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1104:107:30;-1:-1:-1;;;;;1104:107:30;;:::i;:::-;;;;;;;;;;;;;;;;;;959:77:126;;;:::i;:::-;;;;-1:-1:-1;;;;;959:77:126;;;;;;;;;;;;;;1310:92;;;:::i;741:142::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;741:142:126;-1:-1:-1;;;;;741:142:126;;:::i;1758:346:30:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1758:346:30;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1758:346:30;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1758:346:30;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1758:346:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1758:346:30;;-1:-1:-1;1758:346:30;;-1:-1:-1;;;;;1758:346:30:i;1437:89::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1437:89:30;-1:-1:-1;;;;;1437:89:30;;:::i;2032:107:126:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2032:107:126;-1:-1:-1;;;;;2032:107:126;;:::i;2331:95:30:-;1163:9:126;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:126;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:126;;;;;;;;;;;;;;;2397:22:30;2411:7;2397:13;:22::i;:::-;2331:95;:::o;1746:137:126:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:126;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:126;;;;;;;;;;;;;;;1828:6;;1807:40;;1844:1;;-1:-1:-1;;;;;1828:6:126;;1807:40;;1844:1;;1807:40;1857:6;:19;;-1:-1:-1;;;;;;1857:19:126;;;1746:137::o;1104:107:30:-;1160:4;1183:21;:8;1196:7;1183:21;:12;:21;:::i;:::-;1176:28;1104:107;-1:-1:-1;;1104:107:30:o;959:77:126:-;1023:6;;-1:-1:-1;;;;;1023:6:126;959:77;:::o;1310:92::-;1389:6;;1350:4;;-1:-1:-1;;;;;1389:6:126;1373:12;:10;:12::i;:::-;-1:-1:-1;;;;;1373:22:126;;1366:29;;1310:92;:::o;741:142::-;1024:12:135;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:135;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:135;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:126;:15;;-1:-1:-1;;;;;;806:15:126;-1:-1:-1;;;;;806:15:126;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;836:40:126;;-1:-1:-1;;836:40:126;1268:14:135;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:135;;;1264:55;741:142:126;;:::o;1758:346:30:-;1163:9:126;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:126;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:126;;;;;;;;;;;;;;;1858:1:30;1840:8;:15;:19;1832:51;;;;;-1:-1:-1;;;1832:51:30;;;;;;;;;;;;-1:-1:-1;;;1832:51:30;;;;;;;;;;;;;;;1898:13;1893:205;1925:8;:15;1917:5;:23;1893:205;;;1965:15;1983:8;1992:5;1983:15;;;;;;;;;;;;;;1965:33;;2017:17;2026:7;2017:8;:17::i;:::-;2012:76;;2054:19;2065:7;2054:10;:19::i;:::-;-1:-1:-1;1942:7:30;;1893:205;;1437:89;1163:9:126;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:126;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:126;;;;;;;;;;;;;;;1500:19:30;1511:7;1500:10;:19::i;2032:107:126:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:126;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:126;;;;;;;;;;;;;;;2104:28;2123:8;2104:18;:28::i;2833:127:30:-;2892:24;:8;2908:7;2892:24;:15;:24;:::i;:::-;2931:22;;-1:-1:-1;;;;;2931:22:30;;;;;;;;2833:127;:::o;779:200:117:-;851:4;-1:-1:-1;;;;;875:21:117;;867:68;;;;-1:-1:-1;;;867:68:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:117;:11;:20;;;;;;;;;;;;;;;779:200::o;867:96:116:-;946:10;867:96;:::o;1409:498:135:-;1820:4;1864:17;1895:7;1409:498;:::o;2567:119:30:-;2623:21;:8;2636:7;2623:21;:12;:21;:::i;:::-;2659:20;;-1:-1:-1;;;;;2659:20:30;;;;;;;;2567:119;:::o;2240:225:126:-;-1:-1:-1;;;;;2313:22:126;;2305:73;;;;-1:-1:-1;;;2305:73:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:6;;2393:38;;-1:-1:-1;;;;;2393:38:126;;;;2414:6;;2393:38;;2414:6;;2393:38;2441:6;:17;;-1:-1:-1;;;;;;2441:17:126;-1:-1:-1;;;;;2441:17:126;;;;;;;;;;2240:225::o;510:180:117:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:117;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:117;;;510:180::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:117;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:117;424:4;401:27;;;260:175::o",
  "source": "pragma solidity 0.5.17;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\";\n\n/**\n    @notice This contract manages the signer role for the consensus contracts.\n    @notice It includes an owner role who has the ability to grant the signer role.\n    @dev It uses the Roles contract from OpenZeppelin.\n\n    @author develop@teller.finance\n */\ncontract OwnerSignersRole is Ownable {\n    using Roles for Roles.Role;\n\n    /**\n        @notice This event is emitted when a new signer is added.\n        @param account added as a signer.\n     */\n    event SignerAdded(address indexed account);\n\n    /**\n        @notice This event is emitted when a signer is removed.\n        @param account removed as a signer.\n     */\n    event SignerRemoved(address indexed account);\n\n    Roles.Role private _signers;\n\n    /**\n        @notice Gets whether an account address is a signer or not.\n        @param account address to test.\n        @return true if account is a signer. Otherwise it returns false.\n     */\n    function isSigner(address account) public view returns (bool) {\n        return _signers.has(account);\n    }\n\n    /**\n        @notice It adds a new account as a signer.\n        @param account address to add.\n        @dev The sender must be the owner.\n        @dev It throws a require error if the sender is not the owner.\n     */\n    function addSigner(address account) public onlyOwner {\n        _addSigner(account);\n    }\n\n    /**\n        @notice It adds a list of account as signers.\n        @param accounts addresses to add.\n        @dev The sender must be the owner.\n        @dev It throws a require error if the sender is not the owner.\n     */\n    function addSigners(address[] memory accounts) public onlyOwner {\n        require(accounts.length > 0, \"ACCOUNTS_LIST_EMPTY\");\n        for (uint256 index = 0; index < accounts.length; index++) {\n            address account = accounts[index];\n            if (!isSigner(account)) {\n                _addSigner(account);\n            }\n        }\n    }\n\n    /**\n        @notice It removes an account as signer.\n        @param account address to remove.\n        @dev The sender must be the owner.\n        @dev It throws a require error if the sender is not the owner.\n     */\n    function removeSigner(address account) public onlyOwner {\n        _removeSigner(account);\n    }\n\n    /**\n        @notice It is an internal function to add a signer and emit an event.\n        @param account to add as signer.\n     */\n    function _addSigner(address account) internal {\n        _signers.add(account);\n        emit SignerAdded(account);\n    }\n\n    /**\n        @notice It is an internal function to remove a signer and emit an event.\n        @param account to remove as signer.\n     */\n    function _removeSigner(address account) internal {\n        _signers.remove(account);\n        emit SignerRemoved(account);\n    }\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/OwnerSignersRole.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/OwnerSignersRole.sol",
    "exportedSymbols": {
      "OwnerSignersRole": [
        8549
      ]
    },
    "id": 8550,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8416,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:30"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol",
        "id": 8417,
        "nodeType": "ImportDirective",
        "scope": 8550,
        "sourceUnit": 19321,
        "src": "25:77:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "id": 8418,
        "nodeType": "ImportDirective",
        "scope": 8550,
        "sourceUnit": 20432,
        "src": "103:82:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8419,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20431,
              "src": "478:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$20431",
                "typeString": "contract Ownable"
              }
            },
            "id": 8420,
            "nodeType": "InheritanceSpecifier",
            "src": "478:7:30"
          }
        ],
        "contractDependencies": [
          19239,
          20431,
          21337
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract manages the signer role for the consensus contracts.\n@notice It includes an owner role who has the ability to grant the signer role.\n@dev It uses the Roles contract from OpenZeppelin.\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 8549,
        "linearizedBaseContracts": [
          8549,
          20431,
          19239,
          21337
        ],
        "name": "OwnerSignersRole",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8423,
            "libraryName": {
              "contractScope": null,
              "id": 8421,
              "name": "Roles",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19320,
              "src": "498:5:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Roles_$19320",
                "typeString": "library Roles"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "492:27:30",
            "typeName": {
              "contractScope": null,
              "id": 8422,
              "name": "Roles.Role",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19246,
              "src": "508:10:30",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Role_$19246_storage_ptr",
                "typeString": "struct Roles.Role"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when a new signer is added.\n@param account added as a signer.",
            "id": 8427,
            "name": "SignerAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8425,
                  "indexed": true,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 8427,
                  "src": "667:23:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "667:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "666:25:30"
            },
            "src": "649:43:30"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when a signer is removed.\n@param account removed as a signer.",
            "id": 8431,
            "name": "SignerRemoved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8429,
                  "indexed": true,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 8431,
                  "src": "842:23:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "841:25:30"
            },
            "src": "822:45:30"
          },
          {
            "constant": false,
            "id": 8433,
            "name": "_signers",
            "nodeType": "VariableDeclaration",
            "scope": 8549,
            "src": "873:27:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Role_$19246_storage",
              "typeString": "struct Roles.Role"
            },
            "typeName": {
              "contractScope": null,
              "id": 8432,
              "name": "Roles.Role",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19246,
              "src": "873:10:30",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Role_$19246_storage_ptr",
                "typeString": "struct Roles.Role"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 8445,
              "nodeType": "Block",
              "src": "1166:45:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8442,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8435,
                        "src": "1196:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8440,
                        "name": "_signers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8433,
                        "src": "1183:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Role_$19246_storage",
                          "typeString": "struct Roles.Role storage ref"
                        }
                      },
                      "id": 8441,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "has",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19319,
                      "src": "1183:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Role_$19246_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$19246_storage_ptr_$",
                        "typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
                      }
                    },
                    "id": 8443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1183:21:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8439,
                  "id": 8444,
                  "nodeType": "Return",
                  "src": "1176:28:30"
                }
              ]
            },
            "documentation": "@notice Gets whether an account address is a signer or not.\n@param account address to test.\n@return true if account is a signer. Otherwise it returns false.",
            "id": 8446,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSigner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8435,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 8446,
                  "src": "1122:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1121:17:30"
            },
            "returnParameters": {
              "id": 8439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8438,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8446,
                  "src": "1160:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8437,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1160:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1159:6:30"
            },
            "scope": 8549,
            "src": "1104:107:30",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8457,
              "nodeType": "Block",
              "src": "1490:36:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8454,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8448,
                        "src": "1511:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8453,
                      "name": "_addSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8532,
                      "src": "1500:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1500:19:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8456,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:19:30"
                }
              ]
            },
            "documentation": "@notice It adds a new account as a signer.\n@param account address to add.\n@dev The sender must be the owner.\n@dev It throws a require error if the sender is not the owner.",
            "id": 8458,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8451,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8450,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 20360,
                  "src": "1480:9:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1480:9:30"
              }
            ],
            "name": "addSigner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8448,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 8458,
                  "src": "1456:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1455:17:30"
            },
            "returnParameters": {
              "id": 8452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1490:0:30"
            },
            "scope": 8549,
            "src": "1437:89:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8503,
              "nodeType": "Block",
              "src": "1822:282:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8467,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8461,
                            "src": "1840:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 8468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1840:15:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 8469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1858:1:30",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1840:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4143434f554e54535f4c4953545f454d505459",
                        "id": 8471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1861:21:30",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15a806fd74cd8f649270704633acaea64bfd23d22862cd98b9bcc046d6ae375b",
                          "typeString": "literal_string \"ACCOUNTS_LIST_EMPTY\""
                        },
                        "value": "ACCOUNTS_LIST_EMPTY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15a806fd74cd8f649270704633acaea64bfd23d22862cd98b9bcc046d6ae375b",
                          "typeString": "literal_string \"ACCOUNTS_LIST_EMPTY\""
                        }
                      ],
                      "id": 8466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21470,
                        21471
                      ],
                      "referencedDeclaration": 21471,
                      "src": "1832:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1832:51:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8473,
                  "nodeType": "ExpressionStatement",
                  "src": "1832:51:30"
                },
                {
                  "body": {
                    "id": 8501,
                    "nodeType": "Block",
                    "src": "1951:147:30",
                    "statements": [
                      {
                        "assignments": [
                          8486
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8486,
                            "name": "account",
                            "nodeType": "VariableDeclaration",
                            "scope": 8501,
                            "src": "1965:15:30",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 8485,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1965:7:30",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 8490,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 8487,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8461,
                            "src": "1983:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 8489,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 8488,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8475,
                            "src": "1992:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1983:15:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1965:33:30"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 8494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2016:18:30",
                          "subExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 8492,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8486,
                                "src": "2026:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 8491,
                              "name": "isSigner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8446,
                              "src": "2017:8:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 8493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2017:17:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 8500,
                        "nodeType": "IfStatement",
                        "src": "2012:76:30",
                        "trueBody": {
                          "id": 8499,
                          "nodeType": "Block",
                          "src": "2036:52:30",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 8496,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8486,
                                    "src": "2065:7:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 8495,
                                  "name": "_addSigner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8532,
                                  "src": "2054:10:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 8497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2054:19:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 8498,
                              "nodeType": "ExpressionStatement",
                              "src": "2054:19:30"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8478,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8475,
                      "src": "1917:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 8479,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8461,
                        "src": "1925:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 8480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1925:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1917:23:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8502,
                  "initializationExpression": {
                    "assignments": [
                      8475
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8475,
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 8502,
                        "src": "1898:13:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8474,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1898:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 8477,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 8476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1914:1:30",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1898:17:30"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 8483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1942:7:30",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 8482,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8475,
                        "src": "1942:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8484,
                    "nodeType": "ExpressionStatement",
                    "src": "1942:7:30"
                  },
                  "nodeType": "ForStatement",
                  "src": "1893:205:30"
                }
              ]
            },
            "documentation": "@notice It adds a list of account as signers.\n@param accounts addresses to add.\n@dev The sender must be the owner.\n@dev It throws a require error if the sender is not the owner.",
            "id": 8504,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8464,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8463,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 20360,
                  "src": "1812:9:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1812:9:30"
              }
            ],
            "name": "addSigners",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8461,
                  "name": "accounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 8504,
                  "src": "1778:25:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8459,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1778:7:30",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 8460,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1778:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1777:27:30"
            },
            "returnParameters": {
              "id": 8465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1822:0:30"
            },
            "scope": 8549,
            "src": "1758:346:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8515,
              "nodeType": "Block",
              "src": "2387:39:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8512,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8506,
                        "src": "2411:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8511,
                      "name": "_removeSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8548,
                      "src": "2397:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2397:22:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8514,
                  "nodeType": "ExpressionStatement",
                  "src": "2397:22:30"
                }
              ]
            },
            "documentation": "@notice It removes an account as signer.\n@param account address to remove.\n@dev The sender must be the owner.\n@dev It throws a require error if the sender is not the owner.",
            "id": 8516,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8509,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8508,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 20360,
                  "src": "2377:9:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2377:9:30"
              }
            ],
            "name": "removeSigner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8506,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 8516,
                  "src": "2353:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8505,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2353:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2352:17:30"
            },
            "returnParameters": {
              "id": 8510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2387:0:30"
            },
            "scope": 8549,
            "src": "2331:95:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8531,
              "nodeType": "Block",
              "src": "2613:73:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8524,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8518,
                        "src": "2636:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8521,
                        "name": "_signers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8433,
                        "src": "2623:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Role_$19246_storage",
                          "typeString": "struct Roles.Role storage ref"
                        }
                      },
                      "id": 8523,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19271,
                      "src": "2623:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$19246_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$19246_storage_ptr_$",
                        "typeString": "function (struct Roles.Role storage pointer,address)"
                      }
                    },
                    "id": 8525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2623:21:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8526,
                  "nodeType": "ExpressionStatement",
                  "src": "2623:21:30"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8528,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8518,
                        "src": "2671:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8527,
                      "name": "SignerAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8427,
                      "src": "2659:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2659:20:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8530,
                  "nodeType": "EmitStatement",
                  "src": "2654:25:30"
                }
              ]
            },
            "documentation": "@notice It is an internal function to add a signer and emit an event.\n@param account to add as signer.",
            "id": 8532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addSigner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8518,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 8532,
                  "src": "2587:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2587:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2586:17:30"
            },
            "returnParameters": {
              "id": 8520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2613:0:30"
            },
            "scope": 8549,
            "src": "2567:119:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8547,
              "nodeType": "Block",
              "src": "2882:78:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8540,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8534,
                        "src": "2908:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8537,
                        "name": "_signers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8433,
                        "src": "2892:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Role_$19246_storage",
                          "typeString": "struct Roles.Role storage ref"
                        }
                      },
                      "id": 8539,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19295,
                      "src": "2892:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$19246_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$19246_storage_ptr_$",
                        "typeString": "function (struct Roles.Role storage pointer,address)"
                      }
                    },
                    "id": 8541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2892:24:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8542,
                  "nodeType": "ExpressionStatement",
                  "src": "2892:24:30"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8544,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8534,
                        "src": "2945:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8543,
                      "name": "SignerRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8431,
                      "src": "2931:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2931:22:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8546,
                  "nodeType": "EmitStatement",
                  "src": "2926:27:30"
                }
              ]
            },
            "documentation": "@notice It is an internal function to remove a signer and emit an event.\n@param account to remove as signer.",
            "id": 8548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeSigner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8534,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 8548,
                  "src": "2856:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2856:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2855:17:30"
            },
            "returnParameters": {
              "id": 8536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2882:0:30"
            },
            "scope": 8549,
            "src": "2833:127:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 8550,
        "src": "449:2513:30"
      }
    ],
    "src": "0:2963:30"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/OwnerSignersRole.sol",
    "exportedSymbols": {
      "OwnerSignersRole": [
        8549
      ]
    },
    "id": 8550,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8416,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:30"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol",
        "id": 8417,
        "nodeType": "ImportDirective",
        "scope": 8550,
        "sourceUnit": 19321,
        "src": "25:77:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "id": 8418,
        "nodeType": "ImportDirective",
        "scope": 8550,
        "sourceUnit": 20432,
        "src": "103:82:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8419,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20431,
              "src": "478:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$20431",
                "typeString": "contract Ownable"
              }
            },
            "id": 8420,
            "nodeType": "InheritanceSpecifier",
            "src": "478:7:30"
          }
        ],
        "contractDependencies": [
          19239,
          20431,
          21337
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract manages the signer role for the consensus contracts.\n@notice It includes an owner role who has the ability to grant the signer role.\n@dev It uses the Roles contract from OpenZeppelin.\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 8549,
        "linearizedBaseContracts": [
          8549,
          20431,
          19239,
          21337
        ],
        "name": "OwnerSignersRole",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8423,
            "libraryName": {
              "contractScope": null,
              "id": 8421,
              "name": "Roles",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19320,
              "src": "498:5:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Roles_$19320",
                "typeString": "library Roles"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "492:27:30",
            "typeName": {
              "contractScope": null,
              "id": 8422,
              "name": "Roles.Role",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19246,
              "src": "508:10:30",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Role_$19246_storage_ptr",
                "typeString": "struct Roles.Role"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when a new signer is added.\n@param account added as a signer.",
            "id": 8427,
            "name": "SignerAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8425,
                  "indexed": true,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 8427,
                  "src": "667:23:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "667:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "666:25:30"
            },
            "src": "649:43:30"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when a signer is removed.\n@param account removed as a signer.",
            "id": 8431,
            "name": "SignerRemoved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8429,
                  "indexed": true,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 8431,
                  "src": "842:23:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "841:25:30"
            },
            "src": "822:45:30"
          },
          {
            "constant": false,
            "id": 8433,
            "name": "_signers",
            "nodeType": "VariableDeclaration",
            "scope": 8549,
            "src": "873:27:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Role_$19246_storage",
              "typeString": "struct Roles.Role"
            },
            "typeName": {
              "contractScope": null,
              "id": 8432,
              "name": "Roles.Role",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19246,
              "src": "873:10:30",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Role_$19246_storage_ptr",
                "typeString": "struct Roles.Role"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 8445,
              "nodeType": "Block",
              "src": "1166:45:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8442,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8435,
                        "src": "1196:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8440,
                        "name": "_signers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8433,
                        "src": "1183:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Role_$19246_storage",
                          "typeString": "struct Roles.Role storage ref"
                        }
                      },
                      "id": 8441,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "has",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19319,
                      "src": "1183:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Role_$19246_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$19246_storage_ptr_$",
                        "typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
                      }
                    },
                    "id": 8443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1183:21:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8439,
                  "id": 8444,
                  "nodeType": "Return",
                  "src": "1176:28:30"
                }
              ]
            },
            "documentation": "@notice Gets whether an account address is a signer or not.\n@param account address to test.\n@return true if account is a signer. Otherwise it returns false.",
            "id": 8446,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSigner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8435,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 8446,
                  "src": "1122:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1121:17:30"
            },
            "returnParameters": {
              "id": 8439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8438,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8446,
                  "src": "1160:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8437,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1160:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1159:6:30"
            },
            "scope": 8549,
            "src": "1104:107:30",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8457,
              "nodeType": "Block",
              "src": "1490:36:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8454,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8448,
                        "src": "1511:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8453,
                      "name": "_addSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8532,
                      "src": "1500:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1500:19:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8456,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:19:30"
                }
              ]
            },
            "documentation": "@notice It adds a new account as a signer.\n@param account address to add.\n@dev The sender must be the owner.\n@dev It throws a require error if the sender is not the owner.",
            "id": 8458,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8451,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8450,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 20360,
                  "src": "1480:9:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1480:9:30"
              }
            ],
            "name": "addSigner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8448,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 8458,
                  "src": "1456:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1455:17:30"
            },
            "returnParameters": {
              "id": 8452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1490:0:30"
            },
            "scope": 8549,
            "src": "1437:89:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8503,
              "nodeType": "Block",
              "src": "1822:282:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8467,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8461,
                            "src": "1840:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 8468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1840:15:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 8469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1858:1:30",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1840:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4143434f554e54535f4c4953545f454d505459",
                        "id": 8471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1861:21:30",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15a806fd74cd8f649270704633acaea64bfd23d22862cd98b9bcc046d6ae375b",
                          "typeString": "literal_string \"ACCOUNTS_LIST_EMPTY\""
                        },
                        "value": "ACCOUNTS_LIST_EMPTY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15a806fd74cd8f649270704633acaea64bfd23d22862cd98b9bcc046d6ae375b",
                          "typeString": "literal_string \"ACCOUNTS_LIST_EMPTY\""
                        }
                      ],
                      "id": 8466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21470,
                        21471
                      ],
                      "referencedDeclaration": 21471,
                      "src": "1832:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1832:51:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8473,
                  "nodeType": "ExpressionStatement",
                  "src": "1832:51:30"
                },
                {
                  "body": {
                    "id": 8501,
                    "nodeType": "Block",
                    "src": "1951:147:30",
                    "statements": [
                      {
                        "assignments": [
                          8486
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8486,
                            "name": "account",
                            "nodeType": "VariableDeclaration",
                            "scope": 8501,
                            "src": "1965:15:30",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 8485,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1965:7:30",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 8490,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 8487,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8461,
                            "src": "1983:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 8489,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 8488,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8475,
                            "src": "1992:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1983:15:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1965:33:30"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 8494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2016:18:30",
                          "subExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 8492,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8486,
                                "src": "2026:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 8491,
                              "name": "isSigner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8446,
                              "src": "2017:8:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 8493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2017:17:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 8500,
                        "nodeType": "IfStatement",
                        "src": "2012:76:30",
                        "trueBody": {
                          "id": 8499,
                          "nodeType": "Block",
                          "src": "2036:52:30",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 8496,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8486,
                                    "src": "2065:7:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 8495,
                                  "name": "_addSigner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8532,
                                  "src": "2054:10:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 8497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2054:19:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 8498,
                              "nodeType": "ExpressionStatement",
                              "src": "2054:19:30"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8478,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8475,
                      "src": "1917:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 8479,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8461,
                        "src": "1925:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 8480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1925:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1917:23:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8502,
                  "initializationExpression": {
                    "assignments": [
                      8475
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8475,
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 8502,
                        "src": "1898:13:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8474,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1898:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 8477,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 8476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1914:1:30",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1898:17:30"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 8483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1942:7:30",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 8482,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8475,
                        "src": "1942:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8484,
                    "nodeType": "ExpressionStatement",
                    "src": "1942:7:30"
                  },
                  "nodeType": "ForStatement",
                  "src": "1893:205:30"
                }
              ]
            },
            "documentation": "@notice It adds a list of account as signers.\n@param accounts addresses to add.\n@dev The sender must be the owner.\n@dev It throws a require error if the sender is not the owner.",
            "id": 8504,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8464,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8463,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 20360,
                  "src": "1812:9:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1812:9:30"
              }
            ],
            "name": "addSigners",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8461,
                  "name": "accounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 8504,
                  "src": "1778:25:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8459,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1778:7:30",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 8460,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1778:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1777:27:30"
            },
            "returnParameters": {
              "id": 8465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1822:0:30"
            },
            "scope": 8549,
            "src": "1758:346:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8515,
              "nodeType": "Block",
              "src": "2387:39:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8512,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8506,
                        "src": "2411:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8511,
                      "name": "_removeSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8548,
                      "src": "2397:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2397:22:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8514,
                  "nodeType": "ExpressionStatement",
                  "src": "2397:22:30"
                }
              ]
            },
            "documentation": "@notice It removes an account as signer.\n@param account address to remove.\n@dev The sender must be the owner.\n@dev It throws a require error if the sender is not the owner.",
            "id": 8516,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8509,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8508,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 20360,
                  "src": "2377:9:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2377:9:30"
              }
            ],
            "name": "removeSigner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8506,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 8516,
                  "src": "2353:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8505,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2353:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2352:17:30"
            },
            "returnParameters": {
              "id": 8510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2387:0:30"
            },
            "scope": 8549,
            "src": "2331:95:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8531,
              "nodeType": "Block",
              "src": "2613:73:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8524,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8518,
                        "src": "2636:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8521,
                        "name": "_signers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8433,
                        "src": "2623:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Role_$19246_storage",
                          "typeString": "struct Roles.Role storage ref"
                        }
                      },
                      "id": 8523,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19271,
                      "src": "2623:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$19246_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$19246_storage_ptr_$",
                        "typeString": "function (struct Roles.Role storage pointer,address)"
                      }
                    },
                    "id": 8525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2623:21:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8526,
                  "nodeType": "ExpressionStatement",
                  "src": "2623:21:30"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8528,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8518,
                        "src": "2671:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8527,
                      "name": "SignerAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8427,
                      "src": "2659:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2659:20:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8530,
                  "nodeType": "EmitStatement",
                  "src": "2654:25:30"
                }
              ]
            },
            "documentation": "@notice It is an internal function to add a signer and emit an event.\n@param account to add as signer.",
            "id": 8532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addSigner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8518,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 8532,
                  "src": "2587:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2587:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2586:17:30"
            },
            "returnParameters": {
              "id": 8520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2613:0:30"
            },
            "scope": 8549,
            "src": "2567:119:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8547,
              "nodeType": "Block",
              "src": "2882:78:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8540,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8534,
                        "src": "2908:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8537,
                        "name": "_signers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8433,
                        "src": "2892:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Role_$19246_storage",
                          "typeString": "struct Roles.Role storage ref"
                        }
                      },
                      "id": 8539,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19295,
                      "src": "2892:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$19246_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$19246_storage_ptr_$",
                        "typeString": "function (struct Roles.Role storage pointer,address)"
                      }
                    },
                    "id": 8541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2892:24:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8542,
                  "nodeType": "ExpressionStatement",
                  "src": "2892:24:30"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8544,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8534,
                        "src": "2945:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8543,
                      "name": "SignerRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8431,
                      "src": "2931:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2931:22:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8546,
                  "nodeType": "EmitStatement",
                  "src": "2926:27:30"
                }
              ]
            },
            "documentation": "@notice It is an internal function to remove a signer and emit an event.\n@param account to remove as signer.",
            "id": 8548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeSigner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8534,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 8548,
                  "src": "2856:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2856:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2855:17:30"
            },
            "returnParameters": {
              "id": 8536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2882:0:30"
            },
            "scope": 8549,
            "src": "2833:127:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 8550,
        "src": "449:2513:30"
      }
    ],
    "src": "0:2963:30"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-06T02:15:12.317Z",
  "devdoc": {
    "author": "develop@teller.finance",
    "details": "It uses the Roles contract from OpenZeppelin.",
    "methods": {
      "addSigner(address)": {
        "details": "The sender must be the owner.It throws a require error if the sender is not the owner.",
        "params": {
          "account": "address to add."
        }
      },
      "addSigners(address[])": {
        "details": "The sender must be the owner.It throws a require error if the sender is not the owner.",
        "params": {
          "accounts": "addresses to add."
        }
      },
      "initialize(address)": {
        "details": "Initializes the contract setting the deployer as the initial owner."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "isSigner(address)": {
        "params": {
          "account": "address to test."
        },
        "return": "true if account is a signer. Otherwise it returns false."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeSigner(address)": {
        "details": "The sender must be the owner.It throws a require error if the sender is not the owner.",
        "params": {
          "account": "address to remove."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "addSigner(address)": {
        "notice": "It adds a new account as a signer."
      },
      "addSigners(address[])": {
        "notice": "It adds a list of account as signers."
      },
      "isSigner(address)": {
        "notice": "Gets whether an account address is a signer or not."
      },
      "removeSigner(address)": {
        "notice": "It removes an account as signer."
      }
    },
    "notice": "This contract manages the signer role for the consensus contracts.It includes an owner role who has the ability to grant the signer role."
  }
}