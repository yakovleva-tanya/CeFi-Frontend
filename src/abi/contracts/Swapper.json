{
  "contractName": "Swapper",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sourceToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "destinationToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sourceAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "destinationAmount",
          "type": "uint256"
        }
      ],
      "name": "UniswapSwapped",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "findTokenIndex",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "sourceAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minDestination",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "destinationAmount",
          "type": "uint256"
        }
      ],
      "name": "swapForExact",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"destinationAmount\",\"type\":\"uint256\"}],\"name\":\"UniswapSwapped\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"findTokenIndex\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minDestination\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"destinationAmount\",\"type\":\"uint256\"}],\"name\":\"swapForExact\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"initialize(address)\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"swap(address[],uint256,uint256)\":{\"params\":{\"minDestination\":\"The minimum amount of output tokens that must be received for the transaction not to revert.\",\"path\":\"An array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.\",\"sourceAmount\":\"amount of source token to swap.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"swap(address[],uint256,uint256)\":{\"notice\":\"Swaps ETH/Tokens for Tokens/ETH using different Uniswap v2 Router 02 methods.\"}},\"notice\":\"This mock is used to expose a payable fallback function on tests.\"}},\"settings\":{\"compilationTarget\":{\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/mock/providers/uniswap/Swapper.sol\":\"Swapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/BaseEscrowDapp.sol\":{\"keccak256\":\"0x587c00e00eaf015e123b5120c62149f200627b45b7bba0b4fc6d6d644591ab24\",\"urls\":[\"bzz-raw://9612dd1ff58fca18027af9331ea42e5d3284a0125174b48b81e02bbcb1e326fa\",\"dweb:/ipfs/QmZbYhvrvwPqZGsQEDtMPehgjaTwwM5rJG5xuZQmiEcMp6\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/escrow/dapps/IUniswap.sol\":{\"keccak256\":\"0xfbd948fdcf67ec8eaf68f79b3a809912a729889a4e95cb97a66c59209d8db844\",\"urls\":[\"bzz-raw://ca0dc3136f5ad23efd2128122d21298337eae237982603966e007fc964314523\",\"dweb:/ipfs/QmdxevQ13oGy6E7GdAm7nFgghvfiQcMMAsxiJTUy1GFgBQ\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/escrow/dapps/Uniswap.sol\":{\"keccak256\":\"0xa70cffd687cad4dad345ab127e2c4e4f6338278b62b0b118d9dff6841be8201d\",\"urls\":[\"bzz-raw://47c9a5d34b60ed630b53ea427b397f7f201bccb514dae97d97fc2315703d48a9\",\"dweb:/ipfs/QmeivYDTkHp9EdoyUy92k7YZyKNCXhpjs8zuWkzJRyvJGo\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/mock/providers/uniswap/Swapper.sol\":{\"keccak256\":\"0xd974a87c43038dd2cd9bc483e30dab8e1678a27f71ac7e8b8fb18b2cdaf2ac7d\",\"urls\":[\"bzz-raw://9734430051fa9526847664b0312bd583bcd8cc8ab04c15073242eb04269fde49\",\"dweb:/ipfs/QmVBzKukzaN4FsZJpt9MjJUiL6Q5K9ajMjVttip6LnaKEA\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/providers/uniswap/IUniswapV2Router02.sol\":{\"keccak256\":\"0xb127f430d9f8e4c78d29b668e2cd8155775abf8966772bfe96a9c9ba4a4f6e6c\",\"urls\":[\"bzz-raw://07641491614d02b3aa1cfd2de7e03208e0a623d2a6a812a55c0fcd8a8c7be4e0\",\"dweb:/ipfs/QmQVPy1Fr5KZsqq3tvSj7Z7fGxRwCUsDHS8YUcw7kTLEPh\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/AddressArrayLib.sol\":{\"keccak256\":\"0x5486df4c327e0de11b03451478ae59ae368a9266de9ea834cc04cf5f98c52cb2\",\"urls\":[\"bzz-raw://3d85a789bf71f24673c9cd058e904f4a9802e21c5acbd958a2371ee951329467\",\"dweb:/ipfs/QmddMKEJFssfhF7dxFK4r9RXB4aCzn4gLdGXyBvkv7k43y\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzz-raw://a3f816aa3e6161b4cf882ad34755673848d835f7fb964db49bcef9df14570cef\",\"dweb:/ipfs/QmQACSH1W7pKQnqTAqpuEP8ychp3PvosfnyondLaLE1nVq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x60806040526114a2806100136000396000f3fe6080604052600436106100915760003560e01c8063aa6ca80811610059578063aa6ca808146101fc578063b8001b0714610261578063c4d66de8146102a4578063f2fde38b146102d7578063f887ea401461030a57610091565b80630a11fd07146100935780633f3e37e4146100d8578063715018a61461018d5780638da5cb5b146101a25780638f32d59b146101d3575b005b34801561009f57600080fd5b506100c6600480360360208110156100b657600080fd5b50356001600160a01b031661031f565b60408051918252519081900360200190f35b3480156100e457600080fd5b50610091600480360360608110156100fb57600080fd5b81019060208101813564010000000081111561011657600080fd5b82018360208201111561012857600080fd5b8035906020019184602083028401116401000000008311171561014a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020013561034f565b34801561019957600080fd5b506100916103cd565b3480156101ae57600080fd5b506101b7610470565b604080516001600160a01b039092168252519081900360200190f35b3480156101df57600080fd5b506101e8610480565b604080519115158252519081900360200190f35b34801561020857600080fd5b506102116104a6565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561024d578181015183820152602001610235565b505050509050019250505060405180910390f35b34801561026d57600080fd5b506100916004803603606081101561028457600080fd5b506001600160a01b03813581169160208101359091169060400135610508565b3480156102b057600080fd5b50610091600480360360208110156102c757600080fd5b50356001600160a01b031661078f565b3480156102e357600080fd5b50610091600480360360208110156102fa57600080fd5b50356001600160a01b0316610881565b34801561031657600080fd5b506101b76108e6565b6000808061033460668563ffffffff6108fe16565b915091508161034557600019610347565b805b949350505050565b610357610480565b6103a8576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6103c8737a250d5630b4cf539739df2c5dacb4c659f2488d848484610953565b505050565b6103d5610480565b610426576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6033546001600160a01b03165b90565b6033546000906001600160a01b0316610497610e2a565b6001600160a01b031614905090565b606060668054806020026020016040519081016040528092919081815260200182805480156104fe57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104e0575b5050505050905090565b6040805160028082526060808301845292602083019080388339019050509050737a250d5630b4cf539739df2c5dacb4c659f2488d6001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561057557600080fd5b505afa158015610589573d6000803e3d6000fd5b505050506040513d602081101561059f57600080fd5b5051815182906000906105ae57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505082816001815181106105dc57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050737a250d5630b4cf539739df2c5dacb4c659f2488d6001600160a01b031663fb3bdb4147848488426040518663ffffffff1660e01b81526004018085815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b8381101561069757818101518382015260200161067f565b50505050905001955050505050506000604051808303818588803b1580156106be57600080fd5b505af11580156106d2573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405260208110156106fc57600080fd5b810190808051604051939291908464010000000082111561071c57600080fd5b90830190602082018581111561073157600080fd5b825186602082028301116401000000008211171561074e57600080fd5b82525081516020918201928201910280838360005b8381101561077b578181015183820152602001610763565b505050509050016040525050505050505050565b600054610100900460ff16806107a857506107a8610e2e565b806107b6575060005460ff16155b6107f15760405162461bcd60e51b815260040180806020018281038252602e815260200180611440602e913960400191505060405180910390fd5b600054610100900460ff1615801561081c576000805460ff1961ff0019909116610100171660011790555b603380546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3801561087d576000805461ff00191690555b5050565b610889610480565b6108da576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6108e381610e34565b50565b737a250d5630b4cf539739df2c5dacb4c659f2488d81565b6000805b835481101561094c57826001600160a01b031684828154811061092157fe5b6000918252602090912001546001600160a01b031614915081156109445761094c565b600101610902565b9250929050565b6002835110156109a3576040805162461bcd60e51b815260206004820152601660248201527515539254d5d05417d410551217d513d3d7d4d213d49560521b604482015290519081900360640190fd5b6000836000815181106109b257fe5b602002602001015190506000846001865103815181106109ce57fe5b60200260200101519050836109e283610ed5565b1015610a35576040805162461bcd60e51b815260206004820152601b60248201527f554e49535741505f494e53554646494349454e545f534f555243450000000000604482015290519081900360640190fd5b610a698160405180606001604052806023815260200161141d602391396001600160a01b038516919063ffffffff610f5116565b60008311610abe576040805162461bcd60e51b815260206004820152601c60248201527f554e49535741505f4d494e5f44455354494e4154494f4e5f5a45524f00000000604482015290519081900360640190fd5b6000610ac982610ed5565b9050826001600160a01b031663095ea7b388876040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610b2b57600080fd5b505af1158015610b3f573d6000803e3d6000fd5b505050506040513d6020811015610b5557600080fd5b8101908080519060200190929190505050506060876001600160a01b03166338ed173987878a30426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610bf6578181015183820152602001610bde565b505050509050019650505050505050600060405180830381600087803b158015610c1f57600080fd5b505af1158015610c33573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610c5c57600080fd5b8101908080516040519392919084640100000000821115610c7c57600080fd5b908301906020820185811115610c9157600080fd5b8251866020820283011164010000000082111715610cae57600080fd5b82525081516020918201928201910280838360005b83811015610cdb578181015183820152602001610cc3565b5050505090500160405250505090506000610cf584610ed5565b9050858301811015610d4e576040805162461bcd60e51b815260206004820152601d60248201527f554e49535741505f42414c414e43455f4e4f545f494e43524541534544000000604482015290519081900360640190fd5b8751825114610d9d576040805162461bcd60e51b8152602060048201526016602482015275554e49535741505f4552524f525f5357415050494e4760501b604482015290519081900360640190fd5b600082600184510381518110610daf57fe5b60200260200101519050610dc286610feb565b610dcb85610feb565b846001600160a01b0316866001600160a01b03167f1bb1e73a9804d75cf23770eb841f89d3179041febf415b046d77b318d3b5530d8a84604051808381526020018281526020019250505060405180910390a350505050505050505050565b3390565b303b1590565b6001600160a01b038116610e795760405162461bcd60e51b81526004018080602001828103825260268152602001806113f76026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b604080516370a0823160e01b815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b158015610f1f57600080fd5b505afa158015610f33573d6000803e3d6000fd5b505050506040513d6020811015610f4957600080fd5b505192915050565b610f5b8383611048565b8190610fe55760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610faa578181015183820152602001610f92565b50505050905090810190601f168015610fd75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505050565b600080610fff60668463ffffffff6108fe16565b91509150600061100e84610ed5565b1115611031578161102c5761102a60668463ffffffff61105f16565b505b6103c8565b81156103c857610fe560668263ffffffff61114816565b6001600160a01b0382811690821614155b92915050565b60606001600160a01b0382166110bc576040805162461bcd60e51b815260206004820152601960248201527f454d5054595f414444524553535f4e4f545f414c4c4f57454400000000000000604482015290519081900360640190fd5b8254600181018455600084815260209081902090910180546001600160a01b0319166001600160a01b038516179055835460408051828402810184019091528181529185919083018282801561113b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161111d575b5050505050905092915050565b815460609082106111b0578254604080516020808402820181019092528281529185918301828280156111a457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611186575b50505050509050611059565b825460001901821415611254578254839060001981019081106111cf57fe5b600091825260209091200180546001600160a01b031916905582546111f88460001983016113b9565b508254604080516020808402820181019092528281529185918301828280156111a4576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116111865750505050509050611059565b82546000908490600019810190811061126957fe5b60009182526020909120015484546001600160a01b03909116915084908490811061129057fe5b60009182526020909120015484546001600160a01b0390911690859060001981019081106112ba57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550808484815481106112f557fe5b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905583548490600019810190811061133057fe5b600091825260209091200180546001600160a01b031916905583546113598560001983016113b9565b508354604080516020808402820181019092528281529186918301828280156113ab57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161138d575b505050505091505092915050565b8154818355818111156103c8576000838152602090206103c891810190830161047d91905b808211156113f257600081556001016113de565b509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373554e49535741505f534f555243455f414e445f44455354494e4154494f4e5f53414d45436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72315820e48afccd09b24571135b61bc990f65cba109803dbab0101d9c90487337cd763064736f6c63430005110032",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c8063aa6ca80811610059578063aa6ca808146101fc578063b8001b0714610261578063c4d66de8146102a4578063f2fde38b146102d7578063f887ea401461030a57610091565b80630a11fd07146100935780633f3e37e4146100d8578063715018a61461018d5780638da5cb5b146101a25780638f32d59b146101d3575b005b34801561009f57600080fd5b506100c6600480360360208110156100b657600080fd5b50356001600160a01b031661031f565b60408051918252519081900360200190f35b3480156100e457600080fd5b50610091600480360360608110156100fb57600080fd5b81019060208101813564010000000081111561011657600080fd5b82018360208201111561012857600080fd5b8035906020019184602083028401116401000000008311171561014a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020013561034f565b34801561019957600080fd5b506100916103cd565b3480156101ae57600080fd5b506101b7610470565b604080516001600160a01b039092168252519081900360200190f35b3480156101df57600080fd5b506101e8610480565b604080519115158252519081900360200190f35b34801561020857600080fd5b506102116104a6565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561024d578181015183820152602001610235565b505050509050019250505060405180910390f35b34801561026d57600080fd5b506100916004803603606081101561028457600080fd5b506001600160a01b03813581169160208101359091169060400135610508565b3480156102b057600080fd5b50610091600480360360208110156102c757600080fd5b50356001600160a01b031661078f565b3480156102e357600080fd5b50610091600480360360208110156102fa57600080fd5b50356001600160a01b0316610881565b34801561031657600080fd5b506101b76108e6565b6000808061033460668563ffffffff6108fe16565b915091508161034557600019610347565b805b949350505050565b610357610480565b6103a8576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6103c8737a250d5630b4cf539739df2c5dacb4c659f2488d848484610953565b505050565b6103d5610480565b610426576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6033546001600160a01b03165b90565b6033546000906001600160a01b0316610497610e2a565b6001600160a01b031614905090565b606060668054806020026020016040519081016040528092919081815260200182805480156104fe57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104e0575b5050505050905090565b6040805160028082526060808301845292602083019080388339019050509050737a250d5630b4cf539739df2c5dacb4c659f2488d6001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561057557600080fd5b505afa158015610589573d6000803e3d6000fd5b505050506040513d602081101561059f57600080fd5b5051815182906000906105ae57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505082816001815181106105dc57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050737a250d5630b4cf539739df2c5dacb4c659f2488d6001600160a01b031663fb3bdb4147848488426040518663ffffffff1660e01b81526004018085815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b8381101561069757818101518382015260200161067f565b50505050905001955050505050506000604051808303818588803b1580156106be57600080fd5b505af11580156106d2573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405260208110156106fc57600080fd5b810190808051604051939291908464010000000082111561071c57600080fd5b90830190602082018581111561073157600080fd5b825186602082028301116401000000008211171561074e57600080fd5b82525081516020918201928201910280838360005b8381101561077b578181015183820152602001610763565b505050509050016040525050505050505050565b600054610100900460ff16806107a857506107a8610e2e565b806107b6575060005460ff16155b6107f15760405162461bcd60e51b815260040180806020018281038252602e815260200180611440602e913960400191505060405180910390fd5b600054610100900460ff1615801561081c576000805460ff1961ff0019909116610100171660011790555b603380546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3801561087d576000805461ff00191690555b5050565b610889610480565b6108da576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6108e381610e34565b50565b737a250d5630b4cf539739df2c5dacb4c659f2488d81565b6000805b835481101561094c57826001600160a01b031684828154811061092157fe5b6000918252602090912001546001600160a01b031614915081156109445761094c565b600101610902565b9250929050565b6002835110156109a3576040805162461bcd60e51b815260206004820152601660248201527515539254d5d05417d410551217d513d3d7d4d213d49560521b604482015290519081900360640190fd5b6000836000815181106109b257fe5b602002602001015190506000846001865103815181106109ce57fe5b60200260200101519050836109e283610ed5565b1015610a35576040805162461bcd60e51b815260206004820152601b60248201527f554e49535741505f494e53554646494349454e545f534f555243450000000000604482015290519081900360640190fd5b610a698160405180606001604052806023815260200161141d602391396001600160a01b038516919063ffffffff610f5116565b60008311610abe576040805162461bcd60e51b815260206004820152601c60248201527f554e49535741505f4d494e5f44455354494e4154494f4e5f5a45524f00000000604482015290519081900360640190fd5b6000610ac982610ed5565b9050826001600160a01b031663095ea7b388876040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610b2b57600080fd5b505af1158015610b3f573d6000803e3d6000fd5b505050506040513d6020811015610b5557600080fd5b8101908080519060200190929190505050506060876001600160a01b03166338ed173987878a30426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610bf6578181015183820152602001610bde565b505050509050019650505050505050600060405180830381600087803b158015610c1f57600080fd5b505af1158015610c33573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610c5c57600080fd5b8101908080516040519392919084640100000000821115610c7c57600080fd5b908301906020820185811115610c9157600080fd5b8251866020820283011164010000000082111715610cae57600080fd5b82525081516020918201928201910280838360005b83811015610cdb578181015183820152602001610cc3565b5050505090500160405250505090506000610cf584610ed5565b9050858301811015610d4e576040805162461bcd60e51b815260206004820152601d60248201527f554e49535741505f42414c414e43455f4e4f545f494e43524541534544000000604482015290519081900360640190fd5b8751825114610d9d576040805162461bcd60e51b8152602060048201526016602482015275554e49535741505f4552524f525f5357415050494e4760501b604482015290519081900360640190fd5b600082600184510381518110610daf57fe5b60200260200101519050610dc286610feb565b610dcb85610feb565b846001600160a01b0316866001600160a01b03167f1bb1e73a9804d75cf23770eb841f89d3179041febf415b046d77b318d3b5530d8a84604051808381526020018281526020019250505060405180910390a350505050505050505050565b3390565b303b1590565b6001600160a01b038116610e795760405162461bcd60e51b81526004018080602001828103825260268152602001806113f76026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b604080516370a0823160e01b815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b158015610f1f57600080fd5b505afa158015610f33573d6000803e3d6000fd5b505050506040513d6020811015610f4957600080fd5b505192915050565b610f5b8383611048565b8190610fe55760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610faa578181015183820152602001610f92565b50505050905090810190601f168015610fd75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505050565b600080610fff60668463ffffffff6108fe16565b91509150600061100e84610ed5565b1115611031578161102c5761102a60668463ffffffff61105f16565b505b6103c8565b81156103c857610fe560668263ffffffff61114816565b6001600160a01b0382811690821614155b92915050565b60606001600160a01b0382166110bc576040805162461bcd60e51b815260206004820152601960248201527f454d5054595f414444524553535f4e4f545f414c4c4f57454400000000000000604482015290519081900360640190fd5b8254600181018455600084815260209081902090910180546001600160a01b0319166001600160a01b038516179055835460408051828402810184019091528181529185919083018282801561113b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161111d575b5050505050905092915050565b815460609082106111b0578254604080516020808402820181019092528281529185918301828280156111a457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611186575b50505050509050611059565b825460001901821415611254578254839060001981019081106111cf57fe5b600091825260209091200180546001600160a01b031916905582546111f88460001983016113b9565b508254604080516020808402820181019092528281529185918301828280156111a4576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116111865750505050509050611059565b82546000908490600019810190811061126957fe5b60009182526020909120015484546001600160a01b03909116915084908490811061129057fe5b60009182526020909120015484546001600160a01b0390911690859060001981019081106112ba57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550808484815481106112f557fe5b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905583548490600019810190811061133057fe5b600091825260209091200180546001600160a01b031916905583546113598560001983016113b9565b508354604080516020808402820181019092528281529186918301828280156113ab57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161138d575b505050505091505092915050565b8154818355818111156103c8576000838152602090206103c891810190830161047d91905b808211156113f257600081556001016113de565b509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373554e49535741505f534f555243455f414e445f44455354494e4154494f4e5f53414d45436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72315820e48afccd09b24571135b61bc990f65cba109803dbab0101d9c90487337cd763064736f6c63430005110032",
  "sourceMap": "161:473:83:-;;;;;;;;;",
  "deployedSourceMap": "161:473:83:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;565:196:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;565:196:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;565:196:9;-1:-1:-1;;;;;565:196:9;;:::i;:::-;;;;;;;;;;;;;;;;2747:198:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2747:198:38;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2747:198:38;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2747:198:38;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2747:198:38;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2747:198:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2747:198:38;;-1:-1:-1;;2747:198:38;;;-1:-1:-1;;;2747:198:38;;;;:::i;1746:137:127:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1746:137:127;;;:::i;959:77::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;959:77:127;;;:::i;:::-;;;;-1:-1:-1;;;;;959:77:127;;;;;;;;;;;;;;1310:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1310:92:127;;;:::i;:::-;;;;;;;;;;;;;;;;;;469:90:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;469:90:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;469:90:9;;;;;;;;;;;;;;;;;195:401:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;195:401:83;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;195:401:83;;;;;;;;;;;;;;;;;:::i;741:142:127:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;741:142:127;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;741:142:127;-1:-1:-1;;;;;741:142:127;;:::i;2032:107::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2032:107:127;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2032:107:127;-1:-1:-1;;;;;2032:107:127;;:::i;2073:120:38:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2073:120:38;;;:::i;565:196:9:-;634:6;;;682:29;:6;698:12;682:29;:15;:29;:::i;:::-;652:59;;;;728:5;:26;;-1:-1:-1;;728:26:9;;;743:5;728:26;721:33;565:196;-1:-1:-1;;;;565:196:9:o;2747:198:38:-;1163:9:127;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2889:49:38;2145:42;2903:4;2909:12;2923:14;2889:5;:49::i;:::-;2747:198;;;:::o;1746:137:127:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1828:6;;1807:40;;1844:1;;-1:-1:-1;;;;;1828:6:127;;1807:40;;1844:1;;1807:40;1857:6;:19;;-1:-1:-1;;;;;;1857:19:127;;;1746:137::o;959:77::-;1023:6;;-1:-1:-1;;;;;1023:6:127;959:77;;:::o;1310:92::-;1389:6;;1350:4;;-1:-1:-1;;;;;1389:6:127;1373:12;:10;:12::i;:::-;-1:-1:-1;;;;;1373:22:127;;1366:29;;1310:92;:::o;469:90:9:-;511:16;546:6;539:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;539:13:9;;;;;;;;;;;;;;;;;;;;;;;469:90;:::o;195:401:83:-;349:16;;;363:1;349:16;;;325:21;349:16;;;;;325:21;349:16;;;;;105:10:-1;349:16:83;88:34:-1;136:17;;-1:-1;349:16:83;325:40;;2145:42:38;-1:-1:-1;;;;;385:11:83;;:13;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;385:13:83;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;385:13:83;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;385:13:83;375:7;;:4;;380:1;;375:7;;;;;;;;;:23;-1:-1:-1;;;;;375:23:83;;;-1:-1:-1;;;;;375:23:83;;;;;418:12;408:4;413:1;408:7;;;;;;;;;;;;;:22;-1:-1:-1;;;;;408:22:83;;;-1:-1:-1;;;;;408:22:83;;;;;2145:42:38;-1:-1:-1;;;;;440:28:83;;475:21;511:17;542:4;560:2;576:3;440:149;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;440:149:83;-1:-1:-1;;;;;440:149:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;440:149:83;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;440:149:83;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;440:149:83;;;;;;;39:16:-1;36:1;17:17;2:54;101:4;440:149:83;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;440:149:83;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;373:25;;-1:-1;440:149:83;;421:4:-1;412:14;;;;440:149:83;;;;;412:14:-1;440:149:83;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;440:149:83;;;;;;;;;;;;195:401;;;;:::o;741:142:127:-;1024:12:136;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:136;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:136;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:127;:15;;-1:-1:-1;;;;;;806:15:127;-1:-1:-1;;;;;806:15:127;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;836:40:127;;-1:-1:-1;;836:40:127;1268:14:136;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:136;;;1264:55;741:142:127;;:::o;2032:107::-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2104:28;2123:8;2104:18;:28::i;:::-;2032:107;:::o;2073:120:38:-;2145:42;2073:120;:::o;1629:394:104:-;1732:10;;1798:186;1826:11;;1816:21;;1798:186;;;1889:4;-1:-1:-1;;;;;1872:21:104;:4;1877:7;1872:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1872:13:104;:21;;-1:-1:-1;1907:67:104;;;;1936:23;;1907:67;1839:9;;1798:186;;;1629:394;;;;;:::o;3480:1407:38:-;3674:1;3659:4;:11;:16;;3651:51;;;;;-1:-1:-1;;;3651:51:38;;;;;;;;;;;;-1:-1:-1;;;3651:51:38;;;;;;;;;;;;;;;3712:14;3729:4;3734:1;3729:7;;;;;;;;;;;;;;3712:24;;3746:19;3768:4;3787:1;3773:4;:11;:15;3768:21;;;;;;;;;;;;;;3746:43;;3829:12;3807:18;3818:6;3807:10;:18::i;:::-;:34;;3799:74;;;;;-1:-1:-1;;;3799:74:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;3883:76;3908:11;3883:76;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3883:24:38;;;:76;;:24;:76;:::i;:::-;3994:1;3977:14;:18;3969:59;;;;;-1:-1:-1;;;3969:59:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;4071:25;4099:23;4110:11;4099:10;:23::i;:::-;4071:51;;4140:6;-1:-1:-1;;;;;4133:22:38;;4164:9;4176:12;4133:56;;;;;;;;;;;;;-1:-1:-1;;;;;4133:56:38;-1:-1:-1;;;;;4133:56:38;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4133:56:38;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4133:56:38;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4133:56:38;;;;;;;;;;;;;;;;;4199:24;4226:9;-1:-1:-1;;;;;4226:34:38;;4274:12;4300:14;4328:4;4354;4373:3;4226:160;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4226:160:38;-1:-1:-1;;;;;4226:160:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4226:160:38;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4226:160:38;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4226:160:38;;;;;;39:16:-1;36:1;17:17;2:54;101:4;4226:160:38;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;4226:160:38;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;373:25;;-1:-1;4226:160:38;;421:4:-1;412:14;;;;4226:160:38;;;;;412:14:-1;4226:160:38;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4226:160:38;;;;;;;;;;;4199:187;;4397:24;4424:23;4435:11;4424:10;:23::i;:::-;4397:50;;4519:14;4499:17;:34;4478:16;:56;;4457:132;;;;;-1:-1:-1;;;4457:132:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;4625:4;:11;4607:7;:14;:29;4599:64;;;;;-1:-1:-1;;;4599:64:38;;;;;;;;;;;;-1:-1:-1;;;4599:64:38;;;;;;;;;;;;;;;4673:25;4701:7;4726:1;4709:7;:14;:18;4701:27;;;;;;;;;;;;;;4673:55;;4739:21;4753:6;4739:13;:21::i;:::-;4770:26;4784:11;4770:13;:26::i;:::-;4835:11;-1:-1:-1;;;;;4812:68:38;4827:6;-1:-1:-1;;;;;4812:68:38;;4848:12;4862:17;4812:68;;;;;;;;;;;;;;;;;;;;;;;;3480:1407;;;;;;;;;;:::o;867:96:117:-;946:10;867:96;:::o;1409:498:136:-;1820:4;1864:17;1895:7;1409:498;:::o;2240:225:127:-;-1:-1:-1;;;;;2313:22:127;;2305:73;;;;-1:-1:-1;;;2305:73:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:6;;2393:38;;-1:-1:-1;;;;;2393:38:127;;;;2414:6;;2393:38;;2414:6;;2393:38;2441:6;:17;;-1:-1:-1;;;;;;2441:17:127;-1:-1:-1;;;;;2441:17:127;;;;;;;;;;2240:225::o;940:143:9:-;1031:45;;;-1:-1:-1;;;1031:45:9;;1070:4;1031:45;;;;;;1005:7;;-1:-1:-1;;;;;1031:30:9;;;;;:45;;;;;;;;;;;;;;;:30;:45;;;5:2:-1;;;;30:1;27;20:12;5:2;1031:45:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1031:45:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1031:45:9;;940:143;-1:-1:-1;;940:143:9:o;2749:183:105:-;2890:25;2903:4;2909:5;2890:12;:25::i;:::-;2917:7;2882:43;;;;;-1:-1:-1;;;2882:43:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2882:43:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2749:183;;;:::o;1089:330:9:-;1154:10;;1183:29;:6;1199:12;1183:29;:15;:29;:::i;:::-;1153:59;;;;1253:1;1226:24;1237:12;1226:10;:24::i;:::-;:28;1222:191;;;1275:5;1270:69;;1300:24;:6;1311:12;1300:24;:10;:24;:::i;:::-;;1270:69;1222:191;;;1359:5;1355:58;;;1380:22;:6;1396:5;1380:22;:15;:22;:::i;1018:117:105:-;-1:-1:-1;;;;;1115:13:105;;;;;;;;1018:117;;;;;:::o;360:237:104:-;448:16;-1:-1:-1;;;;;488:23:104;;480:61;;;;;-1:-1:-1;;;480:61:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;-1:-1;551:18:104;;;;;;;;;;;;;-1:-1:-1;;;;;;551:18:104;-1:-1:-1;;;;;551:18:104;;;;;579:11;;;;;;;;;;;;;;;;;;;27:10:-1;;579:11:104;;;27:10:-1;579:11:104;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;579:11:104;;;;;;;;;;;;;;;;;;;;;;;360:237;;;;:::o;835:516::-;971:11;;926:16;;962:20;;958:37;;984:11;;;;;;;;;;;;;;;;;;;;991:4;;984:11;;991:4;984:11;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;984:11:104;;;;;;;;;;;;;;;;;;;;;;;;;958:37;1019:11;;-1:-1:-1;;1019:15:104;1010:24;;1006:135;;;1062:11;;1057:4;;-1:-1:-1;;1062:15:104;;;1057:21;;;;;;;;;;;;;;;1050:28;;-1:-1:-1;;;;;;1050:28:104;;;1092:13;;;:4;-1:-1:-1;;1092:13:104;;;:::i;:::-;-1:-1:-1;1119:11:104;;;;;;;;;;;;;;;;;;;;1126:4;;1119:11;;1126:4;1119:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1119:11:104;;;;;;;;;;;;;;;;;;;;;;;;1006:135;1171:11;;1151:12;;1166:4;;-1:-1:-1;;1171:15:104;;;1166:21;;;;;;;;;;;;;;;;1221:11;;-1:-1:-1;;;;;1166:21:104;;;;-1:-1:-1;1221:4:104;;1226:5;;1221:11;;;;;;;;;;;;;;;;1202;;-1:-1:-1;;;;;1221:11:104;;;;1197:4;;-1:-1:-1;;1202:15:104;;;1197:21;;;;;;;;;;;;;;:35;;;;;-1:-1:-1;;;;;1197:35:104;;;;;-1:-1:-1;;;;;1197:35:104;;;;;;1256:4;1242;1247:5;1242:11;;;;;;;;;;;;;;;;;:18;;-1:-1:-1;;;;;;1242:18:104;-1:-1:-1;;;;;1242:18:104;;;;;;;;;;1283:11;;;;-1:-1:-1;;1283:15:104;;;1278:21;;;;;;;;;;;;;;;1271:28;;-1:-1:-1;;;;;;1271:28:104;;;1309:13;;;:4;-1:-1:-1;;1309:13:104;;;:::i;:::-;-1:-1:-1;1333:11:104;;;;;;;;;;;;;;;;;;;;1340:4;;1333:11;;1340:4;1333:11;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1333:11:104;;;;;;;;;;;;;;;;;;;;;;;;835:516;;;;:::o;161:473:83:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity 0.5.17;\n\nimport \"../../../base/escrow/dapps/Uniswap.sol\";\n\n/**\n    @notice This mock is used to expose a payable fallback function on tests.\n */\ncontract Swapper is Uniswap {\n    function swapForExact(\n        address to,\n        address tokenAddress,\n        uint256 destinationAmount\n    ) public {\n        address[] memory path = new address[](2);\n        path[0] = router.WETH();\n        path[1] = tokenAddress;\n        router.swapETHForExactTokens.value(address(this).balance)(\n            destinationAmount,\n            path,\n            to,\n            now\n        );\n    }\n\n    function() external payable {}\n}\n",
  "sourcePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/mock/providers/uniswap/Swapper.sol",
  "ast": {
    "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/mock/providers/uniswap/Swapper.sol",
    "exportedSymbols": {
      "Swapper": [
        14496
      ]
    },
    "id": 14497,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14438,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:83"
      },
      {
        "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/escrow/dapps/Uniswap.sol",
        "file": "../../../base/escrow/dapps/Uniswap.sol",
        "id": 14439,
        "nodeType": "ImportDirective",
        "scope": 14497,
        "sourceUnit": 10228,
        "src": "25:48:83",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14440,
              "name": "Uniswap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10227,
              "src": "181:7:83",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Uniswap_$10227",
                "typeString": "contract Uniswap"
              }
            },
            "id": 14441,
            "nodeType": "InheritanceSpecifier",
            "src": "181:7:83"
          }
        ],
        "contractDependencies": [
          2487,
          10045,
          10227,
          19673,
          20865,
          21771
        ],
        "contractKind": "contract",
        "documentation": "@notice This mock is used to expose a payable fallback function on tests.",
        "fullyImplemented": true,
        "id": 14496,
        "linearizedBaseContracts": [
          14496,
          10227,
          2487,
          20865,
          19673,
          21771,
          10045
        ],
        "name": "Swapper",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 14490,
              "nodeType": "Block",
              "src": "315:281:83",
              "statements": [
                {
                  "assignments": [
                    14453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14453,
                      "name": "path",
                      "nodeType": "VariableDeclaration",
                      "scope": 14490,
                      "src": "325:21:83",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 14451,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "325:7:83",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 14452,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "325:9:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 14459,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 14457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "363:1:83",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 14456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "349:13:83",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 14454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "353:7:83",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 14455,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "353:9:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 14458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "349:16:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "325:40:83"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 14460,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14453,
                        "src": "375:4:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 14462,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 14461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "380:1:83",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "375:7:83",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 14463,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10067,
                          "src": "385:6:83",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$16243",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "id": 14464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "WETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16144,
                        "src": "385:11:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                          "typeString": "function () pure external returns (address)"
                        }
                      },
                      "id": 14465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "385:13:83",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "375:23:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14467,
                  "nodeType": "ExpressionStatement",
                  "src": "375:23:83"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 14468,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14453,
                        "src": "408:4:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 14470,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 14469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "413:1:83",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "408:7:83",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 14471,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14445,
                      "src": "418:12:83",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "408:22:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14473,
                  "nodeType": "ExpressionStatement",
                  "src": "408:22:83"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14484,
                        "name": "destinationAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14447,
                        "src": "511:17:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14485,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14453,
                        "src": "542:4:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14486,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14443,
                        "src": "560:2:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14487,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21903,
                        "src": "576:3:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 14480,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22171,
                                "src": "483:4:83",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Swapper_$14496",
                                  "typeString": "contract Swapper"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Swapper_$14496",
                                  "typeString": "contract Swapper"
                                }
                              ],
                              "id": 14479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "475:7:83",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 14481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "475:13:83",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 14482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "475:21:83",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 14474,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10067,
                            "src": "440:6:83",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$16243",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          },
                          "id": 14477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "swapETHForExactTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16242,
                          "src": "440:28:83",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                          }
                        },
                        "id": 14478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "440:34:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value_$",
                          "typeString": "function (uint256) pure returns (function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory))"
                        }
                      },
                      "id": 14483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "440:57:83",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 14488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "440:149:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 14489,
                  "nodeType": "ExpressionStatement",
                  "src": "440:149:83"
                }
              ]
            },
            "documentation": null,
            "id": 14491,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapForExact",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14443,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 14491,
                  "src": "226:10:83",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "226:7:83",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14445,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 14491,
                  "src": "246:20:83",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "246:7:83",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14447,
                  "name": "destinationAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 14491,
                  "src": "276:25:83",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:7:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "216:91:83"
            },
            "returnParameters": {
              "id": 14449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "315:0:83"
            },
            "scope": 14496,
            "src": "195:401:83",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14494,
              "nodeType": "Block",
              "src": "630:2:83",
              "statements": []
            },
            "documentation": null,
            "id": 14495,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "610:2:83"
            },
            "returnParameters": {
              "id": 14493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "630:0:83"
            },
            "scope": 14496,
            "src": "602:30:83",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 14497,
        "src": "161:473:83"
      }
    ],
    "src": "0:635:83"
  },
  "legacyAST": {
    "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/mock/providers/uniswap/Swapper.sol",
    "exportedSymbols": {
      "Swapper": [
        14496
      ]
    },
    "id": 14497,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14438,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:83"
      },
      {
        "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/escrow/dapps/Uniswap.sol",
        "file": "../../../base/escrow/dapps/Uniswap.sol",
        "id": 14439,
        "nodeType": "ImportDirective",
        "scope": 14497,
        "sourceUnit": 10228,
        "src": "25:48:83",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14440,
              "name": "Uniswap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10227,
              "src": "181:7:83",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Uniswap_$10227",
                "typeString": "contract Uniswap"
              }
            },
            "id": 14441,
            "nodeType": "InheritanceSpecifier",
            "src": "181:7:83"
          }
        ],
        "contractDependencies": [
          2487,
          10045,
          10227,
          19673,
          20865,
          21771
        ],
        "contractKind": "contract",
        "documentation": "@notice This mock is used to expose a payable fallback function on tests.",
        "fullyImplemented": true,
        "id": 14496,
        "linearizedBaseContracts": [
          14496,
          10227,
          2487,
          20865,
          19673,
          21771,
          10045
        ],
        "name": "Swapper",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 14490,
              "nodeType": "Block",
              "src": "315:281:83",
              "statements": [
                {
                  "assignments": [
                    14453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14453,
                      "name": "path",
                      "nodeType": "VariableDeclaration",
                      "scope": 14490,
                      "src": "325:21:83",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 14451,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "325:7:83",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 14452,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "325:9:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 14459,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 14457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "363:1:83",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 14456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "349:13:83",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 14454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "353:7:83",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 14455,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "353:9:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 14458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "349:16:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "325:40:83"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 14460,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14453,
                        "src": "375:4:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 14462,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 14461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "380:1:83",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "375:7:83",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 14463,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10067,
                          "src": "385:6:83",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$16243",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "id": 14464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "WETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16144,
                        "src": "385:11:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                          "typeString": "function () pure external returns (address)"
                        }
                      },
                      "id": 14465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "385:13:83",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "375:23:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14467,
                  "nodeType": "ExpressionStatement",
                  "src": "375:23:83"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 14468,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14453,
                        "src": "408:4:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 14470,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 14469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "413:1:83",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "408:7:83",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 14471,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14445,
                      "src": "418:12:83",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "408:22:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14473,
                  "nodeType": "ExpressionStatement",
                  "src": "408:22:83"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14484,
                        "name": "destinationAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14447,
                        "src": "511:17:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14485,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14453,
                        "src": "542:4:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14486,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14443,
                        "src": "560:2:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14487,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21903,
                        "src": "576:3:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 14480,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22171,
                                "src": "483:4:83",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Swapper_$14496",
                                  "typeString": "contract Swapper"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Swapper_$14496",
                                  "typeString": "contract Swapper"
                                }
                              ],
                              "id": 14479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "475:7:83",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 14481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "475:13:83",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 14482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "475:21:83",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 14474,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10067,
                            "src": "440:6:83",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$16243",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          },
                          "id": 14477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "swapETHForExactTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16242,
                          "src": "440:28:83",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                          }
                        },
                        "id": 14478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "440:34:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value_$",
                          "typeString": "function (uint256) pure returns (function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory))"
                        }
                      },
                      "id": 14483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "440:57:83",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 14488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "440:149:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 14489,
                  "nodeType": "ExpressionStatement",
                  "src": "440:149:83"
                }
              ]
            },
            "documentation": null,
            "id": 14491,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapForExact",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14443,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 14491,
                  "src": "226:10:83",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "226:7:83",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14445,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 14491,
                  "src": "246:20:83",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "246:7:83",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14447,
                  "name": "destinationAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 14491,
                  "src": "276:25:83",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:7:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "216:91:83"
            },
            "returnParameters": {
              "id": 14449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "315:0:83"
            },
            "scope": 14496,
            "src": "195:401:83",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14494,
              "nodeType": "Block",
              "src": "630:2:83",
              "statements": []
            },
            "documentation": null,
            "id": 14495,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "610:2:83"
            },
            "returnParameters": {
              "id": 14493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "630:0:83"
            },
            "scope": 14496,
            "src": "602:30:83",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 14497,
        "src": "161:473:83"
      }
    ],
    "src": "0:635:83"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-12T14:23:11.554Z",
  "devdoc": {
    "methods": {
      "initialize(address)": {
        "details": "Initializes the contract setting the deployer as the initial owner."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "swap(address[],uint256,uint256)": {
        "params": {
          "minDestination": "The minimum amount of output tokens that must be received for the transaction not to revert.",
          "path": "An array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.",
          "sourceAmount": "amount of source token to swap."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "swap(address[],uint256,uint256)": {
        "notice": "Swaps ETH/Tokens for Tokens/ETH using different Uniswap v2 Router 02 methods."
      }
    },
    "notice": "This mock is used to expose a payable fallback function on tests."
  }
}