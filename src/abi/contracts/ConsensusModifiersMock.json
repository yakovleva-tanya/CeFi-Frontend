{
  "contractName": "ConsensusModifiersMock",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "SignerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "SignerRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addSigner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "name": "addSigners",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "callerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "consts",
      "outputs": [
        {
          "internalType": "contract SettingsConsts",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "hasSubmitted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "aCallerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "aSettingAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isSigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeSigner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "requestNonceTaken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "contract SettingsInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "signerNonceTaken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "externalIsCaller",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"SignerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"SignerRemoved\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"addSigners\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"callerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"consts\",\"outputs\":[{\"internalType\":\"contract SettingsConsts\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"externalIsCaller\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hasSubmitted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aCallerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aSettingAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestNonceTaken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"contract SettingsInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"signerNonceTaken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addSigner(address)\":{\"details\":\"The sender must be the owner.It throws a require error if the sender is not the owner.\",\"params\":{\"account\":\"address to add.\"}},\"addSigners(address[])\":{\"details\":\"The sender must be the owner.It throws a require error if the sender is not the owner.\",\"params\":{\"accounts\":\"addresses to add.\"}},\"initialize(address)\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"initialize(address,address,address)\":{\"details\":\"The caller address must be the loans contract for LoanTermsConsensus, and the lenders contract for InterestConsensus.\",\"params\":{\"aCallerAddress\":\"the contract that will call it.\",\"aSettingAddress\":\"the settings contract address.\",\"owner\":\"the owner address.\"}},\"initialized()\":{\"return\":\"true if contract is initialized. Otherwise it returns false.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"isSigner(address)\":{\"params\":{\"account\":\"address to test.\"},\"return\":\"true if account is a signer. Otherwise it returns false.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeSigner(address)\":{\"details\":\"The sender must be the owner.It throws a require error if the sender is not the owner.\",\"params\":{\"account\":\"address to remove.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"addSigner(address)\":{\"notice\":\"It adds a new account as a signer.\"},\"addSigners(address[])\":{\"notice\":\"It adds a list of account as signers.\"},\"initialize(address,address,address)\":{\"notice\":\"It initializes this consensus contract.\"},\"initialized()\":{\"notice\":\"Gets if the contract is initialized.\"},\"isSigner(address)\":{\"notice\":\"Gets whether an account address is a signer or not.\"},\"removeSigner(address)\":{\"notice\":\"It removes an account as signer.\"},\"settings()\":{\"notice\":\"The settings contract.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/ConsensusModifiersMock.sol\":\"ConsensusModifiersMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/Base.sol\":{\"keccak256\":\"0xcc1904a218af2a97dfe9ffb2d787975f14cfca658f24441eb84b1b83fcc12d59\",\"urls\":[\"bzz-raw://a1fab6b5c3ad79014661b17640b22a5c912749986cd1163133edab64194ac5ac\",\"dweb:/ipfs/QmVdH23D6pd28LtQLc4xcEsvRxVsmZ9qwW3XBxeTYYjn5s\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol\":{\"keccak256\":\"0xea409b9c0704a8f308295740e8595eb5fdc670b298ae9b63f5bb538783619a35\",\"urls\":[\"bzz-raw://22490fcd6a157faa8f1bdf7f715435c2a2572277c46e67d39533b411026b580d\",\"dweb:/ipfs/QmW5nUYb9oLpZALaWabBA45MnfGB4MJspZEkvbuRJfSSg7\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/Consensus.sol\":{\"keccak256\":\"0xbe5ac06edb6d02dd9546aec6f370fe9f79549a605a5db761c494f157b0facc19\",\"urls\":[\"bzz-raw://a26e6ce4fbcab90bfa8c04983be3591853e4c40364e80d13c02554f87a1775c8\",\"dweb:/ipfs/QmPggwDCELfWws5KjLV4ybTjXcBtcB1VREq5GhXEP7X9x1\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/OwnerSignersRole.sol\":{\"keccak256\":\"0x93b1668e14fa27f5a10baed29ab1aa150b6e56ed708337c5e5fe98c1bbec1bef\",\"urls\":[\"bzz-raw://de833bc5c97bbae6f8d77070dc30e226d9fb78a1bca85ded5fba531ed4d9606c\",\"dweb:/ipfs/QmfUc6yWTso4WUw28AHynjZB9v25qxTkbN3mUak6Kh7Hkb\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TInitializable.sol\":{\"keccak256\":\"0xfd04f8b08548b7a4aacbf26eaf65f64628c38f9fc34c363317daa593c7c25917\",\"urls\":[\"bzz-raw://025bbb10f643ebec3bc77303bca1585c572c76f8261ce42ed816b3c2a7799d20\",\"dweb:/ipfs/QmYS3L6u6f7ucRxGoap3RSD1jeJERnZk3XQRden1fEDQMs\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0xb5b2225e4f6db57d59d5292f542acc0675e9f95b3e3094d9be4cf6ec079cb86e\",\"urls\":[\"bzz-raw://f0c822f79ebb3f775b4fea591a5555c3efacba6719d4adbab83571dd35f059e3\",\"dweb:/ipfs/QmYiHmtPJsJD67g7Pk7kM72hsHS7BVVJtciKjCoUioW4gS\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x91250ee3c1d73b5d1720f7b41f18072eb347d73e4d3de464537ece49e1fa1d93\",\"urls\":[\"bzz-raw://f11ce1d70152f6d19f9c23788b4458631df3fd748a52849b899183ce2dabc52b\",\"dweb:/ipfs/QmaNQybwKYW5BfT3h6z6P1SSUwYEyXQviisYjUr7cHLzQR\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0xd8a98393b51d4533d7515d82c4640ff5cb4c5d84ec154be20ae2d70244c6bd8e\",\"urls\":[\"bzz-raw://19a1d2b6aa47db3488c4ce2531a4a82d79cc66b089ecebb3d06bc9a6c2ca2c04\",\"dweb:/ipfs/QmY1rhfogBfWyu4Bs3dbwrXjYvkvLLnwgi5hLuRcMgtjDy\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/MarketsStateInterface.sol\":{\"keccak256\":\"0xf51bd2d361d9cf448f2c2a5bb37c2699b0d9605a8f1b6a8719f90d8f536f2a05\",\"urls\":[\"bzz-raw://415a4444e8f9aca25132f492b226b8d500081a4ba5be8e45b401a68e73e1895b\",\"dweb:/ipfs/QmUPGgnqUjidxeEpkgu4yYzhfuykgtNKehEwbps97nAAzZ\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/PairAggregatorInterface.sol\":{\"keccak256\":\"0x4331fd21591542fda69505ce457c03f9ef66f2b8fea50db669864f517c4f95a1\",\"urls\":[\"bzz-raw://3cd373c888a2b4f6d1a93f540e9a0f4982316f743c0891d310a5e712c0f8eb78\",\"dweb:/ipfs/QmYA6Z3HFYj8MZSJwKP7NjawaD5TehE6Lmtx2VbTfqEHfb\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0xb2b1050602a2c4b8fac7053462a7a71c4a8ac91ffa7622dc003b07867dd2d04a\",\"urls\":[\"bzz-raw://2d38d083992ace8e9b361e763c1ba8ec35dc6604a1829fb09df8750a1c517d78\",\"dweb:/ipfs/QmQjba8A9c4q3AmEJf7GMytSyFPdG5rniSvL7Kw8QrUEoT\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/ConsensusModifiersMock.sol\":{\"keccak256\":\"0x304c26d4b2ee2a5b05e07800bfef8a38ccea9bd36d4c9d3dfe5dadab03a9a787\",\"urls\":[\"bzz-raw://bd288be63a421e69e0126220ed54ebd8a10697a76d06b679de253b9dc1d428d7\",\"dweb:/ipfs/QmVdbE31F8WMkTxHW3tc2uVE8ubHDF5Z6ZsuAKPNEXiBoy\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/IChainlinkPairAggregatorRegistry.sol\":{\"keccak256\":\"0xa6f747fa1fecfef304721bc5b95ff34f1057ffeebd096d72051c013191879388\",\"urls\":[\"bzz-raw://27a99f0483fd2950126fd56cca827bab0cb3635e4512380acd65f161960906eb\",\"dweb:/ipfs/QmUR6GkPEpzqo4G76eeTNDLgxi3M4P7G338Jr4uoCQqrx9\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0xc5453e6f1a43327a37db250dedb65561c4deb0f3eb3cad490a64fc56e0b6f7b7\",\"urls\":[\"bzz-raw://f6edcab27eebecb576c9a884a173a1a5fcf0c129c76b992ec77ca24518d92f91\",\"dweb:/ipfs/QmW3q6w39dg9RnxsQdfrFVudmiZh5asRnkWQVkrap9hnJf\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AssetSettingsLib.sol\":{\"keccak256\":\"0x9c67a3de3bb62fdfbd5c116016e0693300bb9d71fe055bb6aa12da305aba3bf4\",\"urls\":[\"bzz-raw://a3c9ffdd1496a6192abb62b72625e5778db231656f2c8fffd09a83d089996aa6\",\"dweb:/ipfs/QmevJ5ojFaqG363CrnJZ9x3YvGMWKfUaFoUVbCsaSzqPfe\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0xf4caad9e4d96afe2721124eaf7203bb4e3a97beb3664c63297c4e68523f5bd65\",\"urls\":[\"bzz-raw://dcd6f564423c2cf83f3a56120f43eb6fd9f6e852cbb615be657f89e5114debf4\",\"dweb:/ipfs/QmRZStVoa5KbYRCHpzC7h998NnRhbFHfUZ71TRTiLzMTcX\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0xe49711d0c8193559f76dc5f399344c8f5f5e6a8b99bf78c6bcfd9aa1c456c306\",\"urls\":[\"bzz-raw://c6432c082145470691dfde04bf5c4220ccc32a5dccf6520c3122e47e470e6c22\",\"dweb:/ipfs/Qmd97DA5SB3d8Cuwf5M6vLtfDLHYXrMj5d3cXkYPP7iPpU\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/MarketStateLib.sol\":{\"keccak256\":\"0x8212e9e0d7c8d79d53087c5fb4735374f50cf6644c27b13e5faba5344c9b2087\",\"urls\":[\"bzz-raw://68b3d876f4e6569b57abfe9e7e69675a362a9d45f92c51b3a3a089d1c226817b\",\"dweb:/ipfs/QmSirrURGaLUYVkSeedjsrzF1kFB7gsuoHBpmWb9ed8eZt\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0xa397bcb75a4e7d80fd1043b7dc3c3a69f8c12435d26d843e4be40e875b71e134\",\"urls\":[\"bzz-raw://aabd466bea9e95a2585d597ebf62025f7ab4f38d1d4fe1c9fa5be1d98d131789\",\"dweb:/ipfs/QmcRGMg8X5teSF3Ga8ECPH2HvenViySkdnzvpUWvMDWXJL\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0c6a7e0de89e1017166ef4f593b33c8d0bfc6bcf3cd3db0bb5c1610ce260b659\",\"urls\":[\"bzz-raw://926108ace9152ed12d86a74ccb98d8c0aa698bd48fd3b4bfedacf976a8dd59d3\",\"dweb:/ipfs/QmVYjChMWZJdpPoBNheHMfyoTVsAarfLJ6SxPHhEsd6kUB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/SettingsConsts.sol\":{\"keccak256\":\"0xf357c4edd90efe656a6011cdb942deb119251fabf4fb15745fa6ba76ebdc359b\",\"urls\":[\"bzz-raw://fc2be5bb87e63ff544bb6167c3aecc163253f53c42fa956341784891caf78bee\",\"dweb:/ipfs/QmaJQKkUdSbESvbt768gCFL8ZSZ2BAE8xAW1FcvsubfFmR\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0xbe70455cee756e9498c220e13c1550d163a4cbcb09e8afe2f0ee94f717c80315\",\"urls\":[\"bzz-raw://0ad4a0a6394e560e40da2fee213381db0184878c29078b2f570eaacf116bb855\",\"dweb:/ipfs/QmTF87YYagh3WrxNZyi2uxhzcxyGsdtJCLu9nwmXGGaoMz\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzz-raw://a3f816aa3e6161b4cf882ad34755673848d835f7fb964db49bcef9df14570cef\",\"dweb:/ipfs/QmQACSH1W7pKQnqTAqpuEP8ychp3PvosfnyondLaLE1nVq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb2fbd0f9a0bd0d99ace5603f1ce5388ed7d81031a188f5f4667e702fe690e61a\",\"urls\":[\"bzz-raw://b5a018485e3e184d24fabf939a2ca2b82a95b55ad7fcb109f2005d755ddedd29\",\"dweb:/ipfs/QmbpUfNbKjnVhARJRwMvD4h5z6ajYcdAB5Up6m1V3Rf2Ee\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "95:123:60:-;;;;;;;;;",
  "deployedSourceMap": "95:123:60:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;95:123:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;146:70;;;;;;;;;:::i;:::-;;2331:95:30;;;;;;;;;:::i;1241:169:33:-;;;:::i;:::-;;;;;;;;;;;;;;;;2067:68:12;;;;;;;;;:::i;1746:137:126:-;;;:::i;1104:107:30:-;;;;;;;;;:::i;769:214:134:-;;;:::i;959:77:126:-;;;:::i;:::-;;;;;;;;1310:92;;;:::i;1865:84:12:-;;;;;;;;;:::i;3536:376::-;;;;;;;;;:::i;741:142:126:-;;;;;;;;;:::i;2248:28:12:-;;;:::i;:::-;;;;;;;;839:263:11;;;:::i;1758:346:30:-;;;;;;;;;:::i;1437:89::-;;;;;;;;;:::i;2032:107:126:-;;;;;;;;;:::i;2213:28:12:-;;;:::i;2758:69::-;;;;;;;;;:::i;146:70:60:-;206:6;3099:17:12;3109:6;3099:9;:17::i;:::-;3091:54;;;;-1:-1:-1;;;3091:54:12;;;;;;;;;;;;;;;;;146:70:60;;:::o;2331:95:30:-;1163:9:126;:7;:9::i;:::-;1155:54;;;;-1:-1:-1;;;1155:54:126;;;;;;;;;2397:22:30;2411:7;2397:13;:22::i;:::-;2331:95;:::o;1241:169:33:-;1285:10;1307:12;421:55;;;;;;;;;;;;;;;1383:11;;1360:44;-1:-1:-1;;1360:44:33:o;2067:68:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1746:137:126:-;1163:9;:7;:9::i;:::-;1155:54;;;;-1:-1:-1;;;1155:54:126;;;;;;;;;1828:6;;1807:40;;1844:1;;-1:-1:-1;;;;;1828:6:126;;1807:40;;1844:1;;1807:40;1857:6;:19;;-1:-1:-1;;;;;;1857:19:126;;;1746:137::o;1104:107:30:-;1160:4;1183:21;:8;1196:7;1183:21;:12;:21;:::i;:::-;1176:28;1104:107;-1:-1:-1;;1104:107:30:o;769:214:134:-;1024:12:135;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:135;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:135;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:135;;;;;1225:18;1213:4;1225:18;;;1170:80;975:1:134;959:13;:17;1264:55:135;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:135;;;769:214:134;:::o;959:77:126:-;1023:6;;-1:-1:-1;;;;;1023:6:126;959:77;:::o;1310:92::-;1389:6;;1350:4;;-1:-1:-1;;;;;1389:6:126;1373:12;:10;:12::i;:::-;-1:-1:-1;;;;;1373:22:126;;1366:29;;1310:92;:::o;1865:84:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3536:376::-;706:13:33;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:33;;;;;;;;;3696:27:12;:14;-1:-1:-1;;;;;3696:25:12;;:27::i;:::-;3688:63;;;;-1:-1:-1;;;3688:63:12;;;;;;;;;3762:25;3781:5;3762:18;:25::i;:::-;3797:28;3809:15;3797:11;:28::i;:::-;3836:13;:30;;-1:-1:-1;;;;;;3836:30:12;-1:-1:-1;;;;;3836:30:12;;;;;3885:20;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;3876:6:12;:29;;-1:-1:-1;;;;;;3876:29:12;-1:-1:-1;;;;;3876:29:12;;;;;;;;;;-1:-1:-1;;;3536:376:12:o;741:142:126:-;1024:12:135;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:135;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:135;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:135;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:126;:15;;-1:-1:-1;;;;;;806:15:126;-1:-1:-1;;;;;806:15:126;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;836:40:126;;-1:-1:-1;;836:40:126;1268:14:135;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:135;;;741:142:126;;:::o;2248:28:12:-;;;-1:-1:-1;;;;;2248:28:12;;:::o;839:263:11:-;880:17;909:23;943:12;370:37;;;;;;;;;;;;;;;1023:11;;-1:-1:-1;;;839:263:11;:::o;1758:346:30:-;1163:9:126;:7;:9::i;:::-;1155:54;;;;-1:-1:-1;;;1155:54:126;;;;;;;;;1858:1:30;1840:8;:15;:19;1832:51;;;;-1:-1:-1;;;1832:51:30;;;;;;;;;1898:13;1893:205;1925:8;:15;1917:5;:23;1893:205;;;1965:15;1983:8;1992:5;1983:15;;;;;;;;;;;;;;1965:33;;2017:17;2026:7;2017:8;:17::i;:::-;2012:76;;2054:19;2065:7;2054:10;:19::i;:::-;-1:-1:-1;1942:7:30;;1893:205;;1437:89;1163:9:126;:7;:9::i;:::-;1155:54;;;;-1:-1:-1;;;1155:54:126;;;;;;;;;1500:19:30;1511:7;1500:10;:19::i;2032:107:126:-;1163:9;:7;:9::i;:::-;1155:54;;;;-1:-1:-1;;;1155:54:126;;;;;;;;;2104:28;2123:8;2104:18;:28::i;2213::12:-;;;-1:-1:-1;;;;;2213:28:12;;:::o;2758:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7301:111::-;7382:13;;-1:-1:-1;;;;;7382:23:12;;;:13;;:23;;7301:111::o;2833:127:30:-;2892:24;:8;2908:7;2892:24;:15;:24;:::i;:::-;2931:22;;-1:-1:-1;;;;;2931:22:30;;;;;;;;2833:127;:::o;779:200:117:-;851:4;-1:-1:-1;;;;;875:21:117;;867:68;;;;-1:-1:-1;;;867:68:117;;;;;;;;;-1:-1:-1;;;;;;952:20:117;:11;:20;;;;;;;;;;;;;;;779:200::o;1409:498:135:-;1820:4;1864:17;1895:7;1409:498;:::o;867:96:116:-;946:10;867:96;:::o;686:610:132:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:132;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:132:o;4072:292:7:-;706:13:33;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:33;;;;;;;;;4156:60:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4156:31:7;;;:60;:31;:60;:::i;:::-;4234:28;:15;-1:-1:-1;;;;;4234:26:7;;:28::i;:::-;4226:68;;;;-1:-1:-1;;;4226:68:7;;;;;;;;;4305:13;:11;:13::i;:::-;4328:29;4341:15;4328:12;:29::i;2567:119:30:-;2623:21;:8;2636:7;2623:21;:12;:21;:::i;:::-;2659:20;;-1:-1:-1;;;;;2659:20:30;;;;;;;;2567:119;:::o;2240:225:126:-;-1:-1:-1;;;;;2313:22:126;;2305:73;;;;-1:-1:-1;;;2305:73:126;;;;;;;;;2414:6;;2393:38;;-1:-1:-1;;;;;2393:38:126;;;;2414:6;;2393:38;;2414:6;;2393:38;2441:6;:17;;-1:-1:-1;;;;;;2441:17:126;-1:-1:-1;;;;;2441:17:126;;;;;;;;;;2240:225::o;510:180:117:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:117;;;;;;;;;-1:-1:-1;;;;;655:20:117;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:117;;;510:180::o;1583:127:104:-;1677:16;1688:4;1677:10;:16::i;:::-;1695:7;1669:34;;;;;-1:-1:-1;;;1669:34:104;;;;;;;;;;;1583:127;;:::o;1509:171:33:-;1551:12;421:55;;;;;;;;;;;;;;;1608:4;1645:19;;-1:-1:-1;1631:43:33:o;1649:392:11:-;1831:3;1808:10;:8;:10::i;:::-;-1:-1:-1;;;;;1800:35:11;;1796:128;;1864:28;:15;-1:-1:-1;;;;;1864:26:11;;:28::i;:::-;1856:68;;;;-1:-1:-1;;;1856:68:11;;;;;;;;;1849:75;;1796:128;1935:12;370:37;;;;;;;;;;;;;;;1996:29;;;-1:-1:-1;1982:53:11;:::o;260:175:117:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;-1:-1:-1;;;328:63:117;;;;;;;;;-1:-1:-1;;;;;401:20:117;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:117;424:4;401:27;;;260:175::o;1288:108:104:-;-1:-1:-1;;;;;1368:21:104;;;;1288:108::o;95:123:60:-;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;160:707;;277:3;270:4;262:6;258:17;254:27;244:2;;295:1;292;285:12;244:2;332:6;319:20;354:80;369:64;426:6;369:64;;;354:80;;;345:89;;451:5;476:6;469:5;462:21;506:4;498:6;494:17;484:27;;528:4;523:3;519:14;512:21;;581:6;628:3;620:4;612:6;608:17;603:3;599:27;596:36;593:2;;;645:1;642;635:12;593:2;670:1;655:206;680:6;677:1;674:13;655:206;;;738:3;760:37;793:3;781:10;760:37;;;748:50;;-1:-1;821:4;812:14;;;;840;;;;;702:1;695:9;655:206;;;659:14;237:630;;;;;;;;875:130;942:20;;967:33;942:20;967:33;;1012:241;;1116:2;1104:9;1095:7;1091:23;1087:32;1084:2;;;1132:1;1129;1122:12;1084:2;1167:1;1184:53;1229:7;1209:9;1184:53;;1260:491;;;;1398:2;1386:9;1377:7;1373:23;1369:32;1366:2;;;1414:1;1411;1404:12;1366:2;1449:1;1466:53;1511:7;1491:9;1466:53;;;1456:63;;1428:97;1556:2;1574:53;1619:7;1610:6;1599:9;1595:22;1574:53;;;1564:63;;1535:98;1664:2;1682:53;1727:7;1718:6;1707:9;1703:22;1682:53;;;1672:63;;1643:98;1360:391;;;;;;1758:491;;;;1896:2;1884:9;1875:7;1871:23;1867:32;1864:2;;;1912:1;1909;1902:12;1864:2;1947:1;1964:53;2009:7;1989:9;1964:53;;;1954:63;;1926:97;2054:2;2072:53;2117:7;2108:6;2097:9;2093:22;2072:53;;;2062:63;;2033:98;2162:2;2180:53;2225:7;2216:6;2205:9;2201:22;2180:53;;2256:366;;;2377:2;2365:9;2356:7;2352:23;2348:32;2345:2;;;2393:1;2390;2383:12;2345:2;2428:1;2445:53;2490:7;2470:9;2445:53;;;2435:63;;2407:97;2535:2;2553:53;2598:7;2589:6;2578:9;2574:22;2553:53;;;2543:63;;2514:98;2339:283;;;;;;2629:377;;2758:2;2746:9;2737:7;2733:23;2729:32;2726:2;;;2774:1;2771;2764:12;2726:2;2809:31;;2860:18;2849:30;;2846:2;;;2892:1;2889;2882:12;2846:2;2912:78;2982:7;2973:6;2962:9;2958:22;2912:78;;3013:113;3096:24;3114:5;3096:24;;;3091:3;3084:37;3078:48;;;3133:104;3210:21;3225:5;3210:21;;3244:174;3351:61;3406:5;3351:61;;3612:347;;3724:39;3757:5;3724:39;;;3775:71;3839:6;3834:3;3775:71;;;3768:78;;3851:52;3896:6;3891:3;3884:4;3877:5;3873:16;3851:52;;;3924:29;3946:6;3924:29;;;3915:39;;;;3704:255;-1:-1;;;3704:255;3967:364;;4145:85;4227:2;4222:3;4145:85;;;4263:30;4243:51;;4322:2;4313:12;;4131:200;-1:-1;;4131:200;4340:331;;4500:67;4564:2;4559:3;4500:67;;;4600:33;4580:54;;4662:2;4653:12;;4486:185;-1:-1;;4486:185;4680:319;;4840:67;4904:2;4899:3;4840:67;;;-1:-1;;;4920:42;;4990:2;4981:12;;4826:173;-1:-1;;4826:173;5008:375;;5168:67;5232:2;5227:3;5168:67;;;5268:34;5248:55;;-1:-1;;;5332:2;5323:12;;5316:30;5374:2;5365:12;;5154:229;-1:-1;;5154:229;5392:327;;5552:67;5616:2;5611:3;5552:67;;;5652:29;5632:50;;5710:2;5701:12;;5538:181;-1:-1;;5538:181;5728:323;;5888:67;5952:2;5947:3;5888:67;;;5988:25;5968:46;;6042:2;6033:12;;5874:177;-1:-1;;5874:177;6060:370;;6220:67;6284:2;6279:3;6220:67;;;6320:34;6300:55;;-1:-1;;;6384:2;6375:12;;6368:25;6421:2;6412:12;;6206:224;-1:-1;;6206:224;6439:332;;6599:67;6663:2;6658:3;6599:67;;;6699:34;6679:55;;6762:2;6753:12;;6585:186;-1:-1;;6585:186;6780:371;;6940:67;7004:2;6999:3;6940:67;;;7040:34;7020:55;;-1:-1;;;7104:2;7095:12;;7088:26;7142:2;7133:12;;6926:225;-1:-1;;6926:225;7160:383;;7320:67;7384:2;7379:3;7320:67;;;7420:34;7400:55;;-1:-1;;;7484:2;7475:12;;7468:38;7534:2;7525:12;;7306:237;-1:-1;;7306:237;7552:324;;7712:67;7776:2;7771:3;7712:67;;;7812:26;7792:47;;7867:2;7858:12;;7698:178;-1:-1;;7698:178;7885:360;;8063:85;8145:2;8140:3;8063:85;;;8181:26;8161:47;;8236:2;8227:12;;8049:196;-1:-1;;8049:196;8254:328;;8414:67;8478:2;8473:3;8414:67;;;8514:30;8494:51;;8573:2;8564:12;;8400:182;-1:-1;;8400:182;8590:372;;8789:148;8933:3;8789:148;;8969:372;;9168:148;9312:3;9168:148;;9348:213;9466:2;9451:18;;9480:71;9455:9;9524:6;9480:71;;9568:201;9680:2;9665:18;;9694:65;9669:9;9732:6;9694:65;;9776:261;9918:2;9903:18;;9932:95;9907:9;10000:6;9932:95;;10318:301;10456:2;10470:47;;;10441:18;;10531:78;10441:18;10595:6;10531:78;;;10523:86;10427:192;-1:-1;;;10427:192;10626:407;10817:2;10831:47;;;10802:18;;10892:131;10802:18;10892:131;;11040:407;11231:2;11245:47;;;11216:18;;11306:131;11216:18;11306:131;;11454:407;11645:2;11659:47;;;11630:18;;11720:131;11630:18;11720:131;;11868:407;12059:2;12073:47;;;12044:18;;12134:131;12044:18;12134:131;;12282:407;12473:2;12487:47;;;12458:18;;12548:131;12458:18;12548:131;;12696:407;12887:2;12901:47;;;12872:18;;12962:131;12872:18;12962:131;;13110:407;13301:2;13315:47;;;13286:18;;13376:131;13286:18;13376:131;;13524:407;13715:2;13729:47;;;13700:18;;13790:131;13700:18;13790:131;;13938:407;14129:2;14143:47;;;14114:18;;14204:131;14114:18;14204:131;;14352:407;14543:2;14557:47;;;14528:18;;14618:131;14528:18;14618:131;;14766:407;14957:2;14971:47;;;14942:18;;15032:131;14942:18;15032:131;;15180:256;15242:2;15236:9;15268:17;;;15343:18;15328:34;;15364:22;;;15325:62;15322:2;;;15400:1;15397;15390:12;15322:2;15416;15409:22;15220:216;;-1:-1;15220:216;15443:304;;15602:18;15594:6;15591:30;15588:2;;;15634:1;15631;15624:12;15588:2;-1:-1;15669:4;15657:17;;;15722:15;;15525:222;15754:122;15842:12;;15813:63;15884:163;15987:19;;;16036:4;16027:14;;15980:67;16056:145;16192:3;16170:31;-1:-1;16170:31;16209:91;;16271:24;16289:5;16271:24;;16307:85;16373:13;16366:21;;16349:43;16399:121;-1:-1;;;;;16461:54;;16444:76;16527:72;16589:5;16572:27;16606:169;;16709:61;16764:5;16709:61;;17246:268;17311:1;17318:101;17332:6;17329:1;17326:13;17318:101;;;17399:11;;;17393:18;17380:11;;;17373:39;17354:2;17347:10;17318:101;;;17434:6;17431:1;17428:13;17425:2;;;17499:1;17490:6;17485:3;17481:16;17474:27;17425:2;17295:219;;;;;17522:97;17610:2;17590:14;-1:-1;;17586:28;;17570:49;17627:117;17696:24;17714:5;17696:24;;;17689:5;17686:35;17676:2;;17735:1;17732;17725:12;17751:117;17820:24;17838:5;17820:24;",
  "source": "pragma solidity 0.5.17;\npragma experimental ABIEncoderV2;\n\nimport \"../../base/Consensus.sol\";\n\ncontract ConsensusModifiersMock is Consensus {\n    function externalIsCaller(address sender) external isCaller(sender) {}\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/ConsensusModifiersMock.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/ConsensusModifiersMock.sol",
    "exportedSymbols": {
      "ConsensusModifiersMock": [
        11631
      ]
    },
    "id": 11632,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11617,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:60"
      },
      {
        "id": 11618,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:60"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/Consensus.sol",
        "file": "../../base/Consensus.sol",
        "id": 11619,
        "nodeType": "ImportDirective",
        "scope": 11632,
        "sourceUnit": 2866,
        "src": "59:34:60",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11620,
              "name": "Consensus",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2865,
              "src": "130:9:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Consensus_$2865",
                "typeString": "contract Consensus"
              }
            },
            "id": 11621,
            "nodeType": "InheritanceSpecifier",
            "src": "130:9:60"
          }
        ],
        "contractDependencies": [
          2329,
          2593,
          2865,
          8549,
          9277,
          19239,
          20431,
          21268,
          21337
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11631,
        "linearizedBaseContracts": [
          11631,
          2865,
          8549,
          20431,
          19239,
          2329,
          21268,
          21337,
          2593,
          9277
        ],
        "name": "ConsensusModifiersMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11629,
              "nodeType": "Block",
              "src": "214:2:60",
              "statements": []
            },
            "documentation": null,
            "id": 11630,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 11626,
                    "name": "sender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11623,
                    "src": "206:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11627,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11625,
                  "name": "isCaller",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2648,
                  "src": "197:8:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "197:16:60"
              }
            ],
            "name": "externalIsCaller",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11623,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 11630,
                  "src": "172:14:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "172:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "171:16:60"
            },
            "returnParameters": {
              "id": 11628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "214:0:60"
            },
            "scope": 11631,
            "src": "146:70:60",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 11632,
        "src": "95:123:60"
      }
    ],
    "src": "0:219:60"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/ConsensusModifiersMock.sol",
    "exportedSymbols": {
      "ConsensusModifiersMock": [
        11631
      ]
    },
    "id": 11632,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11617,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:60"
      },
      {
        "id": 11618,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:60"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/Consensus.sol",
        "file": "../../base/Consensus.sol",
        "id": 11619,
        "nodeType": "ImportDirective",
        "scope": 11632,
        "sourceUnit": 2866,
        "src": "59:34:60",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11620,
              "name": "Consensus",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2865,
              "src": "130:9:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Consensus_$2865",
                "typeString": "contract Consensus"
              }
            },
            "id": 11621,
            "nodeType": "InheritanceSpecifier",
            "src": "130:9:60"
          }
        ],
        "contractDependencies": [
          2329,
          2593,
          2865,
          8549,
          9277,
          19239,
          20431,
          21268,
          21337
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11631,
        "linearizedBaseContracts": [
          11631,
          2865,
          8549,
          20431,
          19239,
          2329,
          21268,
          21337,
          2593,
          9277
        ],
        "name": "ConsensusModifiersMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11629,
              "nodeType": "Block",
              "src": "214:2:60",
              "statements": []
            },
            "documentation": null,
            "id": 11630,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 11626,
                    "name": "sender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11623,
                    "src": "206:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11627,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11625,
                  "name": "isCaller",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2648,
                  "src": "197:8:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "197:16:60"
              }
            ],
            "name": "externalIsCaller",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11623,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 11630,
                  "src": "172:14:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "172:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "171:16:60"
            },
            "returnParameters": {
              "id": 11628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "214:0:60"
            },
            "scope": 11631,
            "src": "146:70:60",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 11632,
        "src": "95:123:60"
      }
    ],
    "src": "0:219:60"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-06T02:15:12.429Z",
  "devdoc": {
    "methods": {
      "addSigner(address)": {
        "details": "The sender must be the owner.It throws a require error if the sender is not the owner.",
        "params": {
          "account": "address to add."
        }
      },
      "addSigners(address[])": {
        "details": "The sender must be the owner.It throws a require error if the sender is not the owner.",
        "params": {
          "accounts": "addresses to add."
        }
      },
      "initialize(address)": {
        "details": "Initializes the contract setting the deployer as the initial owner."
      },
      "initialize(address,address,address)": {
        "details": "The caller address must be the loans contract for LoanTermsConsensus, and the lenders contract for InterestConsensus.",
        "params": {
          "aCallerAddress": "the contract that will call it.",
          "aSettingAddress": "the settings contract address.",
          "owner": "the owner address."
        }
      },
      "initialized()": {
        "return": "true if contract is initialized. Otherwise it returns false."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "isSigner(address)": {
        "params": {
          "account": "address to test."
        },
        "return": "true if account is a signer. Otherwise it returns false."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeSigner(address)": {
        "details": "The sender must be the owner.It throws a require error if the sender is not the owner.",
        "params": {
          "account": "address to remove."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "addSigner(address)": {
        "notice": "It adds a new account as a signer."
      },
      "addSigners(address[])": {
        "notice": "It adds a list of account as signers."
      },
      "initialize(address,address,address)": {
        "notice": "It initializes this consensus contract."
      },
      "initialized()": {
        "notice": "Gets if the contract is initialized."
      },
      "isSigner(address)": {
        "notice": "Gets whether an account address is a signer or not."
      },
      "removeSigner(address)": {
        "notice": "It removes an account as signer."
      },
      "settings()": {
        "notice": "The settings contract."
      }
    }
  }
}