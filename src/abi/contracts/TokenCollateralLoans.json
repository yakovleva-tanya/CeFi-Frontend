{
  "contractName": "TokenCollateralLoans",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        }
      ],
      "name": "CollateralDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        }
      ],
      "name": "CollateralWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensIn",
          "type": "uint256"
        }
      ],
      "name": "LoanLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalOwed",
          "type": "uint256"
        }
      ],
      "name": "LoanRepaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountBorrowed",
          "type": "uint256"
        }
      ],
      "name": "LoanTakenOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "interestRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxLoanAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "termsExpiry",
          "type": "uint256"
        }
      ],
      "name": "LoanTermsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldPriceOracle",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newPriceOracle",
          "type": "address"
        }
      ],
      "name": "PriceOracleUpdated",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "borrowerLoans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "canLiquidateLoan",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "collateralToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "getBorrowerLoans",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "getCollateralInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "neededInLendingTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "neededInCollateralTokens",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "moreCollateralRequired",
              "type": "bool"
            }
          ],
          "internalType": "struct TellerCommon.LoanCollateralInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "getLiquidationInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralInTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountToLiquidate",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "liquidable",
              "type": "bool"
            }
          ],
          "internalType": "struct TellerCommon.LoanLiquidationInfo",
          "name": "liquidationInfo",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "getTotalOwed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "isLoanSecured",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lendingPool",
      "outputs": [
        {
          "internalType": "contract LendingPoolInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lendingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "liquidateLoan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "loanIDCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "loanTermsConsensus",
      "outputs": [
        {
          "internalType": "contract LoanTermsConsensusInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            }
          ],
          "internalType": "struct TellerCommon.LoanTerms",
          "name": "loanTerms",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "termsExpiry",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastCollateralIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "principalOwed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestOwed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "internalType": "enum TellerCommon.LoanStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "liquidated",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "priceOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newPriceOracle",
          "type": "address"
        }
      ],
      "name": "setPriceOracle",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "contract SettingsInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBorrow",
          "type": "uint256"
        }
      ],
      "name": "takeOutLoan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "withdrawCollateral",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositCollateral",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "consensusAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requestNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requestTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct TellerCommon.LoanRequest",
          "name": "request",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "consensusAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "responseTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanAmount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "signerNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct TellerCommon.Signature",
              "name": "signature",
              "type": "tuple"
            }
          ],
          "internalType": "struct TellerCommon.LoanResponse[]",
          "name": "responses",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "createLoanWithTerms",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "priceOracleAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lendingPoolAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "loanTermsConsensusAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "settingsAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIn\",\"type\":\"uint256\"}],\"name\":\"LoanLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalOwed\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBorrowed\",\"type\":\"uint256\"}],\"name\":\"LoanTakenOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"termsExpiry\",\"type\":\"uint256\"}],\"name\":\"LoanTermsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPriceOracle\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"borrowerLoans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"canLiquidateLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"consensusAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestTime\",\"type\":\"uint256\"}],\"internalType\":\"struct TellerCommon.LoanRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"consensusAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"responseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"signerNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct TellerCommon.Signature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"struct TellerCommon.LoanResponse[]\",\"name\":\"responses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"createLoanWithTerms\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"getBorrowerLoans\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"getCollateralInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"neededInLendingTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"neededInCollateralTokens\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"moreCollateralRequired\",\"type\":\"bool\"}],\"internalType\":\"struct TellerCommon.LoanCollateralInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"getLiquidationInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralInTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountToLiquidate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"liquidable\",\"type\":\"bool\"}],\"internalType\":\"struct TellerCommon.LoanLiquidationInfo\",\"name\":\"liquidationInfo\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"getTotalOwed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lendingPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanTermsConsensusAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"settingsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"isLoanSecured\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingPool\",\"outputs\":[{\"internalType\":\"contract LendingPoolInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"liquidateLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"loanIDCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"loanTermsConsensus\",\"outputs\":[{\"internalType\":\"contract LoanTermsConsensusInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"internalType\":\"struct TellerCommon.LoanTerms\",\"name\":\"loanTerms\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"termsExpiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastCollateralIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"internalType\":\"enum TellerCommon.LoanStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"contract SettingsInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBorrow\",\"type\":\"uint256\"}],\"name\":\"takeOutLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"methods\":{\"cToken()\":{\"return\":\"Address of the cToken\"},\"canLiquidateLoan(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to check\"},\"return\":\"bool weather the loan can be liquidated\"},\"createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)\":{\"params\":{\"collateralAmount\":\"Amount of collateral required for the loan\",\"request\":\"Struct of the protocol loan request\",\"responses\":\"List of structs of the protocol loan responses\"}},\"depositCollateral(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount to deposit as collateral.\",\"borrower\":\"The address of the loan borrower.\",\"loanID\":\"The ID of the loan the collateral is for\"}},\"getBorrowerLoans(address)\":{\"params\":{\"borrower\":\"The borrower's address\"}},\"getCollateralInfo(uint256)\":{\"params\":{\"loanID\":\"of the loan to get info for\"},\"return\":\"memory TellerCommon.LoanCollateralInfo Collateral information of the loan\"},\"getLiquidationInfo(uint256)\":{\"params\":{\"loanID\":\"loan id to get the info.\"},\"return\":\"liquidationInfo get current liquidation info for the given loan id.\"},\"getTotalOwed(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to be queried\"},\"return\":\"uint256 The total amount owed remaining\"},\"initialize(address,address,address,address,address)\":{\"params\":{\"collateralTokenAddress\":\"Contract address for the collateral token.\",\"lendingPoolAddress\":\"Contract address of the lending pool\",\"loanTermsConsensusAddress\":\"Contract adddress for loan term consensus\",\"priceOracleAddress\":\"Contract address of the price oracle\",\"settingsAddress\":\"Contract address for the configuration of the platform\"}},\"initialized()\":{\"return\":\"true if contract is initialized. Otherwise it returns false.\"},\"isLoanSecured(uint256)\":{\"return\":\"bool value of it being secured or not.\"},\"lendingToken()\":{\"return\":\"Address of the lending token\"},\"liquidateLoan(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to be liquidated\"}},\"repay(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to pay back to the loan\",\"loanID\":\"The ID of the loan the payment is for\"}},\"setPriceOracle(address)\":{\"details\":\"It throws a require error if sender is not allowed.It throws a require error if new address is empty (0x0) or not a contract.\",\"params\":{\"newPriceOracle\":\"the new price oracle address.\"}},\"settings()\":{\"details\":\"This address should NOT change over the time. See details in the _setSettings(...) function.\"},\"tToken()\":{\"return\":\"Address of the tToken\"},\"takeOutLoan(uint256,uint256)\":{\"details\":\"collateral ratio is a percentage of the loan amount that's required in collateralthe percentage will be *(10**2). I.e. collateralRatio of 5244 means 52.44% collateralis required in the loan. Interest rate is also a percentage with 2 decimal points.\"},\"withdrawCollateral(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of collateral token or ether the caller is hoping to withdraw.\",\"loanID\":\"The ID of the loan the collateral is for\"}}}},\"userdoc\":{\"methods\":{\"cToken()\":{\"notice\":\"Returns the cToken in the lending pool\"},\"canLiquidateLoan(uint256)\":{\"notice\":\"A loan can be liquidated if it is: under collateralized or expired\"},\"createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)\":{\"notice\":\"Creates a loan with the loan request and terms\"},\"depositCollateral(address,uint256,uint256)\":{\"notice\":\"Deposit collateral tokens into a loan.\"},\"getBorrowerLoans(address)\":{\"notice\":\"Get a list of all loans for a borrower\"},\"getCollateralInfo(uint256)\":{\"notice\":\"Get collateral information of a specific loan\"},\"getLiquidationInfo(uint256)\":{\"notice\":\"It getss the current liquidation info for a given loan id.\"},\"getTotalOwed(uint256)\":{\"notice\":\"Returns the total owed amount remaining for a specified loan\"},\"initialize(address,address,address,address,address)\":{\"notice\":\"Initializes the current contract instance setting the required parameters, if allowed\"},\"initialized()\":{\"notice\":\"Gets if the contract is initialized.\"},\"isLoanSecured(uint256)\":{\"notice\":\"Checks wheather the loan's collateral ratio is considered to be secured based on the settings collateral buffer value.\"},\"lendingToken()\":{\"notice\":\"Returns the lending token in the lending pool\"},\"liquidateLoan(uint256)\":{\"notice\":\"Liquidate a loan if it is expired or under collateralized\"},\"repay(uint256,uint256)\":{\"notice\":\"Make a payment to a loan\"},\"setPriceOracle(address)\":{\"notice\":\"Updates the current price oracle instance.\"},\"settings()\":{\"notice\":\"The gets the settings contract address from the SETTINGS_SLOT.\"},\"tToken()\":{\"notice\":\"Returns the tToken in the lending pool\"},\"takeOutLoan(uint256,uint256)\":{\"notice\":\"Take out a loan\"},\"withdrawCollateral(uint256,uint256)\":{\"notice\":\"Withdraw collateral from a loan, unless this isn't allowed\"}},\"notice\":\"This contract is used as a basis for the creation of loans (not wei) across the platformIt implements the LoansBase contract from Teller\"}},\"settings\":{\"compilationTarget\":{\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/TokenCollateralLoans.sol\":\"TokenCollateralLoans\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/atm/ATMGovernanceInterface.sol\":{\"keccak256\":\"0x941d294aa385de623880428e08bf2e8ed4ef4e0f64b64297711748bbcf1e3e62\",\"urls\":[\"bzz-raw://e25e5830eb12b06fc560d5fc77112201fe6cce29a397ce32a982fffe1f0ea88d\",\"dweb:/ipfs/QmUoHemMNYziKTm9b7FwxQvZrtDYpLDw1HyUFchpwdbdw1\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/Base.sol\":{\"keccak256\":\"0x23e85149613cbc80bec3de065d969b361d19c61177f426199d10667769f97a49\",\"urls\":[\"bzz-raw://1fbac7f12b453df42a3bd1632962e5c8e0738f9dd65fbc070ab35099ef1ad89b\",\"dweb:/ipfs/QmW8NR5CdGkDfiE9QouSCUznPQde3gNZhjRNnLCCPbJX1Z\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/BaseUpgradeable.sol\":{\"keccak256\":\"0x0f0baf7e7aa38b47e749a28ab674cc94a97ca92244a9b2e919c372c1b06546cf\",\"urls\":[\"bzz-raw://4b05a358a1273734f3143d46309239b36c9dd933a7011b8bc408fb040c6c8486\",\"dweb:/ipfs/QmPrUGETWEMAafXcU528oW6A9rBDCy5qqS24xEYLntevYU\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/LoansBase.sol\":{\"keccak256\":\"0x57d2ba95a883af51e91492f0a6e77d8972a31bec2a5b1509b46f9752dde4cb6e\",\"urls\":[\"bzz-raw://f4f4014947627a60233e27c815e445426a37edea58d99d5a764a4b275cda5df7\",\"dweb:/ipfs/Qme1Emc7RFmyx3mGYE2HwBuAVWWSto9PexNGKxfwEZzUjQ\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/TInitializable.sol\":{\"keccak256\":\"0xfd04f8b08548b7a4aacbf26eaf65f64628c38f9fc34c363317daa593c7c25917\",\"urls\":[\"bzz-raw://025bbb10f643ebec3bc77303bca1585c572c76f8261ce42ed816b3c2a7799d20\",\"dweb:/ipfs/QmYS3L6u6f7ucRxGoap3RSD1jeJERnZk3XQRden1fEDQMs\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/TokenCollateralLoans.sol\":{\"keccak256\":\"0xaefd4ca4a6f2027c903ca970e9f55c188ebfca6ffae37bbdb4fa79e263711156\",\"urls\":[\"bzz-raw://7beb17b283a23a06e3932a56282ec4ec2e52ccc5ff9d375a2bbc8847e75b7ada\",\"dweb:/ipfs/QmZ9zs9uYJPqtUeJDjp3myjNRHQf1yPWVbVPFE5TrGH4Zr\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0x2f54118d65cd07ffb7a476768412b60cfacb12c6dc161b43e1c443d1d01563a2\",\"urls\":[\"bzz-raw://e56918727ce72a8526fbb96671fa4693d0b66bca321d3c93921ced6daecc69c5\",\"dweb:/ipfs/QmUeJuNbhZic68Fsv6fw9zJ5RAJXnvjsno4HfnPajZkrLp\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/EscrowInterface.sol\":{\"keccak256\":\"0x70cd662e5be72c959495fed96b6743c921fd29e7980538117c92bb36348c6066\",\"urls\":[\"bzz-raw://5c6b83cecae9e5c4c321d67b0ebccd8067e561305cd57d414a943d12ceb3e272\",\"dweb:/ipfs/QmXKVYc74rJE9j2bmwMUc5KLJVQSWVZuF226yAFCQSWkQF\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x91250ee3c1d73b5d1720f7b41f18072eb347d73e4d3de464537ece49e1fa1d93\",\"urls\":[\"bzz-raw://f11ce1d70152f6d19f9c23788b4458631df3fd748a52849b899183ce2dabc52b\",\"dweb:/ipfs/QmaNQybwKYW5BfT3h6z6P1SSUwYEyXQviisYjUr7cHLzQR\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/LendingPoolInterface.sol\":{\"keccak256\":\"0xcfa109416508b53f1e67f11040e0187ed8089d361cd1fdaec7f671058fc00168\",\"urls\":[\"bzz-raw://c9f0fcc3736ed10d81abae971b8702b08f14377dbc4c098c4f788ec8328ac666\",\"dweb:/ipfs/QmV3Dr9zyL5957GpWePJEBn5YewmRQTdr7T8vhxXXHPUFq\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/LoanTermsConsensusInterface.sol\":{\"keccak256\":\"0xde05860c55ab4fe8d4e19e53925fa4c7450c8d2f7cd78f295413d72f2db0b337\",\"urls\":[\"bzz-raw://1b5c07e4df8bb2b52c3a9414b0ec1e2c41b462798b74b5a5a6279517ed693497\",\"dweb:/ipfs/QmUhUyoYbhCsAwJpACQUGufj8aW6Mb6oY3usXST5fqY3xJ\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/LoansInterface.sol\":{\"keccak256\":\"0x324bc3edd8855129404f2669e996c868913631bbeae7b5a6d22ca5aea52e9abc\",\"urls\":[\"bzz-raw://0a55b6bb97812a07e6fff8e667ab972baa118f782d465cd92a6e5bcb7df12ac9\",\"dweb:/ipfs/Qme9oRW6u4t8Y5jX2g79TAQRYxNfssmk3b93FQg6JMZcty\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0x871da1c39455ad829fdff0eb86a3d069e041f03b9dfab82136719c2c2923b926\",\"urls\":[\"bzz-raw://aca54977104d1152ecfecf39465a34148236b1d973a339c442963dabf68dd05b\",\"dweb:/ipfs/QmeKnxn9hB3aLqgWPLFhCEuxySTUF1LA1tbCo8tGyhppxV\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/MarketsStateInterface.sol\":{\"keccak256\":\"0xf51bd2d361d9cf448f2c2a5bb37c2699b0d9605a8f1b6a8719f90d8f536f2a05\",\"urls\":[\"bzz-raw://415a4444e8f9aca25132f492b226b8d500081a4ba5be8e45b401a68e73e1895b\",\"dweb:/ipfs/QmUPGgnqUjidxeEpkgu4yYzhfuykgtNKehEwbps97nAAzZ\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/PairAggregatorInterface.sol\":{\"keccak256\":\"0xb3cf240d5e8c5c9f51e9e06cdb544bec5ff93e76e02ea76314d2980e6a984839\",\"urls\":[\"bzz-raw://083b3be86e38ad3ed877b1208c53349006095399e023a55ed28f81134c38cb08\",\"dweb:/ipfs/Qmd5Tfykos7QPqUgs4bqFGMwgrNawLoZneuFMzMsBYCkMr\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0xfc30266ba226c3cc0cb67780a236efd26864d7a48e13f95b14f030435329febd\",\"urls\":[\"bzz-raw://dcc8e7ad13a8cf3565ffed6c0c72a9c998671bef804b26c6f11e64dc17b60fc0\",\"dweb:/ipfs/QmdDxucgMTcPm42WA6LMvS2C42EEaGw1gsH37dCCen1KLm\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/providers/chainlink/IChainlinkPairAggregatorRegistry.sol\":{\"keccak256\":\"0xed52aaafc7e15756431c0c847e5f7e1d52578b0f3b7f8b02674ec5d5d5a44c29\",\"urls\":[\"bzz-raw://76821662fa9a0918b355bc969deadef055737d90067658791dbc13e843958b64\",\"dweb:/ipfs/QmQzKEJiQjxRyNED8aABw62KQys3StiGwEnMXiF8P8ZQcV\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0xc5453e6f1a43327a37db250dedb65561c4deb0f3eb3cad490a64fc56e0b6f7b7\",\"urls\":[\"bzz-raw://f6edcab27eebecb576c9a884a173a1a5fcf0c129c76b992ec77ca24518d92f91\",\"dweb:/ipfs/QmW3q6w39dg9RnxsQdfrFVudmiZh5asRnkWQVkrap9hnJf\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/AssetSettingsLib.sol\":{\"keccak256\":\"0x9c67a3de3bb62fdfbd5c116016e0693300bb9d71fe055bb6aa12da305aba3bf4\",\"urls\":[\"bzz-raw://a3c9ffdd1496a6192abb62b72625e5778db231656f2c8fffd09a83d089996aa6\",\"dweb:/ipfs/QmevJ5ojFaqG363CrnJZ9x3YvGMWKfUaFoUVbCsaSzqPfe\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/ERC20DetailedLib.sol\":{\"keccak256\":\"0x9d40e0f2512901e6f3dcb2d95756724e4a71d418e755730a9828435c2b5ce204\",\"urls\":[\"bzz-raw://31d1541bf87c9356b4b43decc8b55479a00ebacd1beb0377b0a04200eed278c7\",\"dweb:/ipfs/QmcRJk2JfYzp9HFpTeW1BKWQALF7cpYW3Bj3G7QyosVmRV\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0xf4caad9e4d96afe2721124eaf7203bb4e3a97beb3664c63297c4e68523f5bd65\",\"urls\":[\"bzz-raw://dcd6f564423c2cf83f3a56120f43eb6fd9f6e852cbb615be657f89e5114debf4\",\"dweb:/ipfs/QmRZStVoa5KbYRCHpzC7h998NnRhbFHfUZ71TRTiLzMTcX\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0xe49711d0c8193559f76dc5f399344c8f5f5e6a8b99bf78c6bcfd9aa1c456c306\",\"urls\":[\"bzz-raw://c6432c082145470691dfde04bf5c4220ccc32a5dccf6520c3122e47e470e6c22\",\"dweb:/ipfs/Qmd97DA5SB3d8Cuwf5M6vLtfDLHYXrMj5d3cXkYPP7iPpU\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/MarketStateLib.sol\":{\"keccak256\":\"0x760fff7588382659571b8fd078b5e332e010d7e97278895fc226e8ed551cb0c6\",\"urls\":[\"bzz-raw://ff9cf8b14a780c989b2f641bf8faaf8066e586245ede58196274f8f03789c0d4\",\"dweb:/ipfs/QmVnRsrQFuRXM1c4NFVz1iUaAywq73uHVsUzemn1x5fVgF\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0xa397bcb75a4e7d80fd1043b7dc3c3a69f8c12435d26d843e4be40e875b71e134\",\"urls\":[\"bzz-raw://aabd466bea9e95a2585d597ebf62025f7ab4f38d1d4fe1c9fa5be1d98d131789\",\"dweb:/ipfs/QmcRGMg8X5teSF3Ga8ECPH2HvenViySkdnzvpUWvMDWXJL\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0c6a7e0de89e1017166ef4f593b33c8d0bfc6bcf3cd3db0bb5c1610ce260b659\",\"urls\":[\"bzz-raw://926108ace9152ed12d86a74ccb98d8c0aa698bd48fd3b4bfedacf976a8dd59d3\",\"dweb:/ipfs/QmVYjChMWZJdpPoBNheHMfyoTVsAarfLJ6SxPHhEsd6kUB\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/SettingsConsts.sol\":{\"keccak256\":\"0xa1d17d7507cae083530ce51d4c503ca657ddecf3d3fc23cec9c566d7253e59e6\",\"urls\":[\"bzz-raw://6f14f64aa1d37bef1d4e7051f1733cbe52a1d5af9165faaf4b0336a68c6eb239\",\"dweb:/ipfs/QmcJE8USECc54etjpCBUGTCF5VvMLqLjo9DbkQ64Xf2R4T\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0x61d5a58019963b5b4394aa040d8661167da0aef0912cc7133dbc917a38a74698\",\"urls\":[\"bzz-raw://f2a48c517cbebc7ca530aced250a5389cba74ca1d16137b3b38116b1afd428b9\",\"dweb:/ipfs/QmcReNoiEiR3wvVVwwY6u6fQMTZivYtBn7uhMm3ud219Di\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x704e0cb521f0b571096a72266a34d9a2a59a89853b5b271bc97fa307a4cc4dcc\",\"urls\":[\"bzz-raw://96317e95d4c301e54ff42f2b6dede996ac4d714e50a6b5552c68fbb378330dcf\",\"dweb:/ipfs/QmawKJQVK7yXeBhGcvkmujYpo8n7CWQJizDV2dWzsxupnh\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb2fbd0f9a0bd0d99ace5603f1ce5388ed7d81031a188f5f4667e702fe690e61a\",\"urls\":[\"bzz-raw://b5a018485e3e184d24fabf939a2ca2b82a95b55ad7fcb109f2005d755ddedd29\",\"dweb:/ipfs/QmbpUfNbKjnVhARJRwMvD4h5z6ajYcdAB5Up6m1V3Rf2Ee\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101b75760003560e01c80638129fc1c116100ec578063c35d64ea1161008a578063e06174e411610064578063e06174e414610475578063e1ec3c681461048a578063e3ed1902146104c2578063eee8b7ff146104e2576101b7565b8063c35d64ea14610420578063ccdd9f5d14610435578063d8aed14514610455576101b7565b8063a59a9973116100c6578063a59a9973146103ce578063a5c5c7b2146103e3578063aaaca558146103f6578063b2016bd41461040b576101b7565b80638129fc1c14610379578063854768c01461038e578063934b5d13146103ae576101b7565b806350ef5c351161015957806358895e3d1161013357806358895e3d146103025780636948f32b1461032457806369e527da14610344578063767a7b0514610359576101b7565b806350ef5c35146102a057806351348454146102cd578063530e784f146102e2576101b7565b80631a74856b116101955780631a74856b146102295780632630c12f1461023c5780633b9293001461025e5780634ac8eb5f1461028b576101b7565b806302bc2cdb146101bc5780631459457a146101de578063158ef93e146101fe575b600080fd5b3480156101c857600080fd5b506101dc6101d7366004614365565b61050f565b005b3480156101ea57600080fd5b506101dc6101f9366004614167565b610bf6565b34801561020a57600080fd5b50610213610c9b565b604051610220919061506b565b60405180910390f35b6101dc610237366004614216565b610cba565b34801561024857600080fd5b50610251610ea5565b6040516102209190614fc5565b34801561026a57600080fd5b5061027e610279366004614347565b610eb4565b6040516102209190615079565b34801561029757600080fd5b5061027e610ee4565b3480156102ac57600080fd5b506102c06102bb366004614347565b610eea565b60405161022091906152d6565b3480156102d957600080fd5b5061027e610efb565b3480156102ee57600080fd5b506101dc6102fd36600461412b565b610f01565b34801561030e57600080fd5b5061031761105f565b6040516102209190615087565b34801561033057600080fd5b5061021361033f366004614347565b61106e565b34801561035057600080fd5b506102516111c7565b34801561036557600080fd5b506101dc610374366004614365565b611249565b34801561038557600080fd5b506101dc61145f565b34801561039a57600080fd5b506102136103a9366004614347565b6114e7565b3480156103ba57600080fd5b506102c06103c9366004614347565b61166e565b3480156103da57600080fd5b5061031761167f565b6101dc6103f13660046142bd565b61168e565b34801561040257600080fd5b50610251611c82565b34801561041757600080fd5b50610251611cc7565b34801561042c57600080fd5b50610251611cd6565b34801561044157600080fd5b506101dc610450366004614347565b611d1b565b34801561046157600080fd5b506101dc610470366004614365565b611f49565b34801561048157600080fd5b50610317612324565b34801561049657600080fd5b506104aa6104a5366004614347565b612346565b6040516102209c9b9a9998979695949392919061534a565b3480156104ce57600080fd5b5061027e6104dd3660046141dc565b6123fe565b3480156104ee57600080fd5b506105026104fd36600461412b565b61242c565b604051610220919061505a565b8160016000828152606d60205260409020600e0154600160a01b900460ff16600381111561053957fe5b1461055f5760405162461bcd60e51b815260040161055690615286565b60405180910390fd5b610567610c9b565b6105835760405162461bcd60e51b815260040161055690615276565b61058b612498565b156105a85760405162461bcd60e51b815260040161055690615166565b606a546001600160a01b03166105bd81612512565b156105da5760405162461bcd60e51b8152600401610556906150c6565b603380546001908101918290556000868152606d6020526040902001546001600160a01b031633811461061f5760405162461bcd60e51b815260040161055690615226565b6000868152606d60205260409020600501548511156106505760405162461bcd60e51b8152600401610556906150f6565b6000868152606d60205260409020600701544211156106815760405162461bcd60e51b8152600401610556906151c6565b6107fb61068c612324565b6001600160a01b031663269012a06106a2612324565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106da57600080fd5b505afa1580156106ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610712919081019061429f565b6001600160a01b03166311880cc86040518163ffffffff1660e01b815260040160206040518083038186803b15801561074a57600080fd5b505afa15801561075e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107829190810190614281565b6040518263ffffffff1660e01b815260040161079e9190615079565b60206040518083038186803b1580156107b657600080fd5b505afa1580156107ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107ee9190810190614281565b429063ffffffff61259716565b6000878152606d60205260409020600a0154111561082b5760405162461bcd60e51b815260040161055690615196565b6000868152606d60205260409020600d8101869055600b81018690556006810154600390910154610890916301e13380916108849161271091839190610878908c9063ffffffff6125e216565b9063ffffffff6125e216565b9063ffffffff61261c16565b6000878152606d60205260409020600c810191909155600e01805460ff60a01b1916600160a11b1790556108c2613ed9565b6108cb8761265e565b90508060600151156108ef5760405162461bcd60e51b815260040161055690615176565b6000878152606d602052604090204260089091015561090d876126af565b6000888152606d602052604090819020600e0180546001600160a01b0319166001600160a01b039384161790819055606a549151631397424760e11b81529183169263272e848e92610965928b921690600401615306565b600060405180830381600087803b15801561097f57600080fd5b505af1158015610993573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e0154905163cd6dc68760e01b81526001600160a01b03909116915063cd6dc687906109d99030908b9060040161503f565b600060405180830381600087803b1580156109f357600080fd5b505af1158015610a07573d6000803e3d6000fd5b50505050610a136127a8565b6001600160a01b031663c7bbb113606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015610a6f57600080fd5b505afa158015610a83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610aa79190810190614149565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b158015610ae057600080fd5b505afa158015610af4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b189190810190614149565b896040518463ffffffff1660e01b8152600401610b3793929190615024565b600060405180830381600087803b158015610b5157600080fd5b505af1158015610b65573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e81015460019091015491516001600160a01b03918216935091169089907f85b5516a17ce775661a4b967b1fb30c852678f6598d86d9f3c99b7b60ff2d0ce90610bc4908b90615079565b60405180910390a450506033548114610bef5760405162461bcd60e51b8152600401610556906152a6565b5050505050565b610bfe610c9b565b15610c1b5760405162461bcd60e51b8152600401610556906152b6565b60408051808201909152601a81527f50524f564944455f434f4c4c5f544f4b454e5f414444524553530000000000006020820152610c69906001600160a01b0383169063ffffffff61282216565b610c758585858561284f565b606780546001600160a01b0319166001600160a01b039290921691909117905550505050565b600080604051610caa90614faf565b6040519081900390205492915050565b3415610cd85760405162461bcd60e51b8152600401610556906150e6565b8160016000828152606d60205260409020600e0154600160a01b900460ff166003811115610d0257fe5b1480610d34575060026000828152606d60205260409020600e0154600160a01b900460ff166003811115610d3257fe5b145b610d505760405162461bcd60e51b815260040161055690615116565b610d58610c9b565b610d745760405162461bcd60e51b815260040161055690615276565b610d7c612498565b15610d995760405162461bcd60e51b815260040161055690615166565b606a546001600160a01b0316610dae81612512565b15610dcb5760405162461bcd60e51b8152600401610556906150c6565b6000848152606d6020908152604091829020600101548251808401909352601983527f424f52524f5745525f4c4f414e5f49445f4d49534d415443480000000000000091830191909152610e32916001600160a01b0388811692169063ffffffff6129a016565b60008311610e525760405162461bcd60e51b815260040161055690615206565b610e5c84846129c9565b846001600160a01b0316847feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c85604051610e969190615079565b60405180910390a35050505050565b6069546001600160a01b031681565b6000818152606d60205260408120600b810154600c90910154610edc9163ffffffff6129e116565b90505b919050565b60665481565b610ef2613ed9565b610edc82612a06565b60685481565b610f09610c9b565b610f255760405162461bcd60e51b815260040161055690615276565b610f2d612324565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401610f589190614fd3565b60006040518083038186803b158015610f7057600080fd5b505afa158015610f84573d6000803e3d6000fd5b50505050610f9a816001600160a01b0316612be2565b610fb65760405162461bcd60e51b815260040161055690615216565b60695460408051808201909152601b81527f4e45575f4f5241434c455f4d5553545f42455f50524f5649444544000000000060208201526001600160a01b039091169061100c908290849063ffffffff612c1e16565b606980546001600160a01b0319166001600160a01b03848116918217909255604051909183169033907ff51f0fffc8121ee3747e0536c487d894894cdba960ccfb4ab385a88d51b16fed90600090a45050565b606b546001600160a01b031681565b6000611078612498565b806110935750606a54611093906001600160a01b0316612512565b806110c5575060026000838152606d60205260409020600e0154600160a01b900460ff1660038111156110c257fe5b14155b156110d257506000610edf565b6000828152606d6020526040812060088101546006909101549091426110fe848463ffffffff6129e116565b10905080156111135760019350505050610edf565b6000858152606d60205260409020600e01546001600160a01b031680156111b057806001600160a01b031663415dfa5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561116d57600080fd5b505afa158015611181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111a59190810190614263565b945050505050610edf565b6111b98661265e565b606001519695505050505050565b606a54604080516334f293ed60e11b815290516000926001600160a01b0316916369e527da916004808301926020929190829003018186803b15801561120c57600080fd5b505afa158015611220573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112449190810190614149565b905090565b8060016000828152606d60205260409020600e0154600160a01b900460ff16600381111561127357fe5b14806112a5575060026000828152606d60205260409020600e0154600160a01b900460ff1660038111156112a357fe5b145b6112c15760405162461bcd60e51b815260040161055690615116565b6112c9610c9b565b6112e55760405162461bcd60e51b815260040161055690615276565b6112ed612498565b1561130a5760405162461bcd60e51b815260040161055690615166565b606a546001600160a01b031661131f81612512565b1561133c5760405162461bcd60e51b8152600401610556906150c6565b603380546001908101918290556000858152606d6020526040902001546001600160a01b031633146113805760405162461bcd60e51b815260040161055690615236565b600085116113a05760405162461bcd60e51b815260040161055690615156565b6113a8613ed9565b6113b18561265e565b604081015181519192506000916113cd9163ffffffff61259716565b9050868110156113ef5760405162461bcd60e51b8152600401610556906151a6565b6113fa868833612c28565b336001600160a01b0316867f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd41896040516114349190615079565b60405180910390a350506033548114610bef5760405162461bcd60e51b8152600401610556906152a6565b600054610100900460ff16806114785750611478612c7c565b80611486575060005460ff16155b6114a25760405162461bcd60e51b8152600401610556906151d6565b600054610100900460ff161580156114cd576000805460ff1961ff0019909116610100171660011790555b600160335580156114e4576000805461ff00191690555b50565b60006114f1612324565b6001600160a01b031663269012a0611507612324565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561153f57600080fd5b505afa158015611553573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611577919081019061429f565b6001600160a01b03166308b04f626040518163ffffffff1660e01b815260040160206040518083038186803b1580156115af57600080fd5b505afa1580156115c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115e79190810190614281565b6040518263ffffffff1660e01b81526004016116039190615079565b60206040518083038186803b15801561161b57600080fd5b505afa15801561162f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116539190810190614281565b6000838152606d602052604090206004015410159050919050565b611676613ed9565b610edc8261265e565b606a546001600160a01b031681565b34156116ac5760405162461bcd60e51b8152600401610556906150e6565b6116b4610c9b565b6116d05760405162461bcd60e51b815260040161055690615276565b6116d8612498565b156116f55760405162461bcd60e51b815260040161055690615166565b611702602085018561412b565b336001600160a01b0382161461172a5760405162461bcd60e51b815260040161055690615226565b61173936869003860186614329565b6000611743612324565b6001600160a01b031663269012a0611759612324565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561179157600080fd5b505afa1580156117a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117c9919081019061429f565b6001600160a01b031663cc44cadb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561180157600080fd5b505afa158015611815573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118399190810190614281565b6040518263ffffffff1660e01b81526004016118559190615079565b60206040518083038186803b15801561186d57600080fd5b505afa158015611881573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118a59190810190614281565b90508160a001518110156118cb5760405162461bcd60e51b8152600401610556906150a6565b60006118d5612324565b6001600160a01b03166369ff7744606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561193157600080fd5b505afa158015611945573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119699190810190614149565b85608001516040518363ffffffff1660e01b815260040161198b92919061503f565b60206040518083038186803b1580156119a357600080fd5b505afa1580156119b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119db9190810190614263565b905080156119fb5760405162461bcd60e51b8152600401610556906150d6565b611a088360800151612c82565b611a245760405162461bcd60e51b815260040161055690615256565b6000611a2e612ff2565b606b5460405163064e5d4960e01b8152919250600091829182916001600160a01b039091169063064e5d4990611a6c908f908f908f906004016152e4565b606060405180830381600087803b158015611a8657600080fd5b505af1158015611a9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611abe9190810190614384565b91945092509050611ae084611ad8368f90038f018f614329565b85858561300c565b6000858152606d6020908152604091829020835181558382015180516001830180546001600160a01b03199081166001600160a01b0393841617909155938201516002840180548616918316919091179055818501516003808501919091556060808401516004860155608080850151600587015560a0948501516006870155968801516007860155870151600885015594860151600984015590850151600a83015560c0850151600b83015560e0850151600c830155610100850151600d830155610120850151600e83018054909416911617808355610140850151919391929160ff60a01b1990911690600160a01b908490811115611bdd57fe5b02179055506101609190910151600e9091018054911515600160a81b0260ff60a81b199092169190911790558815611c1957611c19848a6129c9565b606c6000611c2a60208f018f61412b565b6001600160a01b031681526020808201929092526040016000908120805460018101825590825291902001849055611c7484611c6b368f90038f018f614329565b8585858e61325b565b505050505050505050505050565b606a546040805163155594ab60e31b815290516000926001600160a01b03169163aaaca558916004808301926020929190829003018186803b15801561120c57600080fd5b6067546001600160a01b031681565b606a54604080516361aeb27560e11b815290516000926001600160a01b03169163c35d64ea916004808301926020929190829003018186803b15801561120c57600080fd5b8060026000828152606d60205260409020600e0154600160a01b900460ff166003811115611d4557fe5b14611d625760405162461bcd60e51b815260040161055690615146565b611d6a610c9b565b611d865760405162461bcd60e51b815260040161055690615276565b611d8e612498565b15611dab5760405162461bcd60e51b815260040161055690615166565b606a546001600160a01b0316611dc081612512565b15611ddd5760405162461bcd60e51b8152600401610556906150c6565b6033805460010190819055611df0613ed9565b611df985612a06565b90508060600151611e1c5760405162461bcd60e51b815260040161055690615136565b6000858152606d60205260409020600e01805460ff60a01b1916600360a01b1760ff60a81b1916600160a81b1790558051611e5990869033613326565b606a5460408083015190516382f7b02760e01b81526001600160a01b03909216916382f7b02791611e8e913390600401615314565b600060405180830381600087803b158015611ea857600080fd5b505af1158015611ebc573d6000803e3d6000fd5b5050506000868152606d6020526040908190206001015483518483015192516001600160a01b03909216935088927f9950a0562c02382e2e840daa73082d5be7660ce37601f28fa4c84089c11e8a0692611f199233929091614fe1565b60405180910390a3506033548114611f435760405162461bcd60e51b8152600401610556906152a6565b50505050565b8060026000828152606d60205260409020600e0154600160a01b900460ff166003811115611f7357fe5b14611f905760405162461bcd60e51b815260040161055690615146565b611f98610c9b565b611fb45760405162461bcd60e51b815260040161055690615276565b611fbc612498565b15611fd95760405162461bcd60e51b815260040161055690615166565b606a546001600160a01b0316611fee81612512565b1561200b5760405162461bcd60e51b8152600401610556906150c6565b6033805460010190819055846120335760405162461bcd60e51b8152600401610556906150b6565b84600061203f86610eb4565b90508181101561204d578091505b61205d818363ffffffff61259716565b905061206986836133c4565b8061210d576000868152606d60205260409020600e8101805460ff60a01b1916600360a01b17905560098101546001909101546120b290889083906001600160a01b0316612c28565b6000878152606d6020526040908190206001015490516001600160a01b039091169088907f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd4190612103908590615079565b60405180910390a3505b606a5460405163acb7081560e01b81526001600160a01b039091169063acb708159061213f9085903390600401615314565b600060405180830381600087803b15801561215957600080fd5b505af115801561216d573d6000803e3d6000fd5b505050506121796127a8565b6001600160a01b03166362e269ef606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156121d557600080fd5b505afa1580156121e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061220d9190810190614149565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b15801561224657600080fd5b505afa15801561225a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061227e9190810190614149565b856040518463ffffffff1660e01b815260040161229d93929190615024565b600060405180830381600087803b1580156122b757600080fd5b505af11580156122cb573d6000803e3d6000fd5b5050506000878152606d6020526040908190206001015490516001600160a01b03909116915087907f20a1f2ec363af45dc5ee7d9d622f2dd68b52501c382126c7f04b53663c4c69bf906114349086903390879061532f565b600080600060405161233590614fba565b604051908190039020549250505090565b606d602090815260009182526040918290208054835160c08101855260018301546001600160a01b03908116825260028401548116948201949094526003830154948101949094526004820154606085015260058201546080850152600682015460a0850152600782015460088301546009840154600a850154600b860154600c870154600d880154600e9098015496999895979496939592949193909281169060ff600160a01b8204811691600160a81b9004168c565b606c602052816000526040600020818154811061241757fe5b90600052602060002001600091509150505481565b6001600160a01b0381166000908152606c602090815260409182902080548351818402810184019094528084526060939283018282801561248c57602002820191906000526020600020905b815481526020019060010190808311612478575b50505050509050919050565b60006124a2612324565b6001600160a01b031663b187bd266040518163ffffffff1660e01b815260040160206040518083038186803b1580156124da57600080fd5b505afa1580156124ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112449190810190614263565b600061251c612324565b6001600160a01b0316633b668321836040518263ffffffff1660e01b81526004016125479190614fc5565b60206040518083038186803b15801561255f57600080fd5b505afa158015612573573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610edc9190810190614263565b60006125d983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061347f565b90505b92915050565b6000826125f1575060006125dc565b828202828482816125fe57fe5b04146125d95760405162461bcd60e51b815260040161055690615186565b60006125d983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506134b0565b612666613ed9565b6000828152606d60205260408120600901549080612683856134e7565b604080516080810182528681526020810193909352820181905293909311606084015250909392505050565b60006126b9612324565b6001600160a01b031663bdd1daaa6040518163ffffffff1660e01b815260040160206040518083038186803b1580156126f157600080fd5b505afa158015612705573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612729919081019061429f565b6001600160a01b0316634614874e30846040518363ffffffff1660e01b815260040161275692919061503f565b602060405180830381600087803b15801561277057600080fd5b505af1158015612784573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610edc9190810190614149565b60006127b2612324565b6001600160a01b0316631390f8d76040518163ffffffff1660e01b815260040160206040518083038186803b1580156127ea57600080fd5b505afa1580156127fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611244919081019061429f565b61282b8261350b565b819061284a5760405162461bcd60e51b81526004016105569190615095565b505050565b612857610c9b565b156128745760405162461bcd60e51b8152600401610556906152b6565b60408051808201909152601681527550524f564944455f4f5241434c455f4144445245535360501b60208201526128bb906001600160a01b0386169063ffffffff61282216565b60408051808201909152601c81527f50524f564944455f4c454e44494e475f504f4f4c5f41444452455353000000006020820152612909906001600160a01b0385169063ffffffff61282216565b60408051808201909152601b81527f50524f56494445445f4c4f414e5f5445524d535f4144445245535300000000006020820152612957906001600160a01b0384169063ffffffff61282216565b61296081613519565b50606980546001600160a01b039485166001600160a01b031991821617909155606a805493851693821693909317909255606b8054919093169116179055565b6129aa83836135cb565b8190611f435760405162461bcd60e51b81526004016105569190615095565b6129d382826135dc565b6129dd3382613635565b5050565b6000828201838110156125d95760405162461bcd60e51b815260040161055690615106565b612a0e613ed9565b6000828152606d602052604081206009015490612a29612324565b6001600160a01b031663269012a0612a3f612324565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b158015612a7757600080fd5b505afa158015612a8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612aaf919081019061429f565b6001600160a01b0316631139087a6040518163ffffffff1660e01b815260040160206040518083038186803b158015612ae757600080fd5b505afa158015612afb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b1f9190810190614281565b6040518263ffffffff1660e01b8152600401612b3b9190615079565b60206040518083038186803b158015612b5357600080fd5b505afa158015612b67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b8b9190810190614281565b90506000612b9883613652565b60408051608081018252858152602081018390529192508101612bc7612710610884858763ffffffff6125e216565b8152602001612bd58761106e565b1515905295945050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590612c1657508115155b949350505050565b6129aa838361378c565b606654612c3b908363ffffffff61259716565b6066556000838152606d6020526040902060090154612c60908363ffffffff61259716565b6000848152606d602052604090206009015561284a818361379e565b303b1590565b600080612c8d612324565b6001600160a01b031663dc21a6a06040518163ffffffff1660e01b815260040160206040518083038186803b158015612cc557600080fd5b505afa158015612cd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612cfd919081019061429f565b6001600160a01b0316631fb7cec9606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612d5957600080fd5b505afa158015612d6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d919190810190614149565b6067546040516001600160e01b031960e085901b168152612dbf92916001600160a01b031690600401615009565b60206040518083038186803b158015612dd757600080fd5b505afa158015612deb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612e0f9190810190614149565b90506001600160a01b038116612e375760405162461bcd60e51b8152600401610556906151e6565b604051632319178560e11b81526000906001600160a01b038316906346322f0a90612e75906b14dd5c1c1b1e551bd119589d60a21b90600401615079565b60206040518083038186803b158015612e8d57600080fd5b505afa158015612ea1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612ec59190810190614281565b90506000612ed16127a8565b6001600160a01b031663db63323e606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612f2d57600080fd5b505afa158015612f41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612f659190810190614149565b6067546040516001600160e01b031960e085901b168152612f9592916001600160a01b0316908a90600401615024565b60206040518083038186803b158015612fad57600080fd5b505afa158015612fc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612fe59190810190614281565b9190911115949350505050565b60685461300681600163ffffffff6129e116565b60685590565b613014613f03565b600061301e612324565b6001600160a01b031663269012a0613034612324565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561306c57600080fd5b505afa158015613080573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506130a4919081019061429f565b6001600160a01b031663e00a46156040518163ffffffff1660e01b815260040160206040518083038186803b1580156130dc57600080fd5b505afa1580156130f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506131149190810190614281565b6040518263ffffffff1660e01b81526004016131309190615079565b60206040518083038186803b15801561314857600080fd5b505afa15801561315c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506131809190810190614281565b90506000613194428363ffffffff6129e116565b90506040518061018001604052808981526020016040518060c001604052808a600001516001600160a01b031681526020018a602001516001600160a01b031681526020018981526020018881526020018781526020018a60a00151815250815260200182815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681526020016001600381111561324557fe5b8152600060209091015298975050505050505050565b84602001516001600160a01b031685600001516001600160a01b0316877f0358f509931cba53bbb6a94b7f05a5178220a0c7ddb54b1a1722df9e6ed6aa098787878b60a00151606d60008f8152602001908152602001600020600701546040516132c9959493929190615402565b60405180910390a4801561331e5784600001516001600160a01b0316867feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c836040516133159190615079565b60405180910390a35b505050505050565b6000838152606d60205260409020600e01546001600160a01b0316156133b9576000838152606d602052604090819020600e0154905163df8de3e760e01b81526001600160a01b039091169063df8de3e790613386908490600401614fd3565b600060405180830381600087803b1580156133a057600080fd5b505af11580156133b4573d6000803e3d6000fd5b505050505b61284a838383612c28565b6000828152606d60205260409020600b0154811115613447576000828152606d60205260409020600b0154819061340290829063ffffffff61259716565b6000848152606d60205260408120600b810191909155600c015490915061342f908263ffffffff61259716565b6000848152606d60205260409020600c0155506129dd565b6000828152606d60205260409020600b0154613469908263ffffffff61259716565b6000838152606d60205260409020600b01555050565b600081848411156134a35760405162461bcd60e51b81526004016105569190615095565b50508183035b9392505050565b600081836134d15760405162461bcd60e51b81526004016105569190615095565b5060008385816134dd57fe5b0495945050505050565b60008060006134f5846137bb565b90508061350182613864565b9250925050915091565b6001600160a01b0316151590565b613521610c9b565b1561353e5760405162461bcd60e51b8152600401610556906152b6565b60408051808201909152601981527f53455454494e47535f4d5553545f42455f50524f564944454400000000000000602082015261358c906001600160a01b0383169063ffffffff61282216565b61359e816001600160a01b0316612be2565b6135ba5760405162461bcd60e51b815260040161055690615126565b6135c261395a565b6114e481613978565b6001600160a01b0390811691161490565b6066546135ef908263ffffffff6129e116565b6066556000828152606d6020526040902060090154613614908263ffffffff6129e116565b6000928352606d602052604090922060098101929092555042600a90910155565b6067546129dd906001600160a01b0316838363ffffffff6139e716565b6000806136ec606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156136a657600080fd5b505afa1580156136ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506136de9190810190614149565b6001600160a01b0316613c66565b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b15801561373e57600080fd5b505afa158015613752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506137769190810190614281565b9050612c1681610884868563ffffffff6125e216565b6001600160a01b039081169116141590565b6067546129dd906001600160a01b0316838363ffffffff613ce716565b6000818152606d60205260408120600e0154600160a01b900460ff168160018260038111156137e657fe5b141561380457506000838152606d6020526040902060050154613833565b600282600381111561381257fe5b14156138285761382184610eb4565b9050613833565b600092505050610edf565b6000848152606d602052604090206004015461385b612710610884848463ffffffff6125e216565b95945050505050565b6000806138b8606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156136a657600080fd5b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b15801561390a57600080fd5b505afa15801561391e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506139429190810190614281565b9050600061385b83610884878563ffffffff6125e216565b600060405161396890614faf565b6040519081900390206001905550565b613991613983612324565b6001600160a01b031661350b565b1561399b576114e4565b6139ad816001600160a01b0316612be2565b6139c95760405162461bcd60e51b815260040161055690615126565b60006040516139d790614fba565b6040519081900390208290555050565b604051636eb1769f60e11b81526000906001600160a01b0385169063dd62ed3e90613a189086903090600401615009565b60206040518083038186803b158015613a3057600080fd5b505afa158015613a44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613a689190810190614281565b905081811015613a8a5760405162461bcd60e51b815260040161055690615296565b6040516370a0823160e01b81526000906001600160a01b038616906370a0823190613ab9903090600401614fc5565b60206040518083038186803b158015613ad157600080fd5b505afa158015613ae5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613b099190810190614281565b90506000856001600160a01b03166323b872dd8630876040518463ffffffff1660e01b8152600401613b3d93929190615024565b602060405180830381600087803b158015613b5757600080fd5b505af1158015613b6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613b8f9190810190614263565b905080613bae5760405162461bcd60e51b8152600401610556906151b6565b6040516370a0823160e01b81526000906001600160a01b038816906370a0823190613bdd903090600401614fc5565b60206040518083038186803b158015613bf557600080fd5b505afa158015613c09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613c2d9190810190614281565b905084613c40828563ffffffff61259716565b14613c5d5760405162461bcd60e51b8152600401610556906151f6565b50505050505050565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015613ca257600080fd5b505afa158015613cb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613cda91908101906143c7565b60ff16600a0a9392505050565b6040516370a0823160e01b81526000906001600160a01b038516906370a0823190613d16903090600401614fc5565b60206040518083038186803b158015613d2e57600080fd5b505afa158015613d42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613d669190810190614281565b905081811015613d885760405162461bcd60e51b815260040161055690615246565b60405163a9059cbb60e01b81526000906001600160a01b0386169063a9059cbb90613db9908790879060040161503f565b602060405180830381600087803b158015613dd357600080fd5b505af1158015613de7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613e0b9190810190614263565b905080613e2a5760405162461bcd60e51b815260040161055690615266565b6040516370a0823160e01b81526000906001600160a01b038716906370a0823190613e59903090600401614fc5565b60206040518083038186803b158015613e7157600080fd5b505afa158015613e85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613ea99190810190614281565b905083613ebc848363ffffffff61259716565b1461331e5760405162461bcd60e51b8152600401610556906152c6565b60405180608001604052806000815260200160008152602001600081526020016000151581525090565b60405180610180016040528060008152602001613f1e613f7e565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006003811115613f7157fe5b8152600060209091015290565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b80356125dc81615550565b80516125dc81615550565b60008083601f840112613fee57600080fd5b50813567ffffffffffffffff81111561400657600080fd5b6020830191508361014082028301111561401f57600080fd5b9250929050565b80516125dc81615564565b80356125dc8161556d565b80516125dc8161556d565b80516125dc81615576565b600060e0828403121561406457600080fd5b50919050565b600060e0828403121561407c57600080fd5b61408660e061544e565b905060006140948484613fc6565b82525060206140a584848301613fc6565b60208301525060406140b984828501613fc6565b60408301525060606140cd84828501614031565b60608301525060806140e184828501614031565b60808301525060a06140f584828501614031565b60a08301525060c061410984828501614031565b60c08301525092915050565b80356125dc8161557f565b80516125dc8161557f565b60006020828403121561413d57600080fd5b6000612c168484613fc6565b60006020828403121561415b57600080fd5b6000612c168484613fd1565b600080600080600060a0868803121561417f57600080fd5b600061418b8888613fc6565b955050602061419c88828901613fc6565b94505060406141ad88828901613fc6565b93505060606141be88828901613fc6565b92505060806141cf88828901613fc6565b9150509295509295909350565b600080604083850312156141ef57600080fd5b60006141fb8585613fc6565b925050602061420c85828601614031565b9150509250929050565b60008060006060848603121561422b57600080fd5b60006142378686613fc6565b935050602061424886828701614031565b925050604061425986828701614031565b9150509250925092565b60006020828403121561427557600080fd5b6000612c168484614026565b60006020828403121561429357600080fd5b6000612c16848461403c565b6000602082840312156142b157600080fd5b6000612c168484614047565b60008060008061012085870312156142d457600080fd5b60006142e08787614052565b94505060e085013567ffffffffffffffff8111156142fd57600080fd5b61430987828801613fdc565b935093505061010061431d87828801614031565b91505092959194509250565b600060e0828403121561433b57600080fd5b6000612c16848461406a565b60006020828403121561435957600080fd5b6000612c168484614031565b6000806040838503121561437857600080fd5b60006141fb8585614031565b60008060006060848603121561439957600080fd5b60006143a5868661403c565b93505060206143b68682870161403c565b92505060406142598682870161403c565b6000602082840312156143d957600080fd5b6000612c168484614120565b60006143f18383614e12565b50506101400190565b600061440683836144d5565b505060200190565b614417816154fa565b82525050565b614417816154c3565b60006144328385615489565b935061443d82615475565b8060005b858110156144735761445382846154b0565b61445d88826143e5565b975061446883615482565b925050600101614441565b509495945050505050565b60006144898261547e565b6144938185615489565b935061449e83615478565b8060005b838110156144735781516144b688826143fa565b97506144c183615478565b9250506001016144a2565b614417816154ce565b61441781615475565b614417816154d3565b61441781615505565b60006144fb8261547e565b6145058185615489565b9350614515818560208601615510565b61451e8161553c565b9093019392505050565b6000614535601d83615489565b7f4455524154494f4e5f455843454544535f4d41585f4455524154494f4e000000815260200192915050565b600061456e601c83610edf565b7f54496e697469616c697a61626c652e6973496e697469616c697a6564000000008152601c0192915050565b60006145a7601583615489565b74105353d5539517d59053155157d491545552549151605a1b815260200192915050565b60006145d8601683615489565b7513115391125391d7d413d3d317d254d7d4105554d15160521b815260200192915050565b600061460a601983615489565b7f414d4f554e545f455843454544535f4d41585f414d4f554e5400000000000000815260200192915050565b6000614643601e83615489565b7f544f4b454e5f4c4f414e535f56414c55455f4d5553545f42455f5a45524f0000815260200192915050565b600061467c601183615489565b7013505617d313d05397d15610d151511151607a1b815260200192915050565b60006146a9601b83615489565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b60006146e2601683615489565b751313d05397d393d517d050d512559157d3d497d4d15560521b815260200192915050565b6000614714601b83615489565b7f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000815260200192915050565b600061474d601783615489565b7f444f45534e545f4e4545445f4c49515549444154494f4e000000000000000000815260200192915050565b6000614786600f83615489565b6e4c4f414e5f4e4f545f41435449564560881b815260200192915050565b60006147b1601483615489565b7343414e4e4f545f57495448445241575f5a45524f60601b815260200192915050565b60006147e1601283615489565b71141310551193d49357d254d7d4105554d15160721b815260200192915050565b600061480f601883615489565b7f4d4f52455f434f4c4c41544552414c5f52455155495245440000000000000000815260200192915050565b6000614848602183615489565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b600061488b601d83615489565b7f434f4c4c41544552414c5f4445504f53495445445f524543454e544c59000000815260200192915050565b60006148c4601a83615489565b7f434f4c4c41544552414c5f414d4f554e545f544f4f5f48494748000000000000815260200192915050565b60006148fd601b83615489565b7f544f4b454e535f5452414e534645525f46524f4d5f4641494c45440000000000815260200192915050565b6000614936601283615489565b711313d05397d511549354d7d156141254915160721b815260200192915050565b6000614964602e83615489565b7f436f6e747261637420696e7374616e63652068617320616c726561647920626581526d195b881a5b9a5d1a585b1a5e995960921b602082015260400192915050565b60006149b4601883615489565b7f41544d5f4e4f545f464f554e445f464f525f4d41524b45540000000000000000815260200192915050565b60006149ed601f83615489565b7f494e565f42414c414e43455f41465445525f5452414e534645525f46524f4d00815260200192915050565b6000614a26601383615489565b7243414e4e4f545f4445504f5349545f5a45524f60681b815260200192915050565b6000614a55601e83615489565b7f4f5241434c455f4d5553545f434f4e54524143545f4e4f545f454d5054590000815260200192915050565b6000614a8e601783615489565b7f424f52524f5745525f4d5553545f42455f53454e444552000000000000000000815260200192915050565b6000614ac7601683615489565b7521a0a62622a92fa227a2a9a72a2fa7aba72fa627a0a760511b815260200192915050565b6000614af9601983615489565b7f4e4f545f454e4f5547485f544f4b454e535f42414c414e434500000000000000815260200192915050565b6000614b32601883610edf565b7f426173655570677261646561626c652e73657474696e67730000000000000000815260180192915050565b6000614b6b601a83615489565b7f535550504c595f544f5f444542545f455843454544535f4d4158000000000000815260200192915050565b6000614ba4601683615489565b751513d2d15394d7d514905394d1915497d1905253115160521b815260200192915050565b6000614bd6601883615489565b7f434f4e54524143545f4e4f545f494e495449414c495a45440000000000000000815260200192915050565b6000614c0f600c83615489565b6b1313d05397d393d517d4d15560a21b815260200192915050565b6000614c37601b83615489565b7f4e4f545f454e4f5547485f544f4b454e535f414c4c4f57414e43450000000000815260200192915050565b6000614c70601f83615489565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b6000614ca9601c83615489565b7f434f4e54524143545f414c52454144595f494e495449414c495a454400000000815260200192915050565b6000614ce2601a83615489565b7f494e565f42414c414e43455f41465445525f5452414e53464552000000000000815260200192915050565b80516080830190614d1f84826144d5565b506020820151614d3260208501826144d5565b506040820151614d4560408501826144d5565b506060820151611f4360608501826144cc565b60e08201614d668280615492565b614d70848261441d565b50614d7e6020830183615492565b614d8b602085018261441d565b50614d996040830183615492565b614da6604085018261441d565b50614db460608301836154a1565b614dc160608501826144d5565b50614dcf60808301836154a1565b614ddc60808501826144d5565b50614dea60a08301836154a1565b614df760a08501826144d5565b50614e0560c08301836154a1565b611f4360c08501826144d5565b6101408201614e218280615492565b614e2b848261441d565b50614e396020830183615492565b614e46602085018261441d565b50614e5460408301836154a1565b614e6160408501826144d5565b50614e6f60608301836154a1565b614e7c60608501826144d5565b50614e8a60808301836154a1565b614e9760808501826144d5565b50614ea560a08301836154a1565b614eb260a08501826144d5565b50614ec060c08301836154b0565b611f4360c0850182614f3d565b805160c0830190614ede848261441d565b506020820151614ef1602085018261441d565b506040820151614f0460408501826144d5565b506060820151614f1760608501826144d5565b506080820151614f2a60808501826144d5565b5060a0820151611f4360a08501826144d5565b60808201614f4b82806154a1565b614f5584826144d5565b50614f6360208301836154b4565b614f706020850182614fa6565b50614f7e60408301836154a1565b614f8b60408501826144d5565b50614f9960608301836154a1565b611f4360608501826144d5565b614417816154f4565b60006125dc82614561565b60006125dc82614b25565b602081016125dc828461441d565b602081016125dc828461440e565b60608101614fef828661440e565b614ffc60208301856144d5565b612c1660408301846144d5565b60408101615017828561441d565b6134a9602083018461441d565b60608101615032828661441d565b614ffc602083018561441d565b6040810161504d828561441d565b6134a960208301846144d5565b602080825281016125d9818461447e565b602081016125dc82846144cc565b602081016125dc82846144d5565b602081016125dc82846144de565b602080825281016125d981846144f0565b60208082528101610edc81614528565b60208082528101610edc8161459a565b60208082528101610edc816145cb565b60208082528101610edc816145fd565b60208082528101610edc81614636565b60208082528101610edc8161466f565b60208082528101610edc8161469c565b60208082528101610edc816146d5565b60208082528101610edc81614707565b60208082528101610edc81614740565b60208082528101610edc81614779565b60208082528101610edc816147a4565b60208082528101610edc816147d4565b60208082528101610edc81614802565b60208082528101610edc8161483b565b60208082528101610edc8161487e565b60208082528101610edc816148b7565b60208082528101610edc816148f0565b60208082528101610edc81614929565b60208082528101610edc81614957565b60208082528101610edc816149a7565b60208082528101610edc816149e0565b60208082528101610edc81614a19565b60208082528101610edc81614a48565b60208082528101610edc81614a81565b60208082528101610edc81614aba565b60208082528101610edc81614aec565b60208082528101610edc81614b5e565b60208082528101610edc81614b97565b60208082528101610edc81614bc9565b60208082528101610edc81614c02565b60208082528101610edc81614c2a565b60208082528101610edc81614c63565b60208082528101610edc81614c9c565b60208082528101610edc81614cd5565b608081016125dc8284614d0e565b61010081016152f38286614d58565b81810360e083015261385b818486614426565b6040810161501782856144d5565b6040810161532282856144d5565b6134a9602083018461440e565b6060810161533d82866144d5565b614ffc602083018561440e565b6102208101615359828f6144d5565b615366602083018e614ecd565b61537360e083018d6144d5565b61538161010083018c6144d5565b61538f61012083018b6144d5565b61539d61014083018a6144d5565b6153ab6101608301896144d5565b6153b96101808301886144d5565b6153c76101a08301876144d5565b6153d56101c083018661441d565b6153e36101e08301856144e7565b6153f16102008301846144cc565b9d9c50505050505050505050505050565b60a0810161541082886144d5565b61541d60208301876144d5565b61542a60408301866144d5565b61543760608301856144d5565b61544460808301846144d5565b9695505050505050565b60405181810167ffffffffffffffff8111828210171561546d57600080fd5b604052919050565b90565b60200190565b5190565b6101400190565b90815260200190565b60006125d96020840184613fc6565b60006125d96020840184614031565b5090565b60006125d96020840184614115565b6000610edc826154e8565b151590565b6000610edc826154c3565b80610edf81615546565b6001600160a01b031690565b60ff1690565b6000610edc826154d3565b6000610edc826154de565b60005b8381101561552b578181015183820152602001615513565b83811115611f435750506000910152565b601f01601f191690565b600481106114e457fe5b615559816154c3565b81146114e457600080fd5b615559816154ce565b61555981615475565b615559816154d3565b615559816154f456fea365627a7a723158209f6e2380de1386ace31adca0035c9785648aea0611893427f7da9766baaf7bcf6c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "1345:5733:33:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1345:5733:33;;;;;;;",
  "deployedSourceMap": "1345:5733:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8764:2098:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8764:2098:22;;;;;;;;:::i;:::-;;4711:542:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4711:542:33;;;;;;;;:::i;1241:169:29:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1241:169:29;;;:::i;:::-;;;;;;;;;;;;;;;;1999:676:33;;;;;;;;;:::i;2960:26:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2960:26:22;;;:::i;:::-;;;;;;;;15327:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15327:151:22;;;;;;;;:::i;:::-;;;;;;;;2783:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2783:30:22;;;:::i;13942:203::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13942:203:22;;;;;;;;:::i;:::-;;;;;;;;2925:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2925:28:22;;;:::i;16180:518::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;16180:518:22;;;;;;;;:::i;3039:53::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3039:53:22;;;:::i;:::-;;;;;;;;14356:761;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14356:761:22;;;;;;;;:::i;6568:94::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6568:94:22;;;:::i;7398:1019::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7398:1019:22;;;;;;;;:::i;769:214:135:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;769:214:135;;;:::i;6873:272:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6873:272:22;;;;;;;;:::i;15702:184::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15702:184:22;;;;;;;;:::i;2993:39::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2993:39:22;;;:::i;2966:1229:33:-;;;;;;;;;:::i;6138:106:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6138:106:22;;;:::i;2820:30::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2820:30:22;;;:::i;6359:94::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6359:94:22;;;:::i;12711:1003::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12711:1003:22;;;;;;;;:::i;11049:1510::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11049:1510:22;;;;;;;;:::i;1259:263:11:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1259:263:11;;;:::i;3156:50:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3156:50:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3099;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3099:50:22;;;;;;;;:::i;5877:132::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5877:132:22;;;;;;;;:::i;:::-;;;;;;;;8764:2098;8861:6;4194:32;4170:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4170:20:22;;;;:56;;;;;;;;;4162:81;;;;-1:-1:-1;;;4162:81:22;;;;;;;;;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;8958:11:22;;-1:-1:-1;;;;;8958:11:22;2718:33:7;8958:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:135;:18;;1409:1;1392:18;;;;;;;:13;9014::22;;;:5;:13;;;;;:23;:32;-1:-1:-1;;;;;9014:32:22;3484:10;:22;;3476:58;;;;-1:-1:-1;;;3476:58:22;;;;;;;;;9083:13;;;;:5;:13;;;;;:37;;;:53;-1:-1:-1;9083:53:22;9062:117;;;;-1:-1:-1;;;9062:117:22;;;;;;;;;9198:13;;;;:5;:13;;;;;:25;;;9227:3;-1:-1:-1;9198:32:22;9190:63;;;;-1:-1:-1;;;9190:63:22;;;;;;;;;9335:174;9364:10;:8;:10::i;:::-;-1:-1:-1;;;;;9364:34:22;;9424:10;:8;:10::i;:::-;-1:-1:-1;;;;;9424:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9424:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9424:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9424:19:22;;;;;;;;;-1:-1:-1;;;;;9424:43:22;;:45;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9424:45:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9424:45:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9424:45:22;;;;;;;;;9364:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9364:127:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9364:127:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9364:127:22;;;;;;;;;9335:3;;:174;:7;:174;:::i;:::-;9285:13;;;;:5;:13;;;;;:30;;;:224;;9264:300;;;;-1:-1:-1;;;9264:300:22;;;;;;;;;9575:13;;;;:5;:13;;;;;:28;;;:43;;;9628:27;;;:42;;;9794:32;;;;9739:36;;;;;9709:188;;2431:8;;9709:149;;2695:5;;9709:149;;9794:32;9709:67;;9606:12;;9709:67;:29;:67;:::i;:::-;:84;:118;:84;:118;:::i;:::-;:135;:149;:135;:149;:::i;:188::-;9680:13;;;;:5;:13;;;;;:26;;;:217;;;;9907:20;;:53;;-1:-1:-1;;;;9907:53:22;-1:-1:-1;;;9907:53:22;;;10043;;:::i;:::-;10099:48;10131:6;10099:18;:48::i;:::-;10043:104;;10167:14;:37;;;10166:38;10158:75;;;;-1:-1:-1;;;10158:75:22;;;;;;;;;10244:13;;;;:5;:13;;;;;10274:3;10244:27;;;;:33;10310:21;10250:6;10310:13;:21::i;:::-;10287:13;;;;:5;:13;;;;;;;:20;;:44;;-1:-1:-1;;;;;;10287:44:22;-1:-1:-1;;;;;10287:44:22;;;;;;;;10403:11;;:58;;-1:-1:-1;;;10403:58:22;;:11;;;;:22;;:58;;10426:12;;10440:20;;10403:58;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10403:58:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;10488:13:22;;;;:5;:13;;;;;;;:20;;;10472:71;;-1:-1:-1;;;10472:71:22;;-1:-1:-1;;;;;10488:20:22;;;;-1:-1:-1;10472:48:22;;:71;;10529:4;;10494:6;;10472:71;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10472:71:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10472:71:22;;;;10554:10;:8;:10::i;:::-;-1:-1:-1;;;;;10554:25:22;;10593:11;;;;;;;;;-1:-1:-1;;;;;10593:11:22;-1:-1:-1;;;;;10593:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10593:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10593:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10593:26:22;;;;;;;;;10633:4;-1:-1:-1;;;;;10633:20:22;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10633:22:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10633:22:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10633:22:22;;;;;;;;;10669:12;10554:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10554:137:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;10799:13:22;;;;:5;:13;;;;;;;:20;;;;;10753:23;;;:32;10707:148;;-1:-1:-1;;;;;10799:20:22;;;;-1:-1:-1;10753:32:22;;;10805:6;;10707:148;;;;10833:12;;10707:148;;;;;;;;;;3544:1;1466::135;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:135;;;;;;;;;2788:1:7;2391;8764:2098:22;;;:::o;4711:542:33:-;706:13:29;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:29;;;;;;;;;4963:68:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4963:38:33;;;:68;:38;:68;:::i;:::-;5042:153;5067:18;5099;5131:25;5170:15;5042:11;:153::i;:::-;5206:15;:40;;-1:-1:-1;;;;;;5206:40:33;-1:-1:-1;;;;;5206:40:33;;;;;;;;;;-1:-1:-1;;;;4711:542:33:o;1241:169:29:-;1285:10;1307:12;421:55;;;;;;;;;;;;;;;1383:11;;1360:44;-1:-1:-1;;1360:44:29:o;1999:676:33:-;1648:9;:14;1640:57;;;;-1:-1:-1;;;1640:57:33;;;;;;;;;2184:6;4581:32:22;4557:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4557:20:22;;;;:56;;;;;;;;;:130;;;-1:-1:-1;4657:30:22;4633:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4633:20:22;;;;:54;;;;;;;;;4557:130;4536:199;;;;-1:-1:-1;;;4536:199:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;2281:11:33;;-1:-1:-1;;;;;2281:11:33;2718:33:7;2281:11:33;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;2346:13:33;;;;:5;:13;;;;;;;;;:23;;:32;2309:120;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2309:23:33;;;;2346:32;;2309:120;:23;:120;:::i;:::-;2456:1;2447:6;:10;2439:42;;;;-1:-1:-1;;;2439:42:33;;;;;;;;;2575:32;2592:6;2600;2575:16;:32::i;:::-;2651:8;-1:-1:-1;;;;;2623:45:33;2643:6;2623:45;2661:6;2623:45;;;;;;;;;;;;;;;2391:1:7;1707::33;1999:676;;;:::o;2960:26:22:-;;;-1:-1:-1;;;;;2960:26:22;;:::o;15327:151::-;15386:7;15443:13;;;:5;:13;;;;;:27;;;;15412:26;;;;;:59;;;:30;:59;:::i;:::-;15405:66;;15327:151;;;;:::o;2783:30::-;;;;:::o;13942:203::-;14033:55;;:::i;:::-;14111:27;14131:6;14111:19;:27::i;2925:28::-;;;;:::o;16180:518::-;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;964:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;964:28:11;;993:10;964:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;964:40:11;;;;16368:27:22;:14;-1:-1:-1;;;;;16368:25:22;;:27::i;:::-;16360:70;;;;-1:-1:-1;;;16360:70:22;;;;;;;;;16473:11;;16495:79;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16473:11:22;;;;16495:79;;16473:11;;16528:14;;16495:79;:32;:79;:::i;:::-;16585:11;:28;;-1:-1:-1;;;;;;16585:28:22;-1:-1:-1;;;;;16585:28:22;;;;;;;;;16629:62;;16585:28;;16629:62;;;16648:10;;16629:62;;-1:-1:-1;;16629:62:22;1014:1:11;16180:518:22;:::o;3039:53::-;;;-1:-1:-1;;;;;3039:53:22;;:::o;14356:761::-;14419:4;14452:11;:9;:11::i;:::-;:62;;;-1:-1:-1;14501:11:22;;14479:35;;-1:-1:-1;;;;;14501:11:22;14479:13;:35::i;:::-;14452:132;;;-1:-1:-1;14554:30:22;14530:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;14530:20:22;;;;:54;;;;;;;;;;14452:132;14435:197;;;-1:-1:-1;14616:5:22;14609:12;;14435:197;14642:17;14662:13;;;:5;:13;;;;;:27;;;;14718:32;;;;;14662:27;;14803:3;14777:23;14662:27;14718:32;14777:23;:13;:23;:::i;:::-;:29;14760:46;;14820:9;14816:51;;;14852:4;14845:11;;;;;;;14816:51;14877:21;14901:13;;;:5;:13;;;;;:20;;;-1:-1:-1;;;;;14901:20:22;14935:29;;14931:113;;15003:13;-1:-1:-1;;;;;14987:44:22;;:46;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14987:46:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14987:46:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14987:46:22;;;;;;;;;14980:53;;;;;;;;14931:113;15061:26;15080:6;15061:18;:26::i;:::-;:49;;;;14356:761;-1:-1:-1;;;;;;14356:761:22:o;6568:94::-;6635:11;;:20;;;-1:-1:-1;;;6635:20:22;;;;6609:7;;-1:-1:-1;;;;;6635:11:22;;:18;;:20;;;;;;;;;;;;;;:11;:20;;;5:2:-1;;;;30:1;27;20:12;5:2;6635:20:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6635:20:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6635:20:22;;;;;;;;;6628:27;;6568:94;:::o;7398:1019::-;7499:6;4581:32;4557:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4557:20:22;;;;:56;;;;;;;;;:130;;;-1:-1:-1;4657:30:22;4633:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4633:20:22;;;;:54;;;;;;;;;4557:130;4536:199;;;;-1:-1:-1;;;4536:199:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;7596:11:22;;-1:-1:-1;;;;;7596:11:22;2718:33:7;7596:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:135;:18;;1409:1;1392:18;;;;;;;-1:-1:-1;7669:13:22;;;:5;:13;;;;;:23;:32;-1:-1:-1;;;;;7669:32:22;7655:10;:46;7647:81;;;;-1:-1:-1;;;7647:81:22;;;;;;;;;7755:1;7746:6;:10;7738:43;;;;-1:-1:-1;;;7738:43:22;;;;;;;;;7836:53;;:::i;:::-;7892:48;7924:6;7892:18;:48::i;:::-;8100:39;;;;8057:25;;7836:104;;-1:-1:-1;8030:24:22;;8057:92;;;:29;:92;:::i;:::-;8030:119;;8187:6;8167:16;:26;;8159:65;;;;-1:-1:-1;;;8159:65:22;;;;;;;;;8302:45;8320:6;8328;8336:10;8302:17;:45::i;:::-;8391:10;-1:-1:-1;;;;;8363:47:22;8383:6;8363:47;8403:6;8363:47;;;;;;;;;;;;;;;1466:1:135;;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:135;;;;;;;;769:214;1024:12:136;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:136;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:136;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:136;;;;;1225:18;1213:4;1225:18;;;1170:80;975:1:135;959:13;:17;1264:55:136;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:136;;;1264:55;769:214:135;:::o;6873:272:22:-;6935:4;7025:10;:8;:10::i;:::-;-1:-1:-1;;;;;7025:34:22;;7077:10;:8;:10::i;:::-;-1:-1:-1;;;;;7077:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7077:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7077:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7077:19:22;;;;;;;;;-1:-1:-1;;;;;7077:45:22;;:47;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7077:47:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7077:47:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7077:47:22;;;;;;;;;7025:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7025:113:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7025:113:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7025:113:22;;;;;;;;;6970:13;;;;:5;:13;;;;;:39;;;:168;;;-1:-1:-1;6873:272:22;;;:::o;15702:184::-;15792:38;;:::i;:::-;15853:26;15872:6;15853:18;:26::i;2993:39::-;;;-1:-1:-1;;;;;2993:39:22;;:::o;2966:1229:33:-;1648:9;:14;1640:57;;;;-1:-1:-1;;;1640:57:33;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;3263:16:33;;;;:7;:16;;;3484:10:22;-1:-1:-1;;;;;3484:22:22;;;3476:58;;;;-1:-1:-1;;;3476:58:22;;;;;;;;;5074:679;;;;;;;3310:7:33;5074:679:22;;;5159:23;5185:10;:8;:10::i;:::-;-1:-1:-1;;;;;5185:34:22;;5233:10;:8;:10::i;:::-;-1:-1:-1;;;;;5233:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5233:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5233:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5233:19:22;;;;;;;;;-1:-1:-1;;;;;5233:49:22;;:51;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5233:51:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5233:51:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5233:51:22;;;;;;;;;5185:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5185:109:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5185:109:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5185:109:22;;;;;;;;;5159:135;;5331:11;:20;;;5312:15;:39;;5304:81;;;;-1:-1:-1;;;5304:81:22;;;;;;;;;5396:25;5424:10;:8;:10::i;:::-;-1:-1:-1;;;;;5424:31:22;;5469:11;;;;;;;;;-1:-1:-1;;;;;5469:11:22;-1:-1:-1;;;;;5469:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5469:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5469:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5469:26:22;;;;;;;;;5509:11;:18;;;5424:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5424:113:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5424:113:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5424:113:22;;;;;;;;;5396:141;;5556:20;5555:21;5547:59;;;;-1:-1:-1;;;5547:59:22;;;;;;;;;5638:45;5664:11;:18;;;5638:25;:45::i;:::-;5617:118;;;;-1:-1:-1;;;5617:118:22;;;;;;;;;3333:14:33;3350:24;:22;:24::i;:::-;3504:18;;:53;;-1:-1:-1;;;3504:53:33;;3333:41;;-1:-1:-1;3399:20:33;;;;;;-1:-1:-1;;;;;3504:18:33;;;;:33;;:53;;3538:7;;3547:9;;;;3504:53;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3504:53:33;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3504:53:33;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3504:53:33;;;;;;;;;3385:172;;-1:-1:-1;3385:172:33;-1:-1:-1;3385:172:33;-1:-1:-1;3584:143:33;3608:6;3584:143;;;;;;;3628:7;3584:143;;;3649:12;3675:15;3704:13;3584:10;:143::i;:::-;3568:13;;;;:5;:13;;;;;;;;;:159;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3568:159:33;;;-1:-1:-1;;;;;3568:159:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;;:159;;;-1:-1:-1;;;;3568:159:33;;;;-1:-1:-1;;;3568:159:33;;;;;;;;;;;;;;-1:-1:-1;3568:159:33;;;;;;;;;;;;;;;-1:-1:-1;;;3568:159:33;-1:-1:-1;;;;3568:159:33;;;;;;;;;3742:20;;3738:165;;3850:42;3867:6;3875:16;3850;:42::i;:::-;3913:13;:31;3927:16;;;;:7;:16;;;-1:-1:-1;;;;;3913:31:33;;;;;;;;;;;;;-1:-1:-1;3913:31:33;;;27:10:-1;;39:1;23:18;;45:23;;3913:44:33;;;;;;;;;;3968:220;3950:6;3968:220;;;;;;;4059:7;3968:220;;;4080:12;4106:15;4135:13;4162:16;3968:57;:220::i;:::-;5745:1:22;;;;3544;;;2391::7;2966:1229:33;;;;:::o;6138:106:22:-;6211:11;;:26;;;-1:-1:-1;;;6211:26:22;;;;6185:7;;-1:-1:-1;;;;;6211:11:22;;:24;;:26;;;;;;;;;;;;;;:11;:26;;;5:2:-1;;;;30:1;27;20:12;2820:30:22;;;-1:-1:-1;;;;;2820:30:22;;:::o;6359:94::-;6426:11;;:20;;;-1:-1:-1;;;6426:20:22;;;;6400:7;;-1:-1:-1;;;;;6426:11:22;;:18;;:20;;;;;;;;;;;;;;:11;:20;;;5:2:-1;;;;30:1;27;20:12;12711:1003:22;12786:6;3830:30;3806:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;3806:20:22;;;;:54;;;;;;;;;3785:116;;;;-1:-1:-1;;;3785:116:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;12883:11:22;;-1:-1:-1;;;;;12883:11:22;2718:33:7;12883:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:135;:18;;1409:1;1392:18;;;;;12934:55:22;;:::i;:::-;12992:49;13025:6;12992:19;:49::i;:::-;12934:107;;13059:15;:26;;;13051:62;;;;-1:-1:-1;;;13051:62:22;;;;;;;;;13124:13;;;;:5;:13;;;;;:20;;:53;;-1:-1:-1;;;;13124:53:22;-1:-1:-1;;;13124:53:22;-1:-1:-1;;;;13187:31:22;-1:-1:-1;;;13187:31:22;;;13305:26;;13285:59;;13124:13;;13333:10;13285:11;:59::i;:::-;13413:11;;13444:33;;;;;13413:77;;-1:-1:-1;;;13413:77:22;;-1:-1:-1;;;;;13413:11:22;;;;:30;;:77;;13479:10;;13413:77;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13413:77:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;13554:13:22;;;;:5;:13;;;;;;;:23;;:32;13624:26;;13664:33;;;;13506:201;;-1:-1:-1;;;;;13554:32:22;;;;-1:-1:-1;13560:6:22;;13506:201;;;;13600:10;;13624:26;;13506:201;;;;;;;;;;1466:1:135;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:135;;;;;;;;;2788:1:7;2391;12711:1003:22;;:::o;11049:1510::-;11132:6;3830:30;3806:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;3806:20:22;;;;:54;;;;;;;;;3785:116;;;;-1:-1:-1;;;3785:116:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;11229:11:22;;-1:-1:-1;;;;;11229:11:22;2718:33:7;11229:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:135;:18;;1409:1;1392:18;;;;;11288:10:22;11280:44;;;;-1:-1:-1;;;11280:44:22;;;;;;;;;11398:6;11382:13;11434:20;11447:6;11434:12;:20::i;:::-;11414:40;;11480:5;11468:9;:17;11464:65;;;11509:9;11501:17;;11464:65;11597:20;:9;11611:5;11597:20;:13;:20;:::i;:::-;11585:32;;11627:23;11636:6;11644:5;11627:8;:23::i;:::-;11738:14;11734:416;;11768:13;;;;:5;:13;;;;;:20;;;:53;;-1:-1:-1;;;;11768:53:22;-1:-1:-1;;;11768:53:22;;;11863:24;;;;-1:-1:-1;11945:23:22;;;:32;11901:77;;11768:13;;11863:24;;-1:-1:-1;;;;;11945:32:22;11901:17;:77::i;:::-;12059:13;;;;:5;:13;;;;;;;:23;;:32;11998:141;;-1:-1:-1;;;;;12059:32:22;;;;12065:6;;11998:141;;;;12109:16;;11998:141;;;;;;;;;;11734:416;;12204:11;;:36;;-1:-1:-1;;;12204:36:22;;-1:-1:-1;;;;;12204:11:22;;;;:17;;:36;;12222:5;;12229:10;;12204:36;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12204:36:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12204:36:22;;;;12251:10;:8;:10::i;:::-;-1:-1:-1;;;;;12251:28:22;;12293:11;;;;;;;;;-1:-1:-1;;;;;12293:11:22;-1:-1:-1;;;;;12293:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12293:26:22;;;;;;;;;12333:4;-1:-1:-1;;;;;12333:20:22;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12333:22:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12333:22:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12333:22:22;;;;;;;;;12369:5;12251:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12251:133:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;12444:13:22;;;;:5;:13;;;;;;;:23;;:32;12400:152;;-1:-1:-1;;;;;12444:32:22;;;;-1:-1:-1;12450:6:22;;12400:152;;;;12490:5;;12509:10;;12533:9;;12400:152;;1259:263:11;1300:17;1329:23;1363:12;555:37;;;;;;;;;;;;;;;1443:11;;-1:-1:-1;;;1259:263:11;:::o;3156:50:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3156:50:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3156:50:22;;;;;-1:-1:-1;;;3156:50:22;;;;:::o;3099:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5877:132::-;-1:-1:-1;;;;;5979:23:22;;;;;;:13;:23;;;;;;;;;5972:30;;;;;;;;;;;;;;;;;5944:16;;5972:30;;;5979:23;5972:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5877:132;;;:::o;4524:95:7:-;4568:4;4591:10;:8;:10::i;:::-;-1:-1:-1;;;;;4591:19:7;;:21;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4591:21:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4591:21:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4591:21:7;;;;;;;;4237:138;4304:4;4327:10;:8;:10::i;:::-;-1:-1:-1;;;;;4327:28:7;;4356:11;4327:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4327:41:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4327:41:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4327:41:7;;;;;;;;1274:134:126;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;;:::o;2159:459::-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:126;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:126;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;17847:624:22:-;17938:38;;:::i;:::-;17992:18;18013:13;;;:5;:13;;;;;:24;;;;17992:18;18103:54;18019:6;18103:24;:54::i;:::-;18186:278;;;;;;;;;;;;;;;;;;;;;;;18418:31;;;;18186:278;;;;-1:-1:-1;18186:278:22;;17847:624;-1:-1:-1;;;17847:624:22:o;28918:152::-;28975:7;29001:10;:8;:10::i;:::-;-1:-1:-1;;;;;29001:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29001:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29001:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;29001:26:22;;;;;;;;;-1:-1:-1;;;;;29001:39:22;;29049:4;29056:6;29001:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29001:62:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29001:62:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;29001:62:22;;;;;;;;4625:115:7;4668:21;4708:10;:8;:10::i;:::-;-1:-1:-1;;;;;4708:23:7;;:25;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4708:25:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4708:25:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4708:25:7;;;;;;;;1583:127:105;1677:16;1688:4;1677:10;:16::i;:::-;1695:7;1669:34;;;;;-1:-1:-1;;;1669:34:105;;;;;;;;;;;1583:127;;:::o;19636:669:22:-;706:13:29;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:29;;;;;;;;;19849:60:22;;;;;;;;;;;;-1:-1:-1;;;19849:60:22;;;;;;-1:-1:-1;;;;;19849:34:22;;;:60;:34;:60;:::i;:::-;19919:66;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19919:34:22;;;:66;:34;:66;:::i;:::-;19995:72;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19995:41:22;;;:72;:41;:72;:::i;:::-;20078:28;20090:15;20078:11;:28::i;:::-;-1:-1:-1;20117:11:22;:32;;-1:-1:-1;;;;;20117:32:22;;;-1:-1:-1;;;;;;20117:32:22;;;;;;;20159:11;:54;;;;;;;;;;;;;;;20223:18;:75;;;;;;;;;;;19636:669::o;2303:177:105:-;2441:22;2451:4;2457:5;2441:9;:22::i;:::-;2465:7;2433:40;;;;;-1:-1:-1;;;2433:40:105;;;;;;;;;6001:295:33;6137:38;6160:6;6168;6137:22;:38::i;:::-;6241:48;6270:10;6282:6;6241:28;:48::i;:::-;6001:295;;:::o;834:176:126:-;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:126;;;;;;;;24159:731:22;24251:55;;:::i;:::-;24322:18;24343:13;;;:5;:13;;;;;:24;;;;24405:10;:8;:10::i;:::-;-1:-1:-1;;;;;24405:34:22;;24453:10;:8;:10::i;:::-;-1:-1:-1;;;;;24453:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24453:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24453:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;24453:19:22;;;;;;;;;-1:-1:-1;;;;;24453:47:22;;:49;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24453:49:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24453:49:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;24453:49:22;;;;;;;;;24405:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24405:107:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24405:107:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;24405:107:22;;;;;;;;;24377:135;;24522:26;24551:30;24570:10;24551:18;:30::i;:::-;24609:274;;;;;;;;;;;;;;;;;24522:59;;-1:-1:-1;24609:274:22;;24813:59;2695:5;24813:41;24522:59;24836:17;24813:41;:22;:41;:::i;:59::-;24609:274;;;;24668:24;24685:6;24668:16;:24::i;:::-;24609:274;;;;24591:292;24159:731;-1:-1:-1;;;;;24159:731:22:o;686:610:133:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:133;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:133:o;2749:183:105:-;2890:25;2903:4;2909:5;2890:12;:25::i;5485:314:33:-;5638:15;;:27;;5658:6;5638:27;:19;:27;:::i;:::-;5620:15;:45;5702:13;;;;:5;:13;;;;;:24;;;:36;;5731:6;5702:36;:28;:36;:::i;:::-;5675:13;;;;:5;:13;;;;;:24;;:63;5749:43;5774:9;5785:6;5749:24;:43::i;1409:498:136:-;1820:4;1864:17;1895:7;1409:498;:::o;27947:759:22:-;28052:4;28072:27;28102:10;:8;:10::i;:::-;-1:-1:-1;;;;;28102:22:22;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28102:24:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28102:24:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;28102:24:22;;;;;;;;;-1:-1:-1;;;;;28102:40:22;;28156:11;;;;;;;;;-1:-1:-1;;;;;28156:11:22;-1:-1:-1;;;;;28156:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28156:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28156:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;28156:26:22;;;;;;;;;28196:15;;28102:119;;-1:-1:-1;;;;;;28102:119:22;;;;;;;;;;-1:-1:-1;;;;;28196:15:22;;28102:119;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28102:119:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28102:119:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;28102:119:22;;;;;;;;;28072:149;-1:-1:-1;;;;;;28239:35:22;;28231:72;;;;-1:-1:-1;;;28231:72:22;;;;;;;;;28347:102;;-1:-1:-1;;;28347:102:22;;28313:31;;-1:-1:-1;;;;;28347:74:22;;;;;:102;;-1:-1:-1;;;28422:26:22;28347:102;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28347:102:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28347:102:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;28347:102:22;;;;;;;;;28313:136;;28459:33;28495:10;:8;:10::i;:::-;-1:-1:-1;;;;;28495:29:22;;28538:11;;;;;;;;;-1:-1:-1;;;;;28538:11:22;-1:-1:-1;;;;;28538:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28538:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28538:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;28538:26:22;;;;;;;;;28578:15;;28495:135;;-1:-1:-1;;;;;;28495:135:22;;;;;;;;;;-1:-1:-1;;;;;28578:15:22;;28607:13;;28495:135;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28495:135:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28495:135:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;28495:135:22;;;;;;;;;28647:52;;;;;;27947:759;-1:-1:-1;;;;27947:759:22:o;25043:159::-;25136:13;;25175:20;25136:13;25193:1;25175:20;:17;:20;:::i;:::-;25159:13;:36;25043:159;:::o;25703:1282::-;25919:24;;:::i;:::-;25955:23;25981:10;:8;:10::i;:::-;-1:-1:-1;;;;;25981:34:22;;26029:10;:8;:10::i;:::-;-1:-1:-1;;;;;26029:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26029:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26029:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26029:19:22;;;;;;;;;-1:-1:-1;;;;;26029:45:22;;:47;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26029:47:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26029:47:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26029:47:22;;;;;;;;;25981:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25981:105:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25981:105:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25981:105:22;;;;;;;;;25955:131;-1:-1:-1;26096:19:22;26118:24;:3;25955:131;26118:24;:7;:24;:::i;:::-;26096:46;;26171:807;;;;;;;;26211:6;26171:807;;;;26246:340;;;;;;;;26301:7;:16;;;-1:-1:-1;;;;;26246:340:22;;;;;26350:7;:17;;;-1:-1:-1;;;;;26246:340:22;;;;;26403:12;26246:340;;;;26454:15;26246:340;;;;26506:13;26246:340;;;;26551:7;:16;;;26246:340;;;26171:807;;;;26617:11;26171:807;;;;26661:1;26171:807;;;;26692:1;26171:807;;;;26729:1;26171:807;;;;26763:1;26171:807;;;;26796:1;26171:807;;;;26831:1;26171:807;;;;26866:3;-1:-1:-1;;;;;26171:807:22;;;;;26896:32;26171:807;;;;;;;;;;26958:5;26171:807;;;;;26152:826;25703:1282;-1:-1:-1;;;;;;;;25703:1282:22:o;26991:684::-;27364:7;:17;;;-1:-1:-1;;;;;27288:254:22;27334:7;:16;;;-1:-1:-1;;;;;27288:254:22;27314:6;27288:254;27395:12;27421:15;27450:13;27477:7;:16;;;27507:5;:13;27513:6;27507:13;;;;;;;;;;;:25;;;27288:254;;;;;;;;;;;;;;;;;;;27556:19;;27552:117;;27624:7;:16;;;-1:-1:-1;;;;;27596:62:22;27616:6;27596:62;27642:15;27596:62;;;;;;;;;;;;;;;27552:117;26991:684;;;;;;:::o;16907:317::-;17072:3;17040:13;;;:5;:13;;;;;:20;;;-1:-1:-1;;;;;17040:20:22;:36;17036:127;;17108:13;;;;:5;:13;;;;;;;:20;;;17092:60;;-1:-1:-1;;;17092:60:22;;-1:-1:-1;;;;;17108:20:22;;;;17092:49;;:60;;17142:9;;17092:60;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17092:60:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17092:60:22;;;;17036:127;17173:44;17191:6;17199;17207:9;17173:17;:44::i;20985:461::-;21065:13;;;;:5;:13;;;;;:27;;;21057:35;;21053:387;;;21108:17;21173:13;;;:5;:13;;;;;:27;;;21128:5;;21159:42;;21128:5;;21159:42;:13;:42;:::i;:::-;21245:1;21215:13;;;:5;:13;;;;;:27;;;:31;;;;21289:26;;;21147:54;;-1:-1:-1;21289:41:22;;21147:54;21289:41;:30;:41;:::i;:::-;21260:13;;;;:5;:13;;;;;:26;;:70;-1:-1:-1;21053:387:22;;;21391:13;;;;:5;:13;;;;;:27;;;:38;;21423:5;21391:38;:31;:38;:::i;:::-;21361:13;;;;:5;:13;;;;;:27;;:68;20985:461;;:::o;1732:187:126:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:126;;;;;;;;;;-1:-1:-1;;1888:5:126;;;1732:187;;;;;;:::o;3718:338::-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:126;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:126:o;18753:460:22:-;18850:29;18881:32;18981:29;19013:36;19042:6;19013:28;:36::i;:::-;18981:68;;19141:21;19164:41;19183:21;19164:18;:41::i;:::-;19133:73;;;;;18753:460;;;:::o;1288:108:105:-;-1:-1:-1;;;;;1368:21:105;;;;1288:108::o;3702:292:7:-;706:13:29;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:29;;;;;;;;;3786:60:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3786:31:7;;;:60;:31;:60;:::i;:::-;3864:28;:15;-1:-1:-1;;;;;3864:26:7;;:28::i;:::-;3856:68;;;;-1:-1:-1;;;3856:68:7;;;;;;;;;3935:13;:11;:13::i;:::-;3958:29;3971:15;3958:12;:29::i;681:114:105:-;-1:-1:-1;;;;;775:13:105;;;;;;;681:114::o;20507:248:22:-;20602:15;;:27;;20622:6;20602:27;:19;:27;:::i;:::-;20584:15;:45;20666:13;;;;:5;:13;;;;;:24;;;:36;;20695:6;20666:36;:28;:36;:::i;:::-;20639:13;;;;:5;:13;;;;;;:24;;;:63;;;;-1:-1:-1;20745:3:22;20712:30;;;;:36;20507:248::o;6920:156:33:-;7021:15;;7007:62;;-1:-1:-1;;;;;7021:15:33;7056:4;7062:6;7007:62;:48;:62;:::i;22552:485:22:-;22622:7;22722:26;22751:71;22765:11;;;;;;;;;-1:-1:-1;;;;;22765:11:22;-1:-1:-1;;;;;22765:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22765:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22765:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;22765:26:22;;;;;;;;;-1:-1:-1;;;;;22751:69:22;;:71::i;:::-;22722:100;;22832:31;22911:11;;;;;;;;;-1:-1:-1;;;;;22911:11:22;-1:-1:-1;;;;;22887:52:22;;:54;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22887:54:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22887:54:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;22887:54:22;;;;;;;;;22832:119;-1:-1:-1;22968:62:22;22832:119;22968:33;:9;22982:18;22968:33;:13;:33;:::i;1018:117:105:-;-1:-1:-1;;;;;1115:13:105;;;;;;;;1018:117::o;6525:158:33:-;6627:15;;6613:63;;-1:-1:-1;;;;;6627:15:33;6658:9;6669:6;6613:63;:44;:63;:::i;21661:655:22:-;21762:7;21825:13;;;:5;:13;;;;;:20;;;-1:-1:-1;;;21825:20:22;;;;21762:7;21904:32;21887:13;:49;;;;;;;;;21883:286;;;-1:-1:-1;21965:13:22;;;;:5;:13;;;;;:37;;;21883:286;;;22040:30;22023:13;:47;;;;;;;;;22019:150;;;22099:20;22112:6;22099:12;:20::i;:::-;22086:33;;22019:150;;;22157:1;22150:8;;;;;;22019:150;22178:23;22204:13;;;:5;:13;;;;;:39;;;22260:49;2695:5;22260:31;:10;22204:39;22260:31;:14;:31;:::i;:49::-;22253:56;21661:655;-1:-1:-1;;;;;21661:655:22:o;23294:637::-;23366:7;23555:26;23584:71;23598:11;;;;;;;;;-1:-1:-1;;;;;23598:11:22;-1:-1:-1;;;;;23598:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;23584:71:22;23555:100;;23665:31;23744:11;;;;;;;;;-1:-1:-1;;;;;23744:11:22;-1:-1:-1;;;;;23720:52:22;;:54;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23720:54:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23720:54:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;23720:54:22;;;;;;;;;23665:119;-1:-1:-1;23794:16:22;23813:86;23871:18;23813:40;:11;23665:119;23813:40;:15;:40;:::i;1509:171:29:-;1551:12;421:55;;;;;;;;;;;;;;;1608:4;1645:19;;-1:-1:-1;1631:43:29:o;2374:410:11:-;2525:32;2533:10;:8;:10::i;:::-;-1:-1:-1;;;;;2525:30:11;;:32::i;:::-;2521:69;;;2573:7;;2521:69;2607:28;:15;-1:-1:-1;;;;;2607:26:11;;:28::i;:::-;2599:68;;;;-1:-1:-1;;;2599:68:11;;;;;;;;;2678:12;555:37;;;;;;;;;;;;;;;2739:29;;;-1:-1:-1;2725:53:11;:::o;2161:679:107:-;2314:35;;-1:-1:-1;;;2314:35:107;;2287:24;;-1:-1:-1;;;;;2314:14:107;;;;;:35;;2329:4;;2343;;2314:35;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2314:35:107;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2314:35:107;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2314:35:107;;;;;;;;;2287:62;;2387:6;2367:16;:26;;2359:66;;;;-1:-1:-1;;;2359:66:107;;;;;;;;;2461:29;;-1:-1:-1;;;2461:29:107;;2436:22;;-1:-1:-1;;;;;2461:14:107;;;;;:29;;2484:4;;2461:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2461:29:107;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2461:29:107;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2461:29:107;;;;;;;;;2436:54;;2500:23;2526:4;-1:-1:-1;;;;;2526:17:107;;2544:4;2558;2565:6;2526:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2526:46:107;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2526:46:107;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2526:46:107;;;;;;;;;2500:72;;2590:18;2582:58;;;;-1:-1:-1;;;2582:58:107;;;;;;;;;2674:29;;-1:-1:-1;;;2674:29:107;;2651:20;;-1:-1:-1;;;;;2674:14:107;;;;;:29;;2697:4;;2674:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2674:29:107;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2674:29:107;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2674:29:107;;;;;;;;;2651:52;-1:-1:-1;2770:6:107;2734:32;2651:52;2751:14;2734:32;:16;:32;:::i;:::-;:42;2713:120;;;;-1:-1:-1;;;2713:120:107;;;;;;;;;2161:679;;;;;;;:::o;710:155::-;777:7;796:14;813:4;-1:-1:-1;;;;;813:13:107;;:15;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;813:15:107;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;813:15:107;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;813:15:107;;;;;;;;;845:13;;514:2;845:13;;710:155;-1:-1:-1;;;710:155:107:o;1202:539::-;1354:29;;-1:-1:-1;;;1354:29:107;;1329:22;;-1:-1:-1;;;;;1354:14:107;;;;;:29;;1377:4;;1354:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1354:29:107;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1354:29:107;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1354:29:107;;;;;;;;;1329:54;;1419:6;1401:14;:24;;1393:62;;;;-1:-1:-1;;;1393:62:107;;;;;;;;;1488:32;;-1:-1:-1;;;1488:32:107;;1466:19;;-1:-1:-1;;;;;1488:13:107;;;;;:32;;1502:9;;1513:6;;1488:32;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1488:32:107;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1488:32:107;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1488:32:107;;;;;;;;;1466:54;;1538:14;1530:49;;;;-1:-1:-1;;;1530:49:107;;;;;;;;;1613:29;;-1:-1:-1;;;1613:29:107;;1590:20;;-1:-1:-1;;;;;1613:14:107;;;;;:29;;1636:4;;1613:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1613:29:107;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1613:29:107;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1613:29:107;;;;;;;;;1590:52;-1:-1:-1;1697:6:107;1661:32;:14;1590:52;1661:32;:18;:32;:::i;:::-;:42;1653:81;;;;-1:-1:-1;;;1653:81:107;;;;;;;;1345:5733:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1345:5733:33;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;1345:5733:33;;;;;;-1:-1:-1;;;;;1345:5733:33;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;479:383;;;638:3;631:4;623:6;619:17;615:27;605:2;;656:1;653;646:12;605:2;-1:-1;676:20;;716:18;705:30;;702:2;;;748:1;745;738:12;702:2;782:4;774:6;770:17;758:29;;835:3;825:6;817;813:19;803:8;799:34;796:43;793:2;;;852:1;849;842:12;793:2;598:264;;;;;;870:128;945:13;;963:30;945:13;963:30;;1005:130;1072:20;;1097:33;1072:20;1097:33;;1142:134;1220:13;;1238:33;1220:13;1238:33;;1283:198;1393:13;;1411:65;1393:13;1411:65;;2244:164;;2360:3;2351:6;2346:3;2342:16;2338:26;2335:2;;;2377:1;2374;2367:12;2335:2;-1:-1;2396:6;2328:80;-1:-1;2328:80;2453:1245;;2572:4;2560:9;2555:3;2551:19;2547:30;2544:2;;;2590:1;2587;2580:12;2544:2;2608:20;2623:4;2608:20;;;2599:29;-1:-1;2682:1;2714:57;2767:3;2747:9;2714:57;;;2689:83;;-1:-1;2838:2;2871:49;2916:3;2892:22;;;2871:49;;;2864:4;2857:5;2853:16;2846:75;2793:139;2994:2;3027:49;3072:3;3063:6;3052:9;3048:22;3027:49;;;3020:4;3013:5;3009:16;3002:75;2942:146;3146:2;3179:49;3224:3;3215:6;3204:9;3200:22;3179:49;;;3172:4;3165:5;3161:16;3154:75;3098:142;3292:3;3326:49;3371:3;3362:6;3351:9;3347:22;3326:49;;;3319:4;3312:5;3308:16;3301:75;3250:137;3441:3;3475:49;3520:3;3511:6;3500:9;3496:22;3475:49;;;3468:4;3461:5;3457:16;3450:75;3397:139;3593:3;3627:49;3672:3;3663:6;3652:9;3648:22;3627:49;;;3620:4;3613:5;3609:16;3602:75;3546:142;2538:1160;;;;;3983:126;4048:20;;4073:31;4048:20;4073:31;;4116:130;4192:13;;4210:31;4192:13;4210:31;;4253:241;;4357:2;4345:9;4336:7;4332:23;4328:32;4325:2;;;4373:1;4370;4363:12;4325:2;4408:1;4425:53;4470:7;4450:9;4425:53;;4501:263;;4616:2;4604:9;4595:7;4591:23;4587:32;4584:2;;;4632:1;4629;4622:12;4584:2;4667:1;4684:64;4740:7;4720:9;4684:64;;5035:743;;;;;;5207:3;5195:9;5186:7;5182:23;5178:33;5175:2;;;5224:1;5221;5214:12;5175:2;5259:1;5276:53;5321:7;5301:9;5276:53;;;5266:63;;5238:97;5366:2;5384:53;5429:7;5420:6;5409:9;5405:22;5384:53;;;5374:63;;5345:98;5474:2;5492:53;5537:7;5528:6;5517:9;5513:22;5492:53;;;5482:63;;5453:98;5582:2;5600:53;5645:7;5636:6;5625:9;5621:22;5600:53;;;5590:63;;5561:98;5690:3;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;;;5699:63;;5669:99;5169:609;;;;;;;;;5785:366;;;5906:2;5894:9;5885:7;5881:23;5877:32;5874:2;;;5922:1;5919;5912:12;5874:2;5957:1;5974:53;6019:7;5999:9;5974:53;;;5964:63;;5936:97;6064:2;6082:53;6127:7;6118:6;6107:9;6103:22;6082:53;;;6072:63;;6043:98;5868:283;;;;;;6158:491;;;;6296:2;6284:9;6275:7;6271:23;6267:32;6264:2;;;6312:1;6309;6302:12;6264:2;6347:1;6364:53;6409:7;6389:9;6364:53;;;6354:63;;6326:97;6454:2;6472:53;6517:7;6508:6;6497:9;6493:22;6472:53;;;6462:63;;6433:98;6562:2;6580:53;6625:7;6616:6;6605:9;6601:22;6580:53;;;6570:63;;6541:98;6258:391;;;;;;6656:257;;6768:2;6756:9;6747:7;6743:23;6739:32;6736:2;;;6784:1;6781;6774:12;6736:2;6819:1;6836:61;6889:7;6869:9;6836:61;;6920:263;;7035:2;7023:9;7014:7;7010:23;7006:32;7003:2;;;7051:1;7048;7041:12;7003:2;7086:1;7103:64;7159:7;7139:9;7103:64;;7190:327;;7337:2;7325:9;7316:7;7312:23;7308:32;7305:2;;;7353:1;7350;7343:12;7305:2;7388:1;7405:96;7493:7;7473:9;7405:96;;8756:772;;;;;8990:3;8978:9;8969:7;8965:23;8961:33;8958:2;;;9007:1;9004;8997:12;8958:2;9042:1;9059:85;9136:7;9116:9;9059:85;;;9049:95;;9021:129;9209:3;9198:9;9194:19;9181:33;9234:18;9226:6;9223:30;9220:2;;;9266:1;9263;9256:12;9220:2;9294:109;9395:7;9386:6;9375:9;9371:22;9294:109;;;9284:119;;;;9160:249;9440:3;9459:53;9504:7;9495:6;9484:9;9480:22;9459:53;;;9449:63;;9419:99;8952:576;;;;;;;;9535:302;;9669:3;9657:9;9648:7;9644:23;9640:33;9637:2;;;9686:1;9683;9676:12;9637:2;9721:1;9738:83;9813:7;9793:9;9738:83;;9844:241;;9948:2;9936:9;9927:7;9923:23;9919:32;9916:2;;;9964:1;9961;9954:12;9916:2;9999:1;10016:53;10061:7;10041:9;10016:53;;10362:366;;;10483:2;10471:9;10462:7;10458:23;10454:32;10451:2;;;10499:1;10496;10489:12;10451:2;10534:1;10551:53;10596:7;10576:9;10551:53;;10735:535;;;;10884:2;10872:9;10863:7;10859:23;10855:32;10852:2;;;10900:1;10897;10890:12;10852:2;10935:1;10952:64;11008:7;10988:9;10952:64;;;10942:74;;10914:108;11053:2;11071:64;11127:7;11118:6;11107:9;11103:22;11071:64;;;11061:74;;11032:109;11172:2;11190:64;11246:7;11237:6;11226:9;11222:22;11190:64;;11277:259;;11390:2;11378:9;11369:7;11365:23;11361:32;11358:2;;;11406:1;11403;11396:12;11358:2;11441:1;11458:62;11512:7;11492:9;11458:62;;11544:291;;11687:106;11789:3;11781:6;11687:106;;;-1:-1;;11822:6;11813:16;;11680:155;11844:173;;11931:46;11973:3;11965:6;11931:46;;;-1:-1;;12006:4;11997:14;;11924:93;12025:142;12116:45;12155:5;12116:45;;;12111:3;12104:58;12098:69;;;12174:127;12263:32;12289:5;12263:32;;12619:891;;12829:113;12935:6;12930:3;12829:113;;;12822:120;;12963:87;13044:5;12963:87;;;13070:7;13098:1;13083:405;13108:6;13105:1;13102:13;13083:405;;;13169:71;13233:6;13224:7;13169:71;;;13254:119;13369:3;13354:13;13254:119;;;13247:126;;13390:91;13474:6;13390:91;;;13380:101;-1:-1;;13130:1;13123:9;13083:405;;;-1:-1;13501:3;;12809:701;-1:-1;;;;;12809:701;13549:690;;13694:54;13742:5;13694:54;;;13761:86;13840:6;13835:3;13761:86;;;13754:93;;13868:56;13918:5;13868:56;;;13944:7;13972:1;13957:260;13982:6;13979:1;13976:13;13957:260;;;14049:6;14043:13;14070:63;14129:3;14114:13;14070:63;;;14063:70;;14150:60;14203:6;14150:60;;;14140:70;-1:-1;;14004:1;13997:9;13957:260;;14247:94;14314:21;14329:5;14314:21;;14459:103;14532:24;14550:5;14532:24;;14689:186;14802:67;14863:5;14802:67;;15276:154;15373:51;15418:5;15373:51;;15437:347;;15549:39;15582:5;15549:39;;;15600:71;15664:6;15659:3;15600:71;;;15593:78;;15676:52;15721:6;15716:3;15709:4;15702:5;15698:16;15676:52;;;15749:29;15771:6;15749:29;;;15740:39;;;;15529:255;-1:-1;;;15529:255;15792:329;;15952:67;16016:2;16011:3;15952:67;;;16052:31;16032:52;;16112:2;16103:12;;15938:183;-1:-1;;15938:183;16130:364;;16308:85;16390:2;16385:3;16308:85;;;16426:30;16406:51;;16485:2;16476:12;;16294:200;-1:-1;;16294:200;16503:321;;16663:67;16727:2;16722:3;16663:67;;;-1:-1;;;16743:44;;16815:2;16806:12;;16649:175;-1:-1;;16649:175;16833:322;;16993:67;17057:2;17052:3;16993:67;;;-1:-1;;;17073:45;;17146:2;17137:12;;16979:176;-1:-1;;16979:176;17164:325;;17324:67;17388:2;17383:3;17324:67;;;17424:27;17404:48;;17480:2;17471:12;;17310:179;-1:-1;;17310:179;17498:330;;17658:67;17722:2;17717:3;17658:67;;;17758:32;17738:53;;17819:2;17810:12;;17644:184;-1:-1;;17644:184;17837:317;;17997:67;18061:2;18056:3;17997:67;;;-1:-1;;;18077:40;;18145:2;18136:12;;17983:171;-1:-1;;17983:171;18163:327;;18323:67;18387:2;18382:3;18323:67;;;18423:29;18403:50;;18481:2;18472:12;;18309:181;-1:-1;;18309:181;18499:322;;18659:67;18723:2;18718:3;18659:67;;;-1:-1;;;18739:45;;18812:2;18803:12;;18645:176;-1:-1;;18645:176;18830:327;;18990:67;19054:2;19049:3;18990:67;;;19090:29;19070:50;;19148:2;19139:12;;18976:181;-1:-1;;18976:181;19166:323;;19326:67;19390:2;19385:3;19326:67;;;19426:25;19406:46;;19480:2;19471:12;;19312:177;-1:-1;;19312:177;19498:315;;19658:67;19722:2;19717:3;19658:67;;;-1:-1;;;19738:38;;19804:2;19795:12;;19644:169;-1:-1;;19644:169;19822:320;;19982:67;20046:2;20041:3;19982:67;;;-1:-1;;;20062:43;;20133:2;20124:12;;19968:174;-1:-1;;19968:174;20151:318;;20311:67;20375:2;20370:3;20311:67;;;-1:-1;;;20391:41;;20460:2;20451:12;;20297:172;-1:-1;;20297:172;20478:324;;20638:67;20702:2;20697:3;20638:67;;;20738:26;20718:47;;20793:2;20784:12;;20624:178;-1:-1;;20624:178;20811:370;;20971:67;21035:2;21030:3;20971:67;;;21071:34;21051:55;;-1:-1;;;21135:2;21126:12;;21119:25;21172:2;21163:12;;20957:224;-1:-1;;20957:224;21190:329;;21350:67;21414:2;21409:3;21350:67;;;21450:31;21430:52;;21510:2;21501:12;;21336:183;-1:-1;;21336:183;21528:326;;21688:67;21752:2;21747:3;21688:67;;;21788:28;21768:49;;21845:2;21836:12;;21674:180;-1:-1;;21674:180;21863:327;;22023:67;22087:2;22082:3;22023:67;;;22123:29;22103:50;;22181:2;22172:12;;22009:181;-1:-1;;22009:181;22199:318;;22359:67;22423:2;22418:3;22359:67;;;-1:-1;;;22439:41;;22508:2;22499:12;;22345:172;-1:-1;;22345:172;22526:383;;22686:67;22750:2;22745:3;22686:67;;;22786:34;22766:55;;-1:-1;;;22850:2;22841:12;;22834:38;22900:2;22891:12;;22672:237;-1:-1;;22672:237;22918:324;;23078:67;23142:2;23137:3;23078:67;;;23178:26;23158:47;;23233:2;23224:12;;23064:178;-1:-1;;23064:178;23251:331;;23411:67;23475:2;23470:3;23411:67;;;23511:33;23491:54;;23573:2;23564:12;;23397:185;-1:-1;;23397:185;23591:319;;23751:67;23815:2;23810:3;23751:67;;;-1:-1;;;23831:42;;23901:2;23892:12;;23737:173;-1:-1;;23737:173;23919:330;;24079:67;24143:2;24138:3;24079:67;;;24179:32;24159:53;;24240:2;24231:12;;24065:184;-1:-1;;24065:184;24258:323;;24418:67;24482:2;24477:3;24418:67;;;24518:25;24498:46;;24572:2;24563:12;;24404:177;-1:-1;;24404:177;24590:322;;24750:67;24814:2;24809:3;24750:67;;;-1:-1;;;24830:45;;24903:2;24894:12;;24736:176;-1:-1;;24736:176;24921:325;;25081:67;25145:2;25140:3;25081:67;;;25181:27;25161:48;;25237:2;25228:12;;25067:179;-1:-1;;25067:179;25255:360;;25433:85;25515:2;25510:3;25433:85;;;25551:26;25531:47;;25606:2;25597:12;;25419:196;-1:-1;;25419:196;25624:326;;25784:67;25848:2;25843:3;25784:67;;;25884:28;25864:49;;25941:2;25932:12;;25770:180;-1:-1;;25770:180;25959:322;;26119:67;26183:2;26178:3;26119:67;;;-1:-1;;;26199:45;;26272:2;26263:12;;26105:176;-1:-1;;26105:176;26290:324;;26450:67;26514:2;26509:3;26450:67;;;26550:26;26530:47;;26605:2;26596:12;;26436:178;-1:-1;;26436:178;26623:312;;26783:67;26847:2;26842:3;26783:67;;;-1:-1;;;26863:35;;26926:2;26917:12;;26769:166;-1:-1;;26769:166;26944:327;;27104:67;27168:2;27163:3;27104:67;;;27204:29;27184:50;;27262:2;27253:12;;27090:181;-1:-1;;27090:181;27280:331;;27440:67;27504:2;27499:3;27440:67;;;27540:33;27520:54;;27602:2;27593:12;;27426:185;-1:-1;;27426:185;27620:328;;27780:67;27844:2;27839:3;27780:67;;;27880:30;27860:51;;27939:2;27930:12;;27766:182;-1:-1;;27766:182;27957:326;;28117:67;28181:2;28176:3;28117:67;;;28217:28;28197:49;;28274:2;28265:12;;28103:180;-1:-1;;28103:180;28378:863;28617:23;;28545:4;28536:14;;;28646:63;28540:3;28617:23;28646:63;;;28565:150;28805:4;28798:5;28794:16;28788:23;28817:63;28874:4;28869:3;28865:14;28851:12;28817:63;;;28725:161;28979:4;28972:5;28968:16;28962:23;28991:63;29048:4;29043:3;29039:14;29025:12;28991:63;;;28896:164;29151:4;29144:5;29140:16;29134:23;29163:57;29214:4;29209:3;29205:14;29191:12;29163:57;;30260:1513;30415:4;30406:14;;30485:58;30530:5;;30485:58;;;30549:79;30617:3;30599:12;30549:79;;;30435:199;30695:50;30739:4;30732:5;30728:16;30721:5;30695:50;;;30751:63;30808:4;30803:3;30799:14;30785:12;30751:63;;;30644:176;30888:50;30932:4;30925:5;30921:16;30914:5;30888:50;;;30944:63;31001:4;30996:3;30992:14;30978:12;30944:63;;;30830:183;31077:50;31121:4;31114:5;31110:16;31103:5;31077:50;;;31133:63;31190:4;31185:3;31181:14;31167:12;31133:63;;;31023:179;31260:50;31304:4;31297:5;31293:16;31286:5;31260:50;;;31316:63;31373:4;31368:3;31364:14;31350:12;31316:63;;;31212:173;31445:50;31489:4;31482:5;31478:16;31471:5;31445:50;;;31501:63;31558:4;31553:3;31549:14;31535:12;31501:63;;;31395:175;31633:50;31677:4;31670:5;31666:16;31659:5;31633:50;;;31689:63;31746:4;31741:3;31737:14;31723:12;31689:63;;31855:1572;31998:6;31989:16;;32068:50;32105:5;;32068:50;;;32124:63;32176:3;32158:12;32124:63;;;32020:173;32261:50;32305:4;32298:5;32294:16;32287:5;32261:50;;;32317:63;32374:4;32369:3;32365:14;32351:12;32317:63;;;32203:183;32450:50;32494:4;32487:5;32483:16;32476:5;32450:50;;;32506:63;32563:4;32558:3;32554:14;32540:12;32506:63;;;32396:179;32639:50;32683:4;32676:5;32672:16;32665:5;32639:50;;;32695:63;32752:4;32747:3;32743:14;32729:12;32695:63;;;32585:179;32831:50;32875:4;32868:5;32864:16;32857:5;32831:50;;;32887:63;32944:4;32939:3;32935:14;32921:12;32887:63;;;32774:182;33021:50;33065:4;33058:5;33054:16;33047:5;33021:50;;;33077:63;33134:4;33129:3;33125:14;33111:12;33077:63;;;32966:180;33207:76;33277:4;33270:5;33266:16;33259:5;33207:76;;;33289:117;33400:4;33395:3;33391:14;33377:12;33289:117;;33503:1151;33718:23;;33648:4;33639:14;;;33747:79;33643:3;33718:23;33747:79;;;33668:164;33910:4;33903:5;33899:16;33893:23;33922:63;33979:4;33974:3;33970:14;33956:12;33922:63;;;33842:149;34072:4;34065:5;34061:16;34055:23;34084:63;34141:4;34136:3;34132:14;34118:12;34084:63;;;34001:152;34237:4;34230:5;34226:16;34220:23;34249:63;34306:4;34301:3;34297:14;34283:12;34249:63;;;34163:155;34400:4;34393:5;34389:16;34383:23;34412:63;34469:4;34464:3;34460:14;34446:12;34412:63;;;34328:153;34558:4;34551:5;34547:16;34541:23;34570:63;34627:4;34622:3;34618:14;34604:12;34570:63;;34730:878;34867:4;34858:14;;34940:50;34977:5;;34940:50;;;34996:63;35048:3;35030:12;34996:63;;;34887:178;35118:48;35160:4;35153:5;35149:16;35142:5;35118:48;;;35172:59;35225:4;35220:3;35216:14;35202:12;35172:59;;;35075:162;35290:50;35334:4;35327:5;35323:16;35316:5;35290:50;;;35346:63;35403:4;35398:3;35394:14;35380:12;35346:63;;;35247:168;35468:50;35512:4;35505:5;35501:16;35494:5;35468:50;;;35524:63;35581:4;35576:3;35572:14;35558:12;35524:63;;35845:97;35914:22;35930:5;35914:22;;35949:372;;36148:148;36292:3;36148:148;;36328:372;;36527:148;36671:3;36527:148;;36707:213;36825:2;36810:18;;36839:71;36814:9;36883:6;36839:71;;36927:229;37053:2;37038:18;;37067:79;37042:9;37119:6;37067:79;;37163:451;37345:2;37330:18;;37359:79;37334:9;37411:6;37359:79;;;37449:72;37517:2;37506:9;37502:18;37493:6;37449:72;;;37532;37600:2;37589:9;37585:18;37576:6;37532:72;;37621:324;37767:2;37752:18;;37781:71;37756:9;37825:6;37781:71;;;37863:72;37931:2;37920:9;37916:18;37907:6;37863:72;;37952:435;38126:2;38111:18;;38140:71;38115:9;38184:6;38140:71;;;38222:72;38290:2;38279:9;38275:18;38266:6;38222:72;;38394:324;38540:2;38525:18;;38554:71;38529:9;38598:6;38554:71;;;38636:72;38704:2;38693:9;38689:18;38680:6;38636:72;;38725:361;38893:2;38907:47;;;38878:18;;38968:108;38878:18;39062:6;38968:108;;39093:201;39205:2;39190:18;;39219:65;39194:9;39257:6;39219:65;;39301:213;39419:2;39404:18;;39433:71;39408:9;39477:6;39433:71;;39521:273;39669:2;39654:18;;39683:101;39658:9;39757:6;39683:101;;40369:301;40507:2;40521:47;;;40492:18;;40582:78;40492:18;40646:6;40582:78;;40677:407;40868:2;40882:47;;;40853:18;;40943:131;40853:18;40943:131;;41091:407;41282:2;41296:47;;;41267:18;;41357:131;41267:18;41357:131;;41505:407;41696:2;41710:47;;;41681:18;;41771:131;41681:18;41771:131;;41919:407;42110:2;42124:47;;;42095:18;;42185:131;42095:18;42185:131;;42333:407;42524:2;42538:47;;;42509:18;;42599:131;42509:18;42599:131;;42747:407;42938:2;42952:47;;;42923:18;;43013:131;42923:18;43013:131;;43161:407;43352:2;43366:47;;;43337:18;;43427:131;43337:18;43427:131;;43575:407;43766:2;43780:47;;;43751:18;;43841:131;43751:18;43841:131;;43989:407;44180:2;44194:47;;;44165:18;;44255:131;44165:18;44255:131;;44403:407;44594:2;44608:47;;;44579:18;;44669:131;44579:18;44669:131;;44817:407;45008:2;45022:47;;;44993:18;;45083:131;44993:18;45083:131;;45231:407;45422:2;45436:47;;;45407:18;;45497:131;45407:18;45497:131;;45645:407;45836:2;45850:47;;;45821:18;;45911:131;45821:18;45911:131;;46059:407;46250:2;46264:47;;;46235:18;;46325:131;46235:18;46325:131;;46473:407;46664:2;46678:47;;;46649:18;;46739:131;46649:18;46739:131;;46887:407;47078:2;47092:47;;;47063:18;;47153:131;47063:18;47153:131;;47301:407;47492:2;47506:47;;;47477:18;;47567:131;47477:18;47567:131;;47715:407;47906:2;47920:47;;;47891:18;;47981:131;47891:18;47981:131;;48129:407;48320:2;48334:47;;;48305:18;;48395:131;48305:18;48395:131;;48543:407;48734:2;48748:47;;;48719:18;;48809:131;48719:18;48809:131;;48957:407;49148:2;49162:47;;;49133:18;;49223:131;49133:18;49223:131;;49371:407;49562:2;49576:47;;;49547:18;;49637:131;49547:18;49637:131;;49785:407;49976:2;49990:47;;;49961:18;;50051:131;49961:18;50051:131;;50199:407;50390:2;50404:47;;;50375:18;;50465:131;50375:18;50465:131;;50613:407;50804:2;50818:47;;;50789:18;;50879:131;50789:18;50879:131;;51027:407;51218:2;51232:47;;;51203:18;;51293:131;51203:18;51293:131;;51441:407;51632:2;51646:47;;;51617:18;;51707:131;51617:18;51707:131;;51855:407;52046:2;52060:47;;;52031:18;;52121:131;52031:18;52121:131;;52269:407;52460:2;52474:47;;;52445:18;;52535:131;52445:18;52535:131;;52683:407;52874:2;52888:47;;;52859:18;;52949:131;52859:18;52949:131;;53097:407;53288:2;53302:47;;;53273:18;;53363:131;53273:18;53363:131;;53511:407;53702:2;53716:47;;;53687:18;;53777:131;53687:18;53777:131;;53925:407;54116:2;54130:47;;;54101:18;;54191:131;54101:18;54191:131;;54339:407;54530:2;54544:47;;;54515:18;;54605:131;54515:18;54605:131;;54753:407;54944:2;54958:47;;;54929:18;;55019:131;54929:18;55019:131;;55167:362;55359:3;55344:19;;55374:145;55348:9;55492:6;55374:145;;55909:730;56233:3;56218:19;;56248:133;56222:9;56354:6;56248:133;;;56430:9;56424:4;56420:20;56414:3;56403:9;56399:19;56392:49;56455:174;56624:4;56615:6;56607;56455:174;;56866:324;57012:2;56997:18;;57026:71;57001:9;57070:6;57026:71;;57197:340;57351:2;57336:18;;57365:71;57340:9;57409:6;57365:71;;;57447:80;57523:2;57512:9;57508:18;57499:6;57447:80;;57544:451;57726:2;57711:18;;57740:71;57715:9;57784:6;57740:71;;;57822:80;57898:2;57887:9;57883:18;57874:6;57822:80;;58002:1569;58490:3;58475:19;;58505:71;58479:9;58549:6;58505:71;;;58587:124;58707:2;58696:9;58692:18;58683:6;58587:124;;;58722:73;58790:3;58779:9;58775:19;58766:6;58722:73;;;58806;58874:3;58863:9;58859:19;58850:6;58806:73;;;58890;58958:3;58947:9;58943:19;58934:6;58890:73;;;58974;59042:3;59031:9;59027:19;59018:6;58974:73;;;59058;59126:3;59115:9;59111:19;59102:6;59058:73;;;59142;59210:3;59199:9;59195:19;59186:6;59142:73;;;59226;59294:3;59283:9;59279:19;59270:6;59226:73;;;59310;59378:3;59367:9;59363:19;59354:6;59310:73;;;59394:88;59477:3;59466:9;59462:19;59452:7;59394:88;;;59493:68;59556:3;59545:9;59541:19;59531:7;59493:68;;;58461:1110;;;;;;;;;;;;;;;;59578:659;59808:3;59793:19;;59823:71;59797:9;59867:6;59823:71;;;59905:72;59973:2;59962:9;59958:18;59949:6;59905:72;;;59988;60056:2;60045:9;60041:18;60032:6;59988:72;;;60071;60139:2;60128:9;60124:18;60115:6;60071:72;;;60154:73;60222:3;60211:9;60207:19;60198:6;60154:73;;;59779:458;;;;;;;;;60244:256;60306:2;60300:9;60332:17;;;60407:18;60392:34;;60428:22;;;60389:62;60386:2;;;60464:1;60461;60454:12;60386:2;60480;60473:22;60284:216;;-1:-1;60284:216;60507:147;60624:3;60610:44;60661:151;60785:4;60776:14;;60733:79;60819:137;60922:12;;60893:63;61092:141;61221:6;61212:16;;61198:35;61356:205;61501:19;;;61550:4;61541:14;;61494:67;62083:119;;62157:39;62192:2;62187:3;62183:12;62178:3;62157:39;;62355:119;;62429:39;62464:2;62459:3;62455:12;62450:3;62429:39;;62483:112;-1:-1;62586:3;62570:25;62850:115;;62922:37;62955:2;62950:3;62946:12;62941:3;62922:37;;62973:91;;63035:24;63053:5;63035:24;;63177:85;63243:13;63236:21;;63219:43;63348:123;;63442:24;63460:5;63442:24;;63849:138;63927:5;63933:49;63927:5;63933:49;;64072:121;-1:-1;;;;;64134:54;;64117:76;64279:81;64350:4;64339:16;;64322:38;64367:129;;64454:37;64485:5;64454:37;;65514:138;;65607:40;65641:5;65607:40;;65903:268;65968:1;65975:101;65989:6;65986:1;65983:13;65975:101;;;66056:11;;;66050:18;66037:11;;;66030:39;66011:2;66004:10;65975:101;;;66091:6;66088:1;66085:13;66082:2;;;-1:-1;;66156:1;66138:16;;66131:27;65952:219;66179:97;66267:2;66247:14;-1:-1;;66243:28;;66227:49;66284:107;66369:1;66362:5;66359:12;66349:2;;66375:9;66398:117;66467:24;66485:5;66467:24;;;66460:5;66457:35;66447:2;;66506:1;66503;66496:12;66662:111;66728:21;66743:5;66728:21;;66780:117;66849:24;66867:5;66849:24;;66904:181;67005:56;67055:5;67005:56;;67864:113;67931:22;67947:5;67931:22;",
  "source": "pragma solidity 0.5.17;\npragma experimental ABIEncoderV2;\n\n// Contracts\nimport \"./LoansBase.sol\";\n\n/*****************************************************************************************************/\n/**                                             WARNING                                             **/\n/**                                  THIS CONTRACT IS UPGRADEABLE!                                  **/\n/**  ---------------------------------------------------------------------------------------------  **/\n/**  Do NOT change the order of or PREPEND any storage variables to this or new versions of this    **/\n/**  contract as this will cause the the storage slots to be overwritten on the proxy contract!!    **/\n/**                                                                                                 **/\n/**  Visit https://docs.openzeppelin.com/upgrades/2.6/proxies#upgrading-via-the-proxy-pattern for   **/\n/**  more information.                                                                              **/\n/*****************************************************************************************************/\n/**\n    @notice This contract is used as a basis for the creation of loans (not wei) across the platform\n    @notice It implements the LoansBase contract from Teller\n\n    @author develop@teller.finance\n */\ncontract TokenCollateralLoans is LoansBase {\n    /** Constants */\n\n    /** Properties */\n\n    /** Modifiers */\n\n    /**\n        @notice Checks the value in the current transactionn is zero.\n        @dev It throws a require error if value is not zero.\n     */\n    modifier noMsgValue() {\n        require(msg.value == 0, \"TOKEN_LOANS_VALUE_MUST_BE_ZERO\");\n        _;\n    }\n\n    /** External Functions */\n\n    /**\n     * @notice Deposit collateral tokens into a loan.\n     * @param borrower The address of the loan borrower.\n     * @param loanID The ID of the loan the collateral is for\n     * @param amount The amount to deposit as collateral.\n     */\n    function depositCollateral(\n        address borrower,\n        uint256 loanID,\n        uint256 amount\n    )\n        external\n        payable\n        noMsgValue()\n        loanActiveOrSet(loanID)\n        isInitialized()\n        whenNotPaused()\n        whenLendingPoolNotPaused(address(lendingPool))\n    {\n        borrower.requireEqualTo(\n            loans[loanID].loanTerms.borrower,\n            \"BORROWER_LOAN_ID_MISMATCH\"\n        );\n        require(amount > 0, \"CANNOT_DEPOSIT_ZERO\");\n\n        // Update the loan collateral and total. Transfer tokens to this contract.\n        _payInCollateral(loanID, amount);\n\n        emit CollateralDeposited(loanID, borrower, amount);\n    }\n\n    /**\n        @notice Creates a loan with the loan request and terms\n        @param request Struct of the protocol loan request\n        @param responses List of structs of the protocol loan responses\n        @param collateralAmount Amount of collateral required for the loan\n     */\n    function createLoanWithTerms(\n        TellerCommon.LoanRequest calldata request,\n        TellerCommon.LoanResponse[] calldata responses,\n        uint256 collateralAmount\n    )\n        external\n        payable\n        noMsgValue()\n        isInitialized()\n        whenNotPaused()\n        isBorrower(request.borrower)\n        withValidLoanRequest(request)\n    {\n        uint256 loanID = _getAndIncrementLoanID();\n\n        (\n            uint256 interestRate,\n            uint256 collateralRatio,\n            uint256 maxLoanAmount\n        ) = loanTermsConsensus.processRequest(request, responses);\n\n        loans[loanID] = createLoan(\n            loanID,\n            request,\n            interestRate,\n            collateralRatio,\n            maxLoanAmount\n        );\n\n        if (collateralAmount > 0) {\n            // Update collateral, totalCollateral, and lastCollateralIn\n            _payInCollateral(loanID, collateralAmount);\n        }\n\n        borrowerLoans[request.borrower].push(loanID);\n\n        _emitLoanTermsSetAndCollateralDepositedEventsIfApplicable(\n            loanID,\n            request,\n            interestRate,\n            collateralRatio,\n            maxLoanAmount,\n            collateralAmount\n        );\n    }\n\n    /**\n        @notice Initializes the current contract instance setting the required parameters, if allowed\n        @param priceOracleAddress Contract address of the price oracle\n        @param lendingPoolAddress Contract address of the lending pool\n        @param loanTermsConsensusAddress Contract adddress for loan term consensus\n        @param settingsAddress Contract address for the configuration of the platform\n        @param collateralTokenAddress Contract address for the collateral token.\n     */\n    function initialize(\n        address priceOracleAddress,\n        address lendingPoolAddress,\n        address loanTermsConsensusAddress,\n        address settingsAddress,\n        address collateralTokenAddress\n    ) external isNotInitialized() {\n        collateralTokenAddress.requireNotEmpty(\"PROVIDE_COLL_TOKEN_ADDRESS\");\n\n        _initialize(\n            priceOracleAddress,\n            lendingPoolAddress,\n            loanTermsConsensusAddress,\n            settingsAddress\n        );\n\n        collateralToken = collateralTokenAddress;\n    }\n\n    /** Internal Function */\n    /**\n        @notice Pays out collateral for the associated loan\n        @param loanID The ID of the loan the collateral is for\n        @param amount The amount of collateral to be paid\n     */\n    function _payOutCollateral(\n        uint256 loanID,\n        uint256 amount,\n        address payable recipient\n    ) internal {\n        totalCollateral = totalCollateral.sub(amount);\n        loans[loanID].collateral = loans[loanID].collateral.sub(amount);\n\n        _collateralTokenTransfer(recipient, amount);\n    }\n\n    /**\n        @notice Pays collateral in for the associated loan\n        @param loanID The ID of the loan the collateral is for\n        @param amount The amount of collateral to be paid\n     */\n    function _payInCollateral(uint256 loanID, uint256 amount) internal {\n        // Update the total collateral and loan collateral\n        super._payInCollateral(loanID, amount);\n        // Transfer collateral tokens to this contract.\n        _collateralTokenTransferFrom(msg.sender, amount);\n    }\n\n    /**\n        @notice It transfers an amount of collateral tokens to a specific address.\n        @param recipient The address which will receive the tokens.\n        @param amount The amount of tokens to transfer.\n     */\n    function _collateralTokenTransfer(address recipient, uint256 amount) internal {\n        ERC20Detailed(collateralToken).tokenTransfer(recipient, amount);\n    }\n\n    /**\n        @notice It transfers an amount of collateral tokens from an address to this contract.\n        @param from The address where the tokens will transfer from.\n        @param amount The amount to be transferred.\n     */\n    function _collateralTokenTransferFrom(address from, uint256 amount) internal {\n        ERC20Detailed(collateralToken).tokenTransferFrom(from, amount);\n    }\n}\n",
  "sourcePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/TokenCollateralLoans.sol",
  "ast": {
    "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/TokenCollateralLoans.sol",
    "exportedSymbols": {
      "TokenCollateralLoans": [
        9632
      ]
    },
    "id": 9633,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9361,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:33"
      },
      {
        "id": 9362,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:33"
      },
      {
        "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/LoansBase.sol",
        "file": "./LoansBase.sol",
        "id": 9363,
        "nodeType": "ImportDirective",
        "scope": 9633,
        "sourceUnit": 7158,
        "src": "72:25:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9364,
              "name": "LoansBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7157,
              "src": "1378:9:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LoansBase_$7157",
                "typeString": "contract LoansBase"
              }
            },
            "id": 9365,
            "nodeType": "InheritanceSpecifier",
            "src": "1378:9:33"
          }
        ],
        "contractDependencies": [
          2345,
          2627,
          7157,
          9187,
          10886,
          21702,
          21771
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract is used as a basis for the creation of loans (not wei) across the platform\n@notice It implements the LoansBase contract from Teller\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 9632,
        "linearizedBaseContracts": [
          9632,
          7157,
          2345,
          21702,
          21771,
          2627,
          9187,
          10886
        ],
        "name": "TokenCollateralLoans",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9376,
              "nodeType": "Block",
              "src": "1630:85:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9368,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21901,
                            "src": "1648:3:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1648:9:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 9370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1661:1:33",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1648:14:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "544f4b454e5f4c4f414e535f56414c55455f4d5553545f42455f5a45524f",
                        "id": 9372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1664:32:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f33a818cfe2b5be858eacf8527ea1801bb9dccadb49769e42646a33febd6c9",
                          "typeString": "literal_string \"TOKEN_LOANS_VALUE_MUST_BE_ZERO\""
                        },
                        "value": "TOKEN_LOANS_VALUE_MUST_BE_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f33a818cfe2b5be858eacf8527ea1801bb9dccadb49769e42646a33febd6c9",
                          "typeString": "literal_string \"TOKEN_LOANS_VALUE_MUST_BE_ZERO\""
                        }
                      ],
                      "id": 9367,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21904,
                        21905
                      ],
                      "referencedDeclaration": 21905,
                      "src": "1640:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1640:57:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9374,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:57:33"
                },
                {
                  "id": 9375,
                  "nodeType": "PlaceholderStatement",
                  "src": "1707:1:33"
                }
              ]
            },
            "documentation": "@notice Checks the value in the current transactionn is zero.\n@dev It throws a require error if value is not zero.",
            "id": 9377,
            "name": "noMsgValue",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 9366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1627:2:33"
            },
            "src": "1608:107:33",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9429,
              "nodeType": "Block",
              "src": "2299:376:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 9403,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5645,
                              "src": "2346:5:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$18357_storage_$",
                                "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                              }
                            },
                            "id": 9405,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 9404,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9381,
                              "src": "2352:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2346:13:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$18357_storage",
                              "typeString": "struct TellerCommon.Loan storage ref"
                            }
                          },
                          "id": 9406,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "loanTerms",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18336,
                          "src": "2346:23:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanTerms_$18332_storage",
                            "typeString": "struct TellerCommon.LoanTerms storage ref"
                          }
                        },
                        "id": 9407,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "borrower",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18321,
                        "src": "2346:32:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "424f52524f5745525f4c4f414e5f49445f4d49534d41544348",
                        "id": 9408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2392:27:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        },
                        "value": "BORROWER_LOAN_ID_MISMATCH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9400,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9379,
                        "src": "2309:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 9402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireEqualTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17068,
                      "src": "2309:23:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 9409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:120:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9410,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:120:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 9412,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9383,
                          "src": "2447:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 9413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2456:1:33",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2447:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43414e4e4f545f4445504f5349545f5a45524f",
                        "id": 9415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2459:21:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        },
                        "value": "CANNOT_DEPOSIT_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        }
                      ],
                      "id": 9411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21904,
                        21905
                      ],
                      "referencedDeclaration": 21905,
                      "src": "2439:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2439:42:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9417,
                  "nodeType": "ExpressionStatement",
                  "src": "2439:42:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9419,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9381,
                        "src": "2592:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9420,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9383,
                        "src": "2600:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9418,
                      "name": "_payInCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9599
                      ],
                      "referencedDeclaration": 9599,
                      "src": "2575:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2575:32:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9422,
                  "nodeType": "ExpressionStatement",
                  "src": "2575:32:33"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9424,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9381,
                        "src": "2643:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9425,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9379,
                        "src": "2651:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9426,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9383,
                        "src": "2661:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9423,
                      "name": "CollateralDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10659,
                      "src": "2623:19:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 9427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2623:45:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9428,
                  "nodeType": "EmitStatement",
                  "src": "2618:50:33"
                }
              ]
            },
            "documentation": "@notice Deposit collateral tokens into a loan.\n@param borrower The address of the loan borrower.\n@param loanID The ID of the loan the collateral is for\n@param amount The amount to deposit as collateral.",
            "id": 9430,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 9386,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9385,
                  "name": "noMsgValue",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9377,
                  "src": "2147:10:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2147:12:33"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9388,
                    "name": "loanID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9381,
                    "src": "2184:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 9389,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9387,
                  "name": "loanActiveOrSet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5722,
                  "src": "2168:15:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2168:23:33"
              },
              {
                "arguments": [],
                "id": 9391,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9390,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9162,
                  "src": "2200:13:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2200:15:33"
              },
              {
                "arguments": [],
                "id": 9393,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9392,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2232,
                  "src": "2224:13:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2224:15:33"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9396,
                        "name": "lendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5634,
                        "src": "2281:11:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10590",
                          "typeString": "contract LendingPoolInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10590",
                          "typeString": "contract LendingPoolInterface"
                        }
                      ],
                      "id": 9395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2273:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 9397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2273:20:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 9398,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9394,
                  "name": "whenLendingPoolNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2246,
                  "src": "2248:24:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2248:46:33"
              }
            ],
            "name": "depositCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9379,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 9430,
                  "src": "2035:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2035:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9381,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 9430,
                  "src": "2061:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9383,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9430,
                  "src": "2085:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2085:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2025:80:33"
            },
            "returnParameters": {
              "id": 9399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2299:0:33"
            },
            "scope": 9632,
            "src": "1999:676:33",
            "stateMutability": "payable",
            "superFunction": 10751,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9509,
              "nodeType": "Block",
              "src": "3323:872:33",
              "statements": [
                {
                  "assignments": [
                    9454
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9454,
                      "name": "loanID",
                      "nodeType": "VariableDeclaration",
                      "scope": 9509,
                      "src": "3333:14:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9453,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3333:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9457,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9455,
                      "name": "_getAndIncrementLoanID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6970,
                      "src": "3350:22:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 9456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3350:24:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3333:41:33"
                },
                {
                  "assignments": [
                    9459,
                    9461,
                    9463
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9459,
                      "name": "interestRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 9509,
                      "src": "3399:20:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9458,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3399:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9461,
                      "name": "collateralRatio",
                      "nodeType": "VariableDeclaration",
                      "scope": 9509,
                      "src": "3433:23:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9460,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3433:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9463,
                      "name": "maxLoanAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 9509,
                      "src": "3470:21:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9462,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3470:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9469,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9466,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9432,
                        "src": "3538:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9467,
                        "name": "responses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9435,
                        "src": "3547:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$18312_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$18312_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9464,
                        "name": "loanTermsConsensus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5636,
                        "src": "3504:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LoanTermsConsensusInterface_$10646",
                          "typeString": "contract LoanTermsConsensusInterface"
                        }
                      },
                      "id": 9465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10636,
                      "src": "3504:33:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LoanRequest_$18297_memory_ptr_$_t_array$_t_struct$_LoanResponse_$18312_memory_$dyn_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct TellerCommon.LoanRequest memory,struct TellerCommon.LoanResponse memory[] memory) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 9468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3504:53:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3385:172:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 9470,
                        "name": "loans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5645,
                        "src": "3568:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$18357_storage_$",
                          "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                        }
                      },
                      "id": 9472,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9471,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9454,
                        "src": "3574:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3568:13:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$18357_storage",
                        "typeString": "struct TellerCommon.Loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9474,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9454,
                          "src": "3608:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9475,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9432,
                          "src": "3628:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9476,
                          "name": "interestRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9459,
                          "src": "3649:12:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9477,
                          "name": "collateralRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9461,
                          "src": "3675:15:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9478,
                          "name": "maxLoanAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9463,
                          "src": "3704:13:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9473,
                        "name": "createLoan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7037,
                        "src": "3584:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_LoanRequest_$18297_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_Loan_$18357_memory_ptr_$",
                          "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256) view returns (struct TellerCommon.Loan memory)"
                        }
                      },
                      "id": 9479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3584:143:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$18357_memory_ptr",
                        "typeString": "struct TellerCommon.Loan memory"
                      }
                    },
                    "src": "3568:159:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$18357_storage",
                      "typeString": "struct TellerCommon.Loan storage ref"
                    }
                  },
                  "id": 9481,
                  "nodeType": "ExpressionStatement",
                  "src": "3568:159:33"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 9482,
                      "name": "collateralAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9437,
                      "src": "3742:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 9483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3761:1:33",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3742:20:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 9491,
                  "nodeType": "IfStatement",
                  "src": "3738:165:33",
                  "trueBody": {
                    "id": 9490,
                    "nodeType": "Block",
                    "src": "3764:139:33",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 9486,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9454,
                              "src": "3867:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 9487,
                              "name": "collateralAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9437,
                              "src": "3875:16:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9485,
                            "name": "_payInCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9599
                            ],
                            "referencedDeclaration": 9599,
                            "src": "3850:16:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 9488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3850:42:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9489,
                        "nodeType": "ExpressionStatement",
                        "src": "3850:42:33"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9497,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9454,
                        "src": "3950:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9492,
                          "name": "borrowerLoans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5641,
                          "src": "3913:13:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 9495,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9493,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9432,
                            "src": "3927:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                              "typeString": "struct TellerCommon.LoanRequest calldata"
                            }
                          },
                          "id": 9494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18284,
                          "src": "3927:16:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3913:31:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 9496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3913:36:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 9498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3913:44:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9499,
                  "nodeType": "ExpressionStatement",
                  "src": "3913:44:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9501,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9454,
                        "src": "4039:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9502,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9432,
                        "src": "4059:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9503,
                        "name": "interestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9459,
                        "src": "4080:12:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9504,
                        "name": "collateralRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9461,
                        "src": "4106:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9505,
                        "name": "maxLoanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9463,
                        "src": "4135:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9506,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9437,
                        "src": "4162:16:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9500,
                      "name": "_emitLoanTermsSetAndCollateralDepositedEventsIfApplicable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7082,
                      "src": "3968:57:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_LoanRequest_$18297_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 9507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3968:220:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9508,
                  "nodeType": "ExpressionStatement",
                  "src": "3968:220:33"
                }
              ]
            },
            "documentation": "@notice Creates a loan with the loan request and terms\n@param request Struct of the protocol loan request\n@param responses List of structs of the protocol loan responses\n@param collateralAmount Amount of collateral required for the loan",
            "id": 9510,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 9440,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9439,
                  "name": "noMsgValue",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9377,
                  "src": "3183:10:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3183:12:33"
              },
              {
                "arguments": [],
                "id": 9442,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9441,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9162,
                  "src": "3204:13:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3204:15:33"
              },
              {
                "arguments": [],
                "id": 9444,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9443,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2232,
                  "src": "3228:13:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3228:15:33"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 9446,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9432,
                      "src": "3263:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                        "typeString": "struct TellerCommon.LoanRequest calldata"
                      }
                    },
                    "id": 9447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "borrower",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 18284,
                    "src": "3263:16:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 9448,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9445,
                  "name": "isBorrower",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5659,
                  "src": "3252:10:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3252:28:33"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9450,
                    "name": "request",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9432,
                    "src": "3310:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                      "typeString": "struct TellerCommon.LoanRequest calldata"
                    }
                  }
                ],
                "id": 9451,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9449,
                  "name": "withValidLoanRequest",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5775,
                  "src": "3289:20:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_LoanRequest_$18297_memory_ptr_$",
                    "typeString": "modifier (struct TellerCommon.LoanRequest memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3289:29:33"
              }
            ],
            "name": "createLoanWithTerms",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9432,
                  "name": "request",
                  "nodeType": "VariableDeclaration",
                  "scope": 9510,
                  "src": "3004:41:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanRequest"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9431,
                    "name": "TellerCommon.LoanRequest",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18297,
                    "src": "3004:24:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$18297_storage_ptr",
                      "typeString": "struct TellerCommon.LoanRequest"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9435,
                  "name": "responses",
                  "nodeType": "VariableDeclaration",
                  "scope": 9510,
                  "src": "3055:46:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_LoanResponse_$18312_calldata_$dyn_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanResponse[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 9433,
                      "name": "TellerCommon.LoanResponse",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 18312,
                      "src": "3055:25:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanResponse_$18312_storage_ptr",
                        "typeString": "struct TellerCommon.LoanResponse"
                      }
                    },
                    "id": 9434,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3055:27:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_LoanResponse_$18312_storage_$dyn_storage_ptr",
                      "typeString": "struct TellerCommon.LoanResponse[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9437,
                  "name": "collateralAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9510,
                  "src": "3111:24:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3111:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2994:147:33"
            },
            "returnParameters": {
              "id": 9452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3323:0:33"
            },
            "scope": 9632,
            "src": "2966:1229:33",
            "stateMutability": "payable",
            "superFunction": 10768,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9542,
              "nodeType": "Block",
              "src": "4953:300:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50524f564944455f434f4c4c5f544f4b454e5f41444452455353",
                        "id": 9528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5002:28:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7dab5ec7bf8c9c65a0d45a9f2e6384818c6ce5bfb7a265c9a4af74121380cb8",
                          "typeString": "literal_string \"PROVIDE_COLL_TOKEN_ADDRESS\""
                        },
                        "value": "PROVIDE_COLL_TOKEN_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c7dab5ec7bf8c9c65a0d45a9f2e6384818c6ce5bfb7a265c9a4af74121380cb8",
                          "typeString": "literal_string \"PROVIDE_COLL_TOKEN_ADDRESS\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9525,
                        "name": "collateralTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9520,
                        "src": "4963:22:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 9527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireNotEmpty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17035,
                      "src": "4963:38:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,string memory) pure"
                      }
                    },
                    "id": 9529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4963:68:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9530,
                  "nodeType": "ExpressionStatement",
                  "src": "4963:68:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9532,
                        "name": "priceOracleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9512,
                        "src": "5067:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9533,
                        "name": "lendingPoolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9514,
                        "src": "5099:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9534,
                        "name": "loanTermsConsensusAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9516,
                        "src": "5131:25:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9535,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9518,
                        "src": "5170:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9531,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6659,
                        2297,
                        9186
                      ],
                      "referencedDeclaration": 6659,
                      "src": "5042:11:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address)"
                      }
                    },
                    "id": 9536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5042:153:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9537,
                  "nodeType": "ExpressionStatement",
                  "src": "5042:153:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9538,
                      "name": "collateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5628,
                      "src": "5206:15:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9539,
                      "name": "collateralTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9520,
                      "src": "5224:22:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5206:40:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9541,
                  "nodeType": "ExpressionStatement",
                  "src": "5206:40:33"
                }
              ]
            },
            "documentation": "@notice Initializes the current contract instance setting the required parameters, if allowed\n@param priceOracleAddress Contract address of the price oracle\n@param lendingPoolAddress Contract address of the lending pool\n@param loanTermsConsensusAddress Contract adddress for loan term consensus\n@param settingsAddress Contract address for the configuration of the platform\n@param collateralTokenAddress Contract address for the collateral token.",
            "id": 9543,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 9523,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9522,
                  "name": "isNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9152,
                  "src": "4934:16:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4934:18:33"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9512,
                  "name": "priceOracleAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9543,
                  "src": "4740:26:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4740:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9514,
                  "name": "lendingPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9543,
                  "src": "4776:26:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4776:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9516,
                  "name": "loanTermsConsensusAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9543,
                  "src": "4812:33:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4812:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9518,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9543,
                  "src": "4855:23:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4855:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9520,
                  "name": "collateralTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9543,
                  "src": "4888:30:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4888:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4730:194:33"
            },
            "returnParameters": {
              "id": 9524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4953:0:33"
            },
            "scope": 9632,
            "src": "4711:542:33",
            "stateMutability": "nonpayable",
            "superFunction": 10861,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9577,
              "nodeType": "Block",
              "src": "5610:189:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9552,
                      "name": "totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5626,
                      "src": "5620:15:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9555,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9547,
                          "src": "5658:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 9553,
                          "name": "totalCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5626,
                          "src": "5638:15:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20597,
                        "src": "5638:19:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5638:27:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5620:45:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9558,
                  "nodeType": "ExpressionStatement",
                  "src": "5620:45:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9559,
                          "name": "loans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5645,
                          "src": "5675:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$18357_storage_$",
                            "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                          }
                        },
                        "id": 9561,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 9560,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9545,
                          "src": "5681:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5675:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$18357_storage",
                          "typeString": "struct TellerCommon.Loan storage ref"
                        }
                      },
                      "id": 9562,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18342,
                      "src": "5675:24:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9568,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9547,
                          "src": "5731:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 9563,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5645,
                              "src": "5702:5:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$18357_storage_$",
                                "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                              }
                            },
                            "id": 9565,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 9564,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9545,
                              "src": "5708:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5702:13:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$18357_storage",
                              "typeString": "struct TellerCommon.Loan storage ref"
                            }
                          },
                          "id": 9566,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18342,
                          "src": "5702:24:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20597,
                        "src": "5702:28:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5702:36:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5675:63:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9571,
                  "nodeType": "ExpressionStatement",
                  "src": "5675:63:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9573,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9549,
                        "src": "5774:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9574,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9547,
                        "src": "5785:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9572,
                      "name": "_collateralTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9615,
                      "src": "5749:24:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5749:43:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9576,
                  "nodeType": "ExpressionStatement",
                  "src": "5749:43:33"
                }
              ]
            },
            "documentation": "@notice Pays out collateral for the associated loan\n@param loanID The ID of the loan the collateral is for\n@param amount The amount of collateral to be paid",
            "id": 9578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOutCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9545,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 9578,
                  "src": "5521:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5521:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9547,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9578,
                  "src": "5545:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5545:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9549,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 9578,
                  "src": "5569:25:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 9548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5569:15:33",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5511:89:33"
            },
            "returnParameters": {
              "id": 9551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5610:0:33"
            },
            "scope": 9632,
            "src": "5485:314:33",
            "stateMutability": "nonpayable",
            "superFunction": 6552,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9598,
              "nodeType": "Block",
              "src": "6068:228:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9588,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9580,
                        "src": "6160:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9589,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9582,
                        "src": "6168:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9585,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22090,
                        "src": "6137:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_TokenCollateralLoans_$9632",
                          "typeString": "contract super TokenCollateralLoans"
                        }
                      },
                      "id": 9587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_payInCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6694,
                      "src": "6137:22:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6137:38:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9591,
                  "nodeType": "ExpressionStatement",
                  "src": "6137:38:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 9593,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21901,
                          "src": "6270:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6270:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9595,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9582,
                        "src": "6282:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9592,
                      "name": "_collateralTokenTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9631,
                      "src": "6241:28:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6241:48:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9597,
                  "nodeType": "ExpressionStatement",
                  "src": "6241:48:33"
                }
              ]
            },
            "documentation": "@notice Pays collateral in for the associated loan\n@param loanID The ID of the loan the collateral is for\n@param amount The amount of collateral to be paid",
            "id": 9599,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payInCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9580,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 9599,
                  "src": "6027:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6027:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9582,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9599,
                  "src": "6043:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6043:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6026:32:33"
            },
            "returnParameters": {
              "id": 9584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6068:0:33"
            },
            "scope": 9632,
            "src": "6001:295:33",
            "stateMutability": "nonpayable",
            "superFunction": 6694,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9614,
              "nodeType": "Block",
              "src": "6603:80:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9610,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9601,
                        "src": "6658:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9611,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9603,
                        "src": "6669:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9607,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5628,
                            "src": "6627:15:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9606,
                          "name": "ERC20Detailed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21385,
                          "src": "6613:13:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$21385_$",
                            "typeString": "type(contract ERC20Detailed)"
                          }
                        },
                        "id": 9608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6613:30:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Detailed_$21385",
                          "typeString": "contract ERC20Detailed"
                        }
                      },
                      "id": 9609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17346,
                      "src": "6613:44:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Detailed_$21385_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Detailed_$21385_$",
                        "typeString": "function (contract ERC20Detailed,address,uint256)"
                      }
                    },
                    "id": 9612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6613:63:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9613,
                  "nodeType": "ExpressionStatement",
                  "src": "6613:63:33"
                }
              ]
            },
            "documentation": "@notice It transfers an amount of collateral tokens to a specific address.\n@param recipient The address which will receive the tokens.\n@param amount The amount of tokens to transfer.",
            "id": 9615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collateralTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9601,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 9615,
                  "src": "6559:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6559:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9603,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9615,
                  "src": "6578:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6578:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6558:35:33"
            },
            "returnParameters": {
              "id": 9605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6603:0:33"
            },
            "scope": 9632,
            "src": "6525:158:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9630,
              "nodeType": "Block",
              "src": "6997:79:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9626,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9617,
                        "src": "7056:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9627,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9619,
                        "src": "7062:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9623,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5628,
                            "src": "7021:15:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9622,
                          "name": "ERC20Detailed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21385,
                          "src": "7007:13:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$21385_$",
                            "typeString": "type(contract ERC20Detailed)"
                          }
                        },
                        "id": 9624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7007:30:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Detailed_$21385",
                          "typeString": "contract ERC20Detailed"
                        }
                      },
                      "id": 9625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17417,
                      "src": "7007:48:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Detailed_$21385_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Detailed_$21385_$",
                        "typeString": "function (contract ERC20Detailed,address,uint256)"
                      }
                    },
                    "id": 9628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7007:62:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9629,
                  "nodeType": "ExpressionStatement",
                  "src": "7007:62:33"
                }
              ]
            },
            "documentation": "@notice It transfers an amount of collateral tokens from an address to this contract.\n@param from The address where the tokens will transfer from.\n@param amount The amount to be transferred.",
            "id": 9631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collateralTokenTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9617,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 9631,
                  "src": "6958:12:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6958:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9619,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9631,
                  "src": "6972:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6972:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6957:30:33"
            },
            "returnParameters": {
              "id": 9621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6997:0:33"
            },
            "scope": 9632,
            "src": "6920:156:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 9633,
        "src": "1345:5733:33"
      }
    ],
    "src": "0:7079:33"
  },
  "legacyAST": {
    "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/TokenCollateralLoans.sol",
    "exportedSymbols": {
      "TokenCollateralLoans": [
        9632
      ]
    },
    "id": 9633,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9361,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:33"
      },
      {
        "id": 9362,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:33"
      },
      {
        "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/LoansBase.sol",
        "file": "./LoansBase.sol",
        "id": 9363,
        "nodeType": "ImportDirective",
        "scope": 9633,
        "sourceUnit": 7158,
        "src": "72:25:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9364,
              "name": "LoansBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7157,
              "src": "1378:9:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LoansBase_$7157",
                "typeString": "contract LoansBase"
              }
            },
            "id": 9365,
            "nodeType": "InheritanceSpecifier",
            "src": "1378:9:33"
          }
        ],
        "contractDependencies": [
          2345,
          2627,
          7157,
          9187,
          10886,
          21702,
          21771
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract is used as a basis for the creation of loans (not wei) across the platform\n@notice It implements the LoansBase contract from Teller\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 9632,
        "linearizedBaseContracts": [
          9632,
          7157,
          2345,
          21702,
          21771,
          2627,
          9187,
          10886
        ],
        "name": "TokenCollateralLoans",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9376,
              "nodeType": "Block",
              "src": "1630:85:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9368,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21901,
                            "src": "1648:3:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1648:9:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 9370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1661:1:33",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1648:14:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "544f4b454e5f4c4f414e535f56414c55455f4d5553545f42455f5a45524f",
                        "id": 9372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1664:32:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f33a818cfe2b5be858eacf8527ea1801bb9dccadb49769e42646a33febd6c9",
                          "typeString": "literal_string \"TOKEN_LOANS_VALUE_MUST_BE_ZERO\""
                        },
                        "value": "TOKEN_LOANS_VALUE_MUST_BE_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f33a818cfe2b5be858eacf8527ea1801bb9dccadb49769e42646a33febd6c9",
                          "typeString": "literal_string \"TOKEN_LOANS_VALUE_MUST_BE_ZERO\""
                        }
                      ],
                      "id": 9367,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21904,
                        21905
                      ],
                      "referencedDeclaration": 21905,
                      "src": "1640:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1640:57:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9374,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:57:33"
                },
                {
                  "id": 9375,
                  "nodeType": "PlaceholderStatement",
                  "src": "1707:1:33"
                }
              ]
            },
            "documentation": "@notice Checks the value in the current transactionn is zero.\n@dev It throws a require error if value is not zero.",
            "id": 9377,
            "name": "noMsgValue",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 9366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1627:2:33"
            },
            "src": "1608:107:33",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9429,
              "nodeType": "Block",
              "src": "2299:376:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 9403,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5645,
                              "src": "2346:5:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$18357_storage_$",
                                "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                              }
                            },
                            "id": 9405,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 9404,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9381,
                              "src": "2352:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2346:13:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$18357_storage",
                              "typeString": "struct TellerCommon.Loan storage ref"
                            }
                          },
                          "id": 9406,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "loanTerms",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18336,
                          "src": "2346:23:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanTerms_$18332_storage",
                            "typeString": "struct TellerCommon.LoanTerms storage ref"
                          }
                        },
                        "id": 9407,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "borrower",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18321,
                        "src": "2346:32:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "424f52524f5745525f4c4f414e5f49445f4d49534d41544348",
                        "id": 9408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2392:27:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        },
                        "value": "BORROWER_LOAN_ID_MISMATCH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9400,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9379,
                        "src": "2309:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 9402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireEqualTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17068,
                      "src": "2309:23:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 9409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:120:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9410,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:120:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 9412,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9383,
                          "src": "2447:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 9413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2456:1:33",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2447:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43414e4e4f545f4445504f5349545f5a45524f",
                        "id": 9415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2459:21:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        },
                        "value": "CANNOT_DEPOSIT_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        }
                      ],
                      "id": 9411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21904,
                        21905
                      ],
                      "referencedDeclaration": 21905,
                      "src": "2439:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2439:42:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9417,
                  "nodeType": "ExpressionStatement",
                  "src": "2439:42:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9419,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9381,
                        "src": "2592:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9420,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9383,
                        "src": "2600:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9418,
                      "name": "_payInCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9599
                      ],
                      "referencedDeclaration": 9599,
                      "src": "2575:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2575:32:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9422,
                  "nodeType": "ExpressionStatement",
                  "src": "2575:32:33"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9424,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9381,
                        "src": "2643:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9425,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9379,
                        "src": "2651:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9426,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9383,
                        "src": "2661:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9423,
                      "name": "CollateralDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10659,
                      "src": "2623:19:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 9427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2623:45:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9428,
                  "nodeType": "EmitStatement",
                  "src": "2618:50:33"
                }
              ]
            },
            "documentation": "@notice Deposit collateral tokens into a loan.\n@param borrower The address of the loan borrower.\n@param loanID The ID of the loan the collateral is for\n@param amount The amount to deposit as collateral.",
            "id": 9430,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 9386,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9385,
                  "name": "noMsgValue",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9377,
                  "src": "2147:10:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2147:12:33"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9388,
                    "name": "loanID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9381,
                    "src": "2184:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 9389,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9387,
                  "name": "loanActiveOrSet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5722,
                  "src": "2168:15:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2168:23:33"
              },
              {
                "arguments": [],
                "id": 9391,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9390,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9162,
                  "src": "2200:13:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2200:15:33"
              },
              {
                "arguments": [],
                "id": 9393,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9392,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2232,
                  "src": "2224:13:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2224:15:33"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9396,
                        "name": "lendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5634,
                        "src": "2281:11:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10590",
                          "typeString": "contract LendingPoolInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10590",
                          "typeString": "contract LendingPoolInterface"
                        }
                      ],
                      "id": 9395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2273:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 9397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2273:20:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 9398,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9394,
                  "name": "whenLendingPoolNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2246,
                  "src": "2248:24:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2248:46:33"
              }
            ],
            "name": "depositCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9379,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 9430,
                  "src": "2035:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2035:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9381,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 9430,
                  "src": "2061:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9383,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9430,
                  "src": "2085:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2085:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2025:80:33"
            },
            "returnParameters": {
              "id": 9399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2299:0:33"
            },
            "scope": 9632,
            "src": "1999:676:33",
            "stateMutability": "payable",
            "superFunction": 10751,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9509,
              "nodeType": "Block",
              "src": "3323:872:33",
              "statements": [
                {
                  "assignments": [
                    9454
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9454,
                      "name": "loanID",
                      "nodeType": "VariableDeclaration",
                      "scope": 9509,
                      "src": "3333:14:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9453,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3333:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9457,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9455,
                      "name": "_getAndIncrementLoanID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6970,
                      "src": "3350:22:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 9456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3350:24:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3333:41:33"
                },
                {
                  "assignments": [
                    9459,
                    9461,
                    9463
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9459,
                      "name": "interestRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 9509,
                      "src": "3399:20:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9458,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3399:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9461,
                      "name": "collateralRatio",
                      "nodeType": "VariableDeclaration",
                      "scope": 9509,
                      "src": "3433:23:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9460,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3433:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9463,
                      "name": "maxLoanAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 9509,
                      "src": "3470:21:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9462,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3470:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9469,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9466,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9432,
                        "src": "3538:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9467,
                        "name": "responses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9435,
                        "src": "3547:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$18312_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$18312_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9464,
                        "name": "loanTermsConsensus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5636,
                        "src": "3504:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LoanTermsConsensusInterface_$10646",
                          "typeString": "contract LoanTermsConsensusInterface"
                        }
                      },
                      "id": 9465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10636,
                      "src": "3504:33:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LoanRequest_$18297_memory_ptr_$_t_array$_t_struct$_LoanResponse_$18312_memory_$dyn_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct TellerCommon.LoanRequest memory,struct TellerCommon.LoanResponse memory[] memory) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 9468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3504:53:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3385:172:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 9470,
                        "name": "loans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5645,
                        "src": "3568:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$18357_storage_$",
                          "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                        }
                      },
                      "id": 9472,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9471,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9454,
                        "src": "3574:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3568:13:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$18357_storage",
                        "typeString": "struct TellerCommon.Loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9474,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9454,
                          "src": "3608:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9475,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9432,
                          "src": "3628:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9476,
                          "name": "interestRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9459,
                          "src": "3649:12:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9477,
                          "name": "collateralRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9461,
                          "src": "3675:15:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9478,
                          "name": "maxLoanAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9463,
                          "src": "3704:13:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9473,
                        "name": "createLoan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7037,
                        "src": "3584:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_LoanRequest_$18297_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_Loan_$18357_memory_ptr_$",
                          "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256) view returns (struct TellerCommon.Loan memory)"
                        }
                      },
                      "id": 9479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3584:143:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$18357_memory_ptr",
                        "typeString": "struct TellerCommon.Loan memory"
                      }
                    },
                    "src": "3568:159:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$18357_storage",
                      "typeString": "struct TellerCommon.Loan storage ref"
                    }
                  },
                  "id": 9481,
                  "nodeType": "ExpressionStatement",
                  "src": "3568:159:33"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 9482,
                      "name": "collateralAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9437,
                      "src": "3742:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 9483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3761:1:33",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3742:20:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 9491,
                  "nodeType": "IfStatement",
                  "src": "3738:165:33",
                  "trueBody": {
                    "id": 9490,
                    "nodeType": "Block",
                    "src": "3764:139:33",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 9486,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9454,
                              "src": "3867:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 9487,
                              "name": "collateralAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9437,
                              "src": "3875:16:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9485,
                            "name": "_payInCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9599
                            ],
                            "referencedDeclaration": 9599,
                            "src": "3850:16:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 9488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3850:42:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9489,
                        "nodeType": "ExpressionStatement",
                        "src": "3850:42:33"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9497,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9454,
                        "src": "3950:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9492,
                          "name": "borrowerLoans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5641,
                          "src": "3913:13:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 9495,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9493,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9432,
                            "src": "3927:7:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                              "typeString": "struct TellerCommon.LoanRequest calldata"
                            }
                          },
                          "id": 9494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18284,
                          "src": "3927:16:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3913:31:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 9496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3913:36:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 9498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3913:44:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9499,
                  "nodeType": "ExpressionStatement",
                  "src": "3913:44:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9501,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9454,
                        "src": "4039:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9502,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9432,
                        "src": "4059:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9503,
                        "name": "interestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9459,
                        "src": "4080:12:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9504,
                        "name": "collateralRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9461,
                        "src": "4106:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9505,
                        "name": "maxLoanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9463,
                        "src": "4135:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9506,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9437,
                        "src": "4162:16:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9500,
                      "name": "_emitLoanTermsSetAndCollateralDepositedEventsIfApplicable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7082,
                      "src": "3968:57:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_LoanRequest_$18297_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 9507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3968:220:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9508,
                  "nodeType": "ExpressionStatement",
                  "src": "3968:220:33"
                }
              ]
            },
            "documentation": "@notice Creates a loan with the loan request and terms\n@param request Struct of the protocol loan request\n@param responses List of structs of the protocol loan responses\n@param collateralAmount Amount of collateral required for the loan",
            "id": 9510,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 9440,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9439,
                  "name": "noMsgValue",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9377,
                  "src": "3183:10:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3183:12:33"
              },
              {
                "arguments": [],
                "id": 9442,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9441,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9162,
                  "src": "3204:13:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3204:15:33"
              },
              {
                "arguments": [],
                "id": 9444,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9443,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2232,
                  "src": "3228:13:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3228:15:33"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 9446,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9432,
                      "src": "3263:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                        "typeString": "struct TellerCommon.LoanRequest calldata"
                      }
                    },
                    "id": 9447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "borrower",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 18284,
                    "src": "3263:16:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 9448,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9445,
                  "name": "isBorrower",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5659,
                  "src": "3252:10:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3252:28:33"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9450,
                    "name": "request",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9432,
                    "src": "3310:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                      "typeString": "struct TellerCommon.LoanRequest calldata"
                    }
                  }
                ],
                "id": 9451,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9449,
                  "name": "withValidLoanRequest",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5775,
                  "src": "3289:20:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_LoanRequest_$18297_memory_ptr_$",
                    "typeString": "modifier (struct TellerCommon.LoanRequest memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3289:29:33"
              }
            ],
            "name": "createLoanWithTerms",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9432,
                  "name": "request",
                  "nodeType": "VariableDeclaration",
                  "scope": 9510,
                  "src": "3004:41:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LoanRequest_$18297_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanRequest"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9431,
                    "name": "TellerCommon.LoanRequest",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18297,
                    "src": "3004:24:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$18297_storage_ptr",
                      "typeString": "struct TellerCommon.LoanRequest"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9435,
                  "name": "responses",
                  "nodeType": "VariableDeclaration",
                  "scope": 9510,
                  "src": "3055:46:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_LoanResponse_$18312_calldata_$dyn_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanResponse[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 9433,
                      "name": "TellerCommon.LoanResponse",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 18312,
                      "src": "3055:25:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanResponse_$18312_storage_ptr",
                        "typeString": "struct TellerCommon.LoanResponse"
                      }
                    },
                    "id": 9434,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3055:27:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_LoanResponse_$18312_storage_$dyn_storage_ptr",
                      "typeString": "struct TellerCommon.LoanResponse[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9437,
                  "name": "collateralAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9510,
                  "src": "3111:24:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3111:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2994:147:33"
            },
            "returnParameters": {
              "id": 9452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3323:0:33"
            },
            "scope": 9632,
            "src": "2966:1229:33",
            "stateMutability": "payable",
            "superFunction": 10768,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9542,
              "nodeType": "Block",
              "src": "4953:300:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50524f564944455f434f4c4c5f544f4b454e5f41444452455353",
                        "id": 9528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5002:28:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7dab5ec7bf8c9c65a0d45a9f2e6384818c6ce5bfb7a265c9a4af74121380cb8",
                          "typeString": "literal_string \"PROVIDE_COLL_TOKEN_ADDRESS\""
                        },
                        "value": "PROVIDE_COLL_TOKEN_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c7dab5ec7bf8c9c65a0d45a9f2e6384818c6ce5bfb7a265c9a4af74121380cb8",
                          "typeString": "literal_string \"PROVIDE_COLL_TOKEN_ADDRESS\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9525,
                        "name": "collateralTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9520,
                        "src": "4963:22:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 9527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireNotEmpty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17035,
                      "src": "4963:38:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,string memory) pure"
                      }
                    },
                    "id": 9529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4963:68:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9530,
                  "nodeType": "ExpressionStatement",
                  "src": "4963:68:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9532,
                        "name": "priceOracleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9512,
                        "src": "5067:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9533,
                        "name": "lendingPoolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9514,
                        "src": "5099:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9534,
                        "name": "loanTermsConsensusAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9516,
                        "src": "5131:25:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9535,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9518,
                        "src": "5170:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9531,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6659,
                        2297,
                        9186
                      ],
                      "referencedDeclaration": 6659,
                      "src": "5042:11:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address)"
                      }
                    },
                    "id": 9536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5042:153:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9537,
                  "nodeType": "ExpressionStatement",
                  "src": "5042:153:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9538,
                      "name": "collateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5628,
                      "src": "5206:15:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9539,
                      "name": "collateralTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9520,
                      "src": "5224:22:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5206:40:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9541,
                  "nodeType": "ExpressionStatement",
                  "src": "5206:40:33"
                }
              ]
            },
            "documentation": "@notice Initializes the current contract instance setting the required parameters, if allowed\n@param priceOracleAddress Contract address of the price oracle\n@param lendingPoolAddress Contract address of the lending pool\n@param loanTermsConsensusAddress Contract adddress for loan term consensus\n@param settingsAddress Contract address for the configuration of the platform\n@param collateralTokenAddress Contract address for the collateral token.",
            "id": 9543,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 9523,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9522,
                  "name": "isNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9152,
                  "src": "4934:16:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4934:18:33"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9512,
                  "name": "priceOracleAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9543,
                  "src": "4740:26:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4740:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9514,
                  "name": "lendingPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9543,
                  "src": "4776:26:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4776:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9516,
                  "name": "loanTermsConsensusAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9543,
                  "src": "4812:33:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4812:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9518,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9543,
                  "src": "4855:23:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4855:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9520,
                  "name": "collateralTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9543,
                  "src": "4888:30:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4888:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4730:194:33"
            },
            "returnParameters": {
              "id": 9524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4953:0:33"
            },
            "scope": 9632,
            "src": "4711:542:33",
            "stateMutability": "nonpayable",
            "superFunction": 10861,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9577,
              "nodeType": "Block",
              "src": "5610:189:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9552,
                      "name": "totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5626,
                      "src": "5620:15:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9555,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9547,
                          "src": "5658:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 9553,
                          "name": "totalCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5626,
                          "src": "5638:15:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20597,
                        "src": "5638:19:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5638:27:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5620:45:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9558,
                  "nodeType": "ExpressionStatement",
                  "src": "5620:45:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9559,
                          "name": "loans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5645,
                          "src": "5675:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$18357_storage_$",
                            "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                          }
                        },
                        "id": 9561,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 9560,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9545,
                          "src": "5681:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5675:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$18357_storage",
                          "typeString": "struct TellerCommon.Loan storage ref"
                        }
                      },
                      "id": 9562,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18342,
                      "src": "5675:24:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9568,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9547,
                          "src": "5731:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 9563,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5645,
                              "src": "5702:5:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$18357_storage_$",
                                "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                              }
                            },
                            "id": 9565,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 9564,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9545,
                              "src": "5708:6:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5702:13:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$18357_storage",
                              "typeString": "struct TellerCommon.Loan storage ref"
                            }
                          },
                          "id": 9566,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18342,
                          "src": "5702:24:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20597,
                        "src": "5702:28:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5702:36:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5675:63:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9571,
                  "nodeType": "ExpressionStatement",
                  "src": "5675:63:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9573,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9549,
                        "src": "5774:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9574,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9547,
                        "src": "5785:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9572,
                      "name": "_collateralTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9615,
                      "src": "5749:24:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5749:43:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9576,
                  "nodeType": "ExpressionStatement",
                  "src": "5749:43:33"
                }
              ]
            },
            "documentation": "@notice Pays out collateral for the associated loan\n@param loanID The ID of the loan the collateral is for\n@param amount The amount of collateral to be paid",
            "id": 9578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOutCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9545,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 9578,
                  "src": "5521:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5521:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9547,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9578,
                  "src": "5545:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5545:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9549,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 9578,
                  "src": "5569:25:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 9548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5569:15:33",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5511:89:33"
            },
            "returnParameters": {
              "id": 9551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5610:0:33"
            },
            "scope": 9632,
            "src": "5485:314:33",
            "stateMutability": "nonpayable",
            "superFunction": 6552,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9598,
              "nodeType": "Block",
              "src": "6068:228:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9588,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9580,
                        "src": "6160:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9589,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9582,
                        "src": "6168:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9585,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22090,
                        "src": "6137:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_TokenCollateralLoans_$9632",
                          "typeString": "contract super TokenCollateralLoans"
                        }
                      },
                      "id": 9587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_payInCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6694,
                      "src": "6137:22:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6137:38:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9591,
                  "nodeType": "ExpressionStatement",
                  "src": "6137:38:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 9593,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21901,
                          "src": "6270:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6270:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9595,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9582,
                        "src": "6282:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9592,
                      "name": "_collateralTokenTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9631,
                      "src": "6241:28:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6241:48:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9597,
                  "nodeType": "ExpressionStatement",
                  "src": "6241:48:33"
                }
              ]
            },
            "documentation": "@notice Pays collateral in for the associated loan\n@param loanID The ID of the loan the collateral is for\n@param amount The amount of collateral to be paid",
            "id": 9599,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payInCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9580,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 9599,
                  "src": "6027:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6027:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9582,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9599,
                  "src": "6043:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6043:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6026:32:33"
            },
            "returnParameters": {
              "id": 9584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6068:0:33"
            },
            "scope": 9632,
            "src": "6001:295:33",
            "stateMutability": "nonpayable",
            "superFunction": 6694,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9614,
              "nodeType": "Block",
              "src": "6603:80:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9610,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9601,
                        "src": "6658:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9611,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9603,
                        "src": "6669:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9607,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5628,
                            "src": "6627:15:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9606,
                          "name": "ERC20Detailed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21385,
                          "src": "6613:13:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$21385_$",
                            "typeString": "type(contract ERC20Detailed)"
                          }
                        },
                        "id": 9608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6613:30:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Detailed_$21385",
                          "typeString": "contract ERC20Detailed"
                        }
                      },
                      "id": 9609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17346,
                      "src": "6613:44:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Detailed_$21385_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Detailed_$21385_$",
                        "typeString": "function (contract ERC20Detailed,address,uint256)"
                      }
                    },
                    "id": 9612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6613:63:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9613,
                  "nodeType": "ExpressionStatement",
                  "src": "6613:63:33"
                }
              ]
            },
            "documentation": "@notice It transfers an amount of collateral tokens to a specific address.\n@param recipient The address which will receive the tokens.\n@param amount The amount of tokens to transfer.",
            "id": 9615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collateralTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9601,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 9615,
                  "src": "6559:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6559:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9603,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9615,
                  "src": "6578:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6578:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6558:35:33"
            },
            "returnParameters": {
              "id": 9605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6603:0:33"
            },
            "scope": 9632,
            "src": "6525:158:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9630,
              "nodeType": "Block",
              "src": "6997:79:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9626,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9617,
                        "src": "7056:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9627,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9619,
                        "src": "7062:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9623,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5628,
                            "src": "7021:15:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9622,
                          "name": "ERC20Detailed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21385,
                          "src": "7007:13:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$21385_$",
                            "typeString": "type(contract ERC20Detailed)"
                          }
                        },
                        "id": 9624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7007:30:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Detailed_$21385",
                          "typeString": "contract ERC20Detailed"
                        }
                      },
                      "id": 9625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17417,
                      "src": "7007:48:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Detailed_$21385_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Detailed_$21385_$",
                        "typeString": "function (contract ERC20Detailed,address,uint256)"
                      }
                    },
                    "id": 9628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7007:62:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9629,
                  "nodeType": "ExpressionStatement",
                  "src": "7007:62:33"
                }
              ]
            },
            "documentation": "@notice It transfers an amount of collateral tokens from an address to this contract.\n@param from The address where the tokens will transfer from.\n@param amount The amount to be transferred.",
            "id": 9631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collateralTokenTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9617,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 9631,
                  "src": "6958:12:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6958:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9619,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9631,
                  "src": "6972:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6972:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6957:30:33"
            },
            "returnParameters": {
              "id": 9621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6997:0:33"
            },
            "scope": 9632,
            "src": "6920:156:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 9633,
        "src": "1345:5733:33"
      }
    ],
    "src": "0:7079:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0xeec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "loanID",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            }
          ],
          "name": "CollateralDeposited",
          "type": "event"
        },
        "0x7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd41": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "loanID",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "withdrawalAmount",
              "type": "uint256"
            }
          ],
          "name": "CollateralWithdrawn",
          "type": "event"
        },
        "0x9950a0562c02382e2e840daa73082d5be7660ce37601f28fa4c84089c11e8a06": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "loanID",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "liquidator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "collateralOut",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokensIn",
              "type": "uint256"
            }
          ],
          "name": "LoanLiquidated",
          "type": "event"
        },
        "0x20a1f2ec363af45dc5ee7d9d622f2dd68b52501c382126c7f04b53663c4c69bf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "loanID",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountPaid",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalOwed",
              "type": "uint256"
            }
          ],
          "name": "LoanRepaid",
          "type": "event"
        },
        "0x85b5516a17ce775661a4b967b1fb30c852678f6598d86d9f3c99b7b60ff2d0ce": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "loanID",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "escrow",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountBorrowed",
              "type": "uint256"
            }
          ],
          "name": "LoanTakenOut",
          "type": "event"
        },
        "0x0358f509931cba53bbb6a94b7f05a5178220a0c7ddb54b1a1722df9e6ed6aa09": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "loanID",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "collateralRatio",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "maxLoanAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "termsExpiry",
              "type": "uint256"
            }
          ],
          "name": "LoanTermsSet",
          "type": "event"
        },
        "0xf51f0fffc8121ee3747e0536c487d894894cdba960ccfb4ab385a88d51b16fed": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "oldPriceOracle",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newPriceOracle",
              "type": "address"
            }
          ],
          "name": "PriceOracleUpdated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xdDCA72AF6Ab0c281499cfdf508ad95C3F3A14CA4",
      "transactionHash": "0x4553c79b32084778ad208f2d0b995612694e8ea97660ea164894d7bc63326d1e"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-12T16:12:27.702Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "develop@teller.finance",
    "methods": {
      "cToken()": {
        "return": "Address of the cToken"
      },
      "canLiquidateLoan(uint256)": {
        "params": {
          "loanID": "The ID of the loan to check"
        },
        "return": "bool weather the loan can be liquidated"
      },
      "createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)": {
        "params": {
          "collateralAmount": "Amount of collateral required for the loan",
          "request": "Struct of the protocol loan request",
          "responses": "List of structs of the protocol loan responses"
        }
      },
      "depositCollateral(address,uint256,uint256)": {
        "params": {
          "amount": "The amount to deposit as collateral.",
          "borrower": "The address of the loan borrower.",
          "loanID": "The ID of the loan the collateral is for"
        }
      },
      "getBorrowerLoans(address)": {
        "params": {
          "borrower": "The borrower's address"
        }
      },
      "getCollateralInfo(uint256)": {
        "params": {
          "loanID": "of the loan to get info for"
        },
        "return": "memory TellerCommon.LoanCollateralInfo Collateral information of the loan"
      },
      "getLiquidationInfo(uint256)": {
        "params": {
          "loanID": "loan id to get the info."
        },
        "return": "liquidationInfo get current liquidation info for the given loan id."
      },
      "getTotalOwed(uint256)": {
        "params": {
          "loanID": "The ID of the loan to be queried"
        },
        "return": "uint256 The total amount owed remaining"
      },
      "initialize(address,address,address,address,address)": {
        "params": {
          "collateralTokenAddress": "Contract address for the collateral token.",
          "lendingPoolAddress": "Contract address of the lending pool",
          "loanTermsConsensusAddress": "Contract adddress for loan term consensus",
          "priceOracleAddress": "Contract address of the price oracle",
          "settingsAddress": "Contract address for the configuration of the platform"
        }
      },
      "initialized()": {
        "return": "true if contract is initialized. Otherwise it returns false."
      },
      "isLoanSecured(uint256)": {
        "return": "bool value of it being secured or not."
      },
      "lendingToken()": {
        "return": "Address of the lending token"
      },
      "liquidateLoan(uint256)": {
        "params": {
          "loanID": "The ID of the loan to be liquidated"
        }
      },
      "repay(uint256,uint256)": {
        "params": {
          "amount": "The amount of tokens to pay back to the loan",
          "loanID": "The ID of the loan the payment is for"
        }
      },
      "setPriceOracle(address)": {
        "details": "It throws a require error if sender is not allowed.It throws a require error if new address is empty (0x0) or not a contract.",
        "params": {
          "newPriceOracle": "the new price oracle address."
        }
      },
      "settings()": {
        "details": "This address should NOT change over the time. See details in the _setSettings(...) function."
      },
      "tToken()": {
        "return": "Address of the tToken"
      },
      "takeOutLoan(uint256,uint256)": {
        "details": "collateral ratio is a percentage of the loan amount that's required in collateralthe percentage will be *(10**2). I.e. collateralRatio of 5244 means 52.44% collateralis required in the loan. Interest rate is also a percentage with 2 decimal points."
      },
      "withdrawCollateral(uint256,uint256)": {
        "params": {
          "amount": "The amount of collateral token or ether the caller is hoping to withdraw.",
          "loanID": "The ID of the loan the collateral is for"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "cToken()": {
        "notice": "Returns the cToken in the lending pool"
      },
      "canLiquidateLoan(uint256)": {
        "notice": "A loan can be liquidated if it is: under collateralized or expired"
      },
      "createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)": {
        "notice": "Creates a loan with the loan request and terms"
      },
      "depositCollateral(address,uint256,uint256)": {
        "notice": "Deposit collateral tokens into a loan."
      },
      "getBorrowerLoans(address)": {
        "notice": "Get a list of all loans for a borrower"
      },
      "getCollateralInfo(uint256)": {
        "notice": "Get collateral information of a specific loan"
      },
      "getLiquidationInfo(uint256)": {
        "notice": "It getss the current liquidation info for a given loan id."
      },
      "getTotalOwed(uint256)": {
        "notice": "Returns the total owed amount remaining for a specified loan"
      },
      "initialize(address,address,address,address,address)": {
        "notice": "Initializes the current contract instance setting the required parameters, if allowed"
      },
      "initialized()": {
        "notice": "Gets if the contract is initialized."
      },
      "isLoanSecured(uint256)": {
        "notice": "Checks wheather the loan's collateral ratio is considered to be secured based on the settings collateral buffer value."
      },
      "lendingToken()": {
        "notice": "Returns the lending token in the lending pool"
      },
      "liquidateLoan(uint256)": {
        "notice": "Liquidate a loan if it is expired or under collateralized"
      },
      "repay(uint256,uint256)": {
        "notice": "Make a payment to a loan"
      },
      "setPriceOracle(address)": {
        "notice": "Updates the current price oracle instance."
      },
      "settings()": {
        "notice": "The gets the settings contract address from the SETTINGS_SLOT."
      },
      "tToken()": {
        "notice": "Returns the tToken in the lending pool"
      },
      "takeOutLoan(uint256,uint256)": {
        "notice": "Take out a loan"
      },
      "withdrawCollateral(uint256,uint256)": {
        "notice": "Withdraw collateral from a loan, unless this isn't allowed"
      }
    },
    "notice": "This contract is used as a basis for the creation of loans (not wei) across the platformIt implements the LoansBase contract from Teller"
  }
}