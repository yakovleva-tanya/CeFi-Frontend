{
  "contractName": "TokenCollateralLoans",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        }
      ],
      "name": "CollateralDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        }
      ],
      "name": "CollateralWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensIn",
          "type": "uint256"
        }
      ],
      "name": "LoanLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalOwed",
          "type": "uint256"
        }
      ],
      "name": "LoanRepaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountBorrowed",
          "type": "uint256"
        }
      ],
      "name": "LoanTakenOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "interestRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxLoanAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "termsExpiry",
          "type": "uint256"
        }
      ],
      "name": "LoanTermsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldPriceOracle",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newPriceOracle",
          "type": "address"
        }
      ],
      "name": "PriceOracleUpdated",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "borrowerLoans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "canLiquidateLoan",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "collateralToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "consts",
      "outputs": [
        {
          "internalType": "contract SettingsConsts",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "getBorrowerLoans",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "getCollateralInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "neededInLendingTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "neededInCollateralTokens",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "moreCollateralRequired",
              "type": "bool"
            }
          ],
          "internalType": "struct TellerCommon.LoanCollateralInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "getTotalOwed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lendingPool",
      "outputs": [
        {
          "internalType": "contract LendingPoolInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lendingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "liquidateLoan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "loanIDCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "loanTermsConsensus",
      "outputs": [
        {
          "internalType": "contract LoanTermsConsensusInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            }
          ],
          "internalType": "struct TellerCommon.LoanTerms",
          "name": "loanTerms",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "termsExpiry",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastCollateralIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "principalOwed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestOwed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "internalType": "enum TellerCommon.LoanStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "liquidated",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "priceOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newPriceOracle",
          "type": "address"
        }
      ],
      "name": "setPriceOracle",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "contract SettingsInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBorrow",
          "type": "uint256"
        }
      ],
      "name": "takeOutLoan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "withdrawCollateral",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositCollateral",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "consensusAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requestNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requestTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct TellerCommon.LoanRequest",
          "name": "request",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "consensusAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "responseTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanAmount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "signerNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct TellerCommon.Signature",
              "name": "signature",
              "type": "tuple"
            }
          ],
          "internalType": "struct TellerCommon.LoanResponse[]",
          "name": "responses",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "createLoanWithTerms",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "priceOracleAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lendingPoolAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "loanTermsConsensusAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "settingsAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIn\",\"type\":\"uint256\"}],\"name\":\"LoanLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalOwed\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBorrowed\",\"type\":\"uint256\"}],\"name\":\"LoanTakenOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"termsExpiry\",\"type\":\"uint256\"}],\"name\":\"LoanTermsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPriceOracle\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"borrowerLoans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"canLiquidateLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"consts\",\"outputs\":[{\"internalType\":\"contract SettingsConsts\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"consensusAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestTime\",\"type\":\"uint256\"}],\"internalType\":\"struct TellerCommon.LoanRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"consensusAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"responseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"signerNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct TellerCommon.Signature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"struct TellerCommon.LoanResponse[]\",\"name\":\"responses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"createLoanWithTerms\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"getBorrowerLoans\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"getCollateralInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"neededInLendingTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"neededInCollateralTokens\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"moreCollateralRequired\",\"type\":\"bool\"}],\"internalType\":\"struct TellerCommon.LoanCollateralInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"getTotalOwed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lendingPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanTermsConsensusAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"settingsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingPool\",\"outputs\":[{\"internalType\":\"contract LendingPoolInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"liquidateLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"loanIDCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"loanTermsConsensus\",\"outputs\":[{\"internalType\":\"contract LoanTermsConsensusInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"internalType\":\"struct TellerCommon.LoanTerms\",\"name\":\"loanTerms\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"termsExpiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastCollateralIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"internalType\":\"enum TellerCommon.LoanStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"contract SettingsInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBorrow\",\"type\":\"uint256\"}],\"name\":\"takeOutLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"methods\":{\"canLiquidateLoan(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to check\"},\"return\":\"bool weather the loan can be liquidated\"},\"createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)\":{\"params\":{\"collateralAmount\":\"Amount of collateral required for the loan\",\"request\":\"Struct of the protocol loan request\",\"responses\":\"List of structs of the protocol loan responses\"}},\"depositCollateral(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount to deposit as collateral.\",\"borrower\":\"The address of the loan borrower.\",\"loanID\":\"The ID of the loan the collateral is for\"}},\"getBorrowerLoans(address)\":{\"params\":{\"borrower\":\"The borrower's address\"}},\"getCollateralInfo(uint256)\":{\"params\":{\"loanID\":\"of the loan to get info for\"},\"return\":\"memory TellerCommon.LoanCollateralInfo Collateral information of the loan\"},\"getTotalOwed(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to be queried\"},\"return\":\"uint256 The total amount owed remaining\"},\"initialize(address,address,address,address,address)\":{\"params\":{\"collateralTokenAddress\":\"Contract address for the collateral token.\",\"lendingPoolAddress\":\"Contract address of the lending pool\",\"loanTermsConsensusAddress\":\"Contract adddress for loan term consensus\",\"priceOracleAddress\":\"Contract address of the price oracle\",\"settingsAddress\":\"Contract address for the configuration of the platform\"}},\"initialized()\":{\"return\":\"true if contract is initialized. Otherwise it returns false.\"},\"lendingToken()\":{\"return\":\"Address of the lending token\"},\"liquidateLoan(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to be liquidated\"}},\"repay(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to pay back to the loan\",\"loanID\":\"The ID of the loan the payment is for\"}},\"setPriceOracle(address)\":{\"details\":\"It throws a require error if sender is not allowed.It throws a require error if new address is empty (0x0) or not a contract.\",\"params\":{\"newPriceOracle\":\"the new price oracle address.\"}},\"takeOutLoan(uint256,uint256)\":{\"details\":\"collateral ratio is a percentage of the loan amount that's required in collateralthe percentage will be *(10**2). I.e. collateralRatio of 5244 means 52.44% collateralis required in the loan. Interest rate is also a percentage with 2 decimal points.\"},\"withdrawCollateral(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of collateral token or ether the caller is hoping to withdraw.\",\"loanID\":\"The ID of the loan the collateral is for\"}}}},\"userdoc\":{\"methods\":{\"canLiquidateLoan(uint256)\":{\"notice\":\"A loan can be liquidated if it is: under collateralized or expired\"},\"createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)\":{\"notice\":\"Creates a loan with the loan request and terms\"},\"depositCollateral(address,uint256,uint256)\":{\"notice\":\"Deposit collateral tokens into a loan.\"},\"getBorrowerLoans(address)\":{\"notice\":\"Get a list of all loans for a borrower\"},\"getCollateralInfo(uint256)\":{\"notice\":\"Get collateral information of a specific loan\"},\"getTotalOwed(uint256)\":{\"notice\":\"Returns the total owed amount remaining for a specified loan\"},\"initialize(address,address,address,address,address)\":{\"notice\":\"Initializes the current contract instance setting the required parameters, if allowed\"},\"initialized()\":{\"notice\":\"Gets if the contract is initialized.\"},\"lendingToken()\":{\"notice\":\"Returns the lending token in the lending pool\"},\"liquidateLoan(uint256)\":{\"notice\":\"Liquidate a loan if it is expired or under collateralized\"},\"repay(uint256,uint256)\":{\"notice\":\"Make a payment to a loan\"},\"setPriceOracle(address)\":{\"notice\":\"Updates the current price oracle instance.\"},\"settings()\":{\"notice\":\"The settings contract.\"},\"takeOutLoan(uint256,uint256)\":{\"notice\":\"Take out a loan\"},\"withdrawCollateral(uint256,uint256)\":{\"notice\":\"Withdraw collateral from a loan, unless this isn't allowed\"}},\"notice\":\"This contract is used as a basis for the creation of loans (not wei) across the platformIt implements the LoansBase contract from Teller\"}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TokenCollateralLoans.sol\":\"TokenCollateralLoans\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/atm/ATMGovernanceInterface.sol\":{\"keccak256\":\"0x941d294aa385de623880428e08bf2e8ed4ef4e0f64b64297711748bbcf1e3e62\",\"urls\":[\"bzz-raw://e25e5830eb12b06fc560d5fc77112201fe6cce29a397ce32a982fffe1f0ea88d\",\"dweb:/ipfs/QmUoHemMNYziKTm9b7FwxQvZrtDYpLDw1HyUFchpwdbdw1\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/Base.sol\":{\"keccak256\":\"0xcc1904a218af2a97dfe9ffb2d787975f14cfca658f24441eb84b1b83fcc12d59\",\"urls\":[\"bzz-raw://a1fab6b5c3ad79014661b17640b22a5c912749986cd1163133edab64194ac5ac\",\"dweb:/ipfs/QmVdH23D6pd28LtQLc4xcEsvRxVsmZ9qwW3XBxeTYYjn5s\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol\":{\"keccak256\":\"0xea409b9c0704a8f308295740e8595eb5fdc670b298ae9b63f5bb538783619a35\",\"urls\":[\"bzz-raw://22490fcd6a157faa8f1bdf7f715435c2a2572277c46e67d39533b411026b580d\",\"dweb:/ipfs/QmW5nUYb9oLpZALaWabBA45MnfGB4MJspZEkvbuRJfSSg7\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LoansBase.sol\":{\"keccak256\":\"0xbefffd410d92d6d7df37f99b48e4bcef4f0c205696607c2d2638ecd5b58cb201\",\"urls\":[\"bzz-raw://2bfc7faf1584db8c30c71d1f0885f2cc96f18d8d2f3a9ab3b3f091c9948c8f0a\",\"dweb:/ipfs/QmdX4Eq7iGMgtYQGjcGmNTyGedYeCy3yj6jMUvLr7Udsx4\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TInitializable.sol\":{\"keccak256\":\"0xfd04f8b08548b7a4aacbf26eaf65f64628c38f9fc34c363317daa593c7c25917\",\"urls\":[\"bzz-raw://025bbb10f643ebec3bc77303bca1585c572c76f8261ce42ed816b3c2a7799d20\",\"dweb:/ipfs/QmYS3L6u6f7ucRxGoap3RSD1jeJERnZk3XQRden1fEDQMs\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TokenCollateralLoans.sol\":{\"keccak256\":\"0x9101fd7b3e9a06c39a70513c9d4eaec804c40924ec3ee276d9a6377058b609fe\",\"urls\":[\"bzz-raw://d74a480eb7888f45fd4d23253d28878793eba6237ecb73f6e79f0e9b00459e92\",\"dweb:/ipfs/QmYRdSpemBwFfdEwbS8dSsqBEF211EPhXHCKVQp5rqJLVV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0xb5b2225e4f6db57d59d5292f542acc0675e9f95b3e3094d9be4cf6ec079cb86e\",\"urls\":[\"bzz-raw://f0c822f79ebb3f775b4fea591a5555c3efacba6719d4adbab83571dd35f059e3\",\"dweb:/ipfs/QmYiHmtPJsJD67g7Pk7kM72hsHS7BVVJtciKjCoUioW4gS\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowInterface.sol\":{\"keccak256\":\"0x65c08f6f62a51becac639418b7ebe9781decdc89e1f0bc21acfa609418dfa8cb\",\"urls\":[\"bzz-raw://dabc828f30fae14e7d70643480cb1202ec2c85cf654517f18440a0f5b8062101\",\"dweb:/ipfs/QmP3LXe9upby2uN3KunXhBeKm1Mj9xqf31sqDFEMYnwXYt\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x91250ee3c1d73b5d1720f7b41f18072eb347d73e4d3de464537ece49e1fa1d93\",\"urls\":[\"bzz-raw://f11ce1d70152f6d19f9c23788b4458631df3fd748a52849b899183ce2dabc52b\",\"dweb:/ipfs/QmaNQybwKYW5BfT3h6z6P1SSUwYEyXQviisYjUr7cHLzQR\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LendingPoolInterface.sol\":{\"keccak256\":\"0x6fff3f4e065b2d00d8ef933f3e4a173524c2b9888bf86a6081092e5893efe294\",\"urls\":[\"bzz-raw://46411a67543dde454785d65bc33d4b920c271ac27c0353666d307a2210341d47\",\"dweb:/ipfs/QmbgZu2hQZkDgKnSU9J7XR5DvN7gKVfd8ffvSnDS6DWREA\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LoanTermsConsensusInterface.sol\":{\"keccak256\":\"0x93381688f1f920d3c445cd373603eb0aedea609c1827d4341a504ffc9f05e53a\",\"urls\":[\"bzz-raw://bb98e5e3728055be581c59ca924e7e194f81332dd8cdaf527c07ffd35d93b64c\",\"dweb:/ipfs/QmSccwLhRNdgF5x6f1fwF77pHyWJrCDAsaCqKCECpa4FsD\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LoansInterface.sol\":{\"keccak256\":\"0xc0da81ededdf5bb3f9019d14dbb1dd7ff64a852fe30b07a6d495f726df3920a6\",\"urls\":[\"bzz-raw://1e944e166028ecf924802edd10e704562c9f1d19531e5777f10c0b57badc3995\",\"dweb:/ipfs/QmXF9uBwoXKBw5pQqURKL1otKHV6m9MmrP7hHiBWG8UhqV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0xd8a98393b51d4533d7515d82c4640ff5cb4c5d84ec154be20ae2d70244c6bd8e\",\"urls\":[\"bzz-raw://19a1d2b6aa47db3488c4ce2531a4a82d79cc66b089ecebb3d06bc9a6c2ca2c04\",\"dweb:/ipfs/QmY1rhfogBfWyu4Bs3dbwrXjYvkvLLnwgi5hLuRcMgtjDy\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/MarketsStateInterface.sol\":{\"keccak256\":\"0xf51bd2d361d9cf448f2c2a5bb37c2699b0d9605a8f1b6a8719f90d8f536f2a05\",\"urls\":[\"bzz-raw://415a4444e8f9aca25132f492b226b8d500081a4ba5be8e45b401a68e73e1895b\",\"dweb:/ipfs/QmUPGgnqUjidxeEpkgu4yYzhfuykgtNKehEwbps97nAAzZ\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/PairAggregatorInterface.sol\":{\"keccak256\":\"0x4331fd21591542fda69505ce457c03f9ef66f2b8fea50db669864f517c4f95a1\",\"urls\":[\"bzz-raw://3cd373c888a2b4f6d1a93f540e9a0f4982316f743c0891d310a5e712c0f8eb78\",\"dweb:/ipfs/QmYA6Z3HFYj8MZSJwKP7NjawaD5TehE6Lmtx2VbTfqEHfb\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0xb2b1050602a2c4b8fac7053462a7a71c4a8ac91ffa7622dc003b07867dd2d04a\",\"urls\":[\"bzz-raw://2d38d083992ace8e9b361e763c1ba8ec35dc6604a1829fb09df8750a1c517d78\",\"dweb:/ipfs/QmQjba8A9c4q3AmEJf7GMytSyFPdG5rniSvL7Kw8QrUEoT\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/IChainlinkPairAggregatorRegistry.sol\":{\"keccak256\":\"0xa6f747fa1fecfef304721bc5b95ff34f1057ffeebd096d72051c013191879388\",\"urls\":[\"bzz-raw://27a99f0483fd2950126fd56cca827bab0cb3635e4512380acd65f161960906eb\",\"dweb:/ipfs/QmUR6GkPEpzqo4G76eeTNDLgxi3M4P7G338Jr4uoCQqrx9\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0xc5453e6f1a43327a37db250dedb65561c4deb0f3eb3cad490a64fc56e0b6f7b7\",\"urls\":[\"bzz-raw://f6edcab27eebecb576c9a884a173a1a5fcf0c129c76b992ec77ca24518d92f91\",\"dweb:/ipfs/QmW3q6w39dg9RnxsQdfrFVudmiZh5asRnkWQVkrap9hnJf\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AssetSettingsLib.sol\":{\"keccak256\":\"0x9c67a3de3bb62fdfbd5c116016e0693300bb9d71fe055bb6aa12da305aba3bf4\",\"urls\":[\"bzz-raw://a3c9ffdd1496a6192abb62b72625e5778db231656f2c8fffd09a83d089996aa6\",\"dweb:/ipfs/QmevJ5ojFaqG363CrnJZ9x3YvGMWKfUaFoUVbCsaSzqPfe\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/ERC20DetailedLib.sol\":{\"keccak256\":\"0x9d40e0f2512901e6f3dcb2d95756724e4a71d418e755730a9828435c2b5ce204\",\"urls\":[\"bzz-raw://31d1541bf87c9356b4b43decc8b55479a00ebacd1beb0377b0a04200eed278c7\",\"dweb:/ipfs/QmcRJk2JfYzp9HFpTeW1BKWQALF7cpYW3Bj3G7QyosVmRV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0xf4caad9e4d96afe2721124eaf7203bb4e3a97beb3664c63297c4e68523f5bd65\",\"urls\":[\"bzz-raw://dcd6f564423c2cf83f3a56120f43eb6fd9f6e852cbb615be657f89e5114debf4\",\"dweb:/ipfs/QmRZStVoa5KbYRCHpzC7h998NnRhbFHfUZ71TRTiLzMTcX\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0xe49711d0c8193559f76dc5f399344c8f5f5e6a8b99bf78c6bcfd9aa1c456c306\",\"urls\":[\"bzz-raw://c6432c082145470691dfde04bf5c4220ccc32a5dccf6520c3122e47e470e6c22\",\"dweb:/ipfs/Qmd97DA5SB3d8Cuwf5M6vLtfDLHYXrMj5d3cXkYPP7iPpU\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/MarketStateLib.sol\":{\"keccak256\":\"0x8212e9e0d7c8d79d53087c5fb4735374f50cf6644c27b13e5faba5344c9b2087\",\"urls\":[\"bzz-raw://68b3d876f4e6569b57abfe9e7e69675a362a9d45f92c51b3a3a089d1c226817b\",\"dweb:/ipfs/QmSirrURGaLUYVkSeedjsrzF1kFB7gsuoHBpmWb9ed8eZt\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0xa397bcb75a4e7d80fd1043b7dc3c3a69f8c12435d26d843e4be40e875b71e134\",\"urls\":[\"bzz-raw://aabd466bea9e95a2585d597ebf62025f7ab4f38d1d4fe1c9fa5be1d98d131789\",\"dweb:/ipfs/QmcRGMg8X5teSF3Ga8ECPH2HvenViySkdnzvpUWvMDWXJL\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0c6a7e0de89e1017166ef4f593b33c8d0bfc6bcf3cd3db0bb5c1610ce260b659\",\"urls\":[\"bzz-raw://926108ace9152ed12d86a74ccb98d8c0aa698bd48fd3b4bfedacf976a8dd59d3\",\"dweb:/ipfs/QmVYjChMWZJdpPoBNheHMfyoTVsAarfLJ6SxPHhEsd6kUB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/SettingsConsts.sol\":{\"keccak256\":\"0xf357c4edd90efe656a6011cdb942deb119251fabf4fb15745fa6ba76ebdc359b\",\"urls\":[\"bzz-raw://fc2be5bb87e63ff544bb6167c3aecc163253f53c42fa956341784891caf78bee\",\"dweb:/ipfs/QmaJQKkUdSbESvbt768gCFL8ZSZ2BAE8xAW1FcvsubfFmR\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0xbe70455cee756e9498c220e13c1550d163a4cbcb09e8afe2f0ee94f717c80315\",\"urls\":[\"bzz-raw://0ad4a0a6394e560e40da2fee213381db0184878c29078b2f570eaacf116bb855\",\"dweb:/ipfs/QmTF87YYagh3WrxNZyi2uxhzcxyGsdtJCLu9nwmXGGaoMz\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x704e0cb521f0b571096a72266a34d9a2a59a89853b5b271bc97fa307a4cc4dcc\",\"urls\":[\"bzz-raw://96317e95d4c301e54ff42f2b6dede996ac4d714e50a6b5552c68fbb378330dcf\",\"dweb:/ipfs/QmawKJQVK7yXeBhGcvkmujYpo8n7CWQJizDV2dWzsxupnh\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb2fbd0f9a0bd0d99ace5603f1ce5388ed7d81031a188f5f4667e702fe690e61a\",\"urls\":[\"bzz-raw://b5a018485e3e184d24fabf939a2ca2b82a95b55ad7fcb109f2005d755ddedd29\",\"dweb:/ipfs/QmbpUfNbKjnVhARJRwMvD4h5z6ajYcdAB5Up6m1V3Rf2Ee\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50615266806100206000396000f3fe6080604052600436106101665760003560e01c80638129fc1c116100d1578063ccdd9f5d1161008a578063e06174e411610064578063e06174e4146103cf578063e1ec3c68146103e4578063e3ed19021461041c578063eee8b7ff1461043c57610166565b8063ccdd9f5d1461037a578063d86d744e1461039a578063d8aed145146103af57610166565b80638129fc1c146102e6578063934b5d13146102fb578063a59a997314610328578063a5c5c7b21461033d578063aaaca55814610350578063b2016bd41461036557610166565b80634ac8eb5f116101235780634ac8eb5f1461023a578063513484541461024f578063530e784f1461026457806358895e3d146102845780636948f32b146102a6578063767a7b05146102c657610166565b806302bc2cdb1461016b5780631459457a1461018d578063158ef93e146101ad5780631a74856b146101d85780632630c12f146101eb5780633b9293001461020d575b600080fd5b34801561017757600080fd5b5061018b610186366004613e1e565b610469565b005b34801561019957600080fd5b5061018b6101a8366004613c20565b610ae8565b3480156101b957600080fd5b506101c2610b8d565b6040516101cf9190614aeb565b60405180910390f35b61018b6101e6366004613ccf565b610bac565b3480156101f757600080fd5b50610200610d97565b6040516101cf9190614a45565b34801561021957600080fd5b5061022d610228366004613e00565b610da6565b6040516101cf9190614af9565b34801561024657600080fd5b5061022d610dd6565b34801561025b57600080fd5b5061022d610ddc565b34801561027057600080fd5b5061018b61027f366004613be4565b610de2565b34801561029057600080fd5b50610299610f40565b6040516101cf9190614b07565b3480156102b257600080fd5b506101c26102c1366004613e00565b610f4f565b3480156102d257600080fd5b5061018b6102e1366004613e1e565b6110a8565b3480156102f257600080fd5b5061018b6112c1565b34801561030757600080fd5b5061031b610316366004613e00565b611349565b6040516101cf9190614d46565b34801561033457600080fd5b5061029961135a565b61018b61034b366004613d76565b611369565b34801561035c57600080fd5b506102006118ef565b34801561037157600080fd5b50610200611971565b34801561038657600080fd5b5061018b610395366004613e00565b611980565b3480156103a657600080fd5b50610299611cc9565b3480156103bb57600080fd5b5061018b6103ca366004613e1e565b611cd8565b3480156103db57600080fd5b506102996120de565b3480156103f057600080fd5b506104046103ff366004613e00565b612100565b6040516101cf9c9b9a99989796959493929190614dba565b34801561042857600080fd5b5061022d610437366004613c95565b6121b8565b34801561044857600080fd5b5061045c610457366004613be4565b6121e6565b6040516101cf9190614ada565b8160016000828152606d60205260409020600e0154600160a01b900460ff16600381111561049357fe5b146104b95760405162461bcd60e51b81526004016104b090614cf6565b60405180910390fd5b6104c1610b8d565b6104dd5760405162461bcd60e51b81526004016104b090614ce6565b6104e5612252565b156105025760405162461bcd60e51b81526004016104b090614be6565b606a546001600160a01b0316610517816122cc565b156105345760405162461bcd60e51b81526004016104b090614b46565b603380546001908101918290556000868152606d6020526040902001546001600160a01b03163381146105795760405162461bcd60e51b81526004016104b090614c96565b6000868152606d60205260409020600501548511156105aa5760405162461bcd60e51b81526004016104b090614b76565b6000868152606d60205260409020600701544211156105db5760405162461bcd60e51b81526004016104b090614c36565b6106f36105e66120de565b6001600160a01b031663269012a0606e60009054906101000a90046001600160a01b03166001600160a01b03166311880cc86040518163ffffffff1660e01b815260040160206040518083038186803b15801561064257600080fd5b505afa158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061067a9190810190613d3a565b6040518263ffffffff1660e01b81526004016106969190614af9565b60206040518083038186803b1580156106ae57600080fd5b505afa1580156106c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106e69190810190613d3a565b429063ffffffff61235116565b6000878152606d60205260409020600a015411156107235760405162461bcd60e51b81526004016104b090614c16565b6000868152606d60205260409020600d8101869055600b81018690556006810154600390910154610787916237b1d09161077b916127109183919061076f908c9063ffffffff61239c16565b9063ffffffff61239c16565b9063ffffffff6123d616565b6000878152606d60205260409020600c01556107a1613985565b6107aa87612418565b90508060600151156107ce5760405162461bcd60e51b81526004016104b090614bf6565b6000878152606d60205260409020426008820155600e01805460ff60a01b1916600160a11b1790556107ff87612469565b6000888152606d602052604090819020600e0180546001600160a01b0319166001600160a01b039384161790819055606a549151631397424760e11b81529183169263272e848e92610857928b921690600401614d76565b600060405180830381600087803b15801561087157600080fd5b505af1158015610885573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e0154905163cd6dc68760e01b81526001600160a01b03909116915063cd6dc687906108cb9030908b90600401614abf565b600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b50505050610905612562565b6001600160a01b031663c7bbb113606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561096157600080fd5b505afa158015610975573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109999190810190613c02565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b1580156109d257600080fd5b505afa1580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a0a9190810190613c02565b896040518463ffffffff1660e01b8152600401610a2993929190614aa4565b600060405180830381600087803b158015610a4357600080fd5b505af1158015610a57573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e81015460019091015491516001600160a01b03918216935091169089907f85b5516a17ce775661a4b967b1fb30c852678f6598d86d9f3c99b7b60ff2d0ce90610ab6908b90614af9565b60405180910390a450506033548114610ae15760405162461bcd60e51b81526004016104b090614d16565b5050505050565b610af0610b8d565b15610b0d5760405162461bcd60e51b81526004016104b090614d26565b60408051808201909152601a81527f50524f564944455f434f4c4c5f544f4b454e5f414444524553530000000000006020820152610b5b906001600160a01b0383169063ffffffff6125dc16565b610b6785858585612609565b606780546001600160a01b0319166001600160a01b039290921691909117905550505050565b600080604051610b9c90614a2f565b6040519081900390205492915050565b3415610bca5760405162461bcd60e51b81526004016104b090614b66565b8160016000828152606d60205260409020600e0154600160a01b900460ff166003811115610bf457fe5b1480610c26575060026000828152606d60205260409020600e0154600160a01b900460ff166003811115610c2457fe5b145b610c425760405162461bcd60e51b81526004016104b090614b96565b610c4a610b8d565b610c665760405162461bcd60e51b81526004016104b090614ce6565b610c6e612252565b15610c8b5760405162461bcd60e51b81526004016104b090614be6565b606a546001600160a01b0316610ca0816122cc565b15610cbd5760405162461bcd60e51b81526004016104b090614b46565b6000848152606d6020908152604091829020600101548251808401909352601983527f424f52524f5745525f4c4f414e5f49445f4d49534d415443480000000000000091830191909152610d24916001600160a01b0388811692169063ffffffff6127a616565b60008311610d445760405162461bcd60e51b81526004016104b090614c76565b610d4e84846127cf565b846001600160a01b0316847feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c85604051610d889190614af9565b60405180910390a35050505050565b6069546001600160a01b031681565b6000818152606d60205260408120600b810154600c90910154610dce9163ffffffff6127e716565b90505b919050565b60665481565b60685481565b610dea610b8d565b610e065760405162461bcd60e51b81526004016104b090614ce6565b610e0e6120de565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401610e399190614a53565b60006040518083038186803b158015610e5157600080fd5b505afa158015610e65573d6000803e3d6000fd5b50505050610e7b816001600160a01b031661280c565b610e975760405162461bcd60e51b81526004016104b090614c86565b60695460408051808201909152601b81527f4e45575f4f5241434c455f4d5553545f42455f50524f5649444544000000000060208201526001600160a01b0390911690610eed908290849063ffffffff61284816565b606980546001600160a01b0319166001600160a01b03848116918217909255604051909183169033907ff51f0fffc8121ee3747e0536c487d894894cdba960ccfb4ab385a88d51b16fed90600090a45050565b606b546001600160a01b031681565b6000610f59612252565b80610f745750606a54610f74906001600160a01b03166122cc565b80610fa6575060026000838152606d60205260409020600e0154600160a01b900460ff166003811115610fa357fe5b14155b15610fb357506000610dd1565b6000828152606d602052604081206008810154600690910154909142610fdf848463ffffffff6127e716565b1090508015610ff45760019350505050610dd1565b6000858152606d60205260409020600e01546001600160a01b0316801561109157806001600160a01b031663415dfa5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561104e57600080fd5b505afa158015611062573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110869190810190613d1c565b945050505050610dd1565b61109a86612418565b606001519695505050505050565b8060016000828152606d60205260409020600e0154600160a01b900460ff1660038111156110d257fe5b1480611104575060026000828152606d60205260409020600e0154600160a01b900460ff16600381111561110257fe5b145b6111205760405162461bcd60e51b81526004016104b090614b96565b611128610b8d565b6111445760405162461bcd60e51b81526004016104b090614ce6565b61114c612252565b156111695760405162461bcd60e51b81526004016104b090614be6565b606a546001600160a01b031661117e816122cc565b1561119b5760405162461bcd60e51b81526004016104b090614b46565b603380546001908101918290556000858152606d6020526040902001546001600160a01b031633146111df5760405162461bcd60e51b81526004016104b090614ca6565b600085116111ff5760405162461bcd60e51b81526004016104b090614bd6565b600061120a85612852565b9050600061121782612889565b6000878152606d60205260408120600901549192509061123d908363ffffffff61235116565b90508781111561124a5750865b801561125b5761125b8782336129ce565b336001600160a01b0316877f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd41836040516112959190614af9565b60405180910390a35050506033548114610ae15760405162461bcd60e51b81526004016104b090614d16565b600054610100900460ff16806112da57506112da612a22565b806112e8575060005460ff16155b6113045760405162461bcd60e51b81526004016104b090614c46565b600054610100900460ff1615801561132f576000805460ff1961ff0019909116610100171660011790555b60016033558015611346576000805461ff00191690555b50565b611351613985565b610dce82612418565b606a546001600160a01b031681565b34156113875760405162461bcd60e51b81526004016104b090614b66565b61138f610b8d565b6113ab5760405162461bcd60e51b81526004016104b090614ce6565b6113b3612252565b156113d05760405162461bcd60e51b81526004016104b090614be6565b6113dd6020850185613be4565b336001600160a01b038216146114055760405162461bcd60e51b81526004016104b090614c96565b61141436869003860186613de2565b8060a001516114216120de565b6001600160a01b031663269012a0606e60009054906101000a90046001600160a01b03166001600160a01b031663cc44cadb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561147d57600080fd5b505afa158015611491573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114b59190810190613d3a565b6040518263ffffffff1660e01b81526004016114d19190614af9565b60206040518083038186803b1580156114e957600080fd5b505afa1580156114fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115219190810190613d3a565b101561153f5760405162461bcd60e51b81526004016104b090614b26565b6115476120de565b6001600160a01b03166369ff7744606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156115a357600080fd5b505afa1580156115b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115db9190810190613c02565b83608001516040518363ffffffff1660e01b81526004016115fd929190614abf565b60206040518083038186803b15801561161557600080fd5b505afa158015611629573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061164d9190810190613d1c565b1561166a5760405162461bcd60e51b81526004016104b090614b56565b6116778160800151612a28565b6116935760405162461bcd60e51b81526004016104b090614cc6565b600061169d612d98565b606b5460405163064e5d4960e01b8152919250600091829182916001600160a01b039091169063064e5d49906116db908d908d908d90600401614d54565b606060405180830381600087803b1580156116f557600080fd5b505af1158015611709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061172d9190810190613e3d565b9194509250905061174f84611747368d90038d018d613de2565b858585612da6565b6000858152606d6020908152604091829020835181558382015180516001830180546001600160a01b03199081166001600160a01b0393841617909155938201516002840180548616918316919091179055818501516003808501919091556060808401516004860155608080850151600587015560a0948501516006870155968801516007860155870151600885015594860151600984015590850151600a83015560c0850151600b83015560e0850151600c830155610100850151600d830155610120850151600e83018054909416911617808355610140850151919391929160ff60a01b1990911690600160a01b90849081111561184c57fe5b02179055506101609190910151600e9091018054911515600160a81b0260ff60a81b1990921691909117905586156118885761188884886127cf565b606c600061189960208d018d613be4565b6001600160a01b0316815260208082019290925260400160009081208054600181018255908252919020018490556118e3846118da368d90038d018d613de2565b8585858c612f8e565b50505050505050505050565b606a546040805163155594ab60e31b815290516000926001600160a01b03169163aaaca558916004808301926020929190829003018186803b15801561193457600080fd5b505afa158015611948573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061196c9190810190613c02565b905090565b6067546001600160a01b031681565b8060026000828152606d60205260409020600e0154600160a01b900460ff1660038111156119aa57fe5b146119c75760405162461bcd60e51b81526004016104b090614bc6565b6119cf610b8d565b6119eb5760405162461bcd60e51b81526004016104b090614ce6565b6119f3612252565b15611a105760405162461bcd60e51b81526004016104b090614be6565b606a546001600160a01b0316611a25816122cc565b15611a425760405162461bcd60e51b81526004016104b090614b46565b6033805460010190819055611a5684610f4f565b611a725760405162461bcd60e51b81526004016104b090614bb6565b6000848152606d60205260408120600e8101805460ff60a01b1916600360a01b1760ff60a81b1916600160a81b1790556009015490611ab082613059565b9050611abd8683336129ce565b6000611bdd61271061077b611ad06120de565b6001600160a01b031663269012a0606e60009054906101000a90046001600160a01b03166001600160a01b0316631139087a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b2c57600080fd5b505afa158015611b40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b649190810190613d3a565b6040518263ffffffff1660e01b8152600401611b809190614af9565b60206040518083038186803b158015611b9857600080fd5b505afa158015611bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611bd09190810190613d3a565b859063ffffffff61239c16565b606a546040516382f7b02760e01b81529192506001600160a01b0316906382f7b02790611c109084903390600401614d84565b600060405180830381600087803b158015611c2a57600080fd5b505af1158015611c3e573d6000803e3d6000fd5b5050506000888152606d6020526040908190206001015490516001600160a01b03909116915088907f9950a0562c02382e2e840daa73082d5be7660ce37601f28fa4c84089c11e8a0690611c9790339088908790614a61565b60405180910390a35050506033548114611cc35760405162461bcd60e51b81526004016104b090614d16565b50505050565b606e546001600160a01b031681565b8060026000828152606d60205260409020600e0154600160a01b900460ff166003811115611d0257fe5b14611d1f5760405162461bcd60e51b81526004016104b090614bc6565b611d27610b8d565b611d435760405162461bcd60e51b81526004016104b090614ce6565b611d4b612252565b15611d685760405162461bcd60e51b81526004016104b090614be6565b606a546001600160a01b0316611d7d816122cc565b15611d9a5760405162461bcd60e51b81526004016104b090614b46565b603380546001019081905584611dc25760405162461bcd60e51b81526004016104b090614b36565b846000611dce86610da6565b905081811015611ddc578091505b611dec818363ffffffff61235116565b9050611df8868361314f565b80611e9c576000868152606d60205260409020600e8101805460ff60a01b1916600360a01b1790556009810154600190910154611e4190889083906001600160a01b03166129ce565b6000878152606d6020526040908190206001015490516001600160a01b039091169088907f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd4190611e92908590614af9565b60405180910390a3505b606a5460405163acb7081560e01b81526001600160a01b039091169063acb7081590611ece9085903390600401614d84565b600060405180830381600087803b158015611ee857600080fd5b505af1158015611efc573d6000803e3d6000fd5b50505050611f08612562565b6001600160a01b03166362e269ef606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015611f6457600080fd5b505afa158015611f78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f9c9190810190613c02565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b158015611fd557600080fd5b505afa158015611fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061200d9190810190613c02565b856040518463ffffffff1660e01b815260040161202c93929190614aa4565b600060405180830381600087803b15801561204657600080fd5b505af115801561205a573d6000803e3d6000fd5b5050506000878152606d6020526040908190206001015490516001600160a01b03909116915087907f20a1f2ec363af45dc5ee7d9d622f2dd68b52501c382126c7f04b53663c4c69bf906120b390869033908790614d9f565b60405180910390a350506033548114610ae15760405162461bcd60e51b81526004016104b090614d16565b60008060006040516120ef90614a3a565b604051908190039020549250505090565b606d602090815260009182526040918290208054835160c08101855260018301546001600160a01b03908116825260028401548116948201949094526003830154948101949094526004820154606085015260058201546080850152600682015460a0850152600782015460088301546009840154600a850154600b860154600c870154600d880154600e9098015496999895979496939592949193909281169060ff600160a01b8204811691600160a81b9004168c565b606c60205281600052604060002081815481106121d157fe5b90600052602060002001600091509150505481565b6001600160a01b0381166000908152606c602090815260409182902080548351818402810184019094528084526060939283018282801561224657602002820191906000526020600020905b815481526020019060010190808311612232575b50505050509050919050565b600061225c6120de565b6001600160a01b031663b187bd266040518163ffffffff1660e01b815260040160206040518083038186803b15801561229457600080fd5b505afa1580156122a8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061196c9190810190613d1c565b60006122d66120de565b6001600160a01b0316633b668321836040518263ffffffff1660e01b81526004016123019190614a45565b60206040518083038186803b15801561231957600080fd5b505afa15801561232d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dce9190810190613d1c565b600061239383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061320a565b90505b92915050565b6000826123ab57506000612396565b828202828482816123b857fe5b04146123935760405162461bcd60e51b81526004016104b090614c06565b600061239383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061323b565b612420613985565b6000828152606d6020526040812060090154908061243d85613272565b604080516080810182528681526020810193909352820181905293909311606084015250909392505050565b60006124736120de565b6001600160a01b031663bdd1daaa6040518163ffffffff1660e01b815260040160206040518083038186803b1580156124ab57600080fd5b505afa1580156124bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124e39190810190613d58565b6001600160a01b0316634614874e30846040518363ffffffff1660e01b8152600401612510929190614abf565b602060405180830381600087803b15801561252a57600080fd5b505af115801561253e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dce9190810190613c02565b600061256c6120de565b6001600160a01b0316631390f8d76040518163ffffffff1660e01b815260040160206040518083038186803b1580156125a457600080fd5b505afa1580156125b8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061196c9190810190613d58565b6125e582613296565b81906126045760405162461bcd60e51b81526004016104b09190614b15565b505050565b612611610b8d565b1561262e5760405162461bcd60e51b81526004016104b090614d26565b60408051808201909152601681527550524f564944455f4f5241434c455f4144445245535360501b6020820152612675906001600160a01b0386169063ffffffff6125dc16565b60408051808201909152601c81527f50524f564944455f4c454e44494e475f504f4f4c5f414444524553530000000060208201526126c3906001600160a01b0385169063ffffffff6125dc16565b60408051808201909152601b81527f50524f56494445445f4c4f414e5f5445524d535f4144445245535300000000006020820152612711906001600160a01b0384169063ffffffff6125dc16565b61271a816132a4565b606980546001600160a01b038087166001600160a01b031992831617909255606a8054868416908316179055606b805492851692909116919091179055604051612763906139af565b604051809103906000f08015801561277f573d6000803e3d6000fd5b50606e80546001600160a01b0319166001600160a01b039290921691909117905550505050565b6127b08383613356565b8190611cc35760405162461bcd60e51b81526004016104b09190614b15565b6127d98282613367565b6127e333826133c0565b5050565b6000828201838110156123935760405162461bcd60e51b81526004016104b090614b86565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061284057508115155b949350505050565b6127b083836133dd565b60008061285e83610da6565b6000848152606d602052604090206004015490915061284061271061077b848463ffffffff61239c16565b600080612923606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156128dd57600080fd5b505afa1580156128f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129159190810190613c02565b6001600160a01b03166133ef565b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b15801561297557600080fd5b505afa158015612989573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129ad9190810190613d3a565b905060006129c58361077b878563ffffffff61239c16565b95945050505050565b6066546129e1908363ffffffff61235116565b6066556000838152606d6020526040902060090154612a06908363ffffffff61235116565b6000848152606d60205260409020600901556126048183613470565b303b1590565b600080612a336120de565b6001600160a01b031663dc21a6a06040518163ffffffff1660e01b815260040160206040518083038186803b158015612a6b57600080fd5b505afa158015612a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612aa39190810190613d58565b6001600160a01b0316631fb7cec9606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612aff57600080fd5b505afa158015612b13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b379190810190613c02565b6067546040516001600160e01b031960e085901b168152612b6592916001600160a01b031690600401614a89565b60206040518083038186803b158015612b7d57600080fd5b505afa158015612b91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612bb59190810190613c02565b90506001600160a01b038116612bdd5760405162461bcd60e51b81526004016104b090614c56565b604051632319178560e11b81526000906001600160a01b038316906346322f0a90612c1b906b14dd5c1c1b1e551bd119589d60a21b90600401614af9565b60206040518083038186803b158015612c3357600080fd5b505afa158015612c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612c6b9190810190613d3a565b90506000612c77612562565b6001600160a01b031663db63323e606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612cd357600080fd5b505afa158015612ce7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d0b9190810190613c02565b6067546040516001600160e01b031960e085901b168152612d3b92916001600160a01b0316908a90600401614aa4565b60206040518083038186803b158015612d5357600080fd5b505afa158015612d67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d8b9190810190613d3a565b9190911115949350505050565b606880546001810190915590565b612dae6139bc565b6000612ec8612dbb6120de565b6001600160a01b031663269012a0606e60009054906101000a90046001600160a01b03166001600160a01b031663e00a46156040518163ffffffff1660e01b815260040160206040518083038186803b158015612e1757600080fd5b505afa158015612e2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612e4f9190810190613d3a565b6040518263ffffffff1660e01b8152600401612e6b9190614af9565b60206040518083038186803b158015612e8357600080fd5b505afa158015612e97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612ebb9190810190613d3a565b429063ffffffff6127e716565b90506040518061018001604052808881526020016040518060c0016040528089600001516001600160a01b0316815260200189602001516001600160a01b031681526020018881526020018781526020018681526020018960a00151815250815260200182815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160016003811115612f7957fe5b81526000602090910152979650505050505050565b84602001516001600160a01b031685600001516001600160a01b0316877f0358f509931cba53bbb6a94b7f05a5178220a0c7ddb54b1a1722df9e6ed6aa098787878b60a00151606d60008f815260200190815260200160002060070154604051612ffc959493929190614e72565b60405180910390a480156130515784600001516001600160a01b0316867feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c836040516130489190614af9565b60405180910390a35b505050505050565b6000806130ad606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156128dd57600080fd5b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b1580156130ff57600080fd5b505afa158015613113573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506131379190810190613d3a565b905060006129c58261077b878663ffffffff61239c16565b6000828152606d60205260409020600b01548111156131d2576000828152606d60205260409020600b0154819061318d90829063ffffffff61235116565b6000848152606d60205260408120600b810191909155600c01549091506131ba908263ffffffff61235116565b6000848152606d60205260409020600c0155506127e3565b6000828152606d60205260409020600b01546131f4908263ffffffff61235116565b6000838152606d60205260409020600b01555050565b6000818484111561322e5760405162461bcd60e51b81526004016104b09190614b15565b50508183035b9392505050565b6000818361325c5760405162461bcd60e51b81526004016104b09190614b15565b50600083858161326857fe5b0495945050505050565b600080600061328084612852565b90508061328c82612889565b9250925050915091565b6001600160a01b0316151590565b6132ac610b8d565b156132c95760405162461bcd60e51b81526004016104b090614d26565b60408051808201909152601981527f53455454494e47535f4d5553545f42455f50524f5649444544000000000000006020820152613317906001600160a01b0383169063ffffffff6125dc16565b613329816001600160a01b031661280c565b6133455760405162461bcd60e51b81526004016104b090614ba6565b61334d61348d565b611346816134ab565b6001600160a01b0390811691161490565b60665461337a908263ffffffff6127e716565b6066556000828152606d602052604090206009015461339f908263ffffffff6127e716565b6000928352606d602052604090922060098101929092555042600a90910155565b6067546127e3906001600160a01b0316838363ffffffff61351416565b6001600160a01b039081169116141590565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561342b57600080fd5b505afa15801561343f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506134639190810190613e80565b60ff16600a0a9392505050565b6067546127e3906001600160a01b0316838363ffffffff61379316565b600060405161349b90614a2f565b6040519081900390206001905550565b60006134b56120de565b6001600160a01b0316146134f6576134d5816001600160a01b031661280c565b6134f15760405162461bcd60e51b81526004016104b090614ba6565b611346565b600060405161350490614a3a565b6040519081900390208290555050565b604051636eb1769f60e11b81526000906001600160a01b0385169063dd62ed3e906135459086903090600401614a89565b60206040518083038186803b15801561355d57600080fd5b505afa158015613571573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506135959190810190613d3a565b9050818110156135b75760405162461bcd60e51b81526004016104b090614d06565b6040516370a0823160e01b81526000906001600160a01b038616906370a08231906135e6903090600401614a45565b60206040518083038186803b1580156135fe57600080fd5b505afa158015613612573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506136369190810190613d3a565b90506000856001600160a01b03166323b872dd8630876040518463ffffffff1660e01b815260040161366a93929190614aa4565b602060405180830381600087803b15801561368457600080fd5b505af1158015613698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506136bc9190810190613d1c565b9050806136db5760405162461bcd60e51b81526004016104b090614c26565b6040516370a0823160e01b81526000906001600160a01b038816906370a082319061370a903090600401614a45565b60206040518083038186803b15801561372257600080fd5b505afa158015613736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061375a9190810190613d3a565b90508461376d828563ffffffff61235116565b1461378a5760405162461bcd60e51b81526004016104b090614c66565b50505050505050565b6040516370a0823160e01b81526000906001600160a01b038516906370a08231906137c2903090600401614a45565b60206040518083038186803b1580156137da57600080fd5b505afa1580156137ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506138129190810190613d3a565b9050818110156138345760405162461bcd60e51b81526004016104b090614cb6565b60405163a9059cbb60e01b81526000906001600160a01b0386169063a9059cbb906138659087908790600401614abf565b602060405180830381600087803b15801561387f57600080fd5b505af1158015613893573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506138b79190810190613d1c565b9050806138d65760405162461bcd60e51b81526004016104b090614cd6565b6040516370a0823160e01b81526000906001600160a01b038716906370a0823190613905903090600401614a45565b60206040518083038186803b15801561391d57600080fd5b505afa158015613931573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506139559190810190613d3a565b905083613968848363ffffffff61235116565b146130515760405162461bcd60e51b81526004016104b090614d36565b60405180608001604052806000815260200160008152602001600081526020016000151581525090565b61022b80614ff983390190565b604051806101800160405280600081526020016139d7613a37565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006003811115613a2a57fe5b8152600060209091015290565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b803561239681614fc0565b805161239681614fc0565b60008083601f840112613aa757600080fd5b50813567ffffffffffffffff811115613abf57600080fd5b60208301915083610140820283011115613ad857600080fd5b9250929050565b805161239681614fd4565b803561239681614fdd565b805161239681614fdd565b805161239681614fe6565b600060e08284031215613b1d57600080fd5b50919050565b600060e08284031215613b3557600080fd5b613b3f60e0614ebe565b90506000613b4d8484613a7f565b8252506020613b5e84848301613a7f565b6020830152506040613b7284828501613a7f565b6040830152506060613b8684828501613aea565b6060830152506080613b9a84828501613aea565b60808301525060a0613bae84828501613aea565b60a08301525060c0613bc284828501613aea565b60c08301525092915050565b803561239681614fef565b805161239681614fef565b600060208284031215613bf657600080fd5b60006128408484613a7f565b600060208284031215613c1457600080fd5b60006128408484613a8a565b600080600080600060a08688031215613c3857600080fd5b6000613c448888613a7f565b9550506020613c5588828901613a7f565b9450506040613c6688828901613a7f565b9350506060613c7788828901613a7f565b9250506080613c8888828901613a7f565b9150509295509295909350565b60008060408385031215613ca857600080fd5b6000613cb48585613a7f565b9250506020613cc585828601613aea565b9150509250929050565b600080600060608486031215613ce457600080fd5b6000613cf08686613a7f565b9350506020613d0186828701613aea565b9250506040613d1286828701613aea565b9150509250925092565b600060208284031215613d2e57600080fd5b60006128408484613adf565b600060208284031215613d4c57600080fd5b60006128408484613af5565b600060208284031215613d6a57600080fd5b60006128408484613b00565b6000806000806101208587031215613d8d57600080fd5b6000613d998787613b0b565b94505060e085013567ffffffffffffffff811115613db657600080fd5b613dc287828801613a95565b9350935050610100613dd687828801613aea565b91505092959194509250565b600060e08284031215613df457600080fd5b60006128408484613b23565b600060208284031215613e1257600080fd5b60006128408484613aea565b60008060408385031215613e3157600080fd5b6000613cb48585613aea565b600080600060608486031215613e5257600080fd5b6000613e5e8686613af5565b9350506020613e6f86828701613af5565b9250506040613d1286828701613af5565b600060208284031215613e9257600080fd5b60006128408484613bd9565b6000613eaa8383614892565b50506101400190565b6000613ebf8383613f8e565b505060200190565b613ed081614f6a565b82525050565b613ed081614f33565b6000613eeb8385614ef9565b9350613ef682614ee5565b8060005b85811015613f2c57613f0c8284614f20565b613f168882613e9e565b9750613f2183614ef2565b925050600101613efa565b509495945050505050565b6000613f4282614eee565b613f4c8185614ef9565b9350613f5783614ee8565b8060005b83811015613f2c578151613f6f8882613eb3565b9750613f7a83614ee8565b925050600101613f5b565b613ed081614f3e565b613ed081614ee5565b613ed081614f43565b613ed081614f75565b6000613fb482614eee565b613fbe8185614ef9565b9350613fce818560208601614f80565b613fd781614fac565b9093019392505050565b6000613fee601d83614ef9565b7f4455524154494f4e5f455843454544535f4d41585f4455524154494f4e000000815260200192915050565b6000614027601c83610dd1565b7f54496e697469616c697a61626c652e6973496e697469616c697a6564000000008152601c0192915050565b6000614060601583614ef9565b74105353d5539517d59053155157d491545552549151605a1b815260200192915050565b6000614091601683614ef9565b7513115391125391d7d413d3d317d254d7d4105554d15160521b815260200192915050565b60006140c3601983614ef9565b7f414d4f554e545f455843454544535f4d41585f414d4f554e5400000000000000815260200192915050565b60006140fc601e83614ef9565b7f544f4b454e5f4c4f414e535f56414c55455f4d5553545f42455f5a45524f0000815260200192915050565b6000614135601183614ef9565b7013505617d313d05397d15610d151511151607a1b815260200192915050565b6000614162601b83614ef9565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b600061419b601683614ef9565b751313d05397d393d517d050d512559157d3d497d4d15560521b815260200192915050565b60006141cd601b83614ef9565b7f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000815260200192915050565b6000614206601783614ef9565b7f444f45534e545f4e4545445f4c49515549444154494f4e000000000000000000815260200192915050565b600061423f600f83614ef9565b6e4c4f414e5f4e4f545f41435449564560881b815260200192915050565b600061426a601483614ef9565b7343414e4e4f545f57495448445241575f5a45524f60601b815260200192915050565b600061429a601283614ef9565b71141310551193d49357d254d7d4105554d15160721b815260200192915050565b60006142c8601883614ef9565b7f4d4f52455f434f4c4c41544552414c5f52455155495245440000000000000000815260200192915050565b6000614301602183614ef9565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000614344601d83614ef9565b7f434f4c4c41544552414c5f4445504f53495445445f524543454e544c59000000815260200192915050565b600061437d601b83614ef9565b7f544f4b454e535f5452414e534645525f46524f4d5f4641494c45440000000000815260200192915050565b60006143b6601283614ef9565b711313d05397d511549354d7d156141254915160721b815260200192915050565b60006143e4602e83614ef9565b7f436f6e747261637420696e7374616e63652068617320616c726561647920626581526d195b881a5b9a5d1a585b1a5e995960921b602082015260400192915050565b6000614434601883614ef9565b7f41544d5f4e4f545f464f554e445f464f525f4d41524b45540000000000000000815260200192915050565b600061446d601f83614ef9565b7f494e565f42414c414e43455f41465445525f5452414e534645525f46524f4d00815260200192915050565b60006144a6601383614ef9565b7243414e4e4f545f4445504f5349545f5a45524f60681b815260200192915050565b60006144d5601e83614ef9565b7f4f5241434c455f4d5553545f434f4e54524143545f4e4f545f454d5054590000815260200192915050565b600061450e601783614ef9565b7f424f52524f5745525f4d5553545f42455f53454e444552000000000000000000815260200192915050565b6000614547601683614ef9565b7521a0a62622a92fa227a2a9a72a2fa7aba72fa627a0a760511b815260200192915050565b6000614579601983614ef9565b7f4e4f545f454e4f5547485f544f4b454e535f42414c414e434500000000000000815260200192915050565b60006145b2601883610dd1565b7f426173655570677261646561626c652e73657474696e67730000000000000000815260180192915050565b60006145eb601a83614ef9565b7f535550504c595f544f5f444542545f455843454544535f4d4158000000000000815260200192915050565b6000614624601683614ef9565b751513d2d15394d7d514905394d1915497d1905253115160521b815260200192915050565b6000614656601883614ef9565b7f434f4e54524143545f4e4f545f494e495449414c495a45440000000000000000815260200192915050565b600061468f600c83614ef9565b6b1313d05397d393d517d4d15560a21b815260200192915050565b60006146b7601b83614ef9565b7f4e4f545f454e4f5547485f544f4b454e535f414c4c4f57414e43450000000000815260200192915050565b60006146f0601f83614ef9565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b6000614729601c83614ef9565b7f434f4e54524143545f414c52454144595f494e495449414c495a454400000000815260200192915050565b6000614762601a83614ef9565b7f494e565f42414c414e43455f41465445525f5452414e53464552000000000000815260200192915050565b8051608083019061479f8482613f8e565b5060208201516147b26020850182613f8e565b5060408201516147c56040850182613f8e565b506060820151611cc36060850182613f85565b60e082016147e68280614f02565b6147f08482613ed6565b506147fe6020830183614f02565b61480b6020850182613ed6565b506148196040830183614f02565b6148266040850182613ed6565b506148346060830183614f11565b6148416060850182613f8e565b5061484f6080830183614f11565b61485c6080850182613f8e565b5061486a60a0830183614f11565b61487760a0850182613f8e565b5061488560c0830183614f11565b611cc360c0850182613f8e565b61014082016148a18280614f02565b6148ab8482613ed6565b506148b96020830183614f02565b6148c66020850182613ed6565b506148d46040830183614f11565b6148e16040850182613f8e565b506148ef6060830183614f11565b6148fc6060850182613f8e565b5061490a6080830183614f11565b6149176080850182613f8e565b5061492560a0830183614f11565b61493260a0850182613f8e565b5061494060c0830183614f20565b611cc360c08501826149bd565b805160c083019061495e8482613ed6565b5060208201516149716020850182613ed6565b5060408201516149846040850182613f8e565b5060608201516149976060850182613f8e565b5060808201516149aa6080850182613f8e565b5060a0820151611cc360a0850182613f8e565b608082016149cb8280614f11565b6149d58482613f8e565b506149e36020830183614f24565b6149f06020850182614a26565b506149fe6040830183614f11565b614a0b6040850182613f8e565b50614a196060830183614f11565b611cc36060850182613f8e565b613ed081614f64565b60006123968261401a565b6000612396826145a5565b602081016123968284613ed6565b602081016123968284613ec7565b60608101614a6f8286613ec7565b614a7c6020830185613f8e565b6128406040830184613f8e565b60408101614a978285613ed6565b6132346020830184613ed6565b60608101614ab28286613ed6565b614a7c6020830185613ed6565b60408101614acd8285613ed6565b6132346020830184613f8e565b602080825281016123938184613f37565b602081016123968284613f85565b602081016123968284613f8e565b602081016123968284613f97565b602080825281016123938184613fa9565b60208082528101610dce81613fe1565b60208082528101610dce81614053565b60208082528101610dce81614084565b60208082528101610dce816140b6565b60208082528101610dce816140ef565b60208082528101610dce81614128565b60208082528101610dce81614155565b60208082528101610dce8161418e565b60208082528101610dce816141c0565b60208082528101610dce816141f9565b60208082528101610dce81614232565b60208082528101610dce8161425d565b60208082528101610dce8161428d565b60208082528101610dce816142bb565b60208082528101610dce816142f4565b60208082528101610dce81614337565b60208082528101610dce81614370565b60208082528101610dce816143a9565b60208082528101610dce816143d7565b60208082528101610dce81614427565b60208082528101610dce81614460565b60208082528101610dce81614499565b60208082528101610dce816144c8565b60208082528101610dce81614501565b60208082528101610dce8161453a565b60208082528101610dce8161456c565b60208082528101610dce816145de565b60208082528101610dce81614617565b60208082528101610dce81614649565b60208082528101610dce81614682565b60208082528101610dce816146aa565b60208082528101610dce816146e3565b60208082528101610dce8161471c565b60208082528101610dce81614755565b60808101612396828461478e565b6101008101614d6382866147d8565b81810360e08301526129c5818486613edf565b60408101614a978285613f8e565b60408101614d928285613f8e565b6132346020830184613ec7565b60608101614dad8286613f8e565b614a7c6020830185613ec7565b6102208101614dc9828f613f8e565b614dd6602083018e61494d565b614de360e083018d613f8e565b614df161010083018c613f8e565b614dff61012083018b613f8e565b614e0d61014083018a613f8e565b614e1b610160830189613f8e565b614e29610180830188613f8e565b614e376101a0830187613f8e565b614e456101c0830186613ed6565b614e536101e0830185613fa0565b614e61610200830184613f85565b9d9c50505050505050505050505050565b60a08101614e808288613f8e565b614e8d6020830187613f8e565b614e9a6040830186613f8e565b614ea76060830185613f8e565b614eb46080830184613f8e565b9695505050505050565b60405181810167ffffffffffffffff81118282101715614edd57600080fd5b604052919050565b90565b60200190565b5190565b6101400190565b90815260200190565b60006123936020840184613a7f565b60006123936020840184613aea565b5090565b60006123936020840184613bce565b6000610dce82614f58565b151590565b6000610dce82614f33565b80610dd181614fb6565b6001600160a01b031690565b60ff1690565b6000610dce82614f43565b6000610dce82614f4e565b60005b83811015614f9b578181015183820152602001614f83565b83811115611cc35750506000910152565b601f01601f191690565b6004811061134657fe5b614fc981614f33565b811461134657600080fd5b614fc981614f3e565b614fc981614ee5565b614fc981614f43565b614fc981614f6456fe608060405234801561001057600080fd5b5061020b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80633ff591d9116100665780633ff591d9146100ca578063c41dd8ce146100d2578063cc44cadb146100da578063e00a4615146100e2578063e3f33d00146100ea57610093565b806308b04f62146100985780631139087a146100b257806311880cc8146100ba5780633b98dfdb146100c2575b600080fd5b6100a06100f2565b60408051918252519081900360200190f35b6100a0610109565b6100a0610121565b6100a0610136565b6100a061015a565b6100a0610174565b6100a061018b565b6100a06101a5565b6100a06101bb565b6f21b7b63630ba32b930b6213ab33332b960811b81565b704c6971756964617465457468507269636560781b81565b6d14d859995d1e525b9d195c9d985b60921b81565b7f526571756573744c6f616e5465726d73526174654c696d69740000000000000081565b7252657175697265645375626d697373696f6e7360681b81565b6f4d6178696d756d546f6c6572616e636560801b81565b7226b0bc34b6bab6a637b0b7223ab930ba34b7b760691b81565b6e5465726d7345787069727954696d6560881b81565b730a4cae6e0dedce6ca8af0e0d2e4f298cadccee8d60631b8156fea265627a7a72315820b6cc93d12d39f205ac91b27ee8876405b81cd752a680e010a2828f9ed81bbbb364736f6c63430005110032a365627a7a723158208590b2bc30a4f010dde62fd3a46dcccca2d0d4f5c31cab765b0f54e31481e13b6c6578706572696d656e74616cf564736f6c63430005110040",
  "deployedBytecode": "0x6080604052600436106101665760003560e01c80638129fc1c116100d1578063ccdd9f5d1161008a578063e06174e411610064578063e06174e4146103cf578063e1ec3c68146103e4578063e3ed19021461041c578063eee8b7ff1461043c57610166565b8063ccdd9f5d1461037a578063d86d744e1461039a578063d8aed145146103af57610166565b80638129fc1c146102e6578063934b5d13146102fb578063a59a997314610328578063a5c5c7b21461033d578063aaaca55814610350578063b2016bd41461036557610166565b80634ac8eb5f116101235780634ac8eb5f1461023a578063513484541461024f578063530e784f1461026457806358895e3d146102845780636948f32b146102a6578063767a7b05146102c657610166565b806302bc2cdb1461016b5780631459457a1461018d578063158ef93e146101ad5780631a74856b146101d85780632630c12f146101eb5780633b9293001461020d575b600080fd5b34801561017757600080fd5b5061018b610186366004613e1e565b610469565b005b34801561019957600080fd5b5061018b6101a8366004613c20565b610ae8565b3480156101b957600080fd5b506101c2610b8d565b6040516101cf9190614aeb565b60405180910390f35b61018b6101e6366004613ccf565b610bac565b3480156101f757600080fd5b50610200610d97565b6040516101cf9190614a45565b34801561021957600080fd5b5061022d610228366004613e00565b610da6565b6040516101cf9190614af9565b34801561024657600080fd5b5061022d610dd6565b34801561025b57600080fd5b5061022d610ddc565b34801561027057600080fd5b5061018b61027f366004613be4565b610de2565b34801561029057600080fd5b50610299610f40565b6040516101cf9190614b07565b3480156102b257600080fd5b506101c26102c1366004613e00565b610f4f565b3480156102d257600080fd5b5061018b6102e1366004613e1e565b6110a8565b3480156102f257600080fd5b5061018b6112c1565b34801561030757600080fd5b5061031b610316366004613e00565b611349565b6040516101cf9190614d46565b34801561033457600080fd5b5061029961135a565b61018b61034b366004613d76565b611369565b34801561035c57600080fd5b506102006118ef565b34801561037157600080fd5b50610200611971565b34801561038657600080fd5b5061018b610395366004613e00565b611980565b3480156103a657600080fd5b50610299611cc9565b3480156103bb57600080fd5b5061018b6103ca366004613e1e565b611cd8565b3480156103db57600080fd5b506102996120de565b3480156103f057600080fd5b506104046103ff366004613e00565b612100565b6040516101cf9c9b9a99989796959493929190614dba565b34801561042857600080fd5b5061022d610437366004613c95565b6121b8565b34801561044857600080fd5b5061045c610457366004613be4565b6121e6565b6040516101cf9190614ada565b8160016000828152606d60205260409020600e0154600160a01b900460ff16600381111561049357fe5b146104b95760405162461bcd60e51b81526004016104b090614cf6565b60405180910390fd5b6104c1610b8d565b6104dd5760405162461bcd60e51b81526004016104b090614ce6565b6104e5612252565b156105025760405162461bcd60e51b81526004016104b090614be6565b606a546001600160a01b0316610517816122cc565b156105345760405162461bcd60e51b81526004016104b090614b46565b603380546001908101918290556000868152606d6020526040902001546001600160a01b03163381146105795760405162461bcd60e51b81526004016104b090614c96565b6000868152606d60205260409020600501548511156105aa5760405162461bcd60e51b81526004016104b090614b76565b6000868152606d60205260409020600701544211156105db5760405162461bcd60e51b81526004016104b090614c36565b6106f36105e66120de565b6001600160a01b031663269012a0606e60009054906101000a90046001600160a01b03166001600160a01b03166311880cc86040518163ffffffff1660e01b815260040160206040518083038186803b15801561064257600080fd5b505afa158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061067a9190810190613d3a565b6040518263ffffffff1660e01b81526004016106969190614af9565b60206040518083038186803b1580156106ae57600080fd5b505afa1580156106c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106e69190810190613d3a565b429063ffffffff61235116565b6000878152606d60205260409020600a015411156107235760405162461bcd60e51b81526004016104b090614c16565b6000868152606d60205260409020600d8101869055600b81018690556006810154600390910154610787916237b1d09161077b916127109183919061076f908c9063ffffffff61239c16565b9063ffffffff61239c16565b9063ffffffff6123d616565b6000878152606d60205260409020600c01556107a1613985565b6107aa87612418565b90508060600151156107ce5760405162461bcd60e51b81526004016104b090614bf6565b6000878152606d60205260409020426008820155600e01805460ff60a01b1916600160a11b1790556107ff87612469565b6000888152606d602052604090819020600e0180546001600160a01b0319166001600160a01b039384161790819055606a549151631397424760e11b81529183169263272e848e92610857928b921690600401614d76565b600060405180830381600087803b15801561087157600080fd5b505af1158015610885573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e0154905163cd6dc68760e01b81526001600160a01b03909116915063cd6dc687906108cb9030908b90600401614abf565b600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b50505050610905612562565b6001600160a01b031663c7bbb113606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561096157600080fd5b505afa158015610975573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109999190810190613c02565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b1580156109d257600080fd5b505afa1580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a0a9190810190613c02565b896040518463ffffffff1660e01b8152600401610a2993929190614aa4565b600060405180830381600087803b158015610a4357600080fd5b505af1158015610a57573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e81015460019091015491516001600160a01b03918216935091169089907f85b5516a17ce775661a4b967b1fb30c852678f6598d86d9f3c99b7b60ff2d0ce90610ab6908b90614af9565b60405180910390a450506033548114610ae15760405162461bcd60e51b81526004016104b090614d16565b5050505050565b610af0610b8d565b15610b0d5760405162461bcd60e51b81526004016104b090614d26565b60408051808201909152601a81527f50524f564944455f434f4c4c5f544f4b454e5f414444524553530000000000006020820152610b5b906001600160a01b0383169063ffffffff6125dc16565b610b6785858585612609565b606780546001600160a01b0319166001600160a01b039290921691909117905550505050565b600080604051610b9c90614a2f565b6040519081900390205492915050565b3415610bca5760405162461bcd60e51b81526004016104b090614b66565b8160016000828152606d60205260409020600e0154600160a01b900460ff166003811115610bf457fe5b1480610c26575060026000828152606d60205260409020600e0154600160a01b900460ff166003811115610c2457fe5b145b610c425760405162461bcd60e51b81526004016104b090614b96565b610c4a610b8d565b610c665760405162461bcd60e51b81526004016104b090614ce6565b610c6e612252565b15610c8b5760405162461bcd60e51b81526004016104b090614be6565b606a546001600160a01b0316610ca0816122cc565b15610cbd5760405162461bcd60e51b81526004016104b090614b46565b6000848152606d6020908152604091829020600101548251808401909352601983527f424f52524f5745525f4c4f414e5f49445f4d49534d415443480000000000000091830191909152610d24916001600160a01b0388811692169063ffffffff6127a616565b60008311610d445760405162461bcd60e51b81526004016104b090614c76565b610d4e84846127cf565b846001600160a01b0316847feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c85604051610d889190614af9565b60405180910390a35050505050565b6069546001600160a01b031681565b6000818152606d60205260408120600b810154600c90910154610dce9163ffffffff6127e716565b90505b919050565b60665481565b60685481565b610dea610b8d565b610e065760405162461bcd60e51b81526004016104b090614ce6565b610e0e6120de565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401610e399190614a53565b60006040518083038186803b158015610e5157600080fd5b505afa158015610e65573d6000803e3d6000fd5b50505050610e7b816001600160a01b031661280c565b610e975760405162461bcd60e51b81526004016104b090614c86565b60695460408051808201909152601b81527f4e45575f4f5241434c455f4d5553545f42455f50524f5649444544000000000060208201526001600160a01b0390911690610eed908290849063ffffffff61284816565b606980546001600160a01b0319166001600160a01b03848116918217909255604051909183169033907ff51f0fffc8121ee3747e0536c487d894894cdba960ccfb4ab385a88d51b16fed90600090a45050565b606b546001600160a01b031681565b6000610f59612252565b80610f745750606a54610f74906001600160a01b03166122cc565b80610fa6575060026000838152606d60205260409020600e0154600160a01b900460ff166003811115610fa357fe5b14155b15610fb357506000610dd1565b6000828152606d602052604081206008810154600690910154909142610fdf848463ffffffff6127e716565b1090508015610ff45760019350505050610dd1565b6000858152606d60205260409020600e01546001600160a01b0316801561109157806001600160a01b031663415dfa5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561104e57600080fd5b505afa158015611062573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110869190810190613d1c565b945050505050610dd1565b61109a86612418565b606001519695505050505050565b8060016000828152606d60205260409020600e0154600160a01b900460ff1660038111156110d257fe5b1480611104575060026000828152606d60205260409020600e0154600160a01b900460ff16600381111561110257fe5b145b6111205760405162461bcd60e51b81526004016104b090614b96565b611128610b8d565b6111445760405162461bcd60e51b81526004016104b090614ce6565b61114c612252565b156111695760405162461bcd60e51b81526004016104b090614be6565b606a546001600160a01b031661117e816122cc565b1561119b5760405162461bcd60e51b81526004016104b090614b46565b603380546001908101918290556000858152606d6020526040902001546001600160a01b031633146111df5760405162461bcd60e51b81526004016104b090614ca6565b600085116111ff5760405162461bcd60e51b81526004016104b090614bd6565b600061120a85612852565b9050600061121782612889565b6000878152606d60205260408120600901549192509061123d908363ffffffff61235116565b90508781111561124a5750865b801561125b5761125b8782336129ce565b336001600160a01b0316877f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd41836040516112959190614af9565b60405180910390a35050506033548114610ae15760405162461bcd60e51b81526004016104b090614d16565b600054610100900460ff16806112da57506112da612a22565b806112e8575060005460ff16155b6113045760405162461bcd60e51b81526004016104b090614c46565b600054610100900460ff1615801561132f576000805460ff1961ff0019909116610100171660011790555b60016033558015611346576000805461ff00191690555b50565b611351613985565b610dce82612418565b606a546001600160a01b031681565b34156113875760405162461bcd60e51b81526004016104b090614b66565b61138f610b8d565b6113ab5760405162461bcd60e51b81526004016104b090614ce6565b6113b3612252565b156113d05760405162461bcd60e51b81526004016104b090614be6565b6113dd6020850185613be4565b336001600160a01b038216146114055760405162461bcd60e51b81526004016104b090614c96565b61141436869003860186613de2565b8060a001516114216120de565b6001600160a01b031663269012a0606e60009054906101000a90046001600160a01b03166001600160a01b031663cc44cadb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561147d57600080fd5b505afa158015611491573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114b59190810190613d3a565b6040518263ffffffff1660e01b81526004016114d19190614af9565b60206040518083038186803b1580156114e957600080fd5b505afa1580156114fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115219190810190613d3a565b101561153f5760405162461bcd60e51b81526004016104b090614b26565b6115476120de565b6001600160a01b03166369ff7744606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156115a357600080fd5b505afa1580156115b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115db9190810190613c02565b83608001516040518363ffffffff1660e01b81526004016115fd929190614abf565b60206040518083038186803b15801561161557600080fd5b505afa158015611629573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061164d9190810190613d1c565b1561166a5760405162461bcd60e51b81526004016104b090614b56565b6116778160800151612a28565b6116935760405162461bcd60e51b81526004016104b090614cc6565b600061169d612d98565b606b5460405163064e5d4960e01b8152919250600091829182916001600160a01b039091169063064e5d49906116db908d908d908d90600401614d54565b606060405180830381600087803b1580156116f557600080fd5b505af1158015611709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061172d9190810190613e3d565b9194509250905061174f84611747368d90038d018d613de2565b858585612da6565b6000858152606d6020908152604091829020835181558382015180516001830180546001600160a01b03199081166001600160a01b0393841617909155938201516002840180548616918316919091179055818501516003808501919091556060808401516004860155608080850151600587015560a0948501516006870155968801516007860155870151600885015594860151600984015590850151600a83015560c0850151600b83015560e0850151600c830155610100850151600d830155610120850151600e83018054909416911617808355610140850151919391929160ff60a01b1990911690600160a01b90849081111561184c57fe5b02179055506101609190910151600e9091018054911515600160a81b0260ff60a81b1990921691909117905586156118885761188884886127cf565b606c600061189960208d018d613be4565b6001600160a01b0316815260208082019290925260400160009081208054600181018255908252919020018490556118e3846118da368d90038d018d613de2565b8585858c612f8e565b50505050505050505050565b606a546040805163155594ab60e31b815290516000926001600160a01b03169163aaaca558916004808301926020929190829003018186803b15801561193457600080fd5b505afa158015611948573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061196c9190810190613c02565b905090565b6067546001600160a01b031681565b8060026000828152606d60205260409020600e0154600160a01b900460ff1660038111156119aa57fe5b146119c75760405162461bcd60e51b81526004016104b090614bc6565b6119cf610b8d565b6119eb5760405162461bcd60e51b81526004016104b090614ce6565b6119f3612252565b15611a105760405162461bcd60e51b81526004016104b090614be6565b606a546001600160a01b0316611a25816122cc565b15611a425760405162461bcd60e51b81526004016104b090614b46565b6033805460010190819055611a5684610f4f565b611a725760405162461bcd60e51b81526004016104b090614bb6565b6000848152606d60205260408120600e8101805460ff60a01b1916600360a01b1760ff60a81b1916600160a81b1790556009015490611ab082613059565b9050611abd8683336129ce565b6000611bdd61271061077b611ad06120de565b6001600160a01b031663269012a0606e60009054906101000a90046001600160a01b03166001600160a01b0316631139087a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b2c57600080fd5b505afa158015611b40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b649190810190613d3a565b6040518263ffffffff1660e01b8152600401611b809190614af9565b60206040518083038186803b158015611b9857600080fd5b505afa158015611bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611bd09190810190613d3a565b859063ffffffff61239c16565b606a546040516382f7b02760e01b81529192506001600160a01b0316906382f7b02790611c109084903390600401614d84565b600060405180830381600087803b158015611c2a57600080fd5b505af1158015611c3e573d6000803e3d6000fd5b5050506000888152606d6020526040908190206001015490516001600160a01b03909116915088907f9950a0562c02382e2e840daa73082d5be7660ce37601f28fa4c84089c11e8a0690611c9790339088908790614a61565b60405180910390a35050506033548114611cc35760405162461bcd60e51b81526004016104b090614d16565b50505050565b606e546001600160a01b031681565b8060026000828152606d60205260409020600e0154600160a01b900460ff166003811115611d0257fe5b14611d1f5760405162461bcd60e51b81526004016104b090614bc6565b611d27610b8d565b611d435760405162461bcd60e51b81526004016104b090614ce6565b611d4b612252565b15611d685760405162461bcd60e51b81526004016104b090614be6565b606a546001600160a01b0316611d7d816122cc565b15611d9a5760405162461bcd60e51b81526004016104b090614b46565b603380546001019081905584611dc25760405162461bcd60e51b81526004016104b090614b36565b846000611dce86610da6565b905081811015611ddc578091505b611dec818363ffffffff61235116565b9050611df8868361314f565b80611e9c576000868152606d60205260409020600e8101805460ff60a01b1916600360a01b1790556009810154600190910154611e4190889083906001600160a01b03166129ce565b6000878152606d6020526040908190206001015490516001600160a01b039091169088907f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd4190611e92908590614af9565b60405180910390a3505b606a5460405163acb7081560e01b81526001600160a01b039091169063acb7081590611ece9085903390600401614d84565b600060405180830381600087803b158015611ee857600080fd5b505af1158015611efc573d6000803e3d6000fd5b50505050611f08612562565b6001600160a01b03166362e269ef606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015611f6457600080fd5b505afa158015611f78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f9c9190810190613c02565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b158015611fd557600080fd5b505afa158015611fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061200d9190810190613c02565b856040518463ffffffff1660e01b815260040161202c93929190614aa4565b600060405180830381600087803b15801561204657600080fd5b505af115801561205a573d6000803e3d6000fd5b5050506000878152606d6020526040908190206001015490516001600160a01b03909116915087907f20a1f2ec363af45dc5ee7d9d622f2dd68b52501c382126c7f04b53663c4c69bf906120b390869033908790614d9f565b60405180910390a350506033548114610ae15760405162461bcd60e51b81526004016104b090614d16565b60008060006040516120ef90614a3a565b604051908190039020549250505090565b606d602090815260009182526040918290208054835160c08101855260018301546001600160a01b03908116825260028401548116948201949094526003830154948101949094526004820154606085015260058201546080850152600682015460a0850152600782015460088301546009840154600a850154600b860154600c870154600d880154600e9098015496999895979496939592949193909281169060ff600160a01b8204811691600160a81b9004168c565b606c60205281600052604060002081815481106121d157fe5b90600052602060002001600091509150505481565b6001600160a01b0381166000908152606c602090815260409182902080548351818402810184019094528084526060939283018282801561224657602002820191906000526020600020905b815481526020019060010190808311612232575b50505050509050919050565b600061225c6120de565b6001600160a01b031663b187bd266040518163ffffffff1660e01b815260040160206040518083038186803b15801561229457600080fd5b505afa1580156122a8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061196c9190810190613d1c565b60006122d66120de565b6001600160a01b0316633b668321836040518263ffffffff1660e01b81526004016123019190614a45565b60206040518083038186803b15801561231957600080fd5b505afa15801561232d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dce9190810190613d1c565b600061239383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061320a565b90505b92915050565b6000826123ab57506000612396565b828202828482816123b857fe5b04146123935760405162461bcd60e51b81526004016104b090614c06565b600061239383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061323b565b612420613985565b6000828152606d6020526040812060090154908061243d85613272565b604080516080810182528681526020810193909352820181905293909311606084015250909392505050565b60006124736120de565b6001600160a01b031663bdd1daaa6040518163ffffffff1660e01b815260040160206040518083038186803b1580156124ab57600080fd5b505afa1580156124bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124e39190810190613d58565b6001600160a01b0316634614874e30846040518363ffffffff1660e01b8152600401612510929190614abf565b602060405180830381600087803b15801561252a57600080fd5b505af115801561253e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dce9190810190613c02565b600061256c6120de565b6001600160a01b0316631390f8d76040518163ffffffff1660e01b815260040160206040518083038186803b1580156125a457600080fd5b505afa1580156125b8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061196c9190810190613d58565b6125e582613296565b81906126045760405162461bcd60e51b81526004016104b09190614b15565b505050565b612611610b8d565b1561262e5760405162461bcd60e51b81526004016104b090614d26565b60408051808201909152601681527550524f564944455f4f5241434c455f4144445245535360501b6020820152612675906001600160a01b0386169063ffffffff6125dc16565b60408051808201909152601c81527f50524f564944455f4c454e44494e475f504f4f4c5f414444524553530000000060208201526126c3906001600160a01b0385169063ffffffff6125dc16565b60408051808201909152601b81527f50524f56494445445f4c4f414e5f5445524d535f4144445245535300000000006020820152612711906001600160a01b0384169063ffffffff6125dc16565b61271a816132a4565b606980546001600160a01b038087166001600160a01b031992831617909255606a8054868416908316179055606b805492851692909116919091179055604051612763906139af565b604051809103906000f08015801561277f573d6000803e3d6000fd5b50606e80546001600160a01b0319166001600160a01b039290921691909117905550505050565b6127b08383613356565b8190611cc35760405162461bcd60e51b81526004016104b09190614b15565b6127d98282613367565b6127e333826133c0565b5050565b6000828201838110156123935760405162461bcd60e51b81526004016104b090614b86565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061284057508115155b949350505050565b6127b083836133dd565b60008061285e83610da6565b6000848152606d602052604090206004015490915061284061271061077b848463ffffffff61239c16565b600080612923606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156128dd57600080fd5b505afa1580156128f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129159190810190613c02565b6001600160a01b03166133ef565b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b15801561297557600080fd5b505afa158015612989573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129ad9190810190613d3a565b905060006129c58361077b878563ffffffff61239c16565b95945050505050565b6066546129e1908363ffffffff61235116565b6066556000838152606d6020526040902060090154612a06908363ffffffff61235116565b6000848152606d60205260409020600901556126048183613470565b303b1590565b600080612a336120de565b6001600160a01b031663dc21a6a06040518163ffffffff1660e01b815260040160206040518083038186803b158015612a6b57600080fd5b505afa158015612a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612aa39190810190613d58565b6001600160a01b0316631fb7cec9606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612aff57600080fd5b505afa158015612b13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b379190810190613c02565b6067546040516001600160e01b031960e085901b168152612b6592916001600160a01b031690600401614a89565b60206040518083038186803b158015612b7d57600080fd5b505afa158015612b91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612bb59190810190613c02565b90506001600160a01b038116612bdd5760405162461bcd60e51b81526004016104b090614c56565b604051632319178560e11b81526000906001600160a01b038316906346322f0a90612c1b906b14dd5c1c1b1e551bd119589d60a21b90600401614af9565b60206040518083038186803b158015612c3357600080fd5b505afa158015612c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612c6b9190810190613d3a565b90506000612c77612562565b6001600160a01b031663db63323e606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612cd357600080fd5b505afa158015612ce7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d0b9190810190613c02565b6067546040516001600160e01b031960e085901b168152612d3b92916001600160a01b0316908a90600401614aa4565b60206040518083038186803b158015612d5357600080fd5b505afa158015612d67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d8b9190810190613d3a565b9190911115949350505050565b606880546001810190915590565b612dae6139bc565b6000612ec8612dbb6120de565b6001600160a01b031663269012a0606e60009054906101000a90046001600160a01b03166001600160a01b031663e00a46156040518163ffffffff1660e01b815260040160206040518083038186803b158015612e1757600080fd5b505afa158015612e2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612e4f9190810190613d3a565b6040518263ffffffff1660e01b8152600401612e6b9190614af9565b60206040518083038186803b158015612e8357600080fd5b505afa158015612e97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612ebb9190810190613d3a565b429063ffffffff6127e716565b90506040518061018001604052808881526020016040518060c0016040528089600001516001600160a01b0316815260200189602001516001600160a01b031681526020018881526020018781526020018681526020018960a00151815250815260200182815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160016003811115612f7957fe5b81526000602090910152979650505050505050565b84602001516001600160a01b031685600001516001600160a01b0316877f0358f509931cba53bbb6a94b7f05a5178220a0c7ddb54b1a1722df9e6ed6aa098787878b60a00151606d60008f815260200190815260200160002060070154604051612ffc959493929190614e72565b60405180910390a480156130515784600001516001600160a01b0316867feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c836040516130489190614af9565b60405180910390a35b505050505050565b6000806130ad606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156128dd57600080fd5b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b1580156130ff57600080fd5b505afa158015613113573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506131379190810190613d3a565b905060006129c58261077b878663ffffffff61239c16565b6000828152606d60205260409020600b01548111156131d2576000828152606d60205260409020600b0154819061318d90829063ffffffff61235116565b6000848152606d60205260408120600b810191909155600c01549091506131ba908263ffffffff61235116565b6000848152606d60205260409020600c0155506127e3565b6000828152606d60205260409020600b01546131f4908263ffffffff61235116565b6000838152606d60205260409020600b01555050565b6000818484111561322e5760405162461bcd60e51b81526004016104b09190614b15565b50508183035b9392505050565b6000818361325c5760405162461bcd60e51b81526004016104b09190614b15565b50600083858161326857fe5b0495945050505050565b600080600061328084612852565b90508061328c82612889565b9250925050915091565b6001600160a01b0316151590565b6132ac610b8d565b156132c95760405162461bcd60e51b81526004016104b090614d26565b60408051808201909152601981527f53455454494e47535f4d5553545f42455f50524f5649444544000000000000006020820152613317906001600160a01b0383169063ffffffff6125dc16565b613329816001600160a01b031661280c565b6133455760405162461bcd60e51b81526004016104b090614ba6565b61334d61348d565b611346816134ab565b6001600160a01b0390811691161490565b60665461337a908263ffffffff6127e716565b6066556000828152606d602052604090206009015461339f908263ffffffff6127e716565b6000928352606d602052604090922060098101929092555042600a90910155565b6067546127e3906001600160a01b0316838363ffffffff61351416565b6001600160a01b039081169116141590565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561342b57600080fd5b505afa15801561343f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506134639190810190613e80565b60ff16600a0a9392505050565b6067546127e3906001600160a01b0316838363ffffffff61379316565b600060405161349b90614a2f565b6040519081900390206001905550565b60006134b56120de565b6001600160a01b0316146134f6576134d5816001600160a01b031661280c565b6134f15760405162461bcd60e51b81526004016104b090614ba6565b611346565b600060405161350490614a3a565b6040519081900390208290555050565b604051636eb1769f60e11b81526000906001600160a01b0385169063dd62ed3e906135459086903090600401614a89565b60206040518083038186803b15801561355d57600080fd5b505afa158015613571573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506135959190810190613d3a565b9050818110156135b75760405162461bcd60e51b81526004016104b090614d06565b6040516370a0823160e01b81526000906001600160a01b038616906370a08231906135e6903090600401614a45565b60206040518083038186803b1580156135fe57600080fd5b505afa158015613612573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506136369190810190613d3a565b90506000856001600160a01b03166323b872dd8630876040518463ffffffff1660e01b815260040161366a93929190614aa4565b602060405180830381600087803b15801561368457600080fd5b505af1158015613698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506136bc9190810190613d1c565b9050806136db5760405162461bcd60e51b81526004016104b090614c26565b6040516370a0823160e01b81526000906001600160a01b038816906370a082319061370a903090600401614a45565b60206040518083038186803b15801561372257600080fd5b505afa158015613736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061375a9190810190613d3a565b90508461376d828563ffffffff61235116565b1461378a5760405162461bcd60e51b81526004016104b090614c66565b50505050505050565b6040516370a0823160e01b81526000906001600160a01b038516906370a08231906137c2903090600401614a45565b60206040518083038186803b1580156137da57600080fd5b505afa1580156137ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506138129190810190613d3a565b9050818110156138345760405162461bcd60e51b81526004016104b090614cb6565b60405163a9059cbb60e01b81526000906001600160a01b0386169063a9059cbb906138659087908790600401614abf565b602060405180830381600087803b15801561387f57600080fd5b505af1158015613893573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506138b79190810190613d1c565b9050806138d65760405162461bcd60e51b81526004016104b090614cd6565b6040516370a0823160e01b81526000906001600160a01b038716906370a0823190613905903090600401614a45565b60206040518083038186803b15801561391d57600080fd5b505afa158015613931573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506139559190810190613d3a565b905083613968848363ffffffff61235116565b146130515760405162461bcd60e51b81526004016104b090614d36565b60405180608001604052806000815260200160008152602001600081526020016000151581525090565b61022b80614ff983390190565b604051806101800160405280600081526020016139d7613a37565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006003811115613a2a57fe5b8152600060209091015290565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b803561239681614fc0565b805161239681614fc0565b60008083601f840112613aa757600080fd5b50813567ffffffffffffffff811115613abf57600080fd5b60208301915083610140820283011115613ad857600080fd5b9250929050565b805161239681614fd4565b803561239681614fdd565b805161239681614fdd565b805161239681614fe6565b600060e08284031215613b1d57600080fd5b50919050565b600060e08284031215613b3557600080fd5b613b3f60e0614ebe565b90506000613b4d8484613a7f565b8252506020613b5e84848301613a7f565b6020830152506040613b7284828501613a7f565b6040830152506060613b8684828501613aea565b6060830152506080613b9a84828501613aea565b60808301525060a0613bae84828501613aea565b60a08301525060c0613bc284828501613aea565b60c08301525092915050565b803561239681614fef565b805161239681614fef565b600060208284031215613bf657600080fd5b60006128408484613a7f565b600060208284031215613c1457600080fd5b60006128408484613a8a565b600080600080600060a08688031215613c3857600080fd5b6000613c448888613a7f565b9550506020613c5588828901613a7f565b9450506040613c6688828901613a7f565b9350506060613c7788828901613a7f565b9250506080613c8888828901613a7f565b9150509295509295909350565b60008060408385031215613ca857600080fd5b6000613cb48585613a7f565b9250506020613cc585828601613aea565b9150509250929050565b600080600060608486031215613ce457600080fd5b6000613cf08686613a7f565b9350506020613d0186828701613aea565b9250506040613d1286828701613aea565b9150509250925092565b600060208284031215613d2e57600080fd5b60006128408484613adf565b600060208284031215613d4c57600080fd5b60006128408484613af5565b600060208284031215613d6a57600080fd5b60006128408484613b00565b6000806000806101208587031215613d8d57600080fd5b6000613d998787613b0b565b94505060e085013567ffffffffffffffff811115613db657600080fd5b613dc287828801613a95565b9350935050610100613dd687828801613aea565b91505092959194509250565b600060e08284031215613df457600080fd5b60006128408484613b23565b600060208284031215613e1257600080fd5b60006128408484613aea565b60008060408385031215613e3157600080fd5b6000613cb48585613aea565b600080600060608486031215613e5257600080fd5b6000613e5e8686613af5565b9350506020613e6f86828701613af5565b9250506040613d1286828701613af5565b600060208284031215613e9257600080fd5b60006128408484613bd9565b6000613eaa8383614892565b50506101400190565b6000613ebf8383613f8e565b505060200190565b613ed081614f6a565b82525050565b613ed081614f33565b6000613eeb8385614ef9565b9350613ef682614ee5565b8060005b85811015613f2c57613f0c8284614f20565b613f168882613e9e565b9750613f2183614ef2565b925050600101613efa565b509495945050505050565b6000613f4282614eee565b613f4c8185614ef9565b9350613f5783614ee8565b8060005b83811015613f2c578151613f6f8882613eb3565b9750613f7a83614ee8565b925050600101613f5b565b613ed081614f3e565b613ed081614ee5565b613ed081614f43565b613ed081614f75565b6000613fb482614eee565b613fbe8185614ef9565b9350613fce818560208601614f80565b613fd781614fac565b9093019392505050565b6000613fee601d83614ef9565b7f4455524154494f4e5f455843454544535f4d41585f4455524154494f4e000000815260200192915050565b6000614027601c83610dd1565b7f54496e697469616c697a61626c652e6973496e697469616c697a6564000000008152601c0192915050565b6000614060601583614ef9565b74105353d5539517d59053155157d491545552549151605a1b815260200192915050565b6000614091601683614ef9565b7513115391125391d7d413d3d317d254d7d4105554d15160521b815260200192915050565b60006140c3601983614ef9565b7f414d4f554e545f455843454544535f4d41585f414d4f554e5400000000000000815260200192915050565b60006140fc601e83614ef9565b7f544f4b454e5f4c4f414e535f56414c55455f4d5553545f42455f5a45524f0000815260200192915050565b6000614135601183614ef9565b7013505617d313d05397d15610d151511151607a1b815260200192915050565b6000614162601b83614ef9565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b600061419b601683614ef9565b751313d05397d393d517d050d512559157d3d497d4d15560521b815260200192915050565b60006141cd601b83614ef9565b7f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000815260200192915050565b6000614206601783614ef9565b7f444f45534e545f4e4545445f4c49515549444154494f4e000000000000000000815260200192915050565b600061423f600f83614ef9565b6e4c4f414e5f4e4f545f41435449564560881b815260200192915050565b600061426a601483614ef9565b7343414e4e4f545f57495448445241575f5a45524f60601b815260200192915050565b600061429a601283614ef9565b71141310551193d49357d254d7d4105554d15160721b815260200192915050565b60006142c8601883614ef9565b7f4d4f52455f434f4c4c41544552414c5f52455155495245440000000000000000815260200192915050565b6000614301602183614ef9565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000614344601d83614ef9565b7f434f4c4c41544552414c5f4445504f53495445445f524543454e544c59000000815260200192915050565b600061437d601b83614ef9565b7f544f4b454e535f5452414e534645525f46524f4d5f4641494c45440000000000815260200192915050565b60006143b6601283614ef9565b711313d05397d511549354d7d156141254915160721b815260200192915050565b60006143e4602e83614ef9565b7f436f6e747261637420696e7374616e63652068617320616c726561647920626581526d195b881a5b9a5d1a585b1a5e995960921b602082015260400192915050565b6000614434601883614ef9565b7f41544d5f4e4f545f464f554e445f464f525f4d41524b45540000000000000000815260200192915050565b600061446d601f83614ef9565b7f494e565f42414c414e43455f41465445525f5452414e534645525f46524f4d00815260200192915050565b60006144a6601383614ef9565b7243414e4e4f545f4445504f5349545f5a45524f60681b815260200192915050565b60006144d5601e83614ef9565b7f4f5241434c455f4d5553545f434f4e54524143545f4e4f545f454d5054590000815260200192915050565b600061450e601783614ef9565b7f424f52524f5745525f4d5553545f42455f53454e444552000000000000000000815260200192915050565b6000614547601683614ef9565b7521a0a62622a92fa227a2a9a72a2fa7aba72fa627a0a760511b815260200192915050565b6000614579601983614ef9565b7f4e4f545f454e4f5547485f544f4b454e535f42414c414e434500000000000000815260200192915050565b60006145b2601883610dd1565b7f426173655570677261646561626c652e73657474696e67730000000000000000815260180192915050565b60006145eb601a83614ef9565b7f535550504c595f544f5f444542545f455843454544535f4d4158000000000000815260200192915050565b6000614624601683614ef9565b751513d2d15394d7d514905394d1915497d1905253115160521b815260200192915050565b6000614656601883614ef9565b7f434f4e54524143545f4e4f545f494e495449414c495a45440000000000000000815260200192915050565b600061468f600c83614ef9565b6b1313d05397d393d517d4d15560a21b815260200192915050565b60006146b7601b83614ef9565b7f4e4f545f454e4f5547485f544f4b454e535f414c4c4f57414e43450000000000815260200192915050565b60006146f0601f83614ef9565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b6000614729601c83614ef9565b7f434f4e54524143545f414c52454144595f494e495449414c495a454400000000815260200192915050565b6000614762601a83614ef9565b7f494e565f42414c414e43455f41465445525f5452414e53464552000000000000815260200192915050565b8051608083019061479f8482613f8e565b5060208201516147b26020850182613f8e565b5060408201516147c56040850182613f8e565b506060820151611cc36060850182613f85565b60e082016147e68280614f02565b6147f08482613ed6565b506147fe6020830183614f02565b61480b6020850182613ed6565b506148196040830183614f02565b6148266040850182613ed6565b506148346060830183614f11565b6148416060850182613f8e565b5061484f6080830183614f11565b61485c6080850182613f8e565b5061486a60a0830183614f11565b61487760a0850182613f8e565b5061488560c0830183614f11565b611cc360c0850182613f8e565b61014082016148a18280614f02565b6148ab8482613ed6565b506148b96020830183614f02565b6148c66020850182613ed6565b506148d46040830183614f11565b6148e16040850182613f8e565b506148ef6060830183614f11565b6148fc6060850182613f8e565b5061490a6080830183614f11565b6149176080850182613f8e565b5061492560a0830183614f11565b61493260a0850182613f8e565b5061494060c0830183614f20565b611cc360c08501826149bd565b805160c083019061495e8482613ed6565b5060208201516149716020850182613ed6565b5060408201516149846040850182613f8e565b5060608201516149976060850182613f8e565b5060808201516149aa6080850182613f8e565b5060a0820151611cc360a0850182613f8e565b608082016149cb8280614f11565b6149d58482613f8e565b506149e36020830183614f24565b6149f06020850182614a26565b506149fe6040830183614f11565b614a0b6040850182613f8e565b50614a196060830183614f11565b611cc36060850182613f8e565b613ed081614f64565b60006123968261401a565b6000612396826145a5565b602081016123968284613ed6565b602081016123968284613ec7565b60608101614a6f8286613ec7565b614a7c6020830185613f8e565b6128406040830184613f8e565b60408101614a978285613ed6565b6132346020830184613ed6565b60608101614ab28286613ed6565b614a7c6020830185613ed6565b60408101614acd8285613ed6565b6132346020830184613f8e565b602080825281016123938184613f37565b602081016123968284613f85565b602081016123968284613f8e565b602081016123968284613f97565b602080825281016123938184613fa9565b60208082528101610dce81613fe1565b60208082528101610dce81614053565b60208082528101610dce81614084565b60208082528101610dce816140b6565b60208082528101610dce816140ef565b60208082528101610dce81614128565b60208082528101610dce81614155565b60208082528101610dce8161418e565b60208082528101610dce816141c0565b60208082528101610dce816141f9565b60208082528101610dce81614232565b60208082528101610dce8161425d565b60208082528101610dce8161428d565b60208082528101610dce816142bb565b60208082528101610dce816142f4565b60208082528101610dce81614337565b60208082528101610dce81614370565b60208082528101610dce816143a9565b60208082528101610dce816143d7565b60208082528101610dce81614427565b60208082528101610dce81614460565b60208082528101610dce81614499565b60208082528101610dce816144c8565b60208082528101610dce81614501565b60208082528101610dce8161453a565b60208082528101610dce8161456c565b60208082528101610dce816145de565b60208082528101610dce81614617565b60208082528101610dce81614649565b60208082528101610dce81614682565b60208082528101610dce816146aa565b60208082528101610dce816146e3565b60208082528101610dce8161471c565b60208082528101610dce81614755565b60808101612396828461478e565b6101008101614d6382866147d8565b81810360e08301526129c5818486613edf565b60408101614a978285613f8e565b60408101614d928285613f8e565b6132346020830184613ec7565b60608101614dad8286613f8e565b614a7c6020830185613ec7565b6102208101614dc9828f613f8e565b614dd6602083018e61494d565b614de360e083018d613f8e565b614df161010083018c613f8e565b614dff61012083018b613f8e565b614e0d61014083018a613f8e565b614e1b610160830189613f8e565b614e29610180830188613f8e565b614e376101a0830187613f8e565b614e456101c0830186613ed6565b614e536101e0830185613fa0565b614e61610200830184613f85565b9d9c50505050505050505050505050565b60a08101614e808288613f8e565b614e8d6020830187613f8e565b614e9a6040830186613f8e565b614ea76060830185613f8e565b614eb46080830184613f8e565b9695505050505050565b60405181810167ffffffffffffffff81118282101715614edd57600080fd5b604052919050565b90565b60200190565b5190565b6101400190565b90815260200190565b60006123936020840184613a7f565b60006123936020840184613aea565b5090565b60006123936020840184613bce565b6000610dce82614f58565b151590565b6000610dce82614f33565b80610dd181614fb6565b6001600160a01b031690565b60ff1690565b6000610dce82614f43565b6000610dce82614f4e565b60005b83811015614f9b578181015183820152602001614f83565b83811115611cc35750506000910152565b601f01601f191690565b6004811061134657fe5b614fc981614f33565b811461134657600080fd5b614fc981614f3e565b614fc981614ee5565b614fc981614f43565b614fc981614f6456fe608060405234801561001057600080fd5b5061020b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80633ff591d9116100665780633ff591d9146100ca578063c41dd8ce146100d2578063cc44cadb146100da578063e00a4615146100e2578063e3f33d00146100ea57610093565b806308b04f62146100985780631139087a146100b257806311880cc8146100ba5780633b98dfdb146100c2575b600080fd5b6100a06100f2565b60408051918252519081900360200190f35b6100a0610109565b6100a0610121565b6100a0610136565b6100a061015a565b6100a0610174565b6100a061018b565b6100a06101a5565b6100a06101bb565b6f21b7b63630ba32b930b6213ab33332b960811b81565b704c6971756964617465457468507269636560781b81565b6d14d859995d1e525b9d195c9d985b60921b81565b7f526571756573744c6f616e5465726d73526174654c696d69740000000000000081565b7252657175697265645375626d697373696f6e7360681b81565b6f4d6178696d756d546f6c6572616e636560801b81565b7226b0bc34b6bab6a637b0b7223ab930ba34b7b760691b81565b6e5465726d7345787069727954696d6560881b81565b730a4cae6e0dedce6ca8af0e0d2e4f298cadccee8d60631b8156fea265627a7a72315820b6cc93d12d39f205ac91b27ee8876405b81cd752a680e010a2828f9ed81bbbb364736f6c63430005110032a365627a7a723158208590b2bc30a4f010dde62fd3a46dcccca2d0d4f5c31cab765b0f54e31481e13b6c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "1345:5732:36:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1345:5732:36;;;;;;;",
  "deployedSourceMap": "1345:5732:36:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8011:2036:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8011:2036:26;;;;;;;;:::i;:::-;;4710:542:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4710:542:36;;;;;;;;:::i;1241:169:33:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1241:169:33;;;:::i;:::-;;;;;;;;;;;;;;;;1999:676:36;;;;;;;;;:::i;2989:26:26:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2989:26:26;;;:::i;:::-;;;;;;;;14192:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14192:151:26;;;;;;;;:::i;:::-;;;;;;;;2812:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2812:30:26;;;:::i;2954:28::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2954:28:26;;;:::i;15045:518::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15045:518:26;;;;;;;;:::i;3068:53::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3068:53:26;;;:::i;:::-;;;;;;;;13221:761;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13221:761:26;;;;;;;;:::i;6511:1153::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6511:1153:26;;;;;;;;:::i;769:214:134:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;769:214:134;;;:::i;14567:184:26:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14567:184:26;;;;;;;;:::i;:::-;;;;;;;;3022:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3022:39:26;;;:::i;2966:1228:36:-;;;;;;;;;:::i;6152:106:26:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6152:106:26;;;:::i;2849:30::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2849:30:26;;;:::i;11896:1114::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11896:1114:26;;;;;;;;:::i;3242:28::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3242:28:26;;;:::i;10234:1510::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10234:1510:26;;;;;;;;:::i;839:263:11:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;839:263:11;;;:::i;3185:50:26:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3185:50:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3128;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3128:50:26;;;;;;;;:::i;5891:132::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5891:132:26;;;;;;;;:::i;:::-;;;;;;;;8011:2036;8108:6;4258:32;4234:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4234:20:26;;;;:56;;;;;;;;;4226:81;;;;-1:-1:-1;;;4226:81:26;;;;;;;;;;;;;;;;;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;8205:11:26;;-1:-1:-1;;;;;8205:11:26;2718:33:7;8205:11:26;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:134;:18;;1409:1;1392:18;;;;;;;:13;8261::26;;;:5;:13;;;;;:23;:32;-1:-1:-1;;;;;8261:32:26;3548:10;:22;;3540:58;;;;-1:-1:-1;;;3540:58:26;;;;;;;;;8330:13;;;;:5;:13;;;;;:37;;;:53;-1:-1:-1;8330:53:26;8309:117;;;;-1:-1:-1;;;8309:117:26;;;;;;;;;8445:13;;;;:5;:13;;;;;:25;;;8474:3;-1:-1:-1;8445:32:26;8437:63;;;;-1:-1:-1;;;8437:63:26;;;;;;;;;8582:115;8611:10;:8;:10::i;:::-;-1:-1:-1;;;;;8611:34:26;;8646:6;;;;;;;;;-1:-1:-1;;;;;8646:6:26;-1:-1:-1;;;;;8646:30:26;;:32;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8646:32:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8646:32:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8646:32:26;;;;;;;;;8611:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8611:68:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8611:68:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8611:68:26;;;;;;;;;8582:3;;:115;:7;:115;:::i;:::-;8532:13;;;;:5;:13;;;;;:30;;;:165;;8511:241;;;;-1:-1:-1;;;8511:241:26;;;;;;;;;8763:13;;;;:5;:13;;;;;:28;;;:43;;;8816:27;;;:42;;;8982:32;;;;8927:36;;;;;8897:185;;2461:7;;8897:149;;2724:5;;8897:149;;8982:32;8897:67;;8794:12;;8897:67;:29;:67;:::i;:::-;:84;:118;:84;:118;:::i;:::-;:135;:149;:135;:149;:::i;:185::-;8868:13;;;;:5;:13;;;;;:26;;:214;9165:53;;:::i;:::-;9221:48;9253:6;9221:18;:48::i;:::-;9165:104;;9289:14;:37;;;9288:38;9280:75;;;;-1:-1:-1;;;9280:75:26;;;;;;;;;9366:13;;;;:5;:13;;;;;9396:3;9366:27;;;:33;9409:20;;:53;;-1:-1:-1;;;;9409:53:26;-1:-1:-1;;;9409:53:26;;;9495:21;9366:13;9495;:21::i;:::-;9472:13;;;;:5;:13;;;;;;;:20;;:44;;-1:-1:-1;;;;;;9472:44:26;-1:-1:-1;;;;;9472:44:26;;;;;;;;9588:11;;:58;;-1:-1:-1;;;9588:58:26;;:11;;;;:22;;:58;;9611:12;;9625:20;;9588:58;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9588:58:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;9673:13:26;;;;:5;:13;;;;;;;:20;;;9657:71;;-1:-1:-1;;;9657:71:26;;-1:-1:-1;;;;;9673:20:26;;;;-1:-1:-1;9657:48:26;;:71;;9714:4;;9679:6;;9657:71;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9657:71:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9657:71:26;;;;9739:10;:8;:10::i;:::-;-1:-1:-1;;;;;9739:25:26;;9778:11;;;;;;;;;-1:-1:-1;;;;;9778:11:26;-1:-1:-1;;;;;9778:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9778:26:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9778:26:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9778:26:26;;;;;;;;;9818:4;-1:-1:-1;;;;;9818:20:26;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9818:22:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9818:22:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9818:22:26;;;;;;;;;9854:12;9739:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9739:137:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;9984:13:26;;;;:5;:13;;;;;;;:20;;;;;9938:23;;;:32;9892:148;;-1:-1:-1;;;;;9984:20:26;;;;-1:-1:-1;9938:32:26;;;9990:6;;9892:148;;;;10018:12;;9892:148;;;;;;;;;;3608:1;1466::134;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:134;;;;;;;;;2788:1:7;2391;8011:2036:26;;;:::o;4710:542:36:-;706:13:33;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:33;;;;;;;;;4962:68:36;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4962:38:36;;;:68;:38;:68;:::i;:::-;5041:153;5066:18;5098;5130:25;5169:15;5041:11;:153::i;:::-;5205:15;:40;;-1:-1:-1;;;;;;5205:40:36;-1:-1:-1;;;;;5205:40:36;;;;;;;;;;-1:-1:-1;;;;4710:542:36:o;1241:169:33:-;1285:10;1307:12;421:55;;;;;;;;;;;;;;;1383:11;;1360:44;-1:-1:-1;;1360:44:33:o;1999:676:36:-;1648:9;:14;1640:57;;;;-1:-1:-1;;;1640:57:36;;;;;;;;;2184:6;4645:32:26;4621:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4621:20:26;;;;:56;;;;;;;;;:130;;;-1:-1:-1;4721:30:26;4697:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4697:20:26;;;;:54;;;;;;;;;4621:130;4600:199;;;;-1:-1:-1;;;4600:199:26;;;;;;;;;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;2281:11:36;;-1:-1:-1;;;;;2281:11:36;2718:33:7;2281:11:36;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;2346:13:36;;;;:5;:13;;;;;;;;;:23;;:32;2309:120;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2309:23:36;;;;2346:32;;2309:120;:23;:120;:::i;:::-;2456:1;2447:6;:10;2439:42;;;;-1:-1:-1;;;2439:42:36;;;;;;;;;2575:32;2592:6;2600;2575:16;:32::i;:::-;2651:8;-1:-1:-1;;;;;2623:45:36;2643:6;2623:45;2661:6;2623:45;;;;;;;;;;;;;;;2391:1:7;1707::36;1999:676;;;:::o;2989:26:26:-;;;-1:-1:-1;;;;;2989:26:26;;:::o;14192:151::-;14251:7;14308:13;;;:5;:13;;;;;:27;;;;14277:26;;;;;:59;;;:30;:59;:::i;:::-;14270:66;;14192:151;;;;:::o;2812:30::-;;;;:::o;2954:28::-;;;;:::o;15045:518::-;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;690:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;690:28:11;;719:10;690:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;690:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;690:40:11;;;;15233:27:26;:14;-1:-1:-1;;;;;15233:25:26;;:27::i;:::-;15225:70;;;;-1:-1:-1;;;15225:70:26;;;;;;;;;15338:11;;15360:79;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15338:11:26;;;;15360:79;;15338:11;;15393:14;;15360:79;:32;:79;:::i;:::-;15450:11;:28;;-1:-1:-1;;;;;;15450:28:26;-1:-1:-1;;;;;15450:28:26;;;;;;;;;15494:62;;15450:28;;15494:62;;;15513:10;;15494:62;;-1:-1:-1;;15494:62:26;740:1:11;15045:518:26;:::o;3068:53::-;;;-1:-1:-1;;;;;3068:53:26;;:::o;13221:761::-;13284:4;13317:11;:9;:11::i;:::-;:62;;;-1:-1:-1;13366:11:26;;13344:35;;-1:-1:-1;;;;;13366:11:26;13344:13;:35::i;:::-;13317:132;;;-1:-1:-1;13419:30:26;13395:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;13395:20:26;;;;:54;;;;;;;;;;13317:132;13300:197;;;-1:-1:-1;13481:5:26;13474:12;;13300:197;13507:17;13527:13;;;:5;:13;;;;;:27;;;;13583:32;;;;;13527:27;;13668:3;13642:23;13527:27;13583:32;13642:23;:13;:23;:::i;:::-;:29;13625:46;;13685:9;13681:51;;;13717:4;13710:11;;;;;;;13681:51;13742:21;13766:13;;;:5;:13;;;;;:20;;;-1:-1:-1;;;;;13766:20:26;13800:29;;13796:113;;13868:13;-1:-1:-1;;;;;13852:44:26;;:46;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13852:46:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13852:46:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13852:46:26;;;;;;;;;13845:53;;;;;;;;13796:113;13926:26;13945:6;13926:18;:26::i;:::-;:49;;;;13221:761;-1:-1:-1;;;;;;13221:761:26:o;6511:1153::-;6612:6;4645:32;4621:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4621:20:26;;;;:56;;;;;;;;;:130;;;-1:-1:-1;4721:30:26;4697:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4697:20:26;;;;:54;;;;;;;;;4621:130;4600:199;;;;-1:-1:-1;;;4600:199:26;;;;;;;;;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;6709:11:26;;-1:-1:-1;;;;;6709:11:26;2718:33:7;6709:11:26;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:134;:18;;1409:1;1392:18;;;;;;;-1:-1:-1;6782:13:26;;;:5;:13;;;;;:23;:32;-1:-1:-1;;;;;6782:32:26;6768:10;:46;6760:81;;;;-1:-1:-1;;;6760:81:26;;;;;;;;;6868:1;6859:6;:10;6851:43;;;;-1:-1:-1;;;6851:43:26;;;;;;;;;6992:29;7024:36;7053:6;7024:28;:36::i;:::-;6992:68;;7070:27;7100:41;7119:21;7100:18;:41::i;:::-;7231:24;7258:13;;;:5;:13;;;;;:24;;;7070:71;;-1:-1:-1;7231:24:26;7258:49;;7070:71;7258:49;:28;:49;:::i;:::-;7231:76;;7340:6;7321:16;:25;7317:81;;;-1:-1:-1;7381:6:26;7317:81;7412:20;;7408:177;;7519:55;7537:6;7545:16;7563:10;7519:17;:55::i;:::-;7628:10;-1:-1:-1;;;;;7600:57:26;7620:6;7600:57;7640:16;7600:57;;;;;;;;;;;;;;;1466:1:134;;;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:134;;;;;;;;769:214;1024:12:135;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:135;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:135;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:135;;;;;1225:18;1213:4;1225:18;;;1170:80;975:1:134;959:13;:17;1264:55:135;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:135;;;1264:55;769:214:134;:::o;14567:184:26:-;14657:38;;:::i;:::-;14718:26;14737:6;14718:18;:26::i;3022:39::-;;;-1:-1:-1;;;;;3022:39:26;;:::o;2966:1228:36:-;1648:9;:14;1640:57;;;;-1:-1:-1;;;1640:57:36;;;;;;;;;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;3263:16:36;;;;:7;:16;;;3548:10:26;-1:-1:-1;;;;;3548:22:26;;;3540:58;;;;-1:-1:-1;;;3540:58:26;;;;;;;;;5138:629;;;;;;;3310:7:36;5138:629:26;;;5338:11;:20;;;5244:10;:8;:10::i;:::-;-1:-1:-1;;;;;5244:34:26;;5279:6;;;;;;;;;-1:-1:-1;;;;;5279:6:26;-1:-1:-1;;;;;5279:36:26;;:38;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5279:38:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5279:38:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5279:38:26;;;;;;;;;5244:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5244:74:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5244:74:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5244:74:26;;;;;;;;;:114;;5223:190;;;;-1:-1:-1;;;5223:190:26;;;;;;;;;5445:10;:8;:10::i;:::-;-1:-1:-1;;;;;5445:31:26;;5494:11;;;;;;;;;-1:-1:-1;;;;;5494:11:26;-1:-1:-1;;;;;5494:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5494:26:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5494:26:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5494:26:26;;;;;;;;;5538:11;:18;;;5445:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5445:125:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5445:125:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5445:125:26;;;;;;;;;5444:126;5423:198;;;;-1:-1:-1;;;5423:198:26;;;;;;;;;5652:45;5678:11;:18;;;5652:25;:45::i;:::-;5631:118;;;;-1:-1:-1;;;5631:118:26;;;;;;;;;3333:14:36;3350:23;:21;:23::i;:::-;3503:18;;:53;;-1:-1:-1;;;3503:53:36;;3333:40;;-1:-1:-1;3398:20:36;;;;;;-1:-1:-1;;;;;3503:18:36;;;;:33;;:53;;3537:7;;3546:9;;;;3503:53;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3503:53:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3503:53:36;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3503:53:36;;;;;;;;;3384:172;;-1:-1:-1;3384:172:36;-1:-1:-1;3384:172:36;-1:-1:-1;3583:143:36;3607:6;3583:143;;;;;;;3627:7;3583:143;;;3648:12;3674:15;3703:13;3583:10;:143::i;:::-;3567:13;;;;:5;:13;;;;;;;;;:159;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3567:159:36;;;-1:-1:-1;;;;;3567:159:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;;:159;;;-1:-1:-1;;;;3567:159:36;;;;-1:-1:-1;;;3567:159:36;;;;;;;;;;;;;;-1:-1:-1;3567:159:36;;;;;;;;;;;;;;;-1:-1:-1;;;3567:159:36;-1:-1:-1;;;;3567:159:36;;;;;;;;;3741:20;;3737:165;;3849:42;3866:6;3874:16;3849;:42::i;:::-;3912:13;:31;3926:16;;;;:7;:16;;;-1:-1:-1;;;;;3912:31:36;;;;;;;;;;;;;-1:-1:-1;3912:31:36;;;27:10:-1;;39:1;23:18;;45:23;;3912:44:36;;;;;;;;;;3967:220;3949:6;3967:220;;;;;;;4058:7;3967:220;;;4079:12;4105:15;4134:13;4161:16;3967:57;:220::i;:::-;5759:1:26;;;;3608;2391::7;2966:1228:36;;;;:::o;6152:106:26:-;6225:11;;:26;;;-1:-1:-1;;;6225:26:26;;;;6199:7;;-1:-1:-1;;;;;6225:11:26;;:24;;:26;;;;;;;;;;;;;;:11;:26;;;5:2:-1;;;;30:1;27;20:12;5:2;6225:26:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6225:26:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6225:26:26;;;;;;;;;6218:33;;6152:106;:::o;2849:30::-;;;-1:-1:-1;;;;;2849:30:26;;:::o;11896:1114::-;11971:6;3894:30;3870:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;3870:20:26;;;;:54;;;;;;;;;3849:116;;;;-1:-1:-1;;;3849:116:26;;;;;;;;;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;12068:11:26;;-1:-1:-1;;;;;12068:11:26;2718:33:7;12068:11:26;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:134;:18;;1409:1;1392:18;;;;;12127:24:26;12144:6;12127:16;:24::i;:::-;12119:60;;;;-1:-1:-1;;;12119:60:26;;;;;;;;;12190:13;;;;:5;:13;;;;;:20;;;:53;;-1:-1:-1;;;;12190:53:26;-1:-1:-1;;;12190:53:26;-1:-1:-1;;;;12253:31:26;-1:-1:-1;;;12253:31:26;;;12316:24;;;;12379:30;12316:24;12379:18;:30::i;:::-;12350:59;;12476:49;12494:6;12502:10;12514;12476:17;:49::i;:::-;12536:20;12559:140;2724:5;12559:109;12595:10;:8;:10::i;:::-;-1:-1:-1;;;;;12595:34:26;;12630:6;;;;;;;;;-1:-1:-1;;;;;12630:6:26;-1:-1:-1;;;;;12630:34:26;;:36;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12630:36:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12630:36:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12630:36:26;;;;;;;;;12595:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12595:72:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12595:72:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12595:72:26;;;;;;;;;12559:18;;:109;:35;:109;:::i;:140::-;12767:11;;:56;;-1:-1:-1;;;12767:56:26;;12536:163;;-1:-1:-1;;;;;;12767:11:26;;:30;;:56;;12536:163;;12812:10;;12767:56;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12767:56:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;12887:13:26;;;;:5;:13;;;;;;;:23;;:32;12839:164;;-1:-1:-1;;;;;12887:32:26;;;;-1:-1:-1;12893:6:26;;12839:164;;;;12933:10;;12957;;12981:12;;12839:164;;;;;;;;;;1466:1:134;;;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:134;;;;;;;;;2788:1:7;2391;11896:1114:26;;:::o;3242:28::-;;;-1:-1:-1;;;;;3242:28:26;;:::o;10234:1510::-;10317:6;3894:30;3870:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;3870:20:26;;;;:54;;;;;;;;;3849:116;;;;-1:-1:-1;;;3849:116:26;;;;;;;;;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;10414:11:26;;-1:-1:-1;;;;;10414:11:26;2718:33:7;10414:11:26;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:134;:18;;1409:1;1392:18;;;;;10473:10:26;10465:44;;;;-1:-1:-1;;;10465:44:26;;;;;;;;;10583:6;10567:13;10619:20;10632:6;10619:12;:20::i;:::-;10599:40;;10665:5;10653:9;:17;10649:65;;;10694:9;10686:17;;10649:65;10782:20;:9;10796:5;10782:20;:13;:20;:::i;:::-;10770:32;;10812:23;10821:6;10829:5;10812:8;:23::i;:::-;10923:14;10919:416;;10953:13;;;;:5;:13;;;;;:20;;;:53;;-1:-1:-1;;;;10953:53:26;-1:-1:-1;;;10953:53:26;;;11048:24;;;;-1:-1:-1;11130:23:26;;;:32;11086:77;;10953:13;;11048:24;;-1:-1:-1;;;;;11130:32:26;11086:17;:77::i;:::-;11244:13;;;;:5;:13;;;;;;;:23;;:32;11183:141;;-1:-1:-1;;;;;11244:32:26;;;;11250:6;;11183:141;;;;11294:16;;11183:141;;;;;;;;;;10919:416;;11389:11;;:36;;-1:-1:-1;;;11389:36:26;;-1:-1:-1;;;;;11389:11:26;;;;:17;;:36;;11407:5;;11414:10;;11389:36;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11389:36:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11389:36:26;;;;11436:10;:8;:10::i;:::-;-1:-1:-1;;;;;11436:28:26;;11478:11;;;;;;;;;-1:-1:-1;;;;;11478:11:26;-1:-1:-1;;;;;11478:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11478:26:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11478:26:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11478:26:26;;;;;;;;;11518:4;-1:-1:-1;;;;;11518:20:26;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11518:22:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11518:22:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11518:22:26;;;;;;;;;11554:5;11436:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11436:133:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;11629:13:26;;;;:5;:13;;;;;;;:23;;:32;11585:152;;-1:-1:-1;;;;;11629:32:26;;;;-1:-1:-1;11635:6:26;;11585:152;;;;11675:5;;11694:10;;11718:9;;11585:152;;;;;;;;;;1466:1:134;;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:134;;;;;;;;839:263:11;880:17;909:23;943:12;370:37;;;;;;;;;;;;;;;1023:11;;-1:-1:-1;;;839:263:11;:::o;3185:50:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3185:50:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3185:50:26;;;;;-1:-1:-1;;;3185:50:26;;;;:::o;3128:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5891:132::-;-1:-1:-1;;;;;5993:23:26;;;;;;:13;:23;;;;;;;;;5986:30;;;;;;;;;;;;;;;;;5958:16;;5986:30;;;5993:23;5986:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5891:132;;;:::o;4894:95:7:-;4938:4;4961:10;:8;:10::i;:::-;-1:-1:-1;;;;;4961:19:7;;:21;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4961:21:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4961:21:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4961:21:7;;;;;;;;4607:138;4674:4;4697:10;:8;:10::i;:::-;-1:-1:-1;;;;;4697:28:7;;4726:11;4697:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4697:41:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4697:41:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4697:41:7;;;;;;;;1274:134:125;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;;:::o;2159:459::-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:125;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:125;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;16216:624:26:-;16307:38;;:::i;:::-;16361:18;16382:13;;;:5;:13;;;;;:24;;;;16361:18;16472:54;16388:6;16472:24;:54::i;:::-;16555:278;;;;;;;;;;;;;;;;;;;;;;;16787:31;;;;16555:278;;;;-1:-1:-1;16555:278:26;;16216:624;-1:-1:-1;;;16216:624:26:o;26005:152::-;26062:7;26088:10;:8;:10::i;:::-;-1:-1:-1;;;;;26088:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26088:26:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26088:26:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26088:26:26;;;;;;;;;-1:-1:-1;;;;;26088:39:26;;26136:4;26143:6;26088:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26088:62:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26088:62:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26088:62:26;;;;;;;;4995:115:7;5038:21;5078:10;:8;:10::i;:::-;-1:-1:-1;;;;;5078:23:7;;:25;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5078:25:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5078:25:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5078:25:7;;;;;;;;1583:127:104;1677:16;1688:4;1677:10;:16::i;:::-;1695:7;1669:34;;;;;-1:-1:-1;;;1669:34:104;;;;;;;;;;;1583:127;;:::o;18005:708:26:-;706:13:33;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:33;;;;;;;;;18218:60:26;;;;;;;;;;;;-1:-1:-1;;;18218:60:26;;;;;;-1:-1:-1;;;;;18218:34:26;;;:60;:34;:60;:::i;:::-;18288:66;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18288:34:26;;;:66;:34;:66;:::i;:::-;18364:72;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18364:41:26;;;:72;:41;:72;:::i;:::-;18447:28;18459:15;18447:11;:28::i;:::-;18486:11;:32;;-1:-1:-1;;;;;18486:32:26;;;-1:-1:-1;;;;;;18486:32:26;;;;;;;18528:11;:54;;;;;;;;;;;18592:18;:75;;;;;;;;;;;;;;;18686:20;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;18677:6:26;:29;;-1:-1:-1;;;;;;18677:29:26;-1:-1:-1;;;;;18677:29:26;;;;;;;;;;-1:-1:-1;;;;18005:708:26:o;2303:177:104:-;2441:22;2451:4;2457:5;2441:9;:22::i;:::-;2465:7;2433:40;;;;;-1:-1:-1;;;2433:40:104;;;;;;;;;6000:295:36;6136:38;6159:6;6167;6136:22;:38::i;:::-;6240:48;6269:10;6281:6;6240:28;:48::i;:::-;6000:295;;:::o;834:176:125:-;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:125;;;;;;;;686:610:132;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:132;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:132:o;2749:183:104:-;2890:25;2903:4;2909:5;2890:12;:25::i;20069:313:26:-;20170:7;20193:18;20214:20;20227:6;20214:12;:20::i;:::-;20244:23;20270:13;;;:5;:13;;;;;:39;;;20193:41;;-1:-1:-1;20326:49:26;2724:5;20326:31;20193:41;20270:39;20326:31;:14;:31;:::i;21423:637::-;21495:7;21684:26;21713:71;21727:11;;;;;;;;;-1:-1:-1;;;;;21727:11:26;-1:-1:-1;;;;;21727:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21727:26:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21727:26:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;21727:26:26;;;;;;;;;-1:-1:-1;;;;;21713:69:26;;:71::i;:::-;21684:100;;21794:31;21873:11;;;;;;;;;-1:-1:-1;;;;;21873:11:26;-1:-1:-1;;;;;21849:52:26;;:54;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21849:54:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21849:54:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;21849:54:26;;;;;;;;;21794:119;-1:-1:-1;21923:16:26;21942:86;22000:18;21942:40;:11;21794:119;21942:40;:15;:40;:::i;:86::-;21923:105;21423:637;-1:-1:-1;;;;;21423:637:26:o;5484:314:36:-;5637:15;;:27;;5657:6;5637:27;:19;:27;:::i;:::-;5619:15;:45;5701:13;;;;:5;:13;;;;;:24;;;:36;;5730:6;5701:36;:28;:36;:::i;:::-;5674:13;;;;:5;:13;;;;;:24;;:63;5748:43;5773:9;5784:6;5748:24;:43::i;1409:498:135:-;1820:4;1864:17;1895:7;1409:498;:::o;25034:759:26:-;25139:4;25159:27;25189:10;:8;:10::i;:::-;-1:-1:-1;;;;;25189:22:26;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25189:24:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25189:24:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25189:24:26;;;;;;;;;-1:-1:-1;;;;;25189:40:26;;25243:11;;;;;;;;;-1:-1:-1;;;;;25243:11:26;-1:-1:-1;;;;;25243:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25243:26:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25243:26:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25243:26:26;;;;;;;;;25283:15;;25189:119;;-1:-1:-1;;;;;;25189:119:26;;;;;;;;;;-1:-1:-1;;;;;25283:15:26;;25189:119;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25189:119:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25189:119:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25189:119:26;;;;;;;;;25159:149;-1:-1:-1;;;;;;25326:35:26;;25318:72;;;;-1:-1:-1;;;25318:72:26;;;;;;;;;25434:102;;-1:-1:-1;;;25434:102:26;;25400:31;;-1:-1:-1;;;;;25434:74:26;;;;;:102;;-1:-1:-1;;;25509:26:26;25434:102;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25434:102:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25434:102:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25434:102:26;;;;;;;;;25400:136;;25546:33;25582:10;:8;:10::i;:::-;-1:-1:-1;;;;;25582:29:26;;25625:11;;;;;;;;;-1:-1:-1;;;;;25625:11:26;-1:-1:-1;;;;;25625:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25625:26:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25625:26:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25625:26:26;;;;;;;;;25665:15;;25582:135;;-1:-1:-1;;;;;;25582:135:26;;;;;;;;;;-1:-1:-1;;;;;25665:15:26;;25694:13;;25582:135;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25582:135:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25582:135:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25582:135:26;;;;;;;;;25734:52;;;;;;25034:759;-1:-1:-1;;;;25034:759:26:o;22213:140::-;22305:13;;;22345:1;22328:18;;;;;22305:13;22213:140::o;22854:1218::-;23070:24;;:::i;:::-;23106:19;23128:101;23149:10;:8;:10::i;:::-;-1:-1:-1;;;;;23149:34:26;;23184:6;;;;;;;;;-1:-1:-1;;;;;23184:6:26;-1:-1:-1;;;;;23184:32:26;;:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23184:34:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23184:34:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;23184:34:26;;;;;;;;;23149:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23149:70:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23149:70:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;23149:70:26;;;;;;;;;23128:3;;:101;:7;:101;:::i;:::-;23106:123;;23258:807;;;;;;;;23298:6;23258:807;;;;23333:340;;;;;;;;23388:7;:16;;;-1:-1:-1;;;;;23333:340:26;;;;;23437:7;:17;;;-1:-1:-1;;;;;23333:340:26;;;;;23490:12;23333:340;;;;23541:15;23333:340;;;;23593:13;23333:340;;;;23638:7;:16;;;23333:340;;;23258:807;;;;23704:11;23258:807;;;;23748:1;23258:807;;;;23779:1;23258:807;;;;23816:1;23258:807;;;;23850:1;23258:807;;;;23883:1;23258:807;;;;23918:1;23258:807;;;;23953:3;-1:-1:-1;;;;;23258:807:26;;;;;23983:32;23258:807;;;;;;;;;;24045:5;23258:807;;;;;23239:826;22854:1218;-1:-1:-1;;;;;;;22854:1218:26:o;24078:684::-;24451:7;:17;;;-1:-1:-1;;;;;24375:254:26;24421:7;:16;;;-1:-1:-1;;;;;24375:254:26;24401:6;24375:254;24482:12;24508:15;24537:13;24564:7;:16;;;24594:5;:13;24600:6;24594:13;;;;;;;;;;;:25;;;24375:254;;;;;;;;;;;;;;;;;;;24643:19;;24639:117;;24711:7;:16;;;-1:-1:-1;;;;;24683:62:26;24703:6;24683:62;24729:15;24683:62;;;;;;;;;;;;;;;24639:117;24078:684;;;;;;:::o;20618:548::-;20688:7;20788:26;20817:71;20831:11;;;;;;;;;-1:-1:-1;;;;;20831:11:26;-1:-1:-1;;;;;20831:24:26;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;20817:71:26;20788:100;;20898:31;20977:11;;;;;;;;;-1:-1:-1;;;;;20977:11:26;-1:-1:-1;;;;;20953:52:26;;:54;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20953:54:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20953:54:26;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;20953:54:26;;;;;;;;;20898:119;-1:-1:-1;21027:18:26;21048:84;20898:119;21048:33;:9;21062:18;21048:33;:13;:33;:::i;19393:461::-;19473:13;;;;:5;:13;;;;;:27;;;19465:35;;19461:387;;;19516:17;19581:13;;;:5;:13;;;;;:27;;;19536:5;;19567:42;;19536:5;;19567:42;:13;:42;:::i;:::-;19653:1;19623:13;;;:5;:13;;;;;:27;;;:31;;;;19697:26;;;19555:54;;-1:-1:-1;19697:41:26;;19555:54;19697:41;:30;:41;:::i;:::-;19668:13;;;;:5;:13;;;;;:26;;:70;-1:-1:-1;19461:387:26;;;19799:13;;;;:5;:13;;;;;:27;;;:38;;19831:5;19799:38;:31;:38;:::i;:::-;19769:13;;;;:5;:13;;;;;:27;;:68;19393:461;;:::o;1732:187:125:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:125;;;;;;;;;;-1:-1:-1;;1888:5:125;;;1732:187;;;;;;:::o;3718:338::-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:125;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:125:o;17122:460:26:-;17219:29;17250:32;17350:29;17382:36;17411:6;17382:28;:36::i;:::-;17350:68;;17510:21;17533:41;17552:21;17533:18;:41::i;:::-;17502:73;;;;;17122:460;;;:::o;1288:108:104:-;-1:-1:-1;;;;;1368:21:104;;;;1288:108::o;4072:292:7:-;706:13:33;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:33;;;;;;;;;4156:60:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4156:31:7;;;:60;:31;:60;:::i;:::-;4234:28;:15;-1:-1:-1;;;;;4234:26:7;;:28::i;:::-;4226:68;;;;-1:-1:-1;;;4226:68:7;;;;;;;;;4305:13;:11;:13::i;:::-;4328:29;4341:15;4328:12;:29::i;681:114:104:-;-1:-1:-1;;;;;775:13:104;;;;;;;681:114::o;18915:248:26:-;19010:15;;:27;;19030:6;19010:27;:19;:27;:::i;:::-;18992:15;:45;19074:13;;;;:5;:13;;;;;:24;;;:36;;19103:6;19074:36;:28;:36;:::i;:::-;19047:13;;;;:5;:13;;;;;;:24;;;:63;;;;-1:-1:-1;19153:3:26;19120:30;;;;:36;18915:248::o;6919:156:36:-;7020:15;;7006:62;;-1:-1:-1;;;;;7020:15:36;7055:4;7061:6;7006:62;:48;:62;:::i;1018:117:104:-;-1:-1:-1;;;;;1115:13:104;;;;;;;;1018:117::o;710:155:106:-;777:7;796:14;813:4;-1:-1:-1;;;;;813:13:106;;:15;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;813:15:106;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;813:15:106;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;813:15:106;;;;;;;;;845:13;;514:2;845:13;;710:155;-1:-1:-1;;;710:155:106:o;6524:158:36:-;6626:15;;6612:63;;-1:-1:-1;;;;;6626:15:36;6657:9;6668:6;6612:63;:44;:63;:::i;1509:171:33:-;1551:12;421:55;;;;;;;;;;;;;;;1608:4;1645:19;;-1:-1:-1;1631:43:33:o;1649:392:11:-;1831:3;1808:10;:8;:10::i;:::-;-1:-1:-1;;;;;1800:35:11;;1796:128;;1864:28;:15;-1:-1:-1;;;;;1864:26:11;;:28::i;:::-;1856:68;;;;-1:-1:-1;;;1856:68:11;;;;;;;;;1849:75;;1796:128;1935:12;370:37;;;;;;;;;;;;;;;1996:29;;;-1:-1:-1;1982:53:11;:::o;2161:679:106:-;2314:35;;-1:-1:-1;;;2314:35:106;;2287:24;;-1:-1:-1;;;;;2314:14:106;;;;;:35;;2329:4;;2343;;2314:35;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2314:35:106;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2314:35:106;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2314:35:106;;;;;;;;;2287:62;;2387:6;2367:16;:26;;2359:66;;;;-1:-1:-1;;;2359:66:106;;;;;;;;;2461:29;;-1:-1:-1;;;2461:29:106;;2436:22;;-1:-1:-1;;;;;2461:14:106;;;;;:29;;2484:4;;2461:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2461:29:106;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2461:29:106;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2461:29:106;;;;;;;;;2436:54;;2500:23;2526:4;-1:-1:-1;;;;;2526:17:106;;2544:4;2558;2565:6;2526:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2526:46:106;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2526:46:106;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2526:46:106;;;;;;;;;2500:72;;2590:18;2582:58;;;;-1:-1:-1;;;2582:58:106;;;;;;;;;2674:29;;-1:-1:-1;;;2674:29:106;;2651:20;;-1:-1:-1;;;;;2674:14:106;;;;;:29;;2697:4;;2674:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2674:29:106;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2674:29:106;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2674:29:106;;;;;;;;;2651:52;-1:-1:-1;2770:6:106;2734:32;2651:52;2751:14;2734:32;:16;:32;:::i;:::-;:42;2713:120;;;;-1:-1:-1;;;2713:120:106;;;;;;;;;2161:679;;;;;;;:::o;1202:539::-;1354:29;;-1:-1:-1;;;1354:29:106;;1329:22;;-1:-1:-1;;;;;1354:14:106;;;;;:29;;1377:4;;1354:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1354:29:106;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1354:29:106;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1354:29:106;;;;;;;;;1329:54;;1419:6;1401:14;:24;;1393:62;;;;-1:-1:-1;;;1393:62:106;;;;;;;;;1488:32;;-1:-1:-1;;;1488:32:106;;1466:19;;-1:-1:-1;;;;;1488:13:106;;;;;:32;;1502:9;;1513:6;;1488:32;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1488:32:106;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1488:32:106;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1488:32:106;;;;;;;;;1466:54;;1538:14;1530:49;;;;-1:-1:-1;;;1530:49:106;;;;;;;;;1613:29;;-1:-1:-1;;;1613:29:106;;1590:20;;-1:-1:-1;;;;;1613:14:106;;;;;:29;;1636:4;;1613:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1613:29:106;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1613:29:106;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1613:29:106;;;;;;;;;1590:52;-1:-1:-1;1697:6:106;1661:32;:14;1590:52;1661:32;:18;:32;:::i;:::-;:42;1653:81;;;;-1:-1:-1;;;1653:81:106;;;;;;;;1345:5732:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1345:5732:36;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;1345:5732:36;;;;;;-1:-1:-1;;;;;1345:5732:36;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;479:383;;;638:3;631:4;623:6;619:17;615:27;605:2;;656:1;653;646:12;605:2;-1:-1;676:20;;716:18;705:30;;702:2;;;748:1;745;738:12;702:2;782:4;774:6;770:17;758:29;;835:3;825:6;817;813:19;803:8;799:34;796:43;793:2;;;852:1;849;842:12;793:2;598:264;;;;;;870:128;945:13;;963:30;945:13;963:30;;1005:130;1072:20;;1097:33;1072:20;1097:33;;1142:134;1220:13;;1238:33;1220:13;1238:33;;1283:198;1393:13;;1411:65;1393:13;1411:65;;2055:164;;2171:3;2162:6;2157:3;2153:16;2149:26;2146:2;;;2188:1;2185;2178:12;2146:2;-1:-1;2207:6;2139:80;-1:-1;2139:80;2264:1245;;2383:4;2371:9;2366:3;2362:19;2358:30;2355:2;;;2401:1;2398;2391:12;2355:2;2419:20;2434:4;2419:20;;;2410:29;-1:-1;2493:1;2525:57;2578:3;2558:9;2525:57;;;2500:83;;-1:-1;2649:2;2682:49;2727:3;2703:22;;;2682:49;;;2675:4;2668:5;2664:16;2657:75;2604:139;2805:2;2838:49;2883:3;2874:6;2863:9;2859:22;2838:49;;;2831:4;2824:5;2820:16;2813:75;2753:146;2957:2;2990:49;3035:3;3026:6;3015:9;3011:22;2990:49;;;2983:4;2976:5;2972:16;2965:75;2909:142;3103:3;3137:49;3182:3;3173:6;3162:9;3158:22;3137:49;;;3130:4;3123:5;3119:16;3112:75;3061:137;3252:3;3286:49;3331:3;3322:6;3311:9;3307:22;3286:49;;;3279:4;3272:5;3268:16;3261:75;3208:139;3404:3;3438:49;3483:3;3474:6;3463:9;3459:22;3438:49;;;3431:4;3424:5;3420:16;3413:75;3357:142;2349:1160;;;;;3794:126;3859:20;;3884:31;3859:20;3884:31;;3927:130;4003:13;;4021:31;4003:13;4021:31;;4064:241;;4168:2;4156:9;4147:7;4143:23;4139:32;4136:2;;;4184:1;4181;4174:12;4136:2;4219:1;4236:53;4281:7;4261:9;4236:53;;4312:263;;4427:2;4415:9;4406:7;4402:23;4398:32;4395:2;;;4443:1;4440;4433:12;4395:2;4478:1;4495:64;4551:7;4531:9;4495:64;;4846:743;;;;;;5018:3;5006:9;4997:7;4993:23;4989:33;4986:2;;;5035:1;5032;5025:12;4986:2;5070:1;5087:53;5132:7;5112:9;5087:53;;;5077:63;;5049:97;5177:2;5195:53;5240:7;5231:6;5220:9;5216:22;5195:53;;;5185:63;;5156:98;5285:2;5303:53;5348:7;5339:6;5328:9;5324:22;5303:53;;;5293:63;;5264:98;5393:2;5411:53;5456:7;5447:6;5436:9;5432:22;5411:53;;;5401:63;;5372:98;5501:3;5520:53;5565:7;5556:6;5545:9;5541:22;5520:53;;;5510:63;;5480:99;4980:609;;;;;;;;;5596:366;;;5717:2;5705:9;5696:7;5692:23;5688:32;5685:2;;;5733:1;5730;5723:12;5685:2;5768:1;5785:53;5830:7;5810:9;5785:53;;;5775:63;;5747:97;5875:2;5893:53;5938:7;5929:6;5918:9;5914:22;5893:53;;;5883:63;;5854:98;5679:283;;;;;;5969:491;;;;6107:2;6095:9;6086:7;6082:23;6078:32;6075:2;;;6123:1;6120;6113:12;6075:2;6158:1;6175:53;6220:7;6200:9;6175:53;;;6165:63;;6137:97;6265:2;6283:53;6328:7;6319:6;6308:9;6304:22;6283:53;;;6273:63;;6244:98;6373:2;6391:53;6436:7;6427:6;6416:9;6412:22;6391:53;;;6381:63;;6352:98;6069:391;;;;;;6467:257;;6579:2;6567:9;6558:7;6554:23;6550:32;6547:2;;;6595:1;6592;6585:12;6547:2;6630:1;6647:61;6700:7;6680:9;6647:61;;6731:263;;6846:2;6834:9;6825:7;6821:23;6817:32;6814:2;;;6862:1;6859;6852:12;6814:2;6897:1;6914:64;6970:7;6950:9;6914:64;;7001:327;;7148:2;7136:9;7127:7;7123:23;7119:32;7116:2;;;7164:1;7161;7154:12;7116:2;7199:1;7216:96;7304:7;7284:9;7216:96;;8249:772;;;;;8483:3;8471:9;8462:7;8458:23;8454:33;8451:2;;;8500:1;8497;8490:12;8451:2;8535:1;8552:85;8629:7;8609:9;8552:85;;;8542:95;;8514:129;8702:3;8691:9;8687:19;8674:33;8727:18;8719:6;8716:30;8713:2;;;8759:1;8756;8749:12;8713:2;8787:109;8888:7;8879:6;8868:9;8864:22;8787:109;;;8777:119;;;;8653:249;8933:3;8952:53;8997:7;8988:6;8977:9;8973:22;8952:53;;;8942:63;;8912:99;8445:576;;;;;;;;9028:302;;9162:3;9150:9;9141:7;9137:23;9133:33;9130:2;;;9179:1;9176;9169:12;9130:2;9214:1;9231:83;9306:7;9286:9;9231:83;;9337:241;;9441:2;9429:9;9420:7;9416:23;9412:32;9409:2;;;9457:1;9454;9447:12;9409:2;9492:1;9509:53;9554:7;9534:9;9509:53;;9855:366;;;9976:2;9964:9;9955:7;9951:23;9947:32;9944:2;;;9992:1;9989;9982:12;9944:2;10027:1;10044:53;10089:7;10069:9;10044:53;;10228:535;;;;10377:2;10365:9;10356:7;10352:23;10348:32;10345:2;;;10393:1;10390;10383:12;10345:2;10428:1;10445:64;10501:7;10481:9;10445:64;;;10435:74;;10407:108;10546:2;10564:64;10620:7;10611:6;10600:9;10596:22;10564:64;;;10554:74;;10525:109;10665:2;10683:64;10739:7;10730:6;10719:9;10715:22;10683:64;;10770:259;;10883:2;10871:9;10862:7;10858:23;10854:32;10851:2;;;10899:1;10896;10889:12;10851:2;10934:1;10951:62;11005:7;10985:9;10951:62;;11037:291;;11180:106;11282:3;11274:6;11180:106;;;-1:-1;;11315:6;11306:16;;11173:155;11337:173;;11424:46;11466:3;11458:6;11424:46;;;-1:-1;;11499:4;11490:14;;11417:93;11518:142;11609:45;11648:5;11609:45;;;11604:3;11597:58;11591:69;;;11667:127;11756:32;11782:5;11756:32;;12112:891;;12322:113;12428:6;12423:3;12322:113;;;12315:120;;12456:87;12537:5;12456:87;;;12563:7;12591:1;12576:405;12601:6;12598:1;12595:13;12576:405;;;12662:71;12726:6;12717:7;12662:71;;;12747:119;12862:3;12847:13;12747:119;;;12740:126;;12883:91;12967:6;12883:91;;;12873:101;-1:-1;;12623:1;12616:9;12576:405;;;-1:-1;12994:3;;12302:701;-1:-1;;;;;12302:701;13042:690;;13187:54;13235:5;13187:54;;;13254:86;13333:6;13328:3;13254:86;;;13247:93;;13361:56;13411:5;13361:56;;;13437:7;13465:1;13450:260;13475:6;13472:1;13469:13;13450:260;;;13542:6;13536:13;13563:63;13622:3;13607:13;13563:63;;;13556:70;;13643:60;13696:6;13643:60;;;13633:70;-1:-1;;13497:1;13490:9;13450:260;;13740:94;13807:21;13822:5;13807:21;;13952:103;14025:24;14043:5;14025:24;;14182:186;14295:67;14356:5;14295:67;;14950:154;15047:51;15092:5;15047:51;;15111:347;;15223:39;15256:5;15223:39;;;15274:71;15338:6;15333:3;15274:71;;;15267:78;;15350:52;15395:6;15390:3;15383:4;15376:5;15372:16;15350:52;;;15423:29;15445:6;15423:29;;;15414:39;;;;15203:255;-1:-1;;;15203:255;15466:329;;15626:67;15690:2;15685:3;15626:67;;;15726:31;15706:52;;15786:2;15777:12;;15612:183;-1:-1;;15612:183;15804:364;;15982:85;16064:2;16059:3;15982:85;;;16100:30;16080:51;;16159:2;16150:12;;15968:200;-1:-1;;15968:200;16177:321;;16337:67;16401:2;16396:3;16337:67;;;-1:-1;;;16417:44;;16489:2;16480:12;;16323:175;-1:-1;;16323:175;16507:322;;16667:67;16731:2;16726:3;16667:67;;;-1:-1;;;16747:45;;16820:2;16811:12;;16653:176;-1:-1;;16653:176;16838:325;;16998:67;17062:2;17057:3;16998:67;;;17098:27;17078:48;;17154:2;17145:12;;16984:179;-1:-1;;16984:179;17172:330;;17332:67;17396:2;17391:3;17332:67;;;17432:32;17412:53;;17493:2;17484:12;;17318:184;-1:-1;;17318:184;17511:317;;17671:67;17735:2;17730:3;17671:67;;;-1:-1;;;17751:40;;17819:2;17810:12;;17657:171;-1:-1;;17657:171;17837:327;;17997:67;18061:2;18056:3;17997:67;;;18097:29;18077:50;;18155:2;18146:12;;17983:181;-1:-1;;17983:181;18173:322;;18333:67;18397:2;18392:3;18333:67;;;-1:-1;;;18413:45;;18486:2;18477:12;;18319:176;-1:-1;;18319:176;18504:327;;18664:67;18728:2;18723:3;18664:67;;;18764:29;18744:50;;18822:2;18813:12;;18650:181;-1:-1;;18650:181;18840:323;;19000:67;19064:2;19059:3;19000:67;;;19100:25;19080:46;;19154:2;19145:12;;18986:177;-1:-1;;18986:177;19172:315;;19332:67;19396:2;19391:3;19332:67;;;-1:-1;;;19412:38;;19478:2;19469:12;;19318:169;-1:-1;;19318:169;19496:320;;19656:67;19720:2;19715:3;19656:67;;;-1:-1;;;19736:43;;19807:2;19798:12;;19642:174;-1:-1;;19642:174;19825:318;;19985:67;20049:2;20044:3;19985:67;;;-1:-1;;;20065:41;;20134:2;20125:12;;19971:172;-1:-1;;19971:172;20152:324;;20312:67;20376:2;20371:3;20312:67;;;20412:26;20392:47;;20467:2;20458:12;;20298:178;-1:-1;;20298:178;20485:370;;20645:67;20709:2;20704:3;20645:67;;;20745:34;20725:55;;-1:-1;;;20809:2;20800:12;;20793:25;20846:2;20837:12;;20631:224;-1:-1;;20631:224;20864:329;;21024:67;21088:2;21083:3;21024:67;;;21124:31;21104:52;;21184:2;21175:12;;21010:183;-1:-1;;21010:183;21202:327;;21362:67;21426:2;21421:3;21362:67;;;21462:29;21442:50;;21520:2;21511:12;;21348:181;-1:-1;;21348:181;21538:318;;21698:67;21762:2;21757:3;21698:67;;;-1:-1;;;21778:41;;21847:2;21838:12;;21684:172;-1:-1;;21684:172;21865:383;;22025:67;22089:2;22084:3;22025:67;;;22125:34;22105:55;;-1:-1;;;22189:2;22180:12;;22173:38;22239:2;22230:12;;22011:237;-1:-1;;22011:237;22257:324;;22417:67;22481:2;22476:3;22417:67;;;22517:26;22497:47;;22572:2;22563:12;;22403:178;-1:-1;;22403:178;22590:331;;22750:67;22814:2;22809:3;22750:67;;;22850:33;22830:54;;22912:2;22903:12;;22736:185;-1:-1;;22736:185;22930:319;;23090:67;23154:2;23149:3;23090:67;;;-1:-1;;;23170:42;;23240:2;23231:12;;23076:173;-1:-1;;23076:173;23258:330;;23418:67;23482:2;23477:3;23418:67;;;23518:32;23498:53;;23579:2;23570:12;;23404:184;-1:-1;;23404:184;23597:323;;23757:67;23821:2;23816:3;23757:67;;;23857:25;23837:46;;23911:2;23902:12;;23743:177;-1:-1;;23743:177;23929:322;;24089:67;24153:2;24148:3;24089:67;;;-1:-1;;;24169:45;;24242:2;24233:12;;24075:176;-1:-1;;24075:176;24260:325;;24420:67;24484:2;24479:3;24420:67;;;24520:27;24500:48;;24576:2;24567:12;;24406:179;-1:-1;;24406:179;24594:360;;24772:85;24854:2;24849:3;24772:85;;;24890:26;24870:47;;24945:2;24936:12;;24758:196;-1:-1;;24758:196;24963:326;;25123:67;25187:2;25182:3;25123:67;;;25223:28;25203:49;;25280:2;25271:12;;25109:180;-1:-1;;25109:180;25298:322;;25458:67;25522:2;25517:3;25458:67;;;-1:-1;;;25538:45;;25611:2;25602:12;;25444:176;-1:-1;;25444:176;25629:324;;25789:67;25853:2;25848:3;25789:67;;;25889:26;25869:47;;25944:2;25935:12;;25775:178;-1:-1;;25775:178;25962:312;;26122:67;26186:2;26181:3;26122:67;;;-1:-1;;;26202:35;;26265:2;26256:12;;26108:166;-1:-1;;26108:166;26283:327;;26443:67;26507:2;26502:3;26443:67;;;26543:29;26523:50;;26601:2;26592:12;;26429:181;-1:-1;;26429:181;26619:331;;26779:67;26843:2;26838:3;26779:67;;;26879:33;26859:54;;26941:2;26932:12;;26765:185;-1:-1;;26765:185;26959:328;;27119:67;27183:2;27178:3;27119:67;;;27219:30;27199:51;;27278:2;27269:12;;27105:182;-1:-1;;27105:182;27296:326;;27456:67;27520:2;27515:3;27456:67;;;27556:28;27536:49;;27613:2;27604:12;;27442:180;-1:-1;;27442:180;27717:863;27956:23;;27884:4;27875:14;;;27985:63;27879:3;27956:23;27985:63;;;27904:150;28144:4;28137:5;28133:16;28127:23;28156:63;28213:4;28208:3;28204:14;28190:12;28156:63;;;28064:161;28318:4;28311:5;28307:16;28301:23;28330:63;28387:4;28382:3;28378:14;28364:12;28330:63;;;28235:164;28490:4;28483:5;28479:16;28473:23;28502:57;28553:4;28548:3;28544:14;28530:12;28502:57;;28660:1513;28815:4;28806:14;;28885:58;28930:5;;28885:58;;;28949:79;29017:3;28999:12;28949:79;;;28835:199;29095:50;29139:4;29132:5;29128:16;29121:5;29095:50;;;29151:63;29208:4;29203:3;29199:14;29185:12;29151:63;;;29044:176;29288:50;29332:4;29325:5;29321:16;29314:5;29288:50;;;29344:63;29401:4;29396:3;29392:14;29378:12;29344:63;;;29230:183;29477:50;29521:4;29514:5;29510:16;29503:5;29477:50;;;29533:63;29590:4;29585:3;29581:14;29567:12;29533:63;;;29423:179;29660:50;29704:4;29697:5;29693:16;29686:5;29660:50;;;29716:63;29773:4;29768:3;29764:14;29750:12;29716:63;;;29612:173;29845:50;29889:4;29882:5;29878:16;29871:5;29845:50;;;29901:63;29958:4;29953:3;29949:14;29935:12;29901:63;;;29795:175;30033:50;30077:4;30070:5;30066:16;30059:5;30033:50;;;30089:63;30146:4;30141:3;30137:14;30123:12;30089:63;;30255:1572;30398:6;30389:16;;30468:50;30505:5;;30468:50;;;30524:63;30576:3;30558:12;30524:63;;;30420:173;30661:50;30705:4;30698:5;30694:16;30687:5;30661:50;;;30717:63;30774:4;30769:3;30765:14;30751:12;30717:63;;;30603:183;30850:50;30894:4;30887:5;30883:16;30876:5;30850:50;;;30906:63;30963:4;30958:3;30954:14;30940:12;30906:63;;;30796:179;31039:50;31083:4;31076:5;31072:16;31065:5;31039:50;;;31095:63;31152:4;31147:3;31143:14;31129:12;31095:63;;;30985:179;31231:50;31275:4;31268:5;31264:16;31257:5;31231:50;;;31287:63;31344:4;31339:3;31335:14;31321:12;31287:63;;;31174:182;31421:50;31465:4;31458:5;31454:16;31447:5;31421:50;;;31477:63;31534:4;31529:3;31525:14;31511:12;31477:63;;;31366:180;31607:76;31677:4;31670:5;31666:16;31659:5;31607:76;;;31689:117;31800:4;31795:3;31791:14;31777:12;31689:117;;31903:1151;32118:23;;32048:4;32039:14;;;32147:79;32043:3;32118:23;32147:79;;;32068:164;32310:4;32303:5;32299:16;32293:23;32322:63;32379:4;32374:3;32370:14;32356:12;32322:63;;;32242:149;32472:4;32465:5;32461:16;32455:23;32484:63;32541:4;32536:3;32532:14;32518:12;32484:63;;;32401:152;32637:4;32630:5;32626:16;32620:23;32649:63;32706:4;32701:3;32697:14;32683:12;32649:63;;;32563:155;32800:4;32793:5;32789:16;32783:23;32812:63;32869:4;32864:3;32860:14;32846:12;32812:63;;;32728:153;32958:4;32951:5;32947:16;32941:23;32970:63;33027:4;33022:3;33018:14;33004:12;32970:63;;33130:878;33267:4;33258:14;;33340:50;33377:5;;33340:50;;;33396:63;33448:3;33430:12;33396:63;;;33287:178;33518:48;33560:4;33553:5;33549:16;33542:5;33518:48;;;33572:59;33625:4;33620:3;33616:14;33602:12;33572:59;;;33475:162;33690:50;33734:4;33727:5;33723:16;33716:5;33690:50;;;33746:63;33803:4;33798:3;33794:14;33780:12;33746:63;;;33647:168;33868:50;33912:4;33905:5;33901:16;33894:5;33868:50;;;33924:63;33981:4;33976:3;33972:14;33958:12;33924:63;;34245:97;34314:22;34330:5;34314:22;;34349:372;;34548:148;34692:3;34548:148;;34728:372;;34927:148;35071:3;34927:148;;35107:213;35225:2;35210:18;;35239:71;35214:9;35283:6;35239:71;;35327:229;35453:2;35438:18;;35467:79;35442:9;35519:6;35467:79;;35563:451;35745:2;35730:18;;35759:79;35734:9;35811:6;35759:79;;;35849:72;35917:2;35906:9;35902:18;35893:6;35849:72;;;35932;36000:2;35989:9;35985:18;35976:6;35932:72;;36021:324;36167:2;36152:18;;36181:71;36156:9;36225:6;36181:71;;;36263:72;36331:2;36320:9;36316:18;36307:6;36263:72;;36352:435;36526:2;36511:18;;36540:71;36515:9;36584:6;36540:71;;;36622:72;36690:2;36679:9;36675:18;36666:6;36622:72;;36794:324;36940:2;36925:18;;36954:71;36929:9;36998:6;36954:71;;;37036:72;37104:2;37093:9;37089:18;37080:6;37036:72;;37125:361;37293:2;37307:47;;;37278:18;;37368:108;37278:18;37462:6;37368:108;;37493:201;37605:2;37590:18;;37619:65;37594:9;37657:6;37619:65;;37701:213;37819:2;37804:18;;37833:71;37808:9;37877:6;37833:71;;37921:273;38069:2;38054:18;;38083:101;38058:9;38157:6;38083:101;;39037:301;39175:2;39189:47;;;39160:18;;39250:78;39160:18;39314:6;39250:78;;39345:407;39536:2;39550:47;;;39521:18;;39611:131;39521:18;39611:131;;39759:407;39950:2;39964:47;;;39935:18;;40025:131;39935:18;40025:131;;40173:407;40364:2;40378:47;;;40349:18;;40439:131;40349:18;40439:131;;40587:407;40778:2;40792:47;;;40763:18;;40853:131;40763:18;40853:131;;41001:407;41192:2;41206:47;;;41177:18;;41267:131;41177:18;41267:131;;41415:407;41606:2;41620:47;;;41591:18;;41681:131;41591:18;41681:131;;41829:407;42020:2;42034:47;;;42005:18;;42095:131;42005:18;42095:131;;42243:407;42434:2;42448:47;;;42419:18;;42509:131;42419:18;42509:131;;42657:407;42848:2;42862:47;;;42833:18;;42923:131;42833:18;42923:131;;43071:407;43262:2;43276:47;;;43247:18;;43337:131;43247:18;43337:131;;43485:407;43676:2;43690:47;;;43661:18;;43751:131;43661:18;43751:131;;43899:407;44090:2;44104:47;;;44075:18;;44165:131;44075:18;44165:131;;44313:407;44504:2;44518:47;;;44489:18;;44579:131;44489:18;44579:131;;44727:407;44918:2;44932:47;;;44903:18;;44993:131;44903:18;44993:131;;45141:407;45332:2;45346:47;;;45317:18;;45407:131;45317:18;45407:131;;45555:407;45746:2;45760:47;;;45731:18;;45821:131;45731:18;45821:131;;45969:407;46160:2;46174:47;;;46145:18;;46235:131;46145:18;46235:131;;46383:407;46574:2;46588:47;;;46559:18;;46649:131;46559:18;46649:131;;46797:407;46988:2;47002:47;;;46973:18;;47063:131;46973:18;47063:131;;47211:407;47402:2;47416:47;;;47387:18;;47477:131;47387:18;47477:131;;47625:407;47816:2;47830:47;;;47801:18;;47891:131;47801:18;47891:131;;48039:407;48230:2;48244:47;;;48215:18;;48305:131;48215:18;48305:131;;48453:407;48644:2;48658:47;;;48629:18;;48719:131;48629:18;48719:131;;48867:407;49058:2;49072:47;;;49043:18;;49133:131;49043:18;49133:131;;49281:407;49472:2;49486:47;;;49457:18;;49547:131;49457:18;49547:131;;49695:407;49886:2;49900:47;;;49871:18;;49961:131;49871:18;49961:131;;50109:407;50300:2;50314:47;;;50285:18;;50375:131;50285:18;50375:131;;50523:407;50714:2;50728:47;;;50699:18;;50789:131;50699:18;50789:131;;50937:407;51128:2;51142:47;;;51113:18;;51203:131;51113:18;51203:131;;51351:407;51542:2;51556:47;;;51527:18;;51617:131;51527:18;51617:131;;51765:407;51956:2;51970:47;;;51941:18;;52031:131;51941:18;52031:131;;52179:407;52370:2;52384:47;;;52355:18;;52445:131;52355:18;52445:131;;52593:407;52784:2;52798:47;;;52769:18;;52859:131;52769:18;52859:131;;53007:407;53198:2;53212:47;;;53183:18;;53273:131;53183:18;53273:131;;53421:362;53613:3;53598:19;;53628:145;53602:9;53746:6;53628:145;;53790:730;54114:3;54099:19;;54129:133;54103:9;54235:6;54129:133;;;54311:9;54305:4;54301:20;54295:3;54284:9;54280:19;54273:49;54336:174;54505:4;54496:6;54488;54336:174;;54747:324;54893:2;54878:18;;54907:71;54882:9;54951:6;54907:71;;55078:340;55232:2;55217:18;;55246:71;55221:9;55290:6;55246:71;;;55328:80;55404:2;55393:9;55389:18;55380:6;55328:80;;55425:451;55607:2;55592:18;;55621:71;55596:9;55665:6;55621:71;;;55703:80;55779:2;55768:9;55764:18;55755:6;55703:80;;55883:1569;56371:3;56356:19;;56386:71;56360:9;56430:6;56386:71;;;56468:124;56588:2;56577:9;56573:18;56564:6;56468:124;;;56603:73;56671:3;56660:9;56656:19;56647:6;56603:73;;;56687;56755:3;56744:9;56740:19;56731:6;56687:73;;;56771;56839:3;56828:9;56824:19;56815:6;56771:73;;;56855;56923:3;56912:9;56908:19;56899:6;56855:73;;;56939;57007:3;56996:9;56992:19;56983:6;56939:73;;;57023;57091:3;57080:9;57076:19;57067:6;57023:73;;;57107;57175:3;57164:9;57160:19;57151:6;57107:73;;;57191;57259:3;57248:9;57244:19;57235:6;57191:73;;;57275:88;57358:3;57347:9;57343:19;57333:7;57275:88;;;57374:68;57437:3;57426:9;57422:19;57412:7;57374:68;;;56342:1110;;;;;;;;;;;;;;;;57459:659;57689:3;57674:19;;57704:71;57678:9;57748:6;57704:71;;;57786:72;57854:2;57843:9;57839:18;57830:6;57786:72;;;57869;57937:2;57926:9;57922:18;57913:6;57869:72;;;57952;58020:2;58009:9;58005:18;57996:6;57952:72;;;58035:73;58103:3;58092:9;58088:19;58079:6;58035:73;;;57660:458;;;;;;;;;58125:256;58187:2;58181:9;58213:17;;;58288:18;58273:34;;58309:22;;;58270:62;58267:2;;;58345:1;58342;58335:12;58267:2;58361;58354:22;58165:216;;-1:-1;58165:216;58388:147;58505:3;58491:44;58542:151;58666:4;58657:14;;58614:79;58700:137;58803:12;;58774:63;58973:141;59102:6;59093:16;;59079:35;59237:205;59382:19;;;59431:4;59422:14;;59375:67;59964:119;;60038:39;60073:2;60068:3;60064:12;60059:3;60038:39;;60236:119;;60310:39;60345:2;60340:3;60336:12;60331:3;60310:39;;60364:112;-1:-1;60467:3;60451:25;60731:115;;60803:37;60836:2;60831:3;60827:12;60822:3;60803:37;;60854:91;;60916:24;60934:5;60916:24;;61058:85;61124:13;61117:21;;61100:43;61229:123;;61323:24;61341:5;61323:24;;61608:138;61686:5;61692:49;61686:5;61692:49;;61831:121;-1:-1;;;;;61893:54;;61876:76;62038:81;62109:4;62098:16;;62081:38;62126:129;;62213:37;62244:5;62213:37;;63588:138;;63681:40;63715:5;63681:40;;63977:268;64042:1;64049:101;64063:6;64060:1;64057:13;64049:101;;;64130:11;;;64124:18;64111:11;;;64104:39;64085:2;64078:10;64049:101;;;64165:6;64162:1;64159:13;64156:2;;;-1:-1;;64230:1;64212:16;;64205:27;64026:219;64253:97;64341:2;64321:14;-1:-1;;64317:28;;64301:49;64358:107;64443:1;64436:5;64433:12;64423:2;;64449:9;64472:117;64541:24;64559:5;64541:24;;;64534:5;64531:35;64521:2;;64580:1;64577;64570:12;64736:111;64802:21;64817:5;64802:21;;64854:117;64923:24;64941:5;64923:24;;64978:181;65079:56;65129:5;65079:56;;65766:113;65833:22;65849:5;65833:22;",
  "source": "pragma solidity 0.5.17;\npragma experimental ABIEncoderV2;\n\n// Contracts\nimport \"./LoansBase.sol\";\n\n/*****************************************************************************************************/\n/**                                             WARNING                                             **/\n/**                                  THIS CONTRACT IS UPGRADEABLE!                                  **/\n/**  ---------------------------------------------------------------------------------------------  **/\n/**  Do NOT change the order of or PREPEND any storage variables to this or new versions of this    **/\n/**  contract as this will cause the the storage slots to be overwritten on the proxy contract!!    **/\n/**                                                                                                 **/\n/**  Visit https://docs.openzeppelin.com/upgrades/2.6/proxies#upgrading-via-the-proxy-pattern for   **/\n/**  more information.                                                                              **/\n/*****************************************************************************************************/\n/**\n    @notice This contract is used as a basis for the creation of loans (not wei) across the platform\n    @notice It implements the LoansBase contract from Teller\n\n    @author develop@teller.finance\n */\ncontract TokenCollateralLoans is LoansBase {\n    /** Constants */\n\n    /** Properties */\n\n    /** Modifiers */\n\n    /**\n        @notice Checks the value in the current transactionn is zero.\n        @dev It throws a require error if value is not zero.\n     */\n    modifier noMsgValue() {\n        require(msg.value == 0, \"TOKEN_LOANS_VALUE_MUST_BE_ZERO\");\n        _;\n    }\n\n    /** External Functions */\n\n    /**\n     * @notice Deposit collateral tokens into a loan.\n     * @param borrower The address of the loan borrower.\n     * @param loanID The ID of the loan the collateral is for\n     * @param amount The amount to deposit as collateral.\n     */\n    function depositCollateral(\n        address borrower,\n        uint256 loanID,\n        uint256 amount\n    )\n        external\n        payable\n        noMsgValue()\n        loanActiveOrSet(loanID)\n        isInitialized()\n        whenNotPaused()\n        whenLendingPoolNotPaused(address(lendingPool))\n    {\n        borrower.requireEqualTo(\n            loans[loanID].loanTerms.borrower,\n            \"BORROWER_LOAN_ID_MISMATCH\"\n        );\n        require(amount > 0, \"CANNOT_DEPOSIT_ZERO\");\n\n        // Update the loan collateral and total. Transfer tokens to this contract.\n        _payInCollateral(loanID, amount);\n\n        emit CollateralDeposited(loanID, borrower, amount);\n    }\n\n    /**\n        @notice Creates a loan with the loan request and terms\n        @param request Struct of the protocol loan request\n        @param responses List of structs of the protocol loan responses\n        @param collateralAmount Amount of collateral required for the loan\n     */\n    function createLoanWithTerms(\n        TellerCommon.LoanRequest calldata request,\n        TellerCommon.LoanResponse[] calldata responses,\n        uint256 collateralAmount\n    )\n        external\n        payable\n        noMsgValue()\n        isInitialized()\n        whenNotPaused()\n        isBorrower(request.borrower)\n        withValidLoanRequest(request)\n    {\n        uint256 loanID = getAndIncrementLoanID();\n\n        (\n            uint256 interestRate,\n            uint256 collateralRatio,\n            uint256 maxLoanAmount\n        ) = loanTermsConsensus.processRequest(request, responses);\n\n        loans[loanID] = createLoan(\n            loanID,\n            request,\n            interestRate,\n            collateralRatio,\n            maxLoanAmount\n        );\n\n        if (collateralAmount > 0) {\n            // Update collateral, totalCollateral, and lastCollateralIn\n            _payInCollateral(loanID, collateralAmount);\n        }\n\n        borrowerLoans[request.borrower].push(loanID);\n\n        _emitLoanTermsSetAndCollateralDepositedEventsIfApplicable(\n            loanID,\n            request,\n            interestRate,\n            collateralRatio,\n            maxLoanAmount,\n            collateralAmount\n        );\n    }\n\n    /**\n        @notice Initializes the current contract instance setting the required parameters, if allowed\n        @param priceOracleAddress Contract address of the price oracle\n        @param lendingPoolAddress Contract address of the lending pool\n        @param loanTermsConsensusAddress Contract adddress for loan term consensus\n        @param settingsAddress Contract address for the configuration of the platform\n        @param collateralTokenAddress Contract address for the collateral token.\n     */\n    function initialize(\n        address priceOracleAddress,\n        address lendingPoolAddress,\n        address loanTermsConsensusAddress,\n        address settingsAddress,\n        address collateralTokenAddress\n    ) external isNotInitialized() {\n        collateralTokenAddress.requireNotEmpty(\"PROVIDE_COLL_TOKEN_ADDRESS\");\n\n        _initialize(\n            priceOracleAddress,\n            lendingPoolAddress,\n            loanTermsConsensusAddress,\n            settingsAddress\n        );\n\n        collateralToken = collateralTokenAddress;\n    }\n\n    /** Internal Function */\n    /**\n        @notice Pays out collateral for the associated loan\n        @param loanID The ID of the loan the collateral is for\n        @param amount The amount of collateral to be paid\n     */\n    function _payOutCollateral(\n        uint256 loanID,\n        uint256 amount,\n        address payable recipient\n    ) internal {\n        totalCollateral = totalCollateral.sub(amount);\n        loans[loanID].collateral = loans[loanID].collateral.sub(amount);\n\n        _collateralTokenTransfer(recipient, amount);\n    }\n\n    /**\n        @notice Pays collateral in for the associated loan\n        @param loanID The ID of the loan the collateral is for\n        @param amount The amount of collateral to be paid\n     */\n    function _payInCollateral(uint256 loanID, uint256 amount) internal {\n        // Update the total collateral and loan collateral\n        super._payInCollateral(loanID, amount);\n        // Transfer collateral tokens to this contract.\n        _collateralTokenTransferFrom(msg.sender, amount);\n    }\n\n    /**\n        @notice It transfers an amount of collateral tokens to a specific address.\n        @param recipient The address which will receive the tokens.\n        @param amount The amount of tokens to transfer.\n     */\n    function _collateralTokenTransfer(address recipient, uint256 amount) internal {\n        ERC20Detailed(collateralToken).tokenTransfer(recipient, amount);\n    }\n\n    /**\n        @notice It transfers an amount of collateral tokens from an address to this contract.\n        @param from The address where the tokens will transfer from.\n        @param amount The amount to be transferred.\n     */\n    function _collateralTokenTransferFrom(address from, uint256 amount) internal {\n        ERC20Detailed(collateralToken).tokenTransferFrom(from, amount);\n    }\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TokenCollateralLoans.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TokenCollateralLoans.sol",
    "exportedSymbols": {
      "TokenCollateralLoans": [
        9630
      ]
    },
    "id": 9631,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9359,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:36"
      },
      {
        "id": 9360,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:36"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LoansBase.sol",
        "file": "./LoansBase.sol",
        "id": 9361,
        "nodeType": "ImportDirective",
        "scope": 9631,
        "sourceUnit": 7316,
        "src": "72:25:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9362,
              "name": "LoansBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7315,
              "src": "1378:9:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LoansBase_$7315",
                "typeString": "contract LoansBase"
              }
            },
            "id": 9363,
            "nodeType": "InheritanceSpecifier",
            "src": "1378:9:36"
          }
        ],
        "contractDependencies": [
          2329,
          2593,
          7315,
          9277,
          10850,
          21268,
          21337
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract is used as a basis for the creation of loans (not wei) across the platform\n@notice It implements the LoansBase contract from Teller\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 9630,
        "linearizedBaseContracts": [
          9630,
          7315,
          2329,
          21268,
          21337,
          2593,
          9277,
          10850
        ],
        "name": "TokenCollateralLoans",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9374,
              "nodeType": "Block",
              "src": "1630:85:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9366,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21467,
                            "src": "1648:3:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1648:9:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 9368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1661:1:36",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1648:14:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "544f4b454e5f4c4f414e535f56414c55455f4d5553545f42455f5a45524f",
                        "id": 9370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1664:32:36",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f33a818cfe2b5be858eacf8527ea1801bb9dccadb49769e42646a33febd6c9",
                          "typeString": "literal_string \"TOKEN_LOANS_VALUE_MUST_BE_ZERO\""
                        },
                        "value": "TOKEN_LOANS_VALUE_MUST_BE_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f33a818cfe2b5be858eacf8527ea1801bb9dccadb49769e42646a33febd6c9",
                          "typeString": "literal_string \"TOKEN_LOANS_VALUE_MUST_BE_ZERO\""
                        }
                      ],
                      "id": 9365,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21470,
                        21471
                      ],
                      "referencedDeclaration": 21471,
                      "src": "1640:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1640:57:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9372,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:57:36"
                },
                {
                  "id": 9373,
                  "nodeType": "PlaceholderStatement",
                  "src": "1707:1:36"
                }
              ]
            },
            "documentation": "@notice Checks the value in the current transactionn is zero.\n@dev It throws a require error if value is not zero.",
            "id": 9375,
            "name": "noMsgValue",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 9364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1627:2:36"
            },
            "src": "1608:107:36",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9427,
              "nodeType": "Block",
              "src": "2299:376:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 9401,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5967,
                              "src": "2346:5:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17942_storage_$",
                                "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                              }
                            },
                            "id": 9403,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 9402,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9379,
                              "src": "2352:6:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2346:13:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$17942_storage",
                              "typeString": "struct TellerCommon.Loan storage ref"
                            }
                          },
                          "id": 9404,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "loanTerms",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17921,
                          "src": "2346:23:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanTerms_$17917_storage",
                            "typeString": "struct TellerCommon.LoanTerms storage ref"
                          }
                        },
                        "id": 9405,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "borrower",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17906,
                        "src": "2346:32:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "424f52524f5745525f4c4f414e5f49445f4d49534d41544348",
                        "id": 9406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2392:27:36",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        },
                        "value": "BORROWER_LOAN_ID_MISMATCH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9398,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9377,
                        "src": "2309:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 9400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireEqualTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16668,
                      "src": "2309:23:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 9407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:120:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9408,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:120:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 9410,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9381,
                          "src": "2447:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 9411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2456:1:36",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2447:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43414e4e4f545f4445504f5349545f5a45524f",
                        "id": 9413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2459:21:36",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        },
                        "value": "CANNOT_DEPOSIT_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        }
                      ],
                      "id": 9409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21470,
                        21471
                      ],
                      "referencedDeclaration": 21471,
                      "src": "2439:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2439:42:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9415,
                  "nodeType": "ExpressionStatement",
                  "src": "2439:42:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9417,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9379,
                        "src": "2592:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9418,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9381,
                        "src": "2600:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9416,
                      "name": "_payInCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9597
                      ],
                      "referencedDeclaration": 9597,
                      "src": "2575:16:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2575:32:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9420,
                  "nodeType": "ExpressionStatement",
                  "src": "2575:32:36"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9422,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9379,
                        "src": "2643:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9423,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9377,
                        "src": "2651:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9424,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9381,
                        "src": "2661:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9421,
                      "name": "CollateralDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10647,
                      "src": "2623:19:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 9425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2623:45:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9426,
                  "nodeType": "EmitStatement",
                  "src": "2618:50:36"
                }
              ]
            },
            "documentation": "@notice Deposit collateral tokens into a loan.\n@param borrower The address of the loan borrower.\n@param loanID The ID of the loan the collateral is for\n@param amount The amount to deposit as collateral.",
            "id": 9428,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 9384,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9383,
                  "name": "noMsgValue",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9375,
                  "src": "2147:10:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2147:12:36"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9386,
                    "name": "loanID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9379,
                    "src": "2184:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 9387,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9385,
                  "name": "loanActiveOrSet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6046,
                  "src": "2168:15:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2168:23:36"
              },
              {
                "arguments": [],
                "id": 9389,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9388,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "2200:13:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2200:15:36"
              },
              {
                "arguments": [],
                "id": 9391,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9390,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2201,
                  "src": "2224:13:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2224:15:36"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9394,
                        "name": "lendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5956,
                        "src": "2281:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10580",
                          "typeString": "contract LendingPoolInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10580",
                          "typeString": "contract LendingPoolInterface"
                        }
                      ],
                      "id": 9393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2273:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 9395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2273:20:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 9396,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9392,
                  "name": "whenLendingPoolNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2215,
                  "src": "2248:24:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2248:46:36"
              }
            ],
            "name": "depositCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9377,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 9428,
                  "src": "2035:16:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2035:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9379,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 9428,
                  "src": "2061:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9381,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9428,
                  "src": "2085:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2085:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2025:80:36"
            },
            "returnParameters": {
              "id": 9397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2299:0:36"
            },
            "scope": 9630,
            "src": "1999:676:36",
            "stateMutability": "payable",
            "superFunction": 10739,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9507,
              "nodeType": "Block",
              "src": "3323:871:36",
              "statements": [
                {
                  "assignments": [
                    9452
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9452,
                      "name": "loanID",
                      "nodeType": "VariableDeclaration",
                      "scope": 9507,
                      "src": "3333:14:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9451,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3333:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9455,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9453,
                      "name": "getAndIncrementLoanID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7135,
                      "src": "3350:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 9454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3350:23:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3333:40:36"
                },
                {
                  "assignments": [
                    9457,
                    9459,
                    9461
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9457,
                      "name": "interestRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 9507,
                      "src": "3398:20:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9456,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3398:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9459,
                      "name": "collateralRatio",
                      "nodeType": "VariableDeclaration",
                      "scope": 9507,
                      "src": "3432:23:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9458,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3432:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9461,
                      "name": "maxLoanAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 9507,
                      "src": "3469:21:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9460,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3469:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9467,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9464,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9430,
                        "src": "3537:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9465,
                        "name": "responses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9433,
                        "src": "3546:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17897_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17897_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9462,
                        "name": "loanTermsConsensus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5958,
                        "src": "3503:18:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LoanTermsConsensusInterface_$10634",
                          "typeString": "contract LoanTermsConsensusInterface"
                        }
                      },
                      "id": 9463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10624,
                      "src": "3503:33:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LoanRequest_$17882_memory_ptr_$_t_array$_t_struct$_LoanResponse_$17897_memory_$dyn_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct TellerCommon.LoanRequest memory,struct TellerCommon.LoanResponse memory[] memory) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 9466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3503:53:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3384:172:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 9468,
                        "name": "loans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5967,
                        "src": "3567:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17942_storage_$",
                          "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                        }
                      },
                      "id": 9470,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9469,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9452,
                        "src": "3573:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3567:13:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17942_storage",
                        "typeString": "struct TellerCommon.Loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9472,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9452,
                          "src": "3607:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9473,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9430,
                          "src": "3627:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9474,
                          "name": "interestRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9457,
                          "src": "3648:12:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9475,
                          "name": "collateralRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9459,
                          "src": "3674:15:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9476,
                          "name": "maxLoanAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9461,
                          "src": "3703:13:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9471,
                        "name": "createLoan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7195,
                        "src": "3583:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_LoanRequest_$17882_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_Loan_$17942_memory_ptr_$",
                          "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256) view returns (struct TellerCommon.Loan memory)"
                        }
                      },
                      "id": 9477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3583:143:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17942_memory_ptr",
                        "typeString": "struct TellerCommon.Loan memory"
                      }
                    },
                    "src": "3567:159:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$17942_storage",
                      "typeString": "struct TellerCommon.Loan storage ref"
                    }
                  },
                  "id": 9479,
                  "nodeType": "ExpressionStatement",
                  "src": "3567:159:36"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 9480,
                      "name": "collateralAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9435,
                      "src": "3741:16:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 9481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3760:1:36",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3741:20:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 9489,
                  "nodeType": "IfStatement",
                  "src": "3737:165:36",
                  "trueBody": {
                    "id": 9488,
                    "nodeType": "Block",
                    "src": "3763:139:36",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 9484,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9452,
                              "src": "3866:6:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 9485,
                              "name": "collateralAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9435,
                              "src": "3874:16:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9483,
                            "name": "_payInCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9597
                            ],
                            "referencedDeclaration": 9597,
                            "src": "3849:16:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 9486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3849:42:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9487,
                        "nodeType": "ExpressionStatement",
                        "src": "3849:42:36"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9495,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9452,
                        "src": "3949:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9490,
                          "name": "borrowerLoans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5963,
                          "src": "3912:13:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 9493,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9491,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9430,
                            "src": "3926:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                              "typeString": "struct TellerCommon.LoanRequest calldata"
                            }
                          },
                          "id": 9492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17869,
                          "src": "3926:16:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3912:31:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 9494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3912:36:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 9496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3912:44:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9497,
                  "nodeType": "ExpressionStatement",
                  "src": "3912:44:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9499,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9452,
                        "src": "4038:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9500,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9430,
                        "src": "4058:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9501,
                        "name": "interestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9457,
                        "src": "4079:12:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9502,
                        "name": "collateralRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9459,
                        "src": "4105:15:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9503,
                        "name": "maxLoanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9461,
                        "src": "4134:13:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9504,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9435,
                        "src": "4161:16:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9498,
                      "name": "_emitLoanTermsSetAndCollateralDepositedEventsIfApplicable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7240,
                      "src": "3967:57:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_LoanRequest_$17882_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 9505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3967:220:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9506,
                  "nodeType": "ExpressionStatement",
                  "src": "3967:220:36"
                }
              ]
            },
            "documentation": "@notice Creates a loan with the loan request and terms\n@param request Struct of the protocol loan request\n@param responses List of structs of the protocol loan responses\n@param collateralAmount Amount of collateral required for the loan",
            "id": 9508,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 9438,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9437,
                  "name": "noMsgValue",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9375,
                  "src": "3183:10:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3183:12:36"
              },
              {
                "arguments": [],
                "id": 9440,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9439,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "3204:13:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3204:15:36"
              },
              {
                "arguments": [],
                "id": 9442,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9441,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2201,
                  "src": "3228:13:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3228:15:36"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 9444,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9430,
                      "src": "3263:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                        "typeString": "struct TellerCommon.LoanRequest calldata"
                      }
                    },
                    "id": 9445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "borrower",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17869,
                    "src": "3263:16:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 9446,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9443,
                  "name": "isBorrower",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5983,
                  "src": "3252:10:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3252:28:36"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9448,
                    "name": "request",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9430,
                    "src": "3310:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                      "typeString": "struct TellerCommon.LoanRequest calldata"
                    }
                  }
                ],
                "id": 9449,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9447,
                  "name": "withValidLoanRequest",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6088,
                  "src": "3289:20:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_LoanRequest_$17882_memory_ptr_$",
                    "typeString": "modifier (struct TellerCommon.LoanRequest memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3289:29:36"
              }
            ],
            "name": "createLoanWithTerms",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9430,
                  "name": "request",
                  "nodeType": "VariableDeclaration",
                  "scope": 9508,
                  "src": "3004:41:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanRequest"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9429,
                    "name": "TellerCommon.LoanRequest",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17882,
                    "src": "3004:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$17882_storage_ptr",
                      "typeString": "struct TellerCommon.LoanRequest"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9433,
                  "name": "responses",
                  "nodeType": "VariableDeclaration",
                  "scope": 9508,
                  "src": "3055:46:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17897_calldata_$dyn_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanResponse[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 9431,
                      "name": "TellerCommon.LoanResponse",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 17897,
                      "src": "3055:25:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanResponse_$17897_storage_ptr",
                        "typeString": "struct TellerCommon.LoanResponse"
                      }
                    },
                    "id": 9432,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3055:27:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17897_storage_$dyn_storage_ptr",
                      "typeString": "struct TellerCommon.LoanResponse[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9435,
                  "name": "collateralAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9508,
                  "src": "3111:24:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3111:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2994:147:36"
            },
            "returnParameters": {
              "id": 9450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3323:0:36"
            },
            "scope": 9630,
            "src": "2966:1228:36",
            "stateMutability": "payable",
            "superFunction": 10756,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9540,
              "nodeType": "Block",
              "src": "4952:300:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50524f564944455f434f4c4c5f544f4b454e5f41444452455353",
                        "id": 9526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5001:28:36",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7dab5ec7bf8c9c65a0d45a9f2e6384818c6ce5bfb7a265c9a4af74121380cb8",
                          "typeString": "literal_string \"PROVIDE_COLL_TOKEN_ADDRESS\""
                        },
                        "value": "PROVIDE_COLL_TOKEN_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c7dab5ec7bf8c9c65a0d45a9f2e6384818c6ce5bfb7a265c9a4af74121380cb8",
                          "typeString": "literal_string \"PROVIDE_COLL_TOKEN_ADDRESS\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9523,
                        "name": "collateralTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9518,
                        "src": "4962:22:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 9525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireNotEmpty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16635,
                      "src": "4962:38:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,string memory) pure"
                      }
                    },
                    "id": 9527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4962:68:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9528,
                  "nodeType": "ExpressionStatement",
                  "src": "4962:68:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9530,
                        "name": "priceOracleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9510,
                        "src": "5066:18:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9531,
                        "name": "lendingPoolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9512,
                        "src": "5098:18:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9532,
                        "name": "loanTermsConsensusAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9514,
                        "src": "5130:25:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9533,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9516,
                        "src": "5169:15:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9529,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6912,
                        2281,
                        9276
                      ],
                      "referencedDeclaration": 6912,
                      "src": "5041:11:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address)"
                      }
                    },
                    "id": 9534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5041:153:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9535,
                  "nodeType": "ExpressionStatement",
                  "src": "5041:153:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9536,
                      "name": "collateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5950,
                      "src": "5205:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9537,
                      "name": "collateralTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9518,
                      "src": "5223:22:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5205:40:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9539,
                  "nodeType": "ExpressionStatement",
                  "src": "5205:40:36"
                }
              ]
            },
            "documentation": "@notice Initializes the current contract instance setting the required parameters, if allowed\n@param priceOracleAddress Contract address of the price oracle\n@param lendingPoolAddress Contract address of the lending pool\n@param loanTermsConsensusAddress Contract adddress for loan term consensus\n@param settingsAddress Contract address for the configuration of the platform\n@param collateralTokenAddress Contract address for the collateral token.",
            "id": 9541,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 9521,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9520,
                  "name": "isNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9242,
                  "src": "4933:16:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4933:18:36"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9510,
                  "name": "priceOracleAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9541,
                  "src": "4739:26:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4739:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9512,
                  "name": "lendingPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9541,
                  "src": "4775:26:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4775:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9514,
                  "name": "loanTermsConsensusAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9541,
                  "src": "4811:33:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4811:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9516,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9541,
                  "src": "4854:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4854:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9518,
                  "name": "collateralTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9541,
                  "src": "4887:30:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4887:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4729:194:36"
            },
            "returnParameters": {
              "id": 9522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4952:0:36"
            },
            "scope": 9630,
            "src": "4710:542:36",
            "stateMutability": "nonpayable",
            "superFunction": 10849,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9575,
              "nodeType": "Block",
              "src": "5609:189:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9550,
                      "name": "totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5948,
                      "src": "5619:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9553,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9545,
                          "src": "5657:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 9551,
                          "name": "totalCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5948,
                          "src": "5637:15:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20163,
                        "src": "5637:19:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5637:27:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5619:45:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9556,
                  "nodeType": "ExpressionStatement",
                  "src": "5619:45:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9557,
                          "name": "loans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5967,
                          "src": "5674:5:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17942_storage_$",
                            "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                          }
                        },
                        "id": 9559,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 9558,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9543,
                          "src": "5680:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5674:13:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$17942_storage",
                          "typeString": "struct TellerCommon.Loan storage ref"
                        }
                      },
                      "id": 9560,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17927,
                      "src": "5674:24:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9566,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9545,
                          "src": "5730:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 9561,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5967,
                              "src": "5701:5:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17942_storage_$",
                                "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                              }
                            },
                            "id": 9563,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 9562,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9543,
                              "src": "5707:6:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5701:13:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$17942_storage",
                              "typeString": "struct TellerCommon.Loan storage ref"
                            }
                          },
                          "id": 9564,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17927,
                          "src": "5701:24:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20163,
                        "src": "5701:28:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5701:36:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5674:63:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9569,
                  "nodeType": "ExpressionStatement",
                  "src": "5674:63:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9571,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9547,
                        "src": "5773:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9572,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9545,
                        "src": "5784:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9570,
                      "name": "_collateralTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9613,
                      "src": "5748:24:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5748:43:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9574,
                  "nodeType": "ExpressionStatement",
                  "src": "5748:43:36"
                }
              ]
            },
            "documentation": "@notice Pays out collateral for the associated loan\n@param loanID The ID of the loan the collateral is for\n@param amount The amount of collateral to be paid",
            "id": 9576,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOutCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9543,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 9576,
                  "src": "5520:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5520:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9545,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9576,
                  "src": "5544:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5544:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9547,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 9576,
                  "src": "5568:25:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 9546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5568:15:36",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5510:89:36"
            },
            "returnParameters": {
              "id": 9549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5609:0:36"
            },
            "scope": 9630,
            "src": "5484:314:36",
            "stateMutability": "nonpayable",
            "superFunction": 6799,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9596,
              "nodeType": "Block",
              "src": "6067:228:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9586,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9578,
                        "src": "6159:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9587,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9580,
                        "src": "6167:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9583,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21658,
                        "src": "6136:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_TokenCollateralLoans_$9630",
                          "typeString": "contract super TokenCollateralLoans"
                        }
                      },
                      "id": 9585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_payInCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6947,
                      "src": "6136:22:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6136:38:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9589,
                  "nodeType": "ExpressionStatement",
                  "src": "6136:38:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 9591,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21467,
                          "src": "6269:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6269:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9593,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9580,
                        "src": "6281:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9590,
                      "name": "_collateralTokenTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9629,
                      "src": "6240:28:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6240:48:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9595,
                  "nodeType": "ExpressionStatement",
                  "src": "6240:48:36"
                }
              ]
            },
            "documentation": "@notice Pays collateral in for the associated loan\n@param loanID The ID of the loan the collateral is for\n@param amount The amount of collateral to be paid",
            "id": 9597,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payInCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9578,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 9597,
                  "src": "6026:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6026:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9580,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9597,
                  "src": "6042:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6042:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6025:32:36"
            },
            "returnParameters": {
              "id": 9582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6067:0:36"
            },
            "scope": 9630,
            "src": "6000:295:36",
            "stateMutability": "nonpayable",
            "superFunction": 6947,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9612,
              "nodeType": "Block",
              "src": "6602:80:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9608,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9599,
                        "src": "6657:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9609,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9601,
                        "src": "6668:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9605,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5950,
                            "src": "6626:15:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9604,
                          "name": "ERC20Detailed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20951,
                          "src": "6612:13:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$20951_$",
                            "typeString": "type(contract ERC20Detailed)"
                          }
                        },
                        "id": 9606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6612:30:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Detailed_$20951",
                          "typeString": "contract ERC20Detailed"
                        }
                      },
                      "id": 9607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16946,
                      "src": "6612:44:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Detailed_$20951_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Detailed_$20951_$",
                        "typeString": "function (contract ERC20Detailed,address,uint256)"
                      }
                    },
                    "id": 9610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6612:63:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9611,
                  "nodeType": "ExpressionStatement",
                  "src": "6612:63:36"
                }
              ]
            },
            "documentation": "@notice It transfers an amount of collateral tokens to a specific address.\n@param recipient The address which will receive the tokens.\n@param amount The amount of tokens to transfer.",
            "id": 9613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collateralTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9599,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 9613,
                  "src": "6558:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6558:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9601,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9613,
                  "src": "6577:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6577:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6557:35:36"
            },
            "returnParameters": {
              "id": 9603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6602:0:36"
            },
            "scope": 9630,
            "src": "6524:158:36",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9628,
              "nodeType": "Block",
              "src": "6996:79:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9624,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9615,
                        "src": "7055:4:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9625,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9617,
                        "src": "7061:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9621,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5950,
                            "src": "7020:15:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9620,
                          "name": "ERC20Detailed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20951,
                          "src": "7006:13:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$20951_$",
                            "typeString": "type(contract ERC20Detailed)"
                          }
                        },
                        "id": 9622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7006:30:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Detailed_$20951",
                          "typeString": "contract ERC20Detailed"
                        }
                      },
                      "id": 9623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17017,
                      "src": "7006:48:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Detailed_$20951_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Detailed_$20951_$",
                        "typeString": "function (contract ERC20Detailed,address,uint256)"
                      }
                    },
                    "id": 9626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7006:62:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9627,
                  "nodeType": "ExpressionStatement",
                  "src": "7006:62:36"
                }
              ]
            },
            "documentation": "@notice It transfers an amount of collateral tokens from an address to this contract.\n@param from The address where the tokens will transfer from.\n@param amount The amount to be transferred.",
            "id": 9629,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collateralTokenTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9615,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 9629,
                  "src": "6957:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6957:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9617,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9629,
                  "src": "6971:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6971:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6956:30:36"
            },
            "returnParameters": {
              "id": 9619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6996:0:36"
            },
            "scope": 9630,
            "src": "6919:156:36",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 9631,
        "src": "1345:5732:36"
      }
    ],
    "src": "0:7078:36"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TokenCollateralLoans.sol",
    "exportedSymbols": {
      "TokenCollateralLoans": [
        9630
      ]
    },
    "id": 9631,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9359,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:36"
      },
      {
        "id": 9360,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:36"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LoansBase.sol",
        "file": "./LoansBase.sol",
        "id": 9361,
        "nodeType": "ImportDirective",
        "scope": 9631,
        "sourceUnit": 7316,
        "src": "72:25:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9362,
              "name": "LoansBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7315,
              "src": "1378:9:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LoansBase_$7315",
                "typeString": "contract LoansBase"
              }
            },
            "id": 9363,
            "nodeType": "InheritanceSpecifier",
            "src": "1378:9:36"
          }
        ],
        "contractDependencies": [
          2329,
          2593,
          7315,
          9277,
          10850,
          21268,
          21337
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract is used as a basis for the creation of loans (not wei) across the platform\n@notice It implements the LoansBase contract from Teller\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 9630,
        "linearizedBaseContracts": [
          9630,
          7315,
          2329,
          21268,
          21337,
          2593,
          9277,
          10850
        ],
        "name": "TokenCollateralLoans",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9374,
              "nodeType": "Block",
              "src": "1630:85:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9366,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21467,
                            "src": "1648:3:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1648:9:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 9368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1661:1:36",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1648:14:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "544f4b454e5f4c4f414e535f56414c55455f4d5553545f42455f5a45524f",
                        "id": 9370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1664:32:36",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f33a818cfe2b5be858eacf8527ea1801bb9dccadb49769e42646a33febd6c9",
                          "typeString": "literal_string \"TOKEN_LOANS_VALUE_MUST_BE_ZERO\""
                        },
                        "value": "TOKEN_LOANS_VALUE_MUST_BE_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f33a818cfe2b5be858eacf8527ea1801bb9dccadb49769e42646a33febd6c9",
                          "typeString": "literal_string \"TOKEN_LOANS_VALUE_MUST_BE_ZERO\""
                        }
                      ],
                      "id": 9365,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21470,
                        21471
                      ],
                      "referencedDeclaration": 21471,
                      "src": "1640:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1640:57:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9372,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:57:36"
                },
                {
                  "id": 9373,
                  "nodeType": "PlaceholderStatement",
                  "src": "1707:1:36"
                }
              ]
            },
            "documentation": "@notice Checks the value in the current transactionn is zero.\n@dev It throws a require error if value is not zero.",
            "id": 9375,
            "name": "noMsgValue",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 9364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1627:2:36"
            },
            "src": "1608:107:36",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9427,
              "nodeType": "Block",
              "src": "2299:376:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 9401,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5967,
                              "src": "2346:5:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17942_storage_$",
                                "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                              }
                            },
                            "id": 9403,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 9402,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9379,
                              "src": "2352:6:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2346:13:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$17942_storage",
                              "typeString": "struct TellerCommon.Loan storage ref"
                            }
                          },
                          "id": 9404,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "loanTerms",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17921,
                          "src": "2346:23:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanTerms_$17917_storage",
                            "typeString": "struct TellerCommon.LoanTerms storage ref"
                          }
                        },
                        "id": 9405,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "borrower",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17906,
                        "src": "2346:32:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "424f52524f5745525f4c4f414e5f49445f4d49534d41544348",
                        "id": 9406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2392:27:36",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        },
                        "value": "BORROWER_LOAN_ID_MISMATCH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9398,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9377,
                        "src": "2309:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 9400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireEqualTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16668,
                      "src": "2309:23:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 9407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:120:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9408,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:120:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 9410,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9381,
                          "src": "2447:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 9411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2456:1:36",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2447:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43414e4e4f545f4445504f5349545f5a45524f",
                        "id": 9413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2459:21:36",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        },
                        "value": "CANNOT_DEPOSIT_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        }
                      ],
                      "id": 9409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21470,
                        21471
                      ],
                      "referencedDeclaration": 21471,
                      "src": "2439:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2439:42:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9415,
                  "nodeType": "ExpressionStatement",
                  "src": "2439:42:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9417,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9379,
                        "src": "2592:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9418,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9381,
                        "src": "2600:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9416,
                      "name": "_payInCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9597
                      ],
                      "referencedDeclaration": 9597,
                      "src": "2575:16:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2575:32:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9420,
                  "nodeType": "ExpressionStatement",
                  "src": "2575:32:36"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9422,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9379,
                        "src": "2643:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9423,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9377,
                        "src": "2651:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9424,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9381,
                        "src": "2661:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9421,
                      "name": "CollateralDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10647,
                      "src": "2623:19:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 9425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2623:45:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9426,
                  "nodeType": "EmitStatement",
                  "src": "2618:50:36"
                }
              ]
            },
            "documentation": "@notice Deposit collateral tokens into a loan.\n@param borrower The address of the loan borrower.\n@param loanID The ID of the loan the collateral is for\n@param amount The amount to deposit as collateral.",
            "id": 9428,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 9384,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9383,
                  "name": "noMsgValue",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9375,
                  "src": "2147:10:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2147:12:36"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9386,
                    "name": "loanID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9379,
                    "src": "2184:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 9387,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9385,
                  "name": "loanActiveOrSet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6046,
                  "src": "2168:15:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2168:23:36"
              },
              {
                "arguments": [],
                "id": 9389,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9388,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "2200:13:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2200:15:36"
              },
              {
                "arguments": [],
                "id": 9391,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9390,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2201,
                  "src": "2224:13:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2224:15:36"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9394,
                        "name": "lendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5956,
                        "src": "2281:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10580",
                          "typeString": "contract LendingPoolInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10580",
                          "typeString": "contract LendingPoolInterface"
                        }
                      ],
                      "id": 9393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2273:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 9395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2273:20:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 9396,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9392,
                  "name": "whenLendingPoolNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2215,
                  "src": "2248:24:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2248:46:36"
              }
            ],
            "name": "depositCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9377,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 9428,
                  "src": "2035:16:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2035:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9379,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 9428,
                  "src": "2061:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9381,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9428,
                  "src": "2085:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2085:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2025:80:36"
            },
            "returnParameters": {
              "id": 9397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2299:0:36"
            },
            "scope": 9630,
            "src": "1999:676:36",
            "stateMutability": "payable",
            "superFunction": 10739,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9507,
              "nodeType": "Block",
              "src": "3323:871:36",
              "statements": [
                {
                  "assignments": [
                    9452
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9452,
                      "name": "loanID",
                      "nodeType": "VariableDeclaration",
                      "scope": 9507,
                      "src": "3333:14:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9451,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3333:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9455,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9453,
                      "name": "getAndIncrementLoanID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7135,
                      "src": "3350:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 9454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3350:23:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3333:40:36"
                },
                {
                  "assignments": [
                    9457,
                    9459,
                    9461
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9457,
                      "name": "interestRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 9507,
                      "src": "3398:20:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9456,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3398:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9459,
                      "name": "collateralRatio",
                      "nodeType": "VariableDeclaration",
                      "scope": 9507,
                      "src": "3432:23:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9458,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3432:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9461,
                      "name": "maxLoanAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 9507,
                      "src": "3469:21:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9460,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3469:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9467,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9464,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9430,
                        "src": "3537:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9465,
                        "name": "responses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9433,
                        "src": "3546:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17897_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17897_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9462,
                        "name": "loanTermsConsensus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5958,
                        "src": "3503:18:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LoanTermsConsensusInterface_$10634",
                          "typeString": "contract LoanTermsConsensusInterface"
                        }
                      },
                      "id": 9463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10624,
                      "src": "3503:33:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LoanRequest_$17882_memory_ptr_$_t_array$_t_struct$_LoanResponse_$17897_memory_$dyn_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct TellerCommon.LoanRequest memory,struct TellerCommon.LoanResponse memory[] memory) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 9466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3503:53:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3384:172:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 9468,
                        "name": "loans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5967,
                        "src": "3567:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17942_storage_$",
                          "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                        }
                      },
                      "id": 9470,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9469,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9452,
                        "src": "3573:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3567:13:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17942_storage",
                        "typeString": "struct TellerCommon.Loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9472,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9452,
                          "src": "3607:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9473,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9430,
                          "src": "3627:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9474,
                          "name": "interestRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9457,
                          "src": "3648:12:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9475,
                          "name": "collateralRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9459,
                          "src": "3674:15:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9476,
                          "name": "maxLoanAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9461,
                          "src": "3703:13:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9471,
                        "name": "createLoan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7195,
                        "src": "3583:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_LoanRequest_$17882_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_Loan_$17942_memory_ptr_$",
                          "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256) view returns (struct TellerCommon.Loan memory)"
                        }
                      },
                      "id": 9477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3583:143:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17942_memory_ptr",
                        "typeString": "struct TellerCommon.Loan memory"
                      }
                    },
                    "src": "3567:159:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$17942_storage",
                      "typeString": "struct TellerCommon.Loan storage ref"
                    }
                  },
                  "id": 9479,
                  "nodeType": "ExpressionStatement",
                  "src": "3567:159:36"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 9480,
                      "name": "collateralAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9435,
                      "src": "3741:16:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 9481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3760:1:36",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3741:20:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 9489,
                  "nodeType": "IfStatement",
                  "src": "3737:165:36",
                  "trueBody": {
                    "id": 9488,
                    "nodeType": "Block",
                    "src": "3763:139:36",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 9484,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9452,
                              "src": "3866:6:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 9485,
                              "name": "collateralAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9435,
                              "src": "3874:16:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9483,
                            "name": "_payInCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9597
                            ],
                            "referencedDeclaration": 9597,
                            "src": "3849:16:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 9486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3849:42:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9487,
                        "nodeType": "ExpressionStatement",
                        "src": "3849:42:36"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9495,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9452,
                        "src": "3949:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9490,
                          "name": "borrowerLoans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5963,
                          "src": "3912:13:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 9493,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9491,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9430,
                            "src": "3926:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                              "typeString": "struct TellerCommon.LoanRequest calldata"
                            }
                          },
                          "id": 9492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17869,
                          "src": "3926:16:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3912:31:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 9494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3912:36:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 9496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3912:44:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9497,
                  "nodeType": "ExpressionStatement",
                  "src": "3912:44:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9499,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9452,
                        "src": "4038:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9500,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9430,
                        "src": "4058:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9501,
                        "name": "interestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9457,
                        "src": "4079:12:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9502,
                        "name": "collateralRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9459,
                        "src": "4105:15:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9503,
                        "name": "maxLoanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9461,
                        "src": "4134:13:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9504,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9435,
                        "src": "4161:16:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9498,
                      "name": "_emitLoanTermsSetAndCollateralDepositedEventsIfApplicable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7240,
                      "src": "3967:57:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_LoanRequest_$17882_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 9505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3967:220:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9506,
                  "nodeType": "ExpressionStatement",
                  "src": "3967:220:36"
                }
              ]
            },
            "documentation": "@notice Creates a loan with the loan request and terms\n@param request Struct of the protocol loan request\n@param responses List of structs of the protocol loan responses\n@param collateralAmount Amount of collateral required for the loan",
            "id": 9508,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 9438,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9437,
                  "name": "noMsgValue",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9375,
                  "src": "3183:10:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3183:12:36"
              },
              {
                "arguments": [],
                "id": 9440,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9439,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "3204:13:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3204:15:36"
              },
              {
                "arguments": [],
                "id": 9442,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9441,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2201,
                  "src": "3228:13:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3228:15:36"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 9444,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9430,
                      "src": "3263:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                        "typeString": "struct TellerCommon.LoanRequest calldata"
                      }
                    },
                    "id": 9445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "borrower",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17869,
                    "src": "3263:16:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 9446,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9443,
                  "name": "isBorrower",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5983,
                  "src": "3252:10:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3252:28:36"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9448,
                    "name": "request",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9430,
                    "src": "3310:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                      "typeString": "struct TellerCommon.LoanRequest calldata"
                    }
                  }
                ],
                "id": 9449,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9447,
                  "name": "withValidLoanRequest",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6088,
                  "src": "3289:20:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_LoanRequest_$17882_memory_ptr_$",
                    "typeString": "modifier (struct TellerCommon.LoanRequest memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3289:29:36"
              }
            ],
            "name": "createLoanWithTerms",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9430,
                  "name": "request",
                  "nodeType": "VariableDeclaration",
                  "scope": 9508,
                  "src": "3004:41:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LoanRequest_$17882_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanRequest"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9429,
                    "name": "TellerCommon.LoanRequest",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17882,
                    "src": "3004:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$17882_storage_ptr",
                      "typeString": "struct TellerCommon.LoanRequest"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9433,
                  "name": "responses",
                  "nodeType": "VariableDeclaration",
                  "scope": 9508,
                  "src": "3055:46:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17897_calldata_$dyn_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanResponse[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 9431,
                      "name": "TellerCommon.LoanResponse",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 17897,
                      "src": "3055:25:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanResponse_$17897_storage_ptr",
                        "typeString": "struct TellerCommon.LoanResponse"
                      }
                    },
                    "id": 9432,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3055:27:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17897_storage_$dyn_storage_ptr",
                      "typeString": "struct TellerCommon.LoanResponse[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9435,
                  "name": "collateralAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9508,
                  "src": "3111:24:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3111:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2994:147:36"
            },
            "returnParameters": {
              "id": 9450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3323:0:36"
            },
            "scope": 9630,
            "src": "2966:1228:36",
            "stateMutability": "payable",
            "superFunction": 10756,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9540,
              "nodeType": "Block",
              "src": "4952:300:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50524f564944455f434f4c4c5f544f4b454e5f41444452455353",
                        "id": 9526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5001:28:36",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7dab5ec7bf8c9c65a0d45a9f2e6384818c6ce5bfb7a265c9a4af74121380cb8",
                          "typeString": "literal_string \"PROVIDE_COLL_TOKEN_ADDRESS\""
                        },
                        "value": "PROVIDE_COLL_TOKEN_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c7dab5ec7bf8c9c65a0d45a9f2e6384818c6ce5bfb7a265c9a4af74121380cb8",
                          "typeString": "literal_string \"PROVIDE_COLL_TOKEN_ADDRESS\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9523,
                        "name": "collateralTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9518,
                        "src": "4962:22:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 9525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireNotEmpty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16635,
                      "src": "4962:38:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,string memory) pure"
                      }
                    },
                    "id": 9527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4962:68:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9528,
                  "nodeType": "ExpressionStatement",
                  "src": "4962:68:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9530,
                        "name": "priceOracleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9510,
                        "src": "5066:18:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9531,
                        "name": "lendingPoolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9512,
                        "src": "5098:18:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9532,
                        "name": "loanTermsConsensusAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9514,
                        "src": "5130:25:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9533,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9516,
                        "src": "5169:15:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9529,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6912,
                        2281,
                        9276
                      ],
                      "referencedDeclaration": 6912,
                      "src": "5041:11:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address)"
                      }
                    },
                    "id": 9534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5041:153:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9535,
                  "nodeType": "ExpressionStatement",
                  "src": "5041:153:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9536,
                      "name": "collateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5950,
                      "src": "5205:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9537,
                      "name": "collateralTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9518,
                      "src": "5223:22:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5205:40:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9539,
                  "nodeType": "ExpressionStatement",
                  "src": "5205:40:36"
                }
              ]
            },
            "documentation": "@notice Initializes the current contract instance setting the required parameters, if allowed\n@param priceOracleAddress Contract address of the price oracle\n@param lendingPoolAddress Contract address of the lending pool\n@param loanTermsConsensusAddress Contract adddress for loan term consensus\n@param settingsAddress Contract address for the configuration of the platform\n@param collateralTokenAddress Contract address for the collateral token.",
            "id": 9541,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 9521,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9520,
                  "name": "isNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9242,
                  "src": "4933:16:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4933:18:36"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9510,
                  "name": "priceOracleAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9541,
                  "src": "4739:26:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4739:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9512,
                  "name": "lendingPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9541,
                  "src": "4775:26:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4775:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9514,
                  "name": "loanTermsConsensusAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9541,
                  "src": "4811:33:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4811:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9516,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9541,
                  "src": "4854:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4854:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9518,
                  "name": "collateralTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9541,
                  "src": "4887:30:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4887:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4729:194:36"
            },
            "returnParameters": {
              "id": 9522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4952:0:36"
            },
            "scope": 9630,
            "src": "4710:542:36",
            "stateMutability": "nonpayable",
            "superFunction": 10849,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9575,
              "nodeType": "Block",
              "src": "5609:189:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9550,
                      "name": "totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5948,
                      "src": "5619:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9553,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9545,
                          "src": "5657:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 9551,
                          "name": "totalCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5948,
                          "src": "5637:15:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20163,
                        "src": "5637:19:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5637:27:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5619:45:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9556,
                  "nodeType": "ExpressionStatement",
                  "src": "5619:45:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9557,
                          "name": "loans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5967,
                          "src": "5674:5:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17942_storage_$",
                            "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                          }
                        },
                        "id": 9559,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 9558,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9543,
                          "src": "5680:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5674:13:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$17942_storage",
                          "typeString": "struct TellerCommon.Loan storage ref"
                        }
                      },
                      "id": 9560,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17927,
                      "src": "5674:24:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9566,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9545,
                          "src": "5730:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 9561,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5967,
                              "src": "5701:5:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17942_storage_$",
                                "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                              }
                            },
                            "id": 9563,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 9562,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9543,
                              "src": "5707:6:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5701:13:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$17942_storage",
                              "typeString": "struct TellerCommon.Loan storage ref"
                            }
                          },
                          "id": 9564,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17927,
                          "src": "5701:24:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20163,
                        "src": "5701:28:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5701:36:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5674:63:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9569,
                  "nodeType": "ExpressionStatement",
                  "src": "5674:63:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9571,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9547,
                        "src": "5773:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9572,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9545,
                        "src": "5784:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9570,
                      "name": "_collateralTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9613,
                      "src": "5748:24:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5748:43:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9574,
                  "nodeType": "ExpressionStatement",
                  "src": "5748:43:36"
                }
              ]
            },
            "documentation": "@notice Pays out collateral for the associated loan\n@param loanID The ID of the loan the collateral is for\n@param amount The amount of collateral to be paid",
            "id": 9576,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOutCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9543,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 9576,
                  "src": "5520:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5520:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9545,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9576,
                  "src": "5544:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5544:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9547,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 9576,
                  "src": "5568:25:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 9546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5568:15:36",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5510:89:36"
            },
            "returnParameters": {
              "id": 9549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5609:0:36"
            },
            "scope": 9630,
            "src": "5484:314:36",
            "stateMutability": "nonpayable",
            "superFunction": 6799,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9596,
              "nodeType": "Block",
              "src": "6067:228:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9586,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9578,
                        "src": "6159:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9587,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9580,
                        "src": "6167:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9583,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21658,
                        "src": "6136:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_TokenCollateralLoans_$9630",
                          "typeString": "contract super TokenCollateralLoans"
                        }
                      },
                      "id": 9585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_payInCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6947,
                      "src": "6136:22:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6136:38:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9589,
                  "nodeType": "ExpressionStatement",
                  "src": "6136:38:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 9591,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21467,
                          "src": "6269:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6269:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9593,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9580,
                        "src": "6281:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9590,
                      "name": "_collateralTokenTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9629,
                      "src": "6240:28:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6240:48:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9595,
                  "nodeType": "ExpressionStatement",
                  "src": "6240:48:36"
                }
              ]
            },
            "documentation": "@notice Pays collateral in for the associated loan\n@param loanID The ID of the loan the collateral is for\n@param amount The amount of collateral to be paid",
            "id": 9597,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payInCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9578,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 9597,
                  "src": "6026:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6026:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9580,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9597,
                  "src": "6042:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6042:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6025:32:36"
            },
            "returnParameters": {
              "id": 9582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6067:0:36"
            },
            "scope": 9630,
            "src": "6000:295:36",
            "stateMutability": "nonpayable",
            "superFunction": 6947,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9612,
              "nodeType": "Block",
              "src": "6602:80:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9608,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9599,
                        "src": "6657:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9609,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9601,
                        "src": "6668:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9605,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5950,
                            "src": "6626:15:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9604,
                          "name": "ERC20Detailed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20951,
                          "src": "6612:13:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$20951_$",
                            "typeString": "type(contract ERC20Detailed)"
                          }
                        },
                        "id": 9606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6612:30:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Detailed_$20951",
                          "typeString": "contract ERC20Detailed"
                        }
                      },
                      "id": 9607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16946,
                      "src": "6612:44:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Detailed_$20951_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Detailed_$20951_$",
                        "typeString": "function (contract ERC20Detailed,address,uint256)"
                      }
                    },
                    "id": 9610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6612:63:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9611,
                  "nodeType": "ExpressionStatement",
                  "src": "6612:63:36"
                }
              ]
            },
            "documentation": "@notice It transfers an amount of collateral tokens to a specific address.\n@param recipient The address which will receive the tokens.\n@param amount The amount of tokens to transfer.",
            "id": 9613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collateralTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9599,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 9613,
                  "src": "6558:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6558:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9601,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9613,
                  "src": "6577:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6577:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6557:35:36"
            },
            "returnParameters": {
              "id": 9603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6602:0:36"
            },
            "scope": 9630,
            "src": "6524:158:36",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9628,
              "nodeType": "Block",
              "src": "6996:79:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9624,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9615,
                        "src": "7055:4:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9625,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9617,
                        "src": "7061:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9621,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5950,
                            "src": "7020:15:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9620,
                          "name": "ERC20Detailed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20951,
                          "src": "7006:13:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$20951_$",
                            "typeString": "type(contract ERC20Detailed)"
                          }
                        },
                        "id": 9622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7006:30:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Detailed_$20951",
                          "typeString": "contract ERC20Detailed"
                        }
                      },
                      "id": 9623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17017,
                      "src": "7006:48:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Detailed_$20951_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Detailed_$20951_$",
                        "typeString": "function (contract ERC20Detailed,address,uint256)"
                      }
                    },
                    "id": 9626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7006:62:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9627,
                  "nodeType": "ExpressionStatement",
                  "src": "7006:62:36"
                }
              ]
            },
            "documentation": "@notice It transfers an amount of collateral tokens from an address to this contract.\n@param from The address where the tokens will transfer from.\n@param amount The amount to be transferred.",
            "id": 9629,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collateralTokenTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9615,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 9629,
                  "src": "6957:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6957:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9617,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9629,
                  "src": "6971:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6971:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6956:30:36"
            },
            "returnParameters": {
              "id": 9619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6996:0:36"
            },
            "scope": 9630,
            "src": "6919:156:36",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 9631,
        "src": "1345:5732:36"
      }
    ],
    "src": "0:7078:36"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-06T02:15:12.354Z",
  "devdoc": {
    "author": "develop@teller.finance",
    "methods": {
      "canLiquidateLoan(uint256)": {
        "params": {
          "loanID": "The ID of the loan to check"
        },
        "return": "bool weather the loan can be liquidated"
      },
      "createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)": {
        "params": {
          "collateralAmount": "Amount of collateral required for the loan",
          "request": "Struct of the protocol loan request",
          "responses": "List of structs of the protocol loan responses"
        }
      },
      "depositCollateral(address,uint256,uint256)": {
        "params": {
          "amount": "The amount to deposit as collateral.",
          "borrower": "The address of the loan borrower.",
          "loanID": "The ID of the loan the collateral is for"
        }
      },
      "getBorrowerLoans(address)": {
        "params": {
          "borrower": "The borrower's address"
        }
      },
      "getCollateralInfo(uint256)": {
        "params": {
          "loanID": "of the loan to get info for"
        },
        "return": "memory TellerCommon.LoanCollateralInfo Collateral information of the loan"
      },
      "getTotalOwed(uint256)": {
        "params": {
          "loanID": "The ID of the loan to be queried"
        },
        "return": "uint256 The total amount owed remaining"
      },
      "initialize(address,address,address,address,address)": {
        "params": {
          "collateralTokenAddress": "Contract address for the collateral token.",
          "lendingPoolAddress": "Contract address of the lending pool",
          "loanTermsConsensusAddress": "Contract adddress for loan term consensus",
          "priceOracleAddress": "Contract address of the price oracle",
          "settingsAddress": "Contract address for the configuration of the platform"
        }
      },
      "initialized()": {
        "return": "true if contract is initialized. Otherwise it returns false."
      },
      "lendingToken()": {
        "return": "Address of the lending token"
      },
      "liquidateLoan(uint256)": {
        "params": {
          "loanID": "The ID of the loan to be liquidated"
        }
      },
      "repay(uint256,uint256)": {
        "params": {
          "amount": "The amount of tokens to pay back to the loan",
          "loanID": "The ID of the loan the payment is for"
        }
      },
      "setPriceOracle(address)": {
        "details": "It throws a require error if sender is not allowed.It throws a require error if new address is empty (0x0) or not a contract.",
        "params": {
          "newPriceOracle": "the new price oracle address."
        }
      },
      "takeOutLoan(uint256,uint256)": {
        "details": "collateral ratio is a percentage of the loan amount that's required in collateralthe percentage will be *(10**2). I.e. collateralRatio of 5244 means 52.44% collateralis required in the loan. Interest rate is also a percentage with 2 decimal points."
      },
      "withdrawCollateral(uint256,uint256)": {
        "params": {
          "amount": "The amount of collateral token or ether the caller is hoping to withdraw.",
          "loanID": "The ID of the loan the collateral is for"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "canLiquidateLoan(uint256)": {
        "notice": "A loan can be liquidated if it is: under collateralized or expired"
      },
      "createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)": {
        "notice": "Creates a loan with the loan request and terms"
      },
      "depositCollateral(address,uint256,uint256)": {
        "notice": "Deposit collateral tokens into a loan."
      },
      "getBorrowerLoans(address)": {
        "notice": "Get a list of all loans for a borrower"
      },
      "getCollateralInfo(uint256)": {
        "notice": "Get collateral information of a specific loan"
      },
      "getTotalOwed(uint256)": {
        "notice": "Returns the total owed amount remaining for a specified loan"
      },
      "initialize(address,address,address,address,address)": {
        "notice": "Initializes the current contract instance setting the required parameters, if allowed"
      },
      "initialized()": {
        "notice": "Gets if the contract is initialized."
      },
      "lendingToken()": {
        "notice": "Returns the lending token in the lending pool"
      },
      "liquidateLoan(uint256)": {
        "notice": "Liquidate a loan if it is expired or under collateralized"
      },
      "repay(uint256,uint256)": {
        "notice": "Make a payment to a loan"
      },
      "setPriceOracle(address)": {
        "notice": "Updates the current price oracle instance."
      },
      "settings()": {
        "notice": "The settings contract."
      },
      "takeOutLoan(uint256,uint256)": {
        "notice": "Take out a loan"
      },
      "withdrawCollateral(uint256,uint256)": {
        "notice": "Withdraw collateral from a loan, unless this isn't allowed"
      }
    },
    "notice": "This contract is used as a basis for the creation of loans (not wei) across the platformIt implements the LoansBase contract from Teller"
  }
}