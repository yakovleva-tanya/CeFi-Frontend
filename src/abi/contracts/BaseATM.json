{
  "contractName": "BaseATM",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "atmSettings",
      "outputs": [
        {
          "internalType": "contract IATMSettings",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"atmSettings\",\"outputs\":[{\"internalType\":\"contract IATMSettings\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"This acts as a base contract for all the ATM contracts.\"}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/atm/BaseATM.sol\":\"BaseATM\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/atm/BaseATM.sol\":{\"keccak256\":\"0x320fada9d009a48c4e04f17a172f18b7cf98694e85388530c062f081418d48a6\",\"urls\":[\"bzz-raw://2ee3c4aaadf693ea2fc543ece5b2acb0be54fe3d6be9bc164c6156a42ba2ac2c\",\"dweb:/ipfs/QmeqA4S9b5N9Whm9rVpAss2LemC6feayCwyzsiqADedcMi\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0x425cc07c2fc7ae0ad8aa2b23a3aa3b7a44f84047344ab88714502aef018200f2\",\"urls\":[\"bzz-raw://f7f20c0780c2aad569edbb214375616bbb28de334623b7005fa4490e5bc61f5f\",\"dweb:/ipfs/QmdPLfJxEBiNhgFkhNe7AS92cfcDzqLBPQaMHabxhynmG9\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0x0dac741a2ac83d2983852886597221cdc07099c46761d718e3e2afb03f2cf322\",\"urls\":[\"bzz-raw://b4704eda2956c8caaa321eba013575f3481678b8b3f69e396d4160d385f2126a\",\"dweb:/ipfs/QmR4AyWVoi66LFLrR37RPh3YszAhMVY82Z9Y8UXbiRCcXW\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x8a80e4d41132c052ccd109ba299be9a026226b6b9a3ed7b8db203aa95029cfc7\",\"urls\":[\"bzz-raw://6b685861a3c48117bcb441fe8c008a6c04499d5f7d85e33bb052f1bbdb86d702\",\"dweb:/ipfs/QmSiRbzC4SHMFYQhA97aNZCZzBo9SbL8XPWvcCUbTwMLKn\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AssetSettingsLib.sol\":{\"keccak256\":\"0x982efd04a5514334651af912199202a054302e924ff3913c13b90f0281e239b3\",\"urls\":[\"bzz-raw://a39501ddbe7697a5c1fb9b93669598ec457e2d80c3b8419951a60c1a3d481fe7\",\"dweb:/ipfs/QmQcycnVeWDiFTfoHygDn139aqa6vwJHmU3u5Ha3y2LsUm\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0xd428c06d3a5fe7ec35f0b087dd2a9aec22f73c5737d04cd47a46410012a933ec\",\"urls\":[\"bzz-raw://f2f904a9111d1bcce6f97bb9e0cd5b15d0a707635a7198bd841107b7d286feb9\",\"dweb:/ipfs/QmQhSnFBuD7m28QMeBuxHsxfkpMZagjsMeKzFUpSs2Mvzh\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b5060938061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063dc21a6a014602d575b600080fd5b6033604f565b604080516001600160a01b039092168252519081900360200190f35b6000546001600160a01b03168156fea265627a7a72315820c54bb781f8cd000f45b03d500f7e1dd79ea9b278963f4912d3081045069857cd64736f6c63430005110032",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063dc21a6a014602d575b600080fd5b6033604f565b604080516001600160a01b039092168252519081900360200190f35b6000546001600160a01b03168156fea265627a7a72315820c54bb781f8cd000f45b03d500f7e1dd79ea9b278963f4912d3081045069857cd64736f6c63430005110032",
  "sourceMap": "1217:399:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1217:399:6;;;;;;;",
  "deployedSourceMap": "1217:399:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1217:399:6;;;;;;;;;;;;;;;;;;;1336:31;;;:::i;:::-;;;;-1:-1:-1;;;;;1336:31:6;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1336:31:6;;:::o",
  "source": "pragma solidity 0.5.17;\n\nimport \"../settings/IATMSettings.sol\";\n\n/*****************************************************************************************************/\n/**                                             WARNING                                             **/\n/**                         THIS IS A BASE CONTRACT FOR THE ATM CONTRACTS                           **/\n/**  ---------------------------------------------------------------------------------------------  **/\n/**  Do NOT change the order of or ADD ANY storage variables to this or new versions of this        **/\n/**  contract as this will cause the the storage slots to be overwritten on the proxy contract!!    **/\n/**                                                                                                 **/\n/**  Visit https://docs.openzeppelin.com/upgrades/2.6/proxies#upgrading-via-the-proxy-pattern for   **/\n/**  more information.                                                                              **/\n/*****************************************************************************************************/\n/**\n    @notice This acts as a base contract for all the ATM contracts.\n\n    @author develop@teller.finance\n */\ncontract BaseATM {\n    /**\n        @notice It represents the current address for the ATMSettings contract.\n     */\n    IATMSettings public atmSettings;\n\n    /**\n        @notice It requires that the caller is assigned the pauser role within the protocol settings.\n     */\n    modifier onlyPauser() {\n        require(atmSettings.settings().hasPauserRole(msg.sender), \"ONLY_PAUSER\");\n        _;\n    }\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/atm/BaseATM.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/atm/BaseATM.sol",
    "exportedSymbols": {
      "BaseATM": [
        1250
      ]
    },
    "id": 1251,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1231,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/settings/IATMSettings.sol",
        "file": "../settings/IATMSettings.sol",
        "id": 1232,
        "nodeType": "ImportDirective",
        "scope": 1251,
        "sourceUnit": 11232,
        "src": "25:38:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@notice This acts as a base contract for all the ATM contracts.\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 1250,
        "linearizedBaseContracts": [
          1250
        ],
        "name": "BaseATM",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1234,
            "name": "atmSettings",
            "nodeType": "VariableDeclaration",
            "scope": 1250,
            "src": "1336:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IATMSettings_$11231",
              "typeString": "contract IATMSettings"
            },
            "typeName": {
              "contractScope": null,
              "id": 1233,
              "name": "IATMSettings",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11231,
              "src": "1336:12:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IATMSettings_$11231",
                "typeString": "contract IATMSettings"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1248,
              "nodeType": "Block",
              "src": "1514:100:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1241,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17128,
                              "src": "1569:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1569:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1237,
                                "name": "atmSettings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1234,
                                "src": "1532:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IATMSettings_$11231",
                                  "typeString": "contract IATMSettings"
                                }
                              },
                              "id": 1238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "settings",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11148,
                              "src": "1532:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_SettingsInterface_$7672_$",
                                "typeString": "function () view external returns (contract SettingsInterface)"
                              }
                            },
                            "id": 1239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1532:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SettingsInterface_$7672",
                              "typeString": "contract SettingsInterface"
                            }
                          },
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasPauserRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7671,
                          "src": "1532:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 1243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1532:48:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f4e4c595f504155534552",
                        "id": 1244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1582:13:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_458b09ee9943e2f2542c505169ad55c19f74469ff1ecf1cf3b6fbb9e0502a7f3",
                          "typeString": "literal_string \"ONLY_PAUSER\""
                        },
                        "value": "ONLY_PAUSER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_458b09ee9943e2f2542c505169ad55c19f74469ff1ecf1cf3b6fbb9e0502a7f3",
                          "typeString": "literal_string \"ONLY_PAUSER\""
                        }
                      ],
                      "id": 1236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17131,
                        17132
                      ],
                      "referencedDeclaration": 17132,
                      "src": "1524:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1524:72:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1246,
                  "nodeType": "ExpressionStatement",
                  "src": "1524:72:6"
                },
                {
                  "id": 1247,
                  "nodeType": "PlaceholderStatement",
                  "src": "1606:1:6"
                }
              ]
            },
            "documentation": "@notice It requires that the caller is assigned the pauser role within the protocol settings.",
            "id": 1249,
            "name": "onlyPauser",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1511:2:6"
            },
            "src": "1492:122:6",
            "visibility": "internal"
          }
        ],
        "scope": 1251,
        "src": "1217:399:6"
      }
    ],
    "src": "0:1617:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/atm/BaseATM.sol",
    "exportedSymbols": {
      "BaseATM": [
        1250
      ]
    },
    "id": 1251,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1231,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/settings/IATMSettings.sol",
        "file": "../settings/IATMSettings.sol",
        "id": 1232,
        "nodeType": "ImportDirective",
        "scope": 1251,
        "sourceUnit": 11232,
        "src": "25:38:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@notice This acts as a base contract for all the ATM contracts.\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 1250,
        "linearizedBaseContracts": [
          1250
        ],
        "name": "BaseATM",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1234,
            "name": "atmSettings",
            "nodeType": "VariableDeclaration",
            "scope": 1250,
            "src": "1336:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IATMSettings_$11231",
              "typeString": "contract IATMSettings"
            },
            "typeName": {
              "contractScope": null,
              "id": 1233,
              "name": "IATMSettings",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11231,
              "src": "1336:12:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IATMSettings_$11231",
                "typeString": "contract IATMSettings"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1248,
              "nodeType": "Block",
              "src": "1514:100:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1241,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17128,
                              "src": "1569:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1569:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1237,
                                "name": "atmSettings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1234,
                                "src": "1532:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IATMSettings_$11231",
                                  "typeString": "contract IATMSettings"
                                }
                              },
                              "id": 1238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "settings",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11148,
                              "src": "1532:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_SettingsInterface_$7672_$",
                                "typeString": "function () view external returns (contract SettingsInterface)"
                              }
                            },
                            "id": 1239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1532:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SettingsInterface_$7672",
                              "typeString": "contract SettingsInterface"
                            }
                          },
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasPauserRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7671,
                          "src": "1532:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 1243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1532:48:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f4e4c595f504155534552",
                        "id": 1244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1582:13:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_458b09ee9943e2f2542c505169ad55c19f74469ff1ecf1cf3b6fbb9e0502a7f3",
                          "typeString": "literal_string \"ONLY_PAUSER\""
                        },
                        "value": "ONLY_PAUSER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_458b09ee9943e2f2542c505169ad55c19f74469ff1ecf1cf3b6fbb9e0502a7f3",
                          "typeString": "literal_string \"ONLY_PAUSER\""
                        }
                      ],
                      "id": 1236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17131,
                        17132
                      ],
                      "referencedDeclaration": 17132,
                      "src": "1524:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1524:72:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1246,
                  "nodeType": "ExpressionStatement",
                  "src": "1524:72:6"
                },
                {
                  "id": 1247,
                  "nodeType": "PlaceholderStatement",
                  "src": "1606:1:6"
                }
              ]
            },
            "documentation": "@notice It requires that the caller is assigned the pauser role within the protocol settings.",
            "id": 1249,
            "name": "onlyPauser",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1511:2:6"
            },
            "src": "1492:122:6",
            "visibility": "internal"
          }
        ],
        "scope": 1251,
        "src": "1217:399:6"
      }
    ],
    "src": "0:1617:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-08-28T22:57:03.807Z",
  "devdoc": {
    "author": "develop@teller.finance",
    "methods": {}
  },
  "userdoc": {
    "methods": {},
    "notice": "This acts as a base contract for all the ATM contracts."
  }
}