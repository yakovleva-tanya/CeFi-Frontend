{
  "contractName": "LogicVersionsRegistry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "logicName",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "logic",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        }
      ],
      "name": "LogicVersionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "logicName",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lastLogic",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastVersion",
          "type": "uint256"
        }
      ],
      "name": "LogicVersionRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "logicName",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldLogic",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLogic",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVersion",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVersion",
          "type": "uint256"
        }
      ],
      "name": "LogicVersionUpdated",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "consts",
      "outputs": [
        {
          "internalType": "contract LogicVersionsConsts",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "logicVersions",
      "outputs": [
        {
          "internalType": "address",
          "name": "logic",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "contract SettingsInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "logicName",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "logic",
          "type": "address"
        }
      ],
      "name": "createLogicVersion",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "logicName",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "newLogic",
          "type": "address"
        }
      ],
      "name": "updateLogicAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "logicName",
          "type": "bytes32"
        }
      ],
      "name": "removeLogicVersion",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "logicName",
          "type": "bytes32"
        }
      ],
      "name": "getLogicVersion",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "logic",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "version",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct LogicVersionLib.LogicVersion",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "logicName",
          "type": "bytes32"
        }
      ],
      "name": "getLogicVersionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "logicName",
          "type": "bytes32"
        }
      ],
      "name": "hasLogicVersion",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "settingsAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"LogicVersionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lastLogic\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastVersion\",\"type\":\"uint256\"}],\"name\":\"LogicVersionRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLogic\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLogic\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVersion\",\"type\":\"uint256\"}],\"name\":\"LogicVersionUpdated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"consts\",\"outputs\":[{\"internalType\":\"contract LogicVersionsConsts\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"}],\"name\":\"createLogicVersion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"}],\"name\":\"getLogicVersion\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"struct LogicVersionLib.LogicVersion\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"}],\"name\":\"getLogicVersionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"}],\"name\":\"hasLogicVersion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"settingsAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"logicVersions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"}],\"name\":\"removeLogicVersion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"contract SettingsInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newLogic\",\"type\":\"address\"}],\"name\":\"updateLogicAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"methods\":{\"createLogicVersion(bytes32,address)\":{\"params\":{\"logic\":\"the logic address value for the given logic name.\",\"logicName\":\"logic name to create.\"}},\"getLogicVersion(bytes32)\":{\"params\":{\"logicName\":\"to get.\"},\"return\":\"the current logic version.\"},\"getLogicVersionAddress(bytes32)\":{\"params\":{\"logicName\":\"to get.\"},\"return\":\"the current logic address.\"},\"hasLogicVersion(bytes32)\":{\"params\":{\"logicName\":\"logic name to test.\"},\"return\":\"true if the logic version is already configured. Otherwise it returns false.\"},\"initialize(address)\":{\"params\":{\"settingsAddress\":\"the settings contract address.\"}},\"initialized()\":{\"return\":\"true if contract is initialized. Otherwise it returns false.\"},\"removeLogicVersion(bytes32)\":{\"params\":{\"logicName\":\"logic name to remove.\"}},\"updateLogicAddress(bytes32,address)\":{\"params\":{\"logicName\":\"logic name to update.\",\"newLogic\":\"the new logic address to set.\"}}}},\"userdoc\":{\"methods\":{\"createLogicVersion(bytes32,address)\":{\"notice\":\"It creates a new logic version given a logic name and address.\"},\"getLogicVersion(bytes32)\":{\"notice\":\"It gets the current logic version for a given logic name.\"},\"getLogicVersionAddress(bytes32)\":{\"notice\":\"It gets the current logic address for a given logic name.\"},\"hasLogicVersion(bytes32)\":{\"notice\":\"It tests whether a logic name is already configured.\"},\"initialize(address)\":{\"notice\":\"It initializes this logic versions registry contract instance.\"},\"initialized()\":{\"notice\":\"Gets if the contract is initialized.\"},\"removeLogicVersion(bytes32)\":{\"notice\":\"It removes a current logic version given a logic name.\"},\"settings()\":{\"notice\":\"The settings contract.\"},\"updateLogicAddress(bytes32,address)\":{\"notice\":\"It update a current logic address given a logic name.\"}},\"notice\":\"It manages all the logic contract versions, mapping each one to a logic name (or key).\"}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LogicVersionsRegistry.sol\":\"LogicVersionsRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol\":{\"keccak256\":\"0xea409b9c0704a8f308295740e8595eb5fdc670b298ae9b63f5bb538783619a35\",\"urls\":[\"bzz-raw://22490fcd6a157faa8f1bdf7f715435c2a2572277c46e67d39533b411026b580d\",\"dweb:/ipfs/QmW5nUYb9oLpZALaWabBA45MnfGB4MJspZEkvbuRJfSSg7\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LogicVersionsRegistry.sol\":{\"keccak256\":\"0x4c95122a7b3e9f63b135620976bdb22324f8367e1f77145b79167a577de5db9b\",\"urls\":[\"bzz-raw://31badcead8277e467580b4f7c002841a96c9c118dc52e5f4beef7f94c11b82ac\",\"dweb:/ipfs/QmPzgagMuQt114Xjr6xUe4EyHnJZPsyNpp5AnD7Xp39tY3\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TInitializable.sol\":{\"keccak256\":\"0xfd04f8b08548b7a4aacbf26eaf65f64628c38f9fc34c363317daa593c7c25917\",\"urls\":[\"bzz-raw://025bbb10f643ebec3bc77303bca1585c572c76f8261ce42ed816b3c2a7799d20\",\"dweb:/ipfs/QmYS3L6u6f7ucRxGoap3RSD1jeJERnZk3XQRden1fEDQMs\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0xb5b2225e4f6db57d59d5292f542acc0675e9f95b3e3094d9be4cf6ec079cb86e\",\"urls\":[\"bzz-raw://f0c822f79ebb3f775b4fea591a5555c3efacba6719d4adbab83571dd35f059e3\",\"dweb:/ipfs/QmYiHmtPJsJD67g7Pk7kM72hsHS7BVVJtciKjCoUioW4gS\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x91250ee3c1d73b5d1720f7b41f18072eb347d73e4d3de464537ece49e1fa1d93\",\"urls\":[\"bzz-raw://f11ce1d70152f6d19f9c23788b4458631df3fd748a52849b899183ce2dabc52b\",\"dweb:/ipfs/QmaNQybwKYW5BfT3h6z6P1SSUwYEyXQviisYjUr7cHLzQR\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0xd8a98393b51d4533d7515d82c4640ff5cb4c5d84ec154be20ae2d70244c6bd8e\",\"urls\":[\"bzz-raw://19a1d2b6aa47db3488c4ce2531a4a82d79cc66b089ecebb3d06bc9a6c2ca2c04\",\"dweb:/ipfs/QmY1rhfogBfWyu4Bs3dbwrXjYvkvLLnwgi5hLuRcMgtjDy\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/MarketsStateInterface.sol\":{\"keccak256\":\"0xf51bd2d361d9cf448f2c2a5bb37c2699b0d9605a8f1b6a8719f90d8f536f2a05\",\"urls\":[\"bzz-raw://415a4444e8f9aca25132f492b226b8d500081a4ba5be8e45b401a68e73e1895b\",\"dweb:/ipfs/QmUPGgnqUjidxeEpkgu4yYzhfuykgtNKehEwbps97nAAzZ\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/PairAggregatorInterface.sol\":{\"keccak256\":\"0x4331fd21591542fda69505ce457c03f9ef66f2b8fea50db669864f517c4f95a1\",\"urls\":[\"bzz-raw://3cd373c888a2b4f6d1a93f540e9a0f4982316f743c0891d310a5e712c0f8eb78\",\"dweb:/ipfs/QmYA6Z3HFYj8MZSJwKP7NjawaD5TehE6Lmtx2VbTfqEHfb\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0xb2b1050602a2c4b8fac7053462a7a71c4a8ac91ffa7622dc003b07867dd2d04a\",\"urls\":[\"bzz-raw://2d38d083992ace8e9b361e763c1ba8ec35dc6604a1829fb09df8750a1c517d78\",\"dweb:/ipfs/QmQjba8A9c4q3AmEJf7GMytSyFPdG5rniSvL7Kw8QrUEoT\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/IChainlinkPairAggregatorRegistry.sol\":{\"keccak256\":\"0xa6f747fa1fecfef304721bc5b95ff34f1057ffeebd096d72051c013191879388\",\"urls\":[\"bzz-raw://27a99f0483fd2950126fd56cca827bab0cb3635e4512380acd65f161960906eb\",\"dweb:/ipfs/QmUR6GkPEpzqo4G76eeTNDLgxi3M4P7G338Jr4uoCQqrx9\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0xc5453e6f1a43327a37db250dedb65561c4deb0f3eb3cad490a64fc56e0b6f7b7\",\"urls\":[\"bzz-raw://f6edcab27eebecb576c9a884a173a1a5fcf0c129c76b992ec77ca24518d92f91\",\"dweb:/ipfs/QmW3q6w39dg9RnxsQdfrFVudmiZh5asRnkWQVkrap9hnJf\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AssetSettingsLib.sol\":{\"keccak256\":\"0x9c67a3de3bb62fdfbd5c116016e0693300bb9d71fe055bb6aa12da305aba3bf4\",\"urls\":[\"bzz-raw://a3c9ffdd1496a6192abb62b72625e5778db231656f2c8fffd09a83d089996aa6\",\"dweb:/ipfs/QmevJ5ojFaqG363CrnJZ9x3YvGMWKfUaFoUVbCsaSzqPfe\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0xf4caad9e4d96afe2721124eaf7203bb4e3a97beb3664c63297c4e68523f5bd65\",\"urls\":[\"bzz-raw://dcd6f564423c2cf83f3a56120f43eb6fd9f6e852cbb615be657f89e5114debf4\",\"dweb:/ipfs/QmRZStVoa5KbYRCHpzC7h998NnRhbFHfUZ71TRTiLzMTcX\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0xe49711d0c8193559f76dc5f399344c8f5f5e6a8b99bf78c6bcfd9aa1c456c306\",\"urls\":[\"bzz-raw://c6432c082145470691dfde04bf5c4220ccc32a5dccf6520c3122e47e470e6c22\",\"dweb:/ipfs/Qmd97DA5SB3d8Cuwf5M6vLtfDLHYXrMj5d3cXkYPP7iPpU\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/MarketStateLib.sol\":{\"keccak256\":\"0x8212e9e0d7c8d79d53087c5fb4735374f50cf6644c27b13e5faba5344c9b2087\",\"urls\":[\"bzz-raw://68b3d876f4e6569b57abfe9e7e69675a362a9d45f92c51b3a3a089d1c226817b\",\"dweb:/ipfs/QmSirrURGaLUYVkSeedjsrzF1kFB7gsuoHBpmWb9ed8eZt\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0xa397bcb75a4e7d80fd1043b7dc3c3a69f8c12435d26d843e4be40e875b71e134\",\"urls\":[\"bzz-raw://aabd466bea9e95a2585d597ebf62025f7ab4f38d1d4fe1c9fa5be1d98d131789\",\"dweb:/ipfs/QmcRGMg8X5teSF3Ga8ECPH2HvenViySkdnzvpUWvMDWXJL\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0c6a7e0de89e1017166ef4f593b33c8d0bfc6bcf3cd3db0bb5c1610ce260b659\",\"urls\":[\"bzz-raw://926108ace9152ed12d86a74ccb98d8c0aa698bd48fd3b4bfedacf976a8dd59d3\",\"dweb:/ipfs/QmVYjChMWZJdpPoBNheHMfyoTVsAarfLJ6SxPHhEsd6kUB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0xbe70455cee756e9498c220e13c1550d163a4cbcb09e8afe2f0ee94f717c80315\",\"urls\":[\"bzz-raw://0ad4a0a6394e560e40da2fee213381db0184878c29078b2f570eaacf116bb855\",\"dweb:/ipfs/QmTF87YYagh3WrxNZyi2uxhzcxyGsdtJCLu9nwmXGGaoMz\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80638b51f58b116100715780638b51f58b146101365780639d1becc414610156578063b28f5abb14610169578063c4d66de81461017c578063d86d744e1461018f578063e06174e4146101a4576100a9565b8063158ef93e146100ae5780633e7b9e81146100cc57806369cce126146100e157806373f1fcf6146100f457806383f9dbcb14610114575b600080fd5b6100b66101ac565b6040516100c39190610cec565b60405180910390f35b6100df6100da36600461093b565b6101cb565b005b6100df6100ef36600461093b565b6102d2565b61010761010236600461091d565b6103e5565b6040516100c39190610c4f565b61012761012236600461091d565b6103f7565b6040516100c393929190610cc4565b61014961014436600461091d565b610426565b6040516100c39190610da6565b6100df61016436600461091d565b61043d565b6100b661017736600461091d565b61052a565b6100df61018a3660046108ff565b61053f565b6101976105c1565b6040516100c39190610cfa565b6101976105d0565b6000806040516101bb90610c39565b6040519081900390205492915050565b6101d36105d0565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b81526004016101fe9190610c5d565b60006040518083038186803b15801561021657600080fd5b505afa15801561022a573d6000803e3d6000fd5b505050506102366101ac565b61025b5760405162461bcd60e51b815260040161025290610d76565b60405180910390fd5b60008281526001602052604081208190819061027d908563ffffffff6105f216565b925092509250336001600160a01b0316857f5e6091b93209c5b52c03b04c4a8672b44a6bd0452d7b6a12eea3e53f14674603858786866040516102c39493929190610c6b565b60405180910390a35050505050565b6102da6105d0565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b81526004016103059190610c5d565b60006040518083038186803b15801561031d57600080fd5b505afa158015610331573d6000803e3d6000fd5b5050505061033d6101ac565b6103595760405162461bcd60e51b815260040161025290610d76565b816103765760405162461bcd60e51b815260040161025290610d56565b6000828152600160205260409020610394908263ffffffff61068016565b806001600160a01b0316336001600160a01b0316837fabe5ff4a786e7f01b7ae446b6f059c5668e63dea10d4dbddf0226ea4c18480e660006040516103d99190610d08565b60405180910390a45050565b60006103f0826106ef565b5192915050565b60016020819052600091825260409091208054918101546002909101546001600160a01b039092169160ff1683565b61042e6108bc565b610437826106ef565b92915050565b6104456105d0565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b81526004016104709190610c5d565b60006040518083038186803b15801561048857600080fd5b505afa15801561049c573d6000803e3d6000fd5b505050506104a86101ac565b6104c45760405162461bcd60e51b815260040161025290610d76565b600081815260016020526040812081906104dd9061073d565b91509150336001600160a01b0316837febfbe00cdcf3f31ed6d40c8e98e6f5b30ed22bd4732646724f656c8a8fe2c4f2848460405161051d929190610ca9565b60405180910390a3505050565b6000610535826106ef565b6040015192915050565b6105476101ac565b156105645760405162461bcd60e51b815260040161025290610d86565b61056c61077e565b6105758161079c565b604051610581906108dc565b604051809103906000f08015801561059d573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b039290921691909117905550565b6000546001600160a01b031681565b60008060006040516105e190610c44565b604051908190039020549250505090565b600080600061060085610806565b84546001600160a01b038581169116141561062d5760405162461bcd60e51b815260040161025290610d96565b84546001808701546001600160a01b03909216945090925061065690839063ffffffff61082f16565b85546001600160a01b0319166001600160a01b039590951694909417855550600190930182905592565b6106898261085b565b61069b816001600160a01b0316610880565b6106b75760405162461bcd60e51b815260040161025290610d46565b81546001600160a01b0319166001600160a01b039190911617815560006001808301919091556002909101805460ff19169091179055565b6106f76108bc565b50600090815260016020818152604092839020835160608101855281546001600160a01b0316815292810154918301919091526002015460ff1615159181019190915290565b60008061074983610806565b505080546001820180546001600160a01b03198316845560009091556002909201805460ff191690556001600160a01b031691565b600060405161078c90610c39565b6040519081900390206001905550565b60006107a66105d0565b6001600160a01b0316146107e7576107c6816001600160a01b0316610880565b6107e25760405162461bcd60e51b815260040161025290610d36565b610803565b60006040516107f590610c44565b604051908190039020829055505b50565b600281015460ff1615156001146108035760405162461bcd60e51b815260040161025290610d66565b6000828201838110156108545760405162461bcd60e51b815260040161025290610d16565b9392505050565b600281015460ff16156108035760405162461bcd60e51b815260040161025290610d26565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906108b457508115155b949350505050565b604080516060810182526000808252602082018190529181019190915290565b61037380610e1c83390190565b803561043781610dfe565b803561043781610e12565b60006020828403121561091157600080fd5b60006108b484846108e9565b60006020828403121561092f57600080fd5b60006108b484846108f4565b6000806040838503121561094e57600080fd5b600061095a85856108f4565b925050602061096b858286016108e9565b9150509250929050565b61097e81610de1565b82525050565b61097e81610dc2565b61097e81610dcd565b61097e81610de8565b61097e81610df3565b60006109b5601c83610dbd565b7f54496e697469616c697a61626c652e6973496e697469616c697a6564000000008152601c0192915050565b60006109ee601b83610db4565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000610a27601483610db4565b734c4f4749435f414c52454144595f45584953545360601b815260200192915050565b6000610a57601b83610db4565b7f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000815260200192915050565b6000610a90601683610db4565b751313d1d250d7d35554d517d09157d0d3d395149050d560521b815260200192915050565b6000610ac2601b83610db4565b7f4c4f4749435f4e414d455f4d5553545f42455f50524f56494445440000000000815260200192915050565b6000610afb601883610dbd565b7f426173655570677261646561626c652e73657474696e67730000000000000000815260180192915050565b6000610b34601083610db4565b6f4c4f4749435f4e4f545f45584953545360801b815260200192915050565b6000610b60601883610db4565b7f434f4e54524143545f4e4f545f494e495449414c495a45440000000000000000815260200192915050565b6000610b99601c83610db4565b7f434f4e54524143545f414c52454144595f494e495449414c495a454400000000815260200192915050565b6000610bd2601283610db4565b71139155d7d313d1d250d7d49154555254915160721b815260200192915050565b80516060830190610c048482610984565b506020820151610c176020850182610c30565b506040820151610c2a604085018261098d565b50505050565b61097e81610dd2565b6000610437826109a8565b600061043782610aee565b602081016104378284610984565b602081016104378284610975565b60808101610c798287610984565b610c866020830186610984565b610c936040830185610c30565b610ca06060830184610c30565b95945050505050565b60408101610cb78285610984565b6108546020830184610c30565b60608101610cd28286610984565b610cdf6020830185610c30565b6108b4604083018461098d565b60208101610437828461098d565b602081016104378284610996565b60208101610437828461099f565b60208082528101610437816109e1565b6020808252810161043781610a1a565b6020808252810161043781610a4a565b6020808252810161043781610a83565b6020808252810161043781610ab5565b6020808252810161043781610b27565b6020808252810161043781610b53565b6020808252810161043781610b8c565b6020808252810161043781610bc5565b606081016104378284610bf3565b90815260200190565b919050565b600061043782610dd5565b151590565b90565b6001600160a01b031690565b6000610437825b600061043782610dc2565b600061043782610dd2565b610e0781610dc2565b811461080357600080fd5b610e0781610dd256fe608060405234801561001057600080fd5b50610353806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063808002b4116100a2578063a6d1894811610071578063a6d1894814610182578063b67805071461018a578063c2c3329b14610192578063c4f8f96e1461019a578063ecac96a0146101a25761010b565b8063808002b4146101625780638b3a6a621461016a5780638b5f8a5a14610172578063a66cd6401461017a5761010b565b806343d51619116100de57806343d516191461014257806344017a261461014a57806352d009421461015257806368f6c8921461015a5761010b565b80631f690a471461011057806320657f6f1461012a57806324de570b146101325780632660dc7f1461013a575b600080fd5b6101186101aa565b60408051918252519081900360200190f35b6101186101c5565b6101186101d7565b6101186101e9565b610118610205565b610118610218565b61011861022c565b61011861023b565b610118610248565b61011861026c565b61011861027b565b61011861028f565b61011861029d565b6101186102ae565b6101186102c7565b6101186102df565b610118610303565b73546f6b656e436f6c6c61746572616c4c6f616e7360601b81565b6a41544d53657474696e677360a81b81565b6a13195b991a5b99d41bdbdb60aa1b81565b744c6f67696356657273696f6e73526567697374727960581b81565b6b4d61726b657473537461746560a01b81565b6c457363726f77466163746f727960981b81565b672a26292a37b5b2b760c11b81565b65457363726f7760d01b81565b7f436861696e6c696e6b5061697241676772656761746f7252656769737472790081565b6753657474696e677360c01b81565b6c41544d476f7665726e616e636560981b81565b664c656e6465727360c81b81565b6941544d466163746f727960b01b81565b714c6f616e5465726d73436f6e73656e73757360701b81565b70496e746572657374436f6e73656e73757360781b81565b7f436861696e6c696e6b5061697241676772656761746f7200000000000000000081565b734574686572436f6c6c61746572616c4c6f616e7360601b8156fea265627a7a72315820de6ca99cf648076c443c497a2b1a445c03f552753bd99b24b99a8115c654d9de64736f6c63430005110032a365627a7a72315820080e70af0f14cbf8e982fcf3bc711c8dad3a48d110cba6f253c746ee28d9b83c6c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "1485:4160:27:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1485:4160:27;;;;;;;",
  "deployedSourceMap": "1485:4160:27:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1485:4160:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1241:169:33;;;:::i;:::-;;;;;;;;;;;;;;;;2935:480:27;;;;;;;;;:::i;:::-;;2422:320;;;;;;;;;:::i;4342:140::-;;;;;;;;;:::i;:::-;;;;;;;;2057:69;;;;;;;;;:::i;:::-;;;;;;;;;;3987:183;;;;;;;;;:::i;:::-;;;;;;;;3555:260;;;;;;;;;:::i;4711:131::-;;;;;;;;;:::i;5005:187::-;;;;;;;;;:::i;1711:33::-;;;:::i;:::-;;;;;;;;839:263:11;;;:::i;1241:169:33:-;1285:10;1307:12;421:55;;;;;;;;;;;;;;;1383:11;;1360:44;-1:-1:-1;;1360:44:33:o;2935:480:27:-;690:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;690:28:11;;719:10;690:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;690:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;690:40:11;;;;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;;;;;;;;;3090:16:27;3183:24;;;:13;:24;;;;;3090:16;;;;3183:41;;3215:8;3183:41;:31;:41;:::i;:::-;3076:148;;;;;;3296:10;-1:-1:-1;;;;;3240:168:27;3273:9;3240:168;3320:8;3342;3364:10;3388;3240:168;;;;;;;;;;;;;;;;;;1029:1:33;;;2935:480:27;;:::o;2422:320::-;690:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;690:28:11;;719:10;690:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;690:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;690:40:11;;;;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;2568:15:27;2560:55;;;;-1:-1:-1;;;2560:55:27;;;;;;;;;2625:24;;;;:13;:24;;;;;:42;;2661:5;2625:42;:35;:42;:::i;:::-;2726:5;-1:-1:-1;;;;;2683:52:27;2714:10;-1:-1:-1;;;;;2683:52:27;2703:9;2683:52;2733:1;2683:52;;;;;;;;;;;;;;;2422:320;;:::o;4342:140::-;4416:7;4442:27;4459:9;4442:16;:27::i;:::-;:33;;4342:140;-1:-1:-1;;4342:140:27:o;2057:69::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2057:69:27;;;;;;;:::o;3987:183::-;4078:35;;:::i;:::-;4136:27;4153:9;4136:16;:27::i;:::-;4129:34;3987:183;-1:-1:-1;;3987:183:27:o;3555:260::-;690:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;690:28:11;;719:10;690:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;690:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;690:40:11;;;;977:13:33;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:33;;;;;;;;;3651:17:27;3693:24;;;:13;:24;;;;;3651:17;;3693:33;;:31;:33::i;:::-;3650:76;;;;3773:10;-1:-1:-1;;;;;3742:66:27;3762:9;3742:66;3785:9;3796:11;3742:66;;;;;;;;;;;;;;;;1029:1:33;;3555:260:27;:::o;4711:131::-;4778:4;4801:27;4818:9;4801:16;:27::i;:::-;:34;;;;4711:131;-1:-1:-1;;4711:131:27:o;5005:187::-;706:13:33;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:33;;;;;;;;;5088:13:27;:11;:13::i;:::-;5112:29;5125:15;5112:12;:29::i;:::-;5160:25;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;5151:6:27;:34;;-1:-1:-1;;;;;;5151:34:27;-1:-1:-1;;;;;5151:34:27;;;;;;;;;;-1:-1:-1;5005:187:27:o;1711:33::-;;;-1:-1:-1;;;;;1711:33:27;;:::o;839:263:11:-;880:17;909:23;943:12;370:37;;;;;;;;;;;;;;;1023:11;;-1:-1:-1;;;839:263:11;:::o;2261:477:107:-;2369:16;2399:18;2431;2474:19;2488:4;2474:13;:19::i;:::-;2511:10;;-1:-1:-1;;;;;2511:22:107;;;:10;;:22;;2503:53;;;;-1:-1:-1;;;2503:53:107;;;;;;;;;2577:10;;;2610:12;;;;-1:-1:-1;;;;;2577:10:107;;;;-1:-1:-1;2610:12:107;;-1:-1:-1;2645:19:107;;2610:12;;2645:19;:16;:19;:::i;:::-;2675:21;;-1:-1:-1;;;;;;2675:21:107;-1:-1:-1;;;;;2675:21:107;;;;;;;;;;-1:-1:-1;;2706:12:107;;;:25;;;2261:477;:::o;881:255::-;962:22;979:4;962:16;:22::i;:::-;1002:18;:5;-1:-1:-1;;;;;1002:16:107;;:18::i;:::-;994:53;;;;-1:-1:-1;;;994:53:107;;;;;;;;;1057:18;;-1:-1:-1;;;;;;1057:18:107;-1:-1:-1;;;;;1057:18:107;;;;;;;-1:-1:-1;;1085:12:107;;;:16;;;;1111:11;;;;:18;;-1:-1:-1;;1111:18:107;;;;;;881:255::o;5432:181:27:-;5524:35;;:::i;:::-;-1:-1:-1;5582:24:27;;;;:13;:24;;;;;;;;;5575:31;;;;;;;;;-1:-1:-1;;;;;5575:31:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5432:181::o;2870:315:107:-;2947:17;2966:19;3001;3015:4;3001:13;:19::i;:::-;-1:-1:-1;;3042:10:107;;;3076:12;;;;-1:-1:-1;;;;;;3098:25:107;;;;3042:10;3133:16;;;3159:11;;;;:19;;-1:-1:-1;;3159:19:107;;;-1:-1:-1;;;;;3042:10:107;;2870:315::o;1509:171:33:-;1551:12;421:55;;;;;;;;;;;;;;;1608:4;1645:19;;-1:-1:-1;1631:43:33:o;1649:392:11:-;1831:3;1808:10;:8;:10::i;:::-;-1:-1:-1;;;;;1800:35:11;;1796:128;;1864:28;:15;-1:-1:-1;;;;;1864:26:11;;:28::i;:::-;1856:68;;;;-1:-1:-1;;;1856:68:11;;;;;;;;;1849:75;;1796:128;1935:12;370:37;;;;;;;;;;;;;;;1996:29;;;-1:-1:-1;1982:53:11;;:::o;1714:129:107:-;1796:11;;;;;;:19;;:11;:19;1788:48;;;;-1:-1:-1;;;1788:48:107;;;;;;;;834:176:125;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:125;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:125:o;1353:137:107:-;1438:11;;;;;;:20;1430:53;;;;-1:-1:-1;;;1430:53:107;;;;;;;;686:610:132;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:132;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:132:o;1485:4160:27:-;;;;;;;;;-1:-1:-1;1485:4160:27;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:130;209:20;;234:33;209:20;234:33;;279:241;;383:2;371:9;362:7;358:23;354:32;351:2;;;399:1;396;389:12;351:2;434:1;451:53;496:7;476:9;451:53;;527:241;;631:2;619:9;610:7;606:23;602:32;599:2;;;647:1;644;637:12;599:2;682:1;699:53;744:7;724:9;699:53;;775:366;;;896:2;884:9;875:7;871:23;867:32;864:2;;;912:1;909;902:12;864:2;947:1;964:53;1009:7;989:9;964:53;;;954:63;;926:97;1054:2;1072:53;1117:7;1108:6;1097:9;1093:22;1072:53;;;1062:63;;1033:98;858:283;;;;;;1148:142;1239:45;1278:5;1239:45;;;1234:3;1227:58;1221:69;;;1297:103;1370:24;1388:5;1370:24;;1527:94;1594:21;1609:5;1594:21;;1739:184;1851:66;1911:5;1851:66;;2117:142;2208:45;2247:5;2208:45;;2267:364;;2445:85;2527:2;2522:3;2445:85;;;2563:30;2543:51;;2622:2;2613:12;;2431:200;-1:-1;;2431:200;2640:327;;2800:67;2864:2;2859:3;2800:67;;;2900:29;2880:50;;2958:2;2949:12;;2786:181;-1:-1;;2786:181;2976:320;;3136:67;3200:2;3195:3;3136:67;;;-1:-1;;;3216:43;;3287:2;3278:12;;3122:174;-1:-1;;3122:174;3305:327;;3465:67;3529:2;3524:3;3465:67;;;3565:29;3545:50;;3623:2;3614:12;;3451:181;-1:-1;;3451:181;3641:322;;3801:67;3865:2;3860:3;3801:67;;;-1:-1;;;3881:45;;3954:2;3945:12;;3787:176;-1:-1;;3787:176;3972:327;;4132:67;4196:2;4191:3;4132:67;;;4232:29;4212:50;;4290:2;4281:12;;4118:181;-1:-1;;4118:181;4308:360;;4486:85;4568:2;4563:3;4486:85;;;4604:26;4584:47;;4659:2;4650:12;;4472:196;-1:-1;;4472:196;4677:316;;4837:67;4901:2;4896:3;4837:67;;;-1:-1;;;4917:39;;4984:2;4975:12;;4823:170;-1:-1;;4823:170;5002:324;;5162:67;5226:2;5221:3;5162:67;;;5262:26;5242:47;;5317:2;5308:12;;5148:178;-1:-1;;5148:178;5335:328;;5495:67;5559:2;5554:3;5495:67;;;5595:30;5575:51;;5654:2;5645:12;;5481:182;-1:-1;;5481:182;5672:318;;5832:67;5896:2;5891:3;5832:67;;;-1:-1;;;5912:41;;5981:2;5972:12;;5818:172;-1:-1;;5818:172;6079:642;6301:23;;6234:4;6225:14;;;6330:63;6229:3;6301:23;6330:63;;;6254:145;6475:4;6468:5;6464:16;6458:23;6487:63;6544:4;6539:3;6535:14;6521:12;6487:63;;;6409:147;6631:4;6624:5;6620:16;6614:23;6643:57;6694:4;6689:3;6685:14;6671:12;6643:57;;;6566:140;6207:514;;;;6728:103;6801:24;6819:5;6801:24;;6958:372;;7157:148;7301:3;7157:148;;7337:372;;7536:148;7680:3;7536:148;;7716:213;7834:2;7819:18;;7848:71;7823:9;7892:6;7848:71;;7936:229;8062:2;8047:18;;8076:79;8051:9;8128:6;8076:79;;8172:547;8374:3;8359:19;;8389:71;8363:9;8433:6;8389:71;;;8471:72;8539:2;8528:9;8524:18;8515:6;8471:72;;;8554;8622:2;8611:9;8607:18;8598:6;8554:72;;;8637;8705:2;8694:9;8690:18;8681:6;8637:72;;;8345:374;;;;;;;;8726:324;8872:2;8857:18;;8886:71;8861:9;8930:6;8886:71;;;8968:72;9036:2;9025:9;9021:18;9012:6;8968:72;;9057:423;9225:2;9210:18;;9239:71;9214:9;9283:6;9239:71;;;9321:72;9389:2;9378:9;9374:18;9365:6;9321:72;;;9404:66;9466:2;9455:9;9451:18;9442:6;9404:66;;9487:201;9599:2;9584:18;;9613:65;9588:9;9651:6;9613:65;;9695:271;9842:2;9827:18;;9856:100;9831:9;9929:6;9856:100;;10247:229;10373:2;10358:18;;10387:79;10362:9;10439:6;10387:79;;10483:407;10674:2;10688:47;;;10659:18;;10749:131;10659:18;10749:131;;10897:407;11088:2;11102:47;;;11073:18;;11163:131;11073:18;11163:131;;11311:407;11502:2;11516:47;;;11487:18;;11577:131;11487:18;11577:131;;11725:407;11916:2;11930:47;;;11901:18;;11991:131;11901:18;11991:131;;12139:407;12330:2;12344:47;;;12315:18;;12405:131;12315:18;12405:131;;12553:407;12744:2;12758:47;;;12729:18;;12819:131;12729:18;12819:131;;12967:407;13158:2;13172:47;;;13143:18;;13233:131;13143:18;13233:131;;13381:407;13572:2;13586:47;;;13557:18;;13647:131;13557:18;13647:131;;13795:407;13986:2;14000:47;;;13971:18;;14061:131;13971:18;14061:131;;14209:337;14389:2;14374:18;;14403:133;14378:9;14509:6;14403:133;;14554:163;14657:19;;;14706:4;14697:14;;14650:67;14726:145;14862:3;14840:31;-1:-1;14840:31;14879:91;;14941:24;14959:5;14941:24;;14977:85;15043:13;15036:21;;15019:43;15069:72;15131:5;15114:27;15148:121;-1:-1;;;;;15210:54;;15193:76;15355:129;;15442:37;15473:5;15491:179;;15599:66;15659:5;15599:66;;16145:116;;16232:24;16250:5;16232:24;;16511:117;16580:24;16598:5;16580:24;;;16573:5;16570:35;16560:2;;16619:1;16616;16609:12;16635:117;16704:24;16722:5;16704:24;",
  "source": "pragma solidity 0.5.17;\npragma experimental ABIEncoderV2;\n\n// Contracts\nimport \"./BaseUpgradeable.sol\";\nimport \"./TInitializable.sol\";\n\n// Commons\nimport \"../util/LogicVersionLib.sol\";\nimport \"../util/LogicVersionsConsts.sol\";\n\n// Interfaces\nimport \"../interfaces/LogicVersionsRegistryInterface.sol\";\n\n/*****************************************************************************************************/\n/**                                             WARNING                                             **/\n/**                                  THIS CONTRACT IS UPGRADEABLE!                                  **/\n/**  ---------------------------------------------------------------------------------------------  **/\n/**  Do NOT change the order of or PREPEND any storage variables to this or new versions of this    **/\n/**  contract as this will cause the the storage slots to be overwritten on the proxy contract!!    **/\n/**                                                                                                 **/\n/**  Visit https://docs.openzeppelin.com/upgrades/2.6/proxies#upgrading-via-the-proxy-pattern for   **/\n/**  more information.                                                                              **/\n/*****************************************************************************************************/\n/**\n    @notice It manages all the logic contract versions, mapping each one to a logic name (or key).\n\n    @author develop@teller.finance\n */\ncontract LogicVersionsRegistry is\n    LogicVersionsRegistryInterface,\n    TInitializable,\n    BaseUpgradeable\n{\n    using LogicVersionLib for LogicVersionLib.LogicVersion;\n\n    /** Constants */\n\n    /* State Variables */\n\n    LogicVersionsConsts public consts;\n\n    /**\n        @notice It represents a mapping to identify a logic name (key) and the current logic address and version.\n\n        i.e.:\n            bytes32(\"EtherCollateralLoans\") => { logic: \"0x123...789\", version: 1 }.\n            bytes32(\"LendingPool\") => { logic: \"0x456...987\", version: 3 }.\n     */\n    mapping(bytes32 => LogicVersionLib.LogicVersion) public logicVersions;\n\n    /** Modifiers */\n\n    /* Constructor */\n\n    /** External Functions */\n\n    /**\n        @notice It creates a new logic version given a logic name and address.\n        @param logicName logic name to create.\n        @param logic the logic address value for the given logic name.\n     */\n    function createLogicVersion(bytes32 logicName, address logic)\n        external\n        onlyPauser()\n        isInitialized()\n    {\n        require(logicName != \"\", \"LOGIC_NAME_MUST_BE_PROVIDED\");\n        logicVersions[logicName].initialize(logic);\n\n        emit LogicVersionCreated(logicName, msg.sender, logic, 0);\n    }\n\n    /**\n        @notice It update a current logic address given a logic name.\n        @param logicName logic name to update.\n        @param newLogic the new logic address to set.\n     */\n    function updateLogicAddress(bytes32 logicName, address newLogic)\n        external\n        onlyPauser()\n        isInitialized()\n    {\n        (\n            address oldLogic,\n            uint256 oldVersion,\n            uint256 newVersion\n        ) = logicVersions[logicName].update(newLogic);\n\n        emit LogicVersionUpdated(\n            logicName,\n            msg.sender,\n            oldLogic,\n            newLogic,\n            oldVersion,\n            newVersion\n        );\n    }\n\n    /**\n        @notice It removes a current logic version given a logic name.\n        @param logicName logic name to remove.\n     */\n    function removeLogicVersion(bytes32 logicName) external onlyPauser() isInitialized() {\n        (address lastLogic, uint256 lastVersion) = logicVersions[logicName].remove();\n\n        emit LogicVersionRemoved(logicName, msg.sender, lastLogic, lastVersion);\n    }\n\n    /**\n        @notice It gets the current logic version for a given logic name.\n        @param logicName to get.\n        @return the current logic version.\n     */\n    function getLogicVersion(bytes32 logicName)\n        external\n        view\n        returns (LogicVersionLib.LogicVersion memory)\n    {\n        return _getLogicVersion(logicName);\n    }\n\n    /**\n        @notice It gets the current logic address for a given logic name.\n        @param logicName to get.\n        @return the current logic address.\n     */\n    function getLogicVersionAddress(bytes32 logicName) external view returns (address) {\n        return _getLogicVersion(logicName).logic;\n    }\n\n    /**\n        @notice It tests whether a logic name is already configured.\n        @param logicName logic name to test.\n        @return true if the logic version is already configured. Otherwise it returns false.\n     */\n    function hasLogicVersion(bytes32 logicName) external view returns (bool) {\n        return _getLogicVersion(logicName).exists;\n    }\n\n    /**\n        @notice It initializes this logic versions registry contract instance.\n        @param settingsAddress the settings contract address.\n     */\n    function initialize(address settingsAddress) external isNotInitialized() {\n        _initialize();\n\n        _setSettings(settingsAddress);\n        consts = new LogicVersionsConsts();\n    }\n\n    /** Internal functions */\n\n    /**\n        @notice It gets the logic version for a given logic name.\n        @param logicName the logic name to look for.\n        @return the current logic version for the given logic name.\n     */\n    function _getLogicVersion(bytes32 logicName)\n        internal\n        view\n        returns (LogicVersionLib.LogicVersion memory)\n    {\n        return logicVersions[logicName];\n    }\n\n    /** Private functions */\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LogicVersionsRegistry.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LogicVersionsRegistry.sol",
    "exportedSymbols": {
      "LogicVersionsRegistry": [
        7507
      ]
    },
    "id": 7508,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7317,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:27"
      },
      {
        "id": 7318,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:27"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol",
        "file": "./BaseUpgradeable.sol",
        "id": 7319,
        "nodeType": "ImportDirective",
        "scope": 7508,
        "sourceUnit": 2594,
        "src": "72:31:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TInitializable.sol",
        "file": "./TInitializable.sol",
        "id": 7320,
        "nodeType": "ImportDirective",
        "scope": 7508,
        "sourceUnit": 9278,
        "src": "104:30:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionLib.sol",
        "file": "../util/LogicVersionLib.sol",
        "id": 7321,
        "nodeType": "ImportDirective",
        "scope": 7508,
        "sourceUnit": 17202,
        "src": "147:37:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol",
        "file": "../util/LogicVersionsConsts.sol",
        "id": 7322,
        "nodeType": "ImportDirective",
        "scope": 7508,
        "sourceUnit": 17256,
        "src": "185:41:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol",
        "file": "../interfaces/LogicVersionsRegistryInterface.sol",
        "id": 7323,
        "nodeType": "ImportDirective",
        "scope": 7508,
        "sourceUnit": 10941,
        "src": "242:58:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7324,
              "name": "LogicVersionsRegistryInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10940,
              "src": "1523:30:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LogicVersionsRegistryInterface_$10940",
                "typeString": "contract LogicVersionsRegistryInterface"
              }
            },
            "id": 7325,
            "nodeType": "InheritanceSpecifier",
            "src": "1523:30:27"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7326,
              "name": "TInitializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9277,
              "src": "1559:14:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TInitializable_$9277",
                "typeString": "contract TInitializable"
              }
            },
            "id": 7327,
            "nodeType": "InheritanceSpecifier",
            "src": "1559:14:27"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7328,
              "name": "BaseUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2593,
              "src": "1579:15:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseUpgradeable_$2593",
                "typeString": "contract BaseUpgradeable"
              }
            },
            "id": 7329,
            "nodeType": "InheritanceSpecifier",
            "src": "1579:15:27"
          }
        ],
        "contractDependencies": [
          2593,
          9277,
          10940,
          17255
        ],
        "contractKind": "contract",
        "documentation": "@notice It manages all the logic contract versions, mapping each one to a logic name (or key).\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 7507,
        "linearizedBaseContracts": [
          7507,
          2593,
          9277,
          10940
        ],
        "name": "LogicVersionsRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7332,
            "libraryName": {
              "contractScope": null,
              "id": 7330,
              "name": "LogicVersionLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17201,
              "src": "1607:15:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LogicVersionLib_$17201",
                "typeString": "library LogicVersionLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1601:55:27",
            "typeName": {
              "contractScope": null,
              "id": 7331,
              "name": "LogicVersionLib.LogicVersion",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17035,
              "src": "1627:28:27",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_LogicVersion_$17035_storage_ptr",
                "typeString": "struct LogicVersionLib.LogicVersion"
              }
            }
          },
          {
            "constant": false,
            "id": 7334,
            "name": "consts",
            "nodeType": "VariableDeclaration",
            "scope": 7507,
            "src": "1711:33:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LogicVersionsConsts_$17255",
              "typeString": "contract LogicVersionsConsts"
            },
            "typeName": {
              "contractScope": null,
              "id": 7333,
              "name": "LogicVersionsConsts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17255,
              "src": "1711:19:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LogicVersionsConsts_$17255",
                "typeString": "contract LogicVersionsConsts"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7338,
            "name": "logicVersions",
            "nodeType": "VariableDeclaration",
            "scope": 7507,
            "src": "2057:69:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$17035_storage_$",
              "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion)"
            },
            "typeName": {
              "id": 7337,
              "keyType": {
                "id": 7335,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2065:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2057:48:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$17035_storage_$",
                "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7336,
                "name": "LogicVersionLib.LogicVersion",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 17035,
                "src": "2076:28:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_LogicVersion_$17035_storage_ptr",
                  "typeString": "struct LogicVersionLib.LogicVersion"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7371,
              "nodeType": "Block",
              "src": "2550:192:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 7352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7350,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7340,
                          "src": "2568:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 7351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2581:2:27",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "src": "2568:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c4f4749435f4e414d455f4d5553545f42455f50524f5649444544",
                        "id": 7353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2585:29:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6761f4c1b6a5d5dba3972a0852617ffbf0f234b2e4e40710be4ab4192706890f",
                          "typeString": "literal_string \"LOGIC_NAME_MUST_BE_PROVIDED\""
                        },
                        "value": "LOGIC_NAME_MUST_BE_PROVIDED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6761f4c1b6a5d5dba3972a0852617ffbf0f234b2e4e40710be4ab4192706890f",
                          "typeString": "literal_string \"LOGIC_NAME_MUST_BE_PROVIDED\""
                        }
                      ],
                      "id": 7349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21470,
                        21471
                      ],
                      "referencedDeclaration": 21471,
                      "src": "2560:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2560:55:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7355,
                  "nodeType": "ExpressionStatement",
                  "src": "2560:55:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7360,
                        "name": "logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7342,
                        "src": "2661:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7356,
                          "name": "logicVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7338,
                          "src": "2625:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$17035_storage_$",
                            "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion storage ref)"
                          }
                        },
                        "id": 7358,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7357,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7340,
                          "src": "2639:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2625:24:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LogicVersion_$17035_storage",
                          "typeString": "struct LogicVersionLib.LogicVersion storage ref"
                        }
                      },
                      "id": 7359,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17072,
                      "src": "2625:35:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LogicVersion_$17035_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_LogicVersion_$17035_storage_ptr_$",
                        "typeString": "function (struct LogicVersionLib.LogicVersion storage pointer,address)"
                      }
                    },
                    "id": 7361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2625:42:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7362,
                  "nodeType": "ExpressionStatement",
                  "src": "2625:42:27"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7364,
                        "name": "logicName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7340,
                        "src": "2703:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7365,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21467,
                          "src": "2714:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2714:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7367,
                        "name": "logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7342,
                        "src": "2726:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 7368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2733:1:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 7363,
                      "name": "LogicVersionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10865,
                      "src": "2683:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,address,uint256)"
                      }
                    },
                    "id": 7369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2683:52:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7370,
                  "nodeType": "EmitStatement",
                  "src": "2678:57:27"
                }
              ]
            },
            "documentation": "@notice It creates a new logic version given a logic name and address.\n@param logicName logic name to create.\n@param logic the logic address value for the given logic name.",
            "id": 7372,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7345,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7344,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2514,
                  "src": "2509:10:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2509:12:27"
              },
              {
                "arguments": [],
                "id": 7347,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7346,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "2530:13:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2530:15:27"
              }
            ],
            "name": "createLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7340,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7372,
                  "src": "2450:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7339,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2450:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7342,
                  "name": "logic",
                  "nodeType": "VariableDeclaration",
                  "scope": 7372,
                  "src": "2469:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2469:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2449:34:27"
            },
            "returnParameters": {
              "id": 7348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2550:0:27"
            },
            "scope": 7507,
            "src": "2422:320:27",
            "stateMutability": "nonpayable",
            "superFunction": 10901,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7406,
              "nodeType": "Block",
              "src": "3066:349:27",
              "statements": [
                {
                  "assignments": [
                    7384,
                    7386,
                    7388
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7384,
                      "name": "oldLogic",
                      "nodeType": "VariableDeclaration",
                      "scope": 7406,
                      "src": "3090:16:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7383,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3090:7:27",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7386,
                      "name": "oldVersion",
                      "nodeType": "VariableDeclaration",
                      "scope": 7406,
                      "src": "3120:18:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7385,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3120:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7388,
                      "name": "newVersion",
                      "nodeType": "VariableDeclaration",
                      "scope": 7406,
                      "src": "3152:18:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7387,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3152:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7395,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7393,
                        "name": "newLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7376,
                        "src": "3215:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7389,
                          "name": "logicVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7338,
                          "src": "3183:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$17035_storage_$",
                            "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion storage ref)"
                          }
                        },
                        "id": 7391,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7390,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7374,
                          "src": "3197:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3183:24:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LogicVersion_$17035_storage",
                          "typeString": "struct LogicVersionLib.LogicVersion storage ref"
                        }
                      },
                      "id": 7392,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "update",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17156,
                      "src": "3183:31:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LogicVersion_$17035_storage_ptr_$_t_address_$returns$_t_address_$_t_uint256_$_t_uint256_$bound_to$_t_struct$_LogicVersion_$17035_storage_ptr_$",
                        "typeString": "function (struct LogicVersionLib.LogicVersion storage pointer,address) returns (address,uint256,uint256)"
                      }
                    },
                    "id": 7394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3183:41:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(address,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3076:148:27"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7397,
                        "name": "logicName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7374,
                        "src": "3273:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7398,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21467,
                          "src": "3296:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3296:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7400,
                        "name": "oldLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7384,
                        "src": "3320:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7401,
                        "name": "newLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7376,
                        "src": "3342:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7402,
                        "name": "oldVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7386,
                        "src": "3364:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7403,
                        "name": "newVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7388,
                        "src": "3388:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7396,
                      "name": "LogicVersionUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10889,
                      "src": "3240:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 7404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3240:168:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7405,
                  "nodeType": "EmitStatement",
                  "src": "3235:173:27"
                }
              ]
            },
            "documentation": "@notice It update a current logic address given a logic name.\n@param logicName logic name to update.\n@param newLogic the new logic address to set.",
            "id": 7407,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7379,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7378,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2514,
                  "src": "3025:10:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3025:12:27"
              },
              {
                "arguments": [],
                "id": 7381,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7380,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "3046:13:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3046:15:27"
              }
            ],
            "name": "updateLogicAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7374,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7407,
                  "src": "2963:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7373,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2963:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7376,
                  "name": "newLogic",
                  "nodeType": "VariableDeclaration",
                  "scope": 7407,
                  "src": "2982:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2982:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2962:37:27"
            },
            "returnParameters": {
              "id": 7382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3066:0:27"
            },
            "scope": 7507,
            "src": "2935:480:27",
            "stateMutability": "nonpayable",
            "superFunction": 10908,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7434,
              "nodeType": "Block",
              "src": "3640:175:27",
              "statements": [
                {
                  "assignments": [
                    7417,
                    7419
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7417,
                      "name": "lastLogic",
                      "nodeType": "VariableDeclaration",
                      "scope": 7434,
                      "src": "3651:17:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7416,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3651:7:27",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7419,
                      "name": "lastVersion",
                      "nodeType": "VariableDeclaration",
                      "scope": 7434,
                      "src": "3670:19:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7418,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3670:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7425,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7420,
                          "name": "logicVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7338,
                          "src": "3693:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$17035_storage_$",
                            "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion storage ref)"
                          }
                        },
                        "id": 7422,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7421,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7409,
                          "src": "3707:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3693:24:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LogicVersion_$17035_storage",
                          "typeString": "struct LogicVersionLib.LogicVersion storage ref"
                        }
                      },
                      "id": 7423,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17200,
                      "src": "3693:31:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LogicVersion_$17035_storage_ptr_$returns$_t_address_$_t_uint256_$bound_to$_t_struct$_LogicVersion_$17035_storage_ptr_$",
                        "typeString": "function (struct LogicVersionLib.LogicVersion storage pointer) returns (address,uint256)"
                      }
                    },
                    "id": 7424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3693:33:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3650:76:27"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7427,
                        "name": "logicName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7409,
                        "src": "3762:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7428,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21467,
                          "src": "3773:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3773:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7430,
                        "name": "lastLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7417,
                        "src": "3785:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7431,
                        "name": "lastVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7419,
                        "src": "3796:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7426,
                      "name": "LogicVersionRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10875,
                      "src": "3742:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,address,uint256)"
                      }
                    },
                    "id": 7432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:66:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7433,
                  "nodeType": "EmitStatement",
                  "src": "3737:71:27"
                }
              ]
            },
            "documentation": "@notice It removes a current logic version given a logic name.\n@param logicName logic name to remove.",
            "id": 7435,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7412,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7411,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2514,
                  "src": "3611:10:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3611:12:27"
              },
              {
                "arguments": [],
                "id": 7414,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7413,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "3624:13:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3624:15:27"
              }
            ],
            "name": "removeLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7409,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7435,
                  "src": "3583:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7408,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3583:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3582:19:27"
            },
            "returnParameters": {
              "id": 7415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3640:0:27"
            },
            "scope": 7507,
            "src": "3555:260:27",
            "stateMutability": "nonpayable",
            "superFunction": 10913,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7446,
              "nodeType": "Block",
              "src": "4119:51:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7443,
                        "name": "logicName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7437,
                        "src": "4153:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7442,
                      "name": "_getLogicVersion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7506,
                      "src": "4136:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_LogicVersion_$17035_memory_ptr_$",
                        "typeString": "function (bytes32) view returns (struct LogicVersionLib.LogicVersion memory)"
                      }
                    },
                    "id": 7444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4136:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LogicVersion_$17035_memory_ptr",
                      "typeString": "struct LogicVersionLib.LogicVersion memory"
                    }
                  },
                  "functionReturnParameters": 7441,
                  "id": 7445,
                  "nodeType": "Return",
                  "src": "4129:34:27"
                }
              ]
            },
            "documentation": "@notice It gets the current logic version for a given logic name.\n@param logicName to get.\n@return the current logic version.",
            "id": 7447,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7437,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7447,
                  "src": "4012:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7436,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4012:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4011:19:27"
            },
            "returnParameters": {
              "id": 7441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7440,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7447,
                  "src": "4078:35:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LogicVersion_$17035_memory_ptr",
                    "typeString": "struct LogicVersionLib.LogicVersion"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7439,
                    "name": "LogicVersionLib.LogicVersion",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17035,
                    "src": "4078:28:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LogicVersion_$17035_storage_ptr",
                      "typeString": "struct LogicVersionLib.LogicVersion"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4077:37:27"
            },
            "scope": 7507,
            "src": "3987:183:27",
            "stateMutability": "view",
            "superFunction": 10920,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7459,
              "nodeType": "Block",
              "src": "4425:57:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7455,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7449,
                          "src": "4459:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 7454,
                        "name": "_getLogicVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7506,
                        "src": "4442:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_LogicVersion_$17035_memory_ptr_$",
                          "typeString": "function (bytes32) view returns (struct LogicVersionLib.LogicVersion memory)"
                        }
                      },
                      "id": 7456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4442:27:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LogicVersion_$17035_memory_ptr",
                        "typeString": "struct LogicVersionLib.LogicVersion memory"
                      }
                    },
                    "id": 7457,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "logic",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17030,
                    "src": "4442:33:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7453,
                  "id": 7458,
                  "nodeType": "Return",
                  "src": "4435:40:27"
                }
              ]
            },
            "documentation": "@notice It gets the current logic address for a given logic name.\n@param logicName to get.\n@return the current logic address.",
            "id": 7460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLogicVersionAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7449,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7460,
                  "src": "4374:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7448,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4374:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4373:19:27"
            },
            "returnParameters": {
              "id": 7453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7452,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7460,
                  "src": "4416:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4416:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4415:9:27"
            },
            "scope": 7507,
            "src": "4342:140:27",
            "stateMutability": "view",
            "superFunction": 10927,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7472,
              "nodeType": "Block",
              "src": "4784:58:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7468,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7462,
                          "src": "4818:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 7467,
                        "name": "_getLogicVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7506,
                        "src": "4801:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_LogicVersion_$17035_memory_ptr_$",
                          "typeString": "function (bytes32) view returns (struct LogicVersionLib.LogicVersion memory)"
                        }
                      },
                      "id": 7469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4801:27:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LogicVersion_$17035_memory_ptr",
                        "typeString": "struct LogicVersionLib.LogicVersion memory"
                      }
                    },
                    "id": 7470,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "exists",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17034,
                    "src": "4801:34:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7466,
                  "id": 7471,
                  "nodeType": "Return",
                  "src": "4794:41:27"
                }
              ]
            },
            "documentation": "@notice It tests whether a logic name is already configured.\n@param logicName logic name to test.\n@return true if the logic version is already configured. Otherwise it returns false.",
            "id": 7473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7462,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7473,
                  "src": "4736:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7461,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4736:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4735:19:27"
            },
            "returnParameters": {
              "id": 7466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7465,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7473,
                  "src": "4778:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7464,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4778:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4777:6:27"
            },
            "scope": 7507,
            "src": "4711:131:27",
            "stateMutability": "view",
            "superFunction": 10934,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7493,
              "nodeType": "Block",
              "src": "5078:114:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7480,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9276,
                      "src": "5088:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 7481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5088:13:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7482,
                  "nodeType": "ExpressionStatement",
                  "src": "5088:13:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7484,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7475,
                        "src": "5125:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7483,
                      "name": "_setSettings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2570,
                      "src": "5112:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5112:29:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7486,
                  "nodeType": "ExpressionStatement",
                  "src": "5112:29:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7487,
                      "name": "consts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7334,
                      "src": "5151:6:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LogicVersionsConsts_$17255",
                        "typeString": "contract LogicVersionsConsts"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5160:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LogicVersionsConsts_$17255_$",
                          "typeString": "function () returns (contract LogicVersionsConsts)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 7488,
                          "name": "LogicVersionsConsts",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 17255,
                          "src": "5164:19:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LogicVersionsConsts_$17255",
                            "typeString": "contract LogicVersionsConsts"
                          }
                        }
                      },
                      "id": 7490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5160:25:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LogicVersionsConsts_$17255",
                        "typeString": "contract LogicVersionsConsts"
                      }
                    },
                    "src": "5151:34:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LogicVersionsConsts_$17255",
                      "typeString": "contract LogicVersionsConsts"
                    }
                  },
                  "id": 7492,
                  "nodeType": "ExpressionStatement",
                  "src": "5151:34:27"
                }
              ]
            },
            "documentation": "@notice It initializes this logic versions registry contract instance.\n@param settingsAddress the settings contract address.",
            "id": 7494,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7478,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7477,
                  "name": "isNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9242,
                  "src": "5059:16:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5059:18:27"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7475,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7494,
                  "src": "5025:23:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5025:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5024:25:27"
            },
            "returnParameters": {
              "id": 7479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5078:0:27"
            },
            "scope": 7507,
            "src": "5005:187:27",
            "stateMutability": "nonpayable",
            "superFunction": 10939,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7505,
              "nodeType": "Block",
              "src": "5565:48:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 7501,
                      "name": "logicVersions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7338,
                      "src": "5582:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$17035_storage_$",
                        "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion storage ref)"
                      }
                    },
                    "id": 7503,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 7502,
                      "name": "logicName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7496,
                      "src": "5596:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5582:24:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LogicVersion_$17035_storage",
                      "typeString": "struct LogicVersionLib.LogicVersion storage ref"
                    }
                  },
                  "functionReturnParameters": 7500,
                  "id": 7504,
                  "nodeType": "Return",
                  "src": "5575:31:27"
                }
              ]
            },
            "documentation": "@notice It gets the logic version for a given logic name.\n@param logicName the logic name to look for.\n@return the current logic version for the given logic name.",
            "id": 7506,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7496,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7506,
                  "src": "5458:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7495,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5458:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5457:19:27"
            },
            "returnParameters": {
              "id": 7500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7499,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7506,
                  "src": "5524:35:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LogicVersion_$17035_memory_ptr",
                    "typeString": "struct LogicVersionLib.LogicVersion"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7498,
                    "name": "LogicVersionLib.LogicVersion",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17035,
                    "src": "5524:28:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LogicVersion_$17035_storage_ptr",
                      "typeString": "struct LogicVersionLib.LogicVersion"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5523:37:27"
            },
            "scope": 7507,
            "src": "5432:181:27",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 7508,
        "src": "1485:4160:27"
      }
    ],
    "src": "0:5646:27"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LogicVersionsRegistry.sol",
    "exportedSymbols": {
      "LogicVersionsRegistry": [
        7507
      ]
    },
    "id": 7508,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7317,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:27"
      },
      {
        "id": 7318,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:27"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol",
        "file": "./BaseUpgradeable.sol",
        "id": 7319,
        "nodeType": "ImportDirective",
        "scope": 7508,
        "sourceUnit": 2594,
        "src": "72:31:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TInitializable.sol",
        "file": "./TInitializable.sol",
        "id": 7320,
        "nodeType": "ImportDirective",
        "scope": 7508,
        "sourceUnit": 9278,
        "src": "104:30:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionLib.sol",
        "file": "../util/LogicVersionLib.sol",
        "id": 7321,
        "nodeType": "ImportDirective",
        "scope": 7508,
        "sourceUnit": 17202,
        "src": "147:37:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol",
        "file": "../util/LogicVersionsConsts.sol",
        "id": 7322,
        "nodeType": "ImportDirective",
        "scope": 7508,
        "sourceUnit": 17256,
        "src": "185:41:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol",
        "file": "../interfaces/LogicVersionsRegistryInterface.sol",
        "id": 7323,
        "nodeType": "ImportDirective",
        "scope": 7508,
        "sourceUnit": 10941,
        "src": "242:58:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7324,
              "name": "LogicVersionsRegistryInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10940,
              "src": "1523:30:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LogicVersionsRegistryInterface_$10940",
                "typeString": "contract LogicVersionsRegistryInterface"
              }
            },
            "id": 7325,
            "nodeType": "InheritanceSpecifier",
            "src": "1523:30:27"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7326,
              "name": "TInitializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9277,
              "src": "1559:14:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TInitializable_$9277",
                "typeString": "contract TInitializable"
              }
            },
            "id": 7327,
            "nodeType": "InheritanceSpecifier",
            "src": "1559:14:27"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7328,
              "name": "BaseUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2593,
              "src": "1579:15:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseUpgradeable_$2593",
                "typeString": "contract BaseUpgradeable"
              }
            },
            "id": 7329,
            "nodeType": "InheritanceSpecifier",
            "src": "1579:15:27"
          }
        ],
        "contractDependencies": [
          2593,
          9277,
          10940,
          17255
        ],
        "contractKind": "contract",
        "documentation": "@notice It manages all the logic contract versions, mapping each one to a logic name (or key).\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 7507,
        "linearizedBaseContracts": [
          7507,
          2593,
          9277,
          10940
        ],
        "name": "LogicVersionsRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7332,
            "libraryName": {
              "contractScope": null,
              "id": 7330,
              "name": "LogicVersionLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17201,
              "src": "1607:15:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LogicVersionLib_$17201",
                "typeString": "library LogicVersionLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1601:55:27",
            "typeName": {
              "contractScope": null,
              "id": 7331,
              "name": "LogicVersionLib.LogicVersion",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17035,
              "src": "1627:28:27",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_LogicVersion_$17035_storage_ptr",
                "typeString": "struct LogicVersionLib.LogicVersion"
              }
            }
          },
          {
            "constant": false,
            "id": 7334,
            "name": "consts",
            "nodeType": "VariableDeclaration",
            "scope": 7507,
            "src": "1711:33:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LogicVersionsConsts_$17255",
              "typeString": "contract LogicVersionsConsts"
            },
            "typeName": {
              "contractScope": null,
              "id": 7333,
              "name": "LogicVersionsConsts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17255,
              "src": "1711:19:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LogicVersionsConsts_$17255",
                "typeString": "contract LogicVersionsConsts"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7338,
            "name": "logicVersions",
            "nodeType": "VariableDeclaration",
            "scope": 7507,
            "src": "2057:69:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$17035_storage_$",
              "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion)"
            },
            "typeName": {
              "id": 7337,
              "keyType": {
                "id": 7335,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2065:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2057:48:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$17035_storage_$",
                "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7336,
                "name": "LogicVersionLib.LogicVersion",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 17035,
                "src": "2076:28:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_LogicVersion_$17035_storage_ptr",
                  "typeString": "struct LogicVersionLib.LogicVersion"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7371,
              "nodeType": "Block",
              "src": "2550:192:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 7352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7350,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7340,
                          "src": "2568:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 7351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2581:2:27",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "src": "2568:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c4f4749435f4e414d455f4d5553545f42455f50524f5649444544",
                        "id": 7353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2585:29:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6761f4c1b6a5d5dba3972a0852617ffbf0f234b2e4e40710be4ab4192706890f",
                          "typeString": "literal_string \"LOGIC_NAME_MUST_BE_PROVIDED\""
                        },
                        "value": "LOGIC_NAME_MUST_BE_PROVIDED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6761f4c1b6a5d5dba3972a0852617ffbf0f234b2e4e40710be4ab4192706890f",
                          "typeString": "literal_string \"LOGIC_NAME_MUST_BE_PROVIDED\""
                        }
                      ],
                      "id": 7349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21470,
                        21471
                      ],
                      "referencedDeclaration": 21471,
                      "src": "2560:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2560:55:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7355,
                  "nodeType": "ExpressionStatement",
                  "src": "2560:55:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7360,
                        "name": "logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7342,
                        "src": "2661:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7356,
                          "name": "logicVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7338,
                          "src": "2625:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$17035_storage_$",
                            "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion storage ref)"
                          }
                        },
                        "id": 7358,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7357,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7340,
                          "src": "2639:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2625:24:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LogicVersion_$17035_storage",
                          "typeString": "struct LogicVersionLib.LogicVersion storage ref"
                        }
                      },
                      "id": 7359,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17072,
                      "src": "2625:35:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LogicVersion_$17035_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_LogicVersion_$17035_storage_ptr_$",
                        "typeString": "function (struct LogicVersionLib.LogicVersion storage pointer,address)"
                      }
                    },
                    "id": 7361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2625:42:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7362,
                  "nodeType": "ExpressionStatement",
                  "src": "2625:42:27"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7364,
                        "name": "logicName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7340,
                        "src": "2703:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7365,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21467,
                          "src": "2714:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2714:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7367,
                        "name": "logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7342,
                        "src": "2726:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 7368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2733:1:27",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 7363,
                      "name": "LogicVersionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10865,
                      "src": "2683:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,address,uint256)"
                      }
                    },
                    "id": 7369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2683:52:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7370,
                  "nodeType": "EmitStatement",
                  "src": "2678:57:27"
                }
              ]
            },
            "documentation": "@notice It creates a new logic version given a logic name and address.\n@param logicName logic name to create.\n@param logic the logic address value for the given logic name.",
            "id": 7372,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7345,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7344,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2514,
                  "src": "2509:10:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2509:12:27"
              },
              {
                "arguments": [],
                "id": 7347,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7346,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "2530:13:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2530:15:27"
              }
            ],
            "name": "createLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7340,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7372,
                  "src": "2450:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7339,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2450:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7342,
                  "name": "logic",
                  "nodeType": "VariableDeclaration",
                  "scope": 7372,
                  "src": "2469:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2469:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2449:34:27"
            },
            "returnParameters": {
              "id": 7348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2550:0:27"
            },
            "scope": 7507,
            "src": "2422:320:27",
            "stateMutability": "nonpayable",
            "superFunction": 10901,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7406,
              "nodeType": "Block",
              "src": "3066:349:27",
              "statements": [
                {
                  "assignments": [
                    7384,
                    7386,
                    7388
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7384,
                      "name": "oldLogic",
                      "nodeType": "VariableDeclaration",
                      "scope": 7406,
                      "src": "3090:16:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7383,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3090:7:27",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7386,
                      "name": "oldVersion",
                      "nodeType": "VariableDeclaration",
                      "scope": 7406,
                      "src": "3120:18:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7385,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3120:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7388,
                      "name": "newVersion",
                      "nodeType": "VariableDeclaration",
                      "scope": 7406,
                      "src": "3152:18:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7387,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3152:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7395,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7393,
                        "name": "newLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7376,
                        "src": "3215:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7389,
                          "name": "logicVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7338,
                          "src": "3183:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$17035_storage_$",
                            "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion storage ref)"
                          }
                        },
                        "id": 7391,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7390,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7374,
                          "src": "3197:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3183:24:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LogicVersion_$17035_storage",
                          "typeString": "struct LogicVersionLib.LogicVersion storage ref"
                        }
                      },
                      "id": 7392,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "update",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17156,
                      "src": "3183:31:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LogicVersion_$17035_storage_ptr_$_t_address_$returns$_t_address_$_t_uint256_$_t_uint256_$bound_to$_t_struct$_LogicVersion_$17035_storage_ptr_$",
                        "typeString": "function (struct LogicVersionLib.LogicVersion storage pointer,address) returns (address,uint256,uint256)"
                      }
                    },
                    "id": 7394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3183:41:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(address,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3076:148:27"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7397,
                        "name": "logicName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7374,
                        "src": "3273:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7398,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21467,
                          "src": "3296:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3296:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7400,
                        "name": "oldLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7384,
                        "src": "3320:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7401,
                        "name": "newLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7376,
                        "src": "3342:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7402,
                        "name": "oldVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7386,
                        "src": "3364:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7403,
                        "name": "newVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7388,
                        "src": "3388:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7396,
                      "name": "LogicVersionUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10889,
                      "src": "3240:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 7404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3240:168:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7405,
                  "nodeType": "EmitStatement",
                  "src": "3235:173:27"
                }
              ]
            },
            "documentation": "@notice It update a current logic address given a logic name.\n@param logicName logic name to update.\n@param newLogic the new logic address to set.",
            "id": 7407,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7379,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7378,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2514,
                  "src": "3025:10:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3025:12:27"
              },
              {
                "arguments": [],
                "id": 7381,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7380,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "3046:13:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3046:15:27"
              }
            ],
            "name": "updateLogicAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7374,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7407,
                  "src": "2963:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7373,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2963:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7376,
                  "name": "newLogic",
                  "nodeType": "VariableDeclaration",
                  "scope": 7407,
                  "src": "2982:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2982:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2962:37:27"
            },
            "returnParameters": {
              "id": 7382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3066:0:27"
            },
            "scope": 7507,
            "src": "2935:480:27",
            "stateMutability": "nonpayable",
            "superFunction": 10908,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7434,
              "nodeType": "Block",
              "src": "3640:175:27",
              "statements": [
                {
                  "assignments": [
                    7417,
                    7419
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7417,
                      "name": "lastLogic",
                      "nodeType": "VariableDeclaration",
                      "scope": 7434,
                      "src": "3651:17:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7416,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3651:7:27",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7419,
                      "name": "lastVersion",
                      "nodeType": "VariableDeclaration",
                      "scope": 7434,
                      "src": "3670:19:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7418,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3670:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7425,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7420,
                          "name": "logicVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7338,
                          "src": "3693:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$17035_storage_$",
                            "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion storage ref)"
                          }
                        },
                        "id": 7422,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7421,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7409,
                          "src": "3707:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3693:24:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LogicVersion_$17035_storage",
                          "typeString": "struct LogicVersionLib.LogicVersion storage ref"
                        }
                      },
                      "id": 7423,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17200,
                      "src": "3693:31:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LogicVersion_$17035_storage_ptr_$returns$_t_address_$_t_uint256_$bound_to$_t_struct$_LogicVersion_$17035_storage_ptr_$",
                        "typeString": "function (struct LogicVersionLib.LogicVersion storage pointer) returns (address,uint256)"
                      }
                    },
                    "id": 7424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3693:33:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3650:76:27"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7427,
                        "name": "logicName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7409,
                        "src": "3762:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7428,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21467,
                          "src": "3773:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3773:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7430,
                        "name": "lastLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7417,
                        "src": "3785:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7431,
                        "name": "lastVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7419,
                        "src": "3796:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7426,
                      "name": "LogicVersionRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10875,
                      "src": "3742:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,address,uint256)"
                      }
                    },
                    "id": 7432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:66:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7433,
                  "nodeType": "EmitStatement",
                  "src": "3737:71:27"
                }
              ]
            },
            "documentation": "@notice It removes a current logic version given a logic name.\n@param logicName logic name to remove.",
            "id": 7435,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7412,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7411,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2514,
                  "src": "3611:10:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3611:12:27"
              },
              {
                "arguments": [],
                "id": 7414,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7413,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9252,
                  "src": "3624:13:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3624:15:27"
              }
            ],
            "name": "removeLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7409,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7435,
                  "src": "3583:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7408,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3583:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3582:19:27"
            },
            "returnParameters": {
              "id": 7415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3640:0:27"
            },
            "scope": 7507,
            "src": "3555:260:27",
            "stateMutability": "nonpayable",
            "superFunction": 10913,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7446,
              "nodeType": "Block",
              "src": "4119:51:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7443,
                        "name": "logicName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7437,
                        "src": "4153:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7442,
                      "name": "_getLogicVersion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7506,
                      "src": "4136:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_LogicVersion_$17035_memory_ptr_$",
                        "typeString": "function (bytes32) view returns (struct LogicVersionLib.LogicVersion memory)"
                      }
                    },
                    "id": 7444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4136:27:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LogicVersion_$17035_memory_ptr",
                      "typeString": "struct LogicVersionLib.LogicVersion memory"
                    }
                  },
                  "functionReturnParameters": 7441,
                  "id": 7445,
                  "nodeType": "Return",
                  "src": "4129:34:27"
                }
              ]
            },
            "documentation": "@notice It gets the current logic version for a given logic name.\n@param logicName to get.\n@return the current logic version.",
            "id": 7447,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7437,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7447,
                  "src": "4012:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7436,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4012:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4011:19:27"
            },
            "returnParameters": {
              "id": 7441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7440,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7447,
                  "src": "4078:35:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LogicVersion_$17035_memory_ptr",
                    "typeString": "struct LogicVersionLib.LogicVersion"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7439,
                    "name": "LogicVersionLib.LogicVersion",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17035,
                    "src": "4078:28:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LogicVersion_$17035_storage_ptr",
                      "typeString": "struct LogicVersionLib.LogicVersion"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4077:37:27"
            },
            "scope": 7507,
            "src": "3987:183:27",
            "stateMutability": "view",
            "superFunction": 10920,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7459,
              "nodeType": "Block",
              "src": "4425:57:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7455,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7449,
                          "src": "4459:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 7454,
                        "name": "_getLogicVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7506,
                        "src": "4442:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_LogicVersion_$17035_memory_ptr_$",
                          "typeString": "function (bytes32) view returns (struct LogicVersionLib.LogicVersion memory)"
                        }
                      },
                      "id": 7456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4442:27:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LogicVersion_$17035_memory_ptr",
                        "typeString": "struct LogicVersionLib.LogicVersion memory"
                      }
                    },
                    "id": 7457,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "logic",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17030,
                    "src": "4442:33:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7453,
                  "id": 7458,
                  "nodeType": "Return",
                  "src": "4435:40:27"
                }
              ]
            },
            "documentation": "@notice It gets the current logic address for a given logic name.\n@param logicName to get.\n@return the current logic address.",
            "id": 7460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLogicVersionAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7449,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7460,
                  "src": "4374:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7448,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4374:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4373:19:27"
            },
            "returnParameters": {
              "id": 7453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7452,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7460,
                  "src": "4416:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4416:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4415:9:27"
            },
            "scope": 7507,
            "src": "4342:140:27",
            "stateMutability": "view",
            "superFunction": 10927,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7472,
              "nodeType": "Block",
              "src": "4784:58:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7468,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7462,
                          "src": "4818:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 7467,
                        "name": "_getLogicVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7506,
                        "src": "4801:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_LogicVersion_$17035_memory_ptr_$",
                          "typeString": "function (bytes32) view returns (struct LogicVersionLib.LogicVersion memory)"
                        }
                      },
                      "id": 7469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4801:27:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LogicVersion_$17035_memory_ptr",
                        "typeString": "struct LogicVersionLib.LogicVersion memory"
                      }
                    },
                    "id": 7470,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "exists",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17034,
                    "src": "4801:34:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7466,
                  "id": 7471,
                  "nodeType": "Return",
                  "src": "4794:41:27"
                }
              ]
            },
            "documentation": "@notice It tests whether a logic name is already configured.\n@param logicName logic name to test.\n@return true if the logic version is already configured. Otherwise it returns false.",
            "id": 7473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7462,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7473,
                  "src": "4736:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7461,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4736:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4735:19:27"
            },
            "returnParameters": {
              "id": 7466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7465,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7473,
                  "src": "4778:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7464,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4778:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4777:6:27"
            },
            "scope": 7507,
            "src": "4711:131:27",
            "stateMutability": "view",
            "superFunction": 10934,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7493,
              "nodeType": "Block",
              "src": "5078:114:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7480,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9276,
                      "src": "5088:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 7481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5088:13:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7482,
                  "nodeType": "ExpressionStatement",
                  "src": "5088:13:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7484,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7475,
                        "src": "5125:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7483,
                      "name": "_setSettings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2570,
                      "src": "5112:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5112:29:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7486,
                  "nodeType": "ExpressionStatement",
                  "src": "5112:29:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7487,
                      "name": "consts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7334,
                      "src": "5151:6:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LogicVersionsConsts_$17255",
                        "typeString": "contract LogicVersionsConsts"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5160:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LogicVersionsConsts_$17255_$",
                          "typeString": "function () returns (contract LogicVersionsConsts)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 7488,
                          "name": "LogicVersionsConsts",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 17255,
                          "src": "5164:19:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LogicVersionsConsts_$17255",
                            "typeString": "contract LogicVersionsConsts"
                          }
                        }
                      },
                      "id": 7490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5160:25:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LogicVersionsConsts_$17255",
                        "typeString": "contract LogicVersionsConsts"
                      }
                    },
                    "src": "5151:34:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LogicVersionsConsts_$17255",
                      "typeString": "contract LogicVersionsConsts"
                    }
                  },
                  "id": 7492,
                  "nodeType": "ExpressionStatement",
                  "src": "5151:34:27"
                }
              ]
            },
            "documentation": "@notice It initializes this logic versions registry contract instance.\n@param settingsAddress the settings contract address.",
            "id": 7494,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7478,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7477,
                  "name": "isNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9242,
                  "src": "5059:16:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5059:18:27"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7475,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7494,
                  "src": "5025:23:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5025:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5024:25:27"
            },
            "returnParameters": {
              "id": 7479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5078:0:27"
            },
            "scope": 7507,
            "src": "5005:187:27",
            "stateMutability": "nonpayable",
            "superFunction": 10939,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7505,
              "nodeType": "Block",
              "src": "5565:48:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 7501,
                      "name": "logicVersions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7338,
                      "src": "5582:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$17035_storage_$",
                        "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion storage ref)"
                      }
                    },
                    "id": 7503,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 7502,
                      "name": "logicName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7496,
                      "src": "5596:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5582:24:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LogicVersion_$17035_storage",
                      "typeString": "struct LogicVersionLib.LogicVersion storage ref"
                    }
                  },
                  "functionReturnParameters": 7500,
                  "id": 7504,
                  "nodeType": "Return",
                  "src": "5575:31:27"
                }
              ]
            },
            "documentation": "@notice It gets the logic version for a given logic name.\n@param logicName the logic name to look for.\n@return the current logic version for the given logic name.",
            "id": 7506,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7496,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7506,
                  "src": "5458:17:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7495,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5458:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5457:19:27"
            },
            "returnParameters": {
              "id": 7500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7499,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7506,
                  "src": "5524:35:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LogicVersion_$17035_memory_ptr",
                    "typeString": "struct LogicVersionLib.LogicVersion"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7498,
                    "name": "LogicVersionLib.LogicVersion",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17035,
                    "src": "5524:28:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LogicVersion_$17035_storage_ptr",
                      "typeString": "struct LogicVersionLib.LogicVersion"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5523:37:27"
            },
            "scope": 7507,
            "src": "5432:181:27",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 7508,
        "src": "1485:4160:27"
      }
    ],
    "src": "0:5646:27"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-06T02:15:12.291Z",
  "devdoc": {
    "author": "develop@teller.finance",
    "methods": {
      "createLogicVersion(bytes32,address)": {
        "params": {
          "logic": "the logic address value for the given logic name.",
          "logicName": "logic name to create."
        }
      },
      "getLogicVersion(bytes32)": {
        "params": {
          "logicName": "to get."
        },
        "return": "the current logic version."
      },
      "getLogicVersionAddress(bytes32)": {
        "params": {
          "logicName": "to get."
        },
        "return": "the current logic address."
      },
      "hasLogicVersion(bytes32)": {
        "params": {
          "logicName": "logic name to test."
        },
        "return": "true if the logic version is already configured. Otherwise it returns false."
      },
      "initialize(address)": {
        "params": {
          "settingsAddress": "the settings contract address."
        }
      },
      "initialized()": {
        "return": "true if contract is initialized. Otherwise it returns false."
      },
      "removeLogicVersion(bytes32)": {
        "params": {
          "logicName": "logic name to remove."
        }
      },
      "updateLogicAddress(bytes32,address)": {
        "params": {
          "logicName": "logic name to update.",
          "newLogic": "the new logic address to set."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "createLogicVersion(bytes32,address)": {
        "notice": "It creates a new logic version given a logic name and address."
      },
      "getLogicVersion(bytes32)": {
        "notice": "It gets the current logic version for a given logic name."
      },
      "getLogicVersionAddress(bytes32)": {
        "notice": "It gets the current logic address for a given logic name."
      },
      "hasLogicVersion(bytes32)": {
        "notice": "It tests whether a logic name is already configured."
      },
      "initialize(address)": {
        "notice": "It initializes this logic versions registry contract instance."
      },
      "initialized()": {
        "notice": "Gets if the contract is initialized."
      },
      "removeLogicVersion(bytes32)": {
        "notice": "It removes a current logic version given a logic name."
      },
      "settings()": {
        "notice": "The settings contract."
      },
      "updateLogicAddress(bytes32,address)": {
        "notice": "It update a current logic address given a logic name."
      }
    },
    "notice": "It manages all the logic contract versions, mapping each one to a logic name (or key)."
  }
}