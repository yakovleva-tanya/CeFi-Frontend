{
  "contractName": "BaseUpgradeable",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "contract SettingsInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"contract SettingsInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"methods\":{}},\"userdoc\":{\"methods\":{\"settings()\":{\"notice\":\"The settings contract.\"}},\"notice\":\"It is the base contract to hold the settings instance and upgradeable logic name in registry.\"}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol\":\"BaseUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol\":{\"keccak256\":\"0xea409b9c0704a8f308295740e8595eb5fdc670b298ae9b63f5bb538783619a35\",\"urls\":[\"bzz-raw://22490fcd6a157faa8f1bdf7f715435c2a2572277c46e67d39533b411026b580d\",\"dweb:/ipfs/QmW5nUYb9oLpZALaWabBA45MnfGB4MJspZEkvbuRJfSSg7\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0xb5b2225e4f6db57d59d5292f542acc0675e9f95b3e3094d9be4cf6ec079cb86e\",\"urls\":[\"bzz-raw://f0c822f79ebb3f775b4fea591a5555c3efacba6719d4adbab83571dd35f059e3\",\"dweb:/ipfs/QmYiHmtPJsJD67g7Pk7kM72hsHS7BVVJtciKjCoUioW4gS\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x91250ee3c1d73b5d1720f7b41f18072eb347d73e4d3de464537ece49e1fa1d93\",\"urls\":[\"bzz-raw://f11ce1d70152f6d19f9c23788b4458631df3fd748a52849b899183ce2dabc52b\",\"dweb:/ipfs/QmaNQybwKYW5BfT3h6z6P1SSUwYEyXQviisYjUr7cHLzQR\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0xd8a98393b51d4533d7515d82c4640ff5cb4c5d84ec154be20ae2d70244c6bd8e\",\"urls\":[\"bzz-raw://19a1d2b6aa47db3488c4ce2531a4a82d79cc66b089ecebb3d06bc9a6c2ca2c04\",\"dweb:/ipfs/QmY1rhfogBfWyu4Bs3dbwrXjYvkvLLnwgi5hLuRcMgtjDy\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/MarketsStateInterface.sol\":{\"keccak256\":\"0xf51bd2d361d9cf448f2c2a5bb37c2699b0d9605a8f1b6a8719f90d8f536f2a05\",\"urls\":[\"bzz-raw://415a4444e8f9aca25132f492b226b8d500081a4ba5be8e45b401a68e73e1895b\",\"dweb:/ipfs/QmUPGgnqUjidxeEpkgu4yYzhfuykgtNKehEwbps97nAAzZ\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/PairAggregatorInterface.sol\":{\"keccak256\":\"0x4331fd21591542fda69505ce457c03f9ef66f2b8fea50db669864f517c4f95a1\",\"urls\":[\"bzz-raw://3cd373c888a2b4f6d1a93f540e9a0f4982316f743c0891d310a5e712c0f8eb78\",\"dweb:/ipfs/QmYA6Z3HFYj8MZSJwKP7NjawaD5TehE6Lmtx2VbTfqEHfb\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0xb2b1050602a2c4b8fac7053462a7a71c4a8ac91ffa7622dc003b07867dd2d04a\",\"urls\":[\"bzz-raw://2d38d083992ace8e9b361e763c1ba8ec35dc6604a1829fb09df8750a1c517d78\",\"dweb:/ipfs/QmQjba8A9c4q3AmEJf7GMytSyFPdG5rniSvL7Kw8QrUEoT\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/IChainlinkPairAggregatorRegistry.sol\":{\"keccak256\":\"0xa6f747fa1fecfef304721bc5b95ff34f1057ffeebd096d72051c013191879388\",\"urls\":[\"bzz-raw://27a99f0483fd2950126fd56cca827bab0cb3635e4512380acd65f161960906eb\",\"dweb:/ipfs/QmUR6GkPEpzqo4G76eeTNDLgxi3M4P7G338Jr4uoCQqrx9\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0xc5453e6f1a43327a37db250dedb65561c4deb0f3eb3cad490a64fc56e0b6f7b7\",\"urls\":[\"bzz-raw://f6edcab27eebecb576c9a884a173a1a5fcf0c129c76b992ec77ca24518d92f91\",\"dweb:/ipfs/QmW3q6w39dg9RnxsQdfrFVudmiZh5asRnkWQVkrap9hnJf\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AssetSettingsLib.sol\":{\"keccak256\":\"0x9c67a3de3bb62fdfbd5c116016e0693300bb9d71fe055bb6aa12da305aba3bf4\",\"urls\":[\"bzz-raw://a3c9ffdd1496a6192abb62b72625e5778db231656f2c8fffd09a83d089996aa6\",\"dweb:/ipfs/QmevJ5ojFaqG363CrnJZ9x3YvGMWKfUaFoUVbCsaSzqPfe\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0xf4caad9e4d96afe2721124eaf7203bb4e3a97beb3664c63297c4e68523f5bd65\",\"urls\":[\"bzz-raw://dcd6f564423c2cf83f3a56120f43eb6fd9f6e852cbb615be657f89e5114debf4\",\"dweb:/ipfs/QmRZStVoa5KbYRCHpzC7h998NnRhbFHfUZ71TRTiLzMTcX\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0xe49711d0c8193559f76dc5f399344c8f5f5e6a8b99bf78c6bcfd9aa1c456c306\",\"urls\":[\"bzz-raw://c6432c082145470691dfde04bf5c4220ccc32a5dccf6520c3122e47e470e6c22\",\"dweb:/ipfs/Qmd97DA5SB3d8Cuwf5M6vLtfDLHYXrMj5d3cXkYPP7iPpU\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/MarketStateLib.sol\":{\"keccak256\":\"0x8212e9e0d7c8d79d53087c5fb4735374f50cf6644c27b13e5faba5344c9b2087\",\"urls\":[\"bzz-raw://68b3d876f4e6569b57abfe9e7e69675a362a9d45f92c51b3a3a089d1c226817b\",\"dweb:/ipfs/QmSirrURGaLUYVkSeedjsrzF1kFB7gsuoHBpmWb9ed8eZt\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0xa397bcb75a4e7d80fd1043b7dc3c3a69f8c12435d26d843e4be40e875b71e134\",\"urls\":[\"bzz-raw://aabd466bea9e95a2585d597ebf62025f7ab4f38d1d4fe1c9fa5be1d98d131789\",\"dweb:/ipfs/QmcRGMg8X5teSF3Ga8ECPH2HvenViySkdnzvpUWvMDWXJL\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0c6a7e0de89e1017166ef4f593b33c8d0bfc6bcf3cd3db0bb5c1610ce260b659\",\"urls\":[\"bzz-raw://926108ace9152ed12d86a74ccb98d8c0aa698bd48fd3b4bfedacf976a8dd59d3\",\"dweb:/ipfs/QmVYjChMWZJdpPoBNheHMfyoTVsAarfLJ6SxPHhEsd6kUB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0xbe70455cee756e9498c220e13c1550d163a4cbcb09e8afe2f0ee94f717c80315\",\"urls\":[\"bzz-raw://0ad4a0a6394e560e40da2fee213381db0184878c29078b2f570eaacf116bb855\",\"dweb:/ipfs/QmTF87YYagh3WrxNZyi2uxhzcxyGsdtJCLu9nwmXGGaoMz\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b5060ba8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063e06174e414602d575b600080fd5b6033604f565b604080516001600160a01b039092168252519081900360200190f35b604080517f426173655570677261646561626c652e73657474696e6773000000000000000081529051908190036018019020549056fea265627a7a723158201798ce9c32a27e1ee8bb782180b93f4bf143e439225b94a2f07449eec16f5fd264736f6c63430005110032",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063e06174e414602d575b600080fd5b6033604f565b604080516001600160a01b039092168252519081900360200190f35b604080517f426173655570677261646561626c652e73657474696e6773000000000000000081529051908190036018019020549056fea265627a7a723158201798ce9c32a27e1ee8bb782180b93f4bf143e439225b94a2f07449eec16f5fd264736f6c63430005110032",
  "sourceMap": "236:2113:11:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;236:2113:11;;;;;;;",
  "deployedSourceMap": "236:2113:11:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;236:2113:11;;;;;;;;;;;;;;;;;;;839:263;;;:::i;:::-;;;;-1:-1:-1;;;;;839:263:11;;;;;;;;;;;;;;;370:37;;;;;;;;;;;;;;;;1023:11;839:263;:::o",
  "source": "pragma solidity 0.5.17;\n\n// Interfaces\nimport \"../interfaces/SettingsInterface.sol\";\n\n/**\n    @notice It is the base contract to hold the settings instance and upgradeable logic name in registry.\n\n    @author develop@teller.finance\n */\ncontract BaseUpgradeable {\n    using Address for address;\n\n    /** State Variables **/\n\n    bytes32 internal constant SETTINGS_SLOT = keccak256(\"BaseUpgradeable.settings\");\n    bytes32 internal constant LOGIC_NAME_SLOT = keccak256(\"BaseUpgradeable.logicName\");\n\n    /** Modifiers **/\n\n    /**\n        @notice Checks if sender has a pauser role\n        @dev Throws an error if the sender has not a pauser role.\n     */\n    modifier onlyPauser() {\n        settings().requirePauserRole(msg.sender);\n        _;\n    }\n\n    /** Public Functions **/\n\n    /**\n        @notice The settings contract.\n     */\n    function settings() public view returns (SettingsInterface) {\n        address settingsAddress;\n\n        bytes32 slot = SETTINGS_SLOT;\n        assembly {\n            settingsAddress := sload(slot)\n        }\n\n        return SettingsInterface(settingsAddress);\n    }\n\n    /** Internal Functions **/\n\n    /**\n        @notice It represent the current logic name (key) for the current implementation.\n        @dev It is used by LogicVersionsRegistry to get the logic address for the given logic name.\n        @dev It must NOT change over the time.\n        @dev The logic is equal to the OpenZeppelin\n        @return the logic name.\n     */\n    function logicName() internal view returns (bytes32 name) {\n        bytes32 slot = LOGIC_NAME_SLOT;\n        assembly {\n            name := sload(slot)\n        }\n    }\n\n    function _setSettings(address settingsAddress) internal {\n        // Prevent resetting the settings logic for standalone test deployments.\n        if (address(settings()) != address(0x0))\n            return require(settingsAddress.isContract(), \"SETTINGS_MUST_BE_A_CONTRACT\");\n\n        bytes32 slot = SETTINGS_SLOT;\n        assembly {\n            sstore(slot, settingsAddress)\n        }\n    }\n\n    function _setLogicName(bytes32 aLogicName) internal {\n        require(\n            settings().versionsRegistry().hasLogicVersion(aLogicName),\n            \"LOGIC_NAME_NOT_EXIST\"\n        );\n\n        bytes32 slot = LOGIC_NAME_SLOT;\n        assembly {\n            sstore(slot, aLogicName)\n        }\n    }\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol",
    "exportedSymbols": {
      "BaseUpgradeable": [
        2593
      ]
    },
    "id": 2594,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2489,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol",
        "file": "../interfaces/SettingsInterface.sol",
        "id": 2490,
        "nodeType": "ImportDirective",
        "scope": 2594,
        "sourceUnit": 11432,
        "src": "39:45:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@notice It is the base contract to hold the settings instance and upgradeable logic name in registry.\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 2593,
        "linearizedBaseContracts": [
          2593
        ],
        "name": "BaseUpgradeable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2493,
            "libraryName": {
              "contractScope": null,
              "id": 2491,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21144,
              "src": "273:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$21144",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "267:26:11",
            "typeName": {
              "id": 2492,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "285:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": true,
            "id": 2498,
            "name": "SETTINGS_SLOT",
            "nodeType": "VariableDeclaration",
            "scope": 2593,
            "src": "328:79:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2494,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "328:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "426173655570677261646561626c652e73657474696e6773",
                  "id": 2496,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "380:26:11",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d4708cd79bdbc0ee73fd15dc2e8be75b3febc0e57d451a5bccd7e76a522fca03",
                    "typeString": "literal_string \"BaseUpgradeable.settings\""
                  },
                  "value": "BaseUpgradeable.settings"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d4708cd79bdbc0ee73fd15dc2e8be75b3febc0e57d451a5bccd7e76a522fca03",
                    "typeString": "literal_string \"BaseUpgradeable.settings\""
                  }
                ],
                "id": 2495,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 21461,
                "src": "370:9:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2497,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "370:37:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 2503,
            "name": "LOGIC_NAME_SLOT",
            "nodeType": "VariableDeclaration",
            "scope": 2593,
            "src": "413:82:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2499,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "413:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "426173655570677261646561626c652e6c6f6769634e616d65",
                  "id": 2501,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "467:27:11",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_3e7e151189205168f65fed016ef5cf7cb86673b86ec5b9d965c73a48a8ef8ead",
                    "typeString": "literal_string \"BaseUpgradeable.logicName\""
                  },
                  "value": "BaseUpgradeable.logicName"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_3e7e151189205168f65fed016ef5cf7cb86673b86ec5b9d965c73a48a8ef8ead",
                    "typeString": "literal_string \"BaseUpgradeable.logicName\""
                  }
                ],
                "id": 2500,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 21461,
                "src": "457:9:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2502,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "457:38:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2513,
              "nodeType": "Block",
              "src": "680:68:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2508,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21467,
                          "src": "719:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "719:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2505,
                          "name": "settings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2532,
                          "src": "690:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_SettingsInterface_$11431_$",
                            "typeString": "function () view returns (contract SettingsInterface)"
                          }
                        },
                        "id": 2506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "690:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SettingsInterface_$11431",
                          "typeString": "contract SettingsInterface"
                        }
                      },
                      "id": 2507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requirePauserRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11380,
                      "src": "690:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$__$",
                        "typeString": "function (address) view external"
                      }
                    },
                    "id": 2510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "690:40:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2511,
                  "nodeType": "ExpressionStatement",
                  "src": "690:40:11"
                },
                {
                  "id": 2512,
                  "nodeType": "PlaceholderStatement",
                  "src": "740:1:11"
                }
              ]
            },
            "documentation": "@notice Checks if sender has a pauser role\n@dev Throws an error if the sender has not a pauser role.",
            "id": 2514,
            "name": "onlyPauser",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "677:2:11"
            },
            "src": "658:90:11",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2531,
              "nodeType": "Block",
              "src": "899:203:11",
              "statements": [
                {
                  "assignments": [
                    2520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2520,
                      "name": "settingsAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 2531,
                      "src": "909:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2519,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "909:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2521,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "909:23:11"
                },
                {
                  "assignments": [
                    2523
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2523,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 2531,
                      "src": "943:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2522,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "943:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2525,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2524,
                    "name": "SETTINGS_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2498,
                    "src": "958:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "943:28:11"
                },
                {
                  "externalReferences": [
                    {
                      "settingsAddress": {
                        "declaration": 2520,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1004:15:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "slot": {
                        "declaration": 2523,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1029:4:11",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2526,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    settingsAddress := sload(slot)\n}",
                  "src": "981:63:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2528,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2520,
                        "src": "1079:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2527,
                      "name": "SettingsInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11431,
                      "src": "1061:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_SettingsInterface_$11431_$",
                        "typeString": "type(contract SettingsInterface)"
                      }
                    },
                    "id": 2529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1061:34:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$11431",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "functionReturnParameters": 2518,
                  "id": 2530,
                  "nodeType": "Return",
                  "src": "1054:41:11"
                }
              ]
            },
            "documentation": "@notice The settings contract.",
            "id": 2532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "856:2:11"
            },
            "returnParameters": {
              "id": 2518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2517,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2532,
                  "src": "880:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SettingsInterface_$11431",
                    "typeString": "contract SettingsInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2516,
                    "name": "SettingsInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11431,
                    "src": "880:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$11431",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "879:19:11"
            },
            "scope": 2593,
            "src": "839:263:11",
            "stateMutability": "view",
            "superFunction": 10836,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2542,
              "nodeType": "Block",
              "src": "1535:108:11",
              "statements": [
                {
                  "assignments": [
                    2538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2538,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 2542,
                      "src": "1545:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2537,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1545:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2540,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2539,
                    "name": "LOGIC_NAME_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2503,
                    "src": "1560:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1545:30:11"
                },
                {
                  "externalReferences": [
                    {
                      "name": {
                        "declaration": 2535,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1608:4:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "slot": {
                        "declaration": 2538,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1622:4:11",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2541,
                  "nodeType": "InlineAssembly",
                  "operations": "{ name := sload(slot) }",
                  "src": "1585:52:11"
                }
              ]
            },
            "documentation": "@notice It represent the current logic name (key) for the current implementation.\n@dev It is used by LogicVersionsRegistry to get the logic address for the given logic name.\n@dev It must NOT change over the time.\n@dev The logic is equal to the OpenZeppelin\n@return the logic name.",
            "id": 2543,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "logicName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1495:2:11"
            },
            "returnParameters": {
              "id": 2536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2535,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2543,
                  "src": "1521:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2534,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1521:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1520:14:11"
            },
            "scope": 2593,
            "src": "1477:166:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2569,
              "nodeType": "Block",
              "src": "1705:336:11",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2549,
                            "name": "settings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2532,
                            "src": "1808:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_SettingsInterface_$11431_$",
                              "typeString": "function () view returns (contract SettingsInterface)"
                            }
                          },
                          "id": 2550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1808:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SettingsInterface_$11431",
                            "typeString": "contract SettingsInterface"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_SettingsInterface_$11431",
                            "typeString": "contract SettingsInterface"
                          }
                        ],
                        "id": 2548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1800:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1800:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 2553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1831:3:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1823:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1823:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1800:35:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2563,
                  "nodeType": "IfStatement",
                  "src": "1796:128:11",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2557,
                              "name": "settingsAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2545,
                              "src": "1864:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21096,
                            "src": "1864:26:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 2559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1864:28:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "53455454494e47535f4d5553545f42455f415f434f4e5452414354",
                          "id": 2560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1894:29:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_452b316e5cb19b7acb0d2f0547619d5f4071b0df24a897a549ec7189b97d44a0",
                            "typeString": "literal_string \"SETTINGS_MUST_BE_A_CONTRACT\""
                          },
                          "value": "SETTINGS_MUST_BE_A_CONTRACT"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_452b316e5cb19b7acb0d2f0547619d5f4071b0df24a897a549ec7189b97d44a0",
                            "typeString": "literal_string \"SETTINGS_MUST_BE_A_CONTRACT\""
                          }
                        ],
                        "id": 2556,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          21470,
                          21471
                        ],
                        "referencedDeclaration": 21471,
                        "src": "1856:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1856:68:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "functionReturnParameters": 2547,
                    "id": 2562,
                    "nodeType": "Return",
                    "src": "1849:75:11"
                  }
                },
                {
                  "assignments": [
                    2565
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2565,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 2569,
                      "src": "1935:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2564,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1935:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2567,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2566,
                    "name": "SETTINGS_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2498,
                    "src": "1950:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1935:28:11"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 2565,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2003:4:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "settingsAddress": {
                        "declaration": 2545,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2009:15:11",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2568,
                  "nodeType": "InlineAssembly",
                  "operations": "{ sstore(slot, settingsAddress) }",
                  "src": "1973:62:11"
                }
              ]
            },
            "documentation": null,
            "id": 2570,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setSettings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2545,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2570,
                  "src": "1671:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1671:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1670:25:11"
            },
            "returnParameters": {
              "id": 2547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1705:0:11"
            },
            "scope": 2593,
            "src": "1649:392:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2591,
              "nodeType": "Block",
              "src": "2099:248:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2581,
                            "name": "aLogicName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2572,
                            "src": "2176:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2576,
                                  "name": "settings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2532,
                                  "src": "2130:8:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_SettingsInterface_$11431_$",
                                    "typeString": "function () view returns (contract SettingsInterface)"
                                  }
                                },
                                "id": 2577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2130:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SettingsInterface_$11431",
                                  "typeString": "contract SettingsInterface"
                                }
                              },
                              "id": 2578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "versionsRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11390,
                              "src": "2130:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_LogicVersionsRegistryInterface_$10940_$",
                                "typeString": "function () view external returns (contract LogicVersionsRegistryInterface)"
                              }
                            },
                            "id": 2579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2130:29:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LogicVersionsRegistryInterface_$10940",
                              "typeString": "contract LogicVersionsRegistryInterface"
                            }
                          },
                          "id": 2580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasLogicVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10934,
                          "src": "2130:45:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) view external returns (bool)"
                          }
                        },
                        "id": 2582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2130:57:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c4f4749435f4e414d455f4e4f545f4558495354",
                        "id": 2583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2201:22:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23f130fa846e1342ccea637ac10abf8aa27ad3bef17565d6a9c44b20976c6c74",
                          "typeString": "literal_string \"LOGIC_NAME_NOT_EXIST\""
                        },
                        "value": "LOGIC_NAME_NOT_EXIST"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23f130fa846e1342ccea637ac10abf8aa27ad3bef17565d6a9c44b20976c6c74",
                          "typeString": "literal_string \"LOGIC_NAME_NOT_EXIST\""
                        }
                      ],
                      "id": 2575,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21470,
                        21471
                      ],
                      "referencedDeclaration": 21471,
                      "src": "2109:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2109:124:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2585,
                  "nodeType": "ExpressionStatement",
                  "src": "2109:124:11"
                },
                {
                  "assignments": [
                    2587
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2587,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 2591,
                      "src": "2244:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2586,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2244:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2589,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2588,
                    "name": "LOGIC_NAME_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2503,
                    "src": "2259:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2244:30:11"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 2587,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2314:4:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "aLogicName": {
                        "declaration": 2572,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2320:10:11",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2590,
                  "nodeType": "InlineAssembly",
                  "operations": "{ sstore(slot, aLogicName) }",
                  "src": "2284:57:11"
                }
              ]
            },
            "documentation": null,
            "id": 2592,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setLogicName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2572,
                  "name": "aLogicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 2592,
                  "src": "2070:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2571,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2069:20:11"
            },
            "returnParameters": {
              "id": 2574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2099:0:11"
            },
            "scope": 2593,
            "src": "2047:300:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2594,
        "src": "236:2113:11"
      }
    ],
    "src": "0:2350:11"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol",
    "exportedSymbols": {
      "BaseUpgradeable": [
        2593
      ]
    },
    "id": 2594,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2489,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol",
        "file": "../interfaces/SettingsInterface.sol",
        "id": 2490,
        "nodeType": "ImportDirective",
        "scope": 2594,
        "sourceUnit": 11432,
        "src": "39:45:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@notice It is the base contract to hold the settings instance and upgradeable logic name in registry.\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 2593,
        "linearizedBaseContracts": [
          2593
        ],
        "name": "BaseUpgradeable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2493,
            "libraryName": {
              "contractScope": null,
              "id": 2491,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21144,
              "src": "273:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$21144",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "267:26:11",
            "typeName": {
              "id": 2492,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "285:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": true,
            "id": 2498,
            "name": "SETTINGS_SLOT",
            "nodeType": "VariableDeclaration",
            "scope": 2593,
            "src": "328:79:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2494,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "328:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "426173655570677261646561626c652e73657474696e6773",
                  "id": 2496,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "380:26:11",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d4708cd79bdbc0ee73fd15dc2e8be75b3febc0e57d451a5bccd7e76a522fca03",
                    "typeString": "literal_string \"BaseUpgradeable.settings\""
                  },
                  "value": "BaseUpgradeable.settings"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d4708cd79bdbc0ee73fd15dc2e8be75b3febc0e57d451a5bccd7e76a522fca03",
                    "typeString": "literal_string \"BaseUpgradeable.settings\""
                  }
                ],
                "id": 2495,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 21461,
                "src": "370:9:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2497,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "370:37:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 2503,
            "name": "LOGIC_NAME_SLOT",
            "nodeType": "VariableDeclaration",
            "scope": 2593,
            "src": "413:82:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2499,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "413:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "426173655570677261646561626c652e6c6f6769634e616d65",
                  "id": 2501,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "467:27:11",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_3e7e151189205168f65fed016ef5cf7cb86673b86ec5b9d965c73a48a8ef8ead",
                    "typeString": "literal_string \"BaseUpgradeable.logicName\""
                  },
                  "value": "BaseUpgradeable.logicName"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_3e7e151189205168f65fed016ef5cf7cb86673b86ec5b9d965c73a48a8ef8ead",
                    "typeString": "literal_string \"BaseUpgradeable.logicName\""
                  }
                ],
                "id": 2500,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 21461,
                "src": "457:9:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2502,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "457:38:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2513,
              "nodeType": "Block",
              "src": "680:68:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2508,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21467,
                          "src": "719:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "719:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2505,
                          "name": "settings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2532,
                          "src": "690:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_SettingsInterface_$11431_$",
                            "typeString": "function () view returns (contract SettingsInterface)"
                          }
                        },
                        "id": 2506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "690:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SettingsInterface_$11431",
                          "typeString": "contract SettingsInterface"
                        }
                      },
                      "id": 2507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requirePauserRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11380,
                      "src": "690:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$__$",
                        "typeString": "function (address) view external"
                      }
                    },
                    "id": 2510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "690:40:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2511,
                  "nodeType": "ExpressionStatement",
                  "src": "690:40:11"
                },
                {
                  "id": 2512,
                  "nodeType": "PlaceholderStatement",
                  "src": "740:1:11"
                }
              ]
            },
            "documentation": "@notice Checks if sender has a pauser role\n@dev Throws an error if the sender has not a pauser role.",
            "id": 2514,
            "name": "onlyPauser",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "677:2:11"
            },
            "src": "658:90:11",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2531,
              "nodeType": "Block",
              "src": "899:203:11",
              "statements": [
                {
                  "assignments": [
                    2520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2520,
                      "name": "settingsAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 2531,
                      "src": "909:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2519,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "909:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2521,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "909:23:11"
                },
                {
                  "assignments": [
                    2523
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2523,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 2531,
                      "src": "943:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2522,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "943:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2525,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2524,
                    "name": "SETTINGS_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2498,
                    "src": "958:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "943:28:11"
                },
                {
                  "externalReferences": [
                    {
                      "settingsAddress": {
                        "declaration": 2520,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1004:15:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "slot": {
                        "declaration": 2523,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1029:4:11",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2526,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    settingsAddress := sload(slot)\n}",
                  "src": "981:63:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2528,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2520,
                        "src": "1079:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2527,
                      "name": "SettingsInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11431,
                      "src": "1061:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_SettingsInterface_$11431_$",
                        "typeString": "type(contract SettingsInterface)"
                      }
                    },
                    "id": 2529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1061:34:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$11431",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "functionReturnParameters": 2518,
                  "id": 2530,
                  "nodeType": "Return",
                  "src": "1054:41:11"
                }
              ]
            },
            "documentation": "@notice The settings contract.",
            "id": 2532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "856:2:11"
            },
            "returnParameters": {
              "id": 2518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2517,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2532,
                  "src": "880:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SettingsInterface_$11431",
                    "typeString": "contract SettingsInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2516,
                    "name": "SettingsInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11431,
                    "src": "880:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$11431",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "879:19:11"
            },
            "scope": 2593,
            "src": "839:263:11",
            "stateMutability": "view",
            "superFunction": 10836,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2542,
              "nodeType": "Block",
              "src": "1535:108:11",
              "statements": [
                {
                  "assignments": [
                    2538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2538,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 2542,
                      "src": "1545:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2537,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1545:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2540,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2539,
                    "name": "LOGIC_NAME_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2503,
                    "src": "1560:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1545:30:11"
                },
                {
                  "externalReferences": [
                    {
                      "name": {
                        "declaration": 2535,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1608:4:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "slot": {
                        "declaration": 2538,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1622:4:11",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2541,
                  "nodeType": "InlineAssembly",
                  "operations": "{ name := sload(slot) }",
                  "src": "1585:52:11"
                }
              ]
            },
            "documentation": "@notice It represent the current logic name (key) for the current implementation.\n@dev It is used by LogicVersionsRegistry to get the logic address for the given logic name.\n@dev It must NOT change over the time.\n@dev The logic is equal to the OpenZeppelin\n@return the logic name.",
            "id": 2543,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "logicName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1495:2:11"
            },
            "returnParameters": {
              "id": 2536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2535,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2543,
                  "src": "1521:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2534,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1521:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1520:14:11"
            },
            "scope": 2593,
            "src": "1477:166:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2569,
              "nodeType": "Block",
              "src": "1705:336:11",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2549,
                            "name": "settings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2532,
                            "src": "1808:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_SettingsInterface_$11431_$",
                              "typeString": "function () view returns (contract SettingsInterface)"
                            }
                          },
                          "id": 2550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1808:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SettingsInterface_$11431",
                            "typeString": "contract SettingsInterface"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_SettingsInterface_$11431",
                            "typeString": "contract SettingsInterface"
                          }
                        ],
                        "id": 2548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1800:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1800:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 2553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1831:3:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1823:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 2554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1823:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1800:35:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2563,
                  "nodeType": "IfStatement",
                  "src": "1796:128:11",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2557,
                              "name": "settingsAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2545,
                              "src": "1864:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21096,
                            "src": "1864:26:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 2559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1864:28:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "53455454494e47535f4d5553545f42455f415f434f4e5452414354",
                          "id": 2560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1894:29:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_452b316e5cb19b7acb0d2f0547619d5f4071b0df24a897a549ec7189b97d44a0",
                            "typeString": "literal_string \"SETTINGS_MUST_BE_A_CONTRACT\""
                          },
                          "value": "SETTINGS_MUST_BE_A_CONTRACT"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_452b316e5cb19b7acb0d2f0547619d5f4071b0df24a897a549ec7189b97d44a0",
                            "typeString": "literal_string \"SETTINGS_MUST_BE_A_CONTRACT\""
                          }
                        ],
                        "id": 2556,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          21470,
                          21471
                        ],
                        "referencedDeclaration": 21471,
                        "src": "1856:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1856:68:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "functionReturnParameters": 2547,
                    "id": 2562,
                    "nodeType": "Return",
                    "src": "1849:75:11"
                  }
                },
                {
                  "assignments": [
                    2565
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2565,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 2569,
                      "src": "1935:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2564,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1935:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2567,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2566,
                    "name": "SETTINGS_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2498,
                    "src": "1950:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1935:28:11"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 2565,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2003:4:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "settingsAddress": {
                        "declaration": 2545,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2009:15:11",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2568,
                  "nodeType": "InlineAssembly",
                  "operations": "{ sstore(slot, settingsAddress) }",
                  "src": "1973:62:11"
                }
              ]
            },
            "documentation": null,
            "id": 2570,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setSettings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2545,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2570,
                  "src": "1671:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1671:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1670:25:11"
            },
            "returnParameters": {
              "id": 2547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1705:0:11"
            },
            "scope": 2593,
            "src": "1649:392:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2591,
              "nodeType": "Block",
              "src": "2099:248:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2581,
                            "name": "aLogicName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2572,
                            "src": "2176:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2576,
                                  "name": "settings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2532,
                                  "src": "2130:8:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_SettingsInterface_$11431_$",
                                    "typeString": "function () view returns (contract SettingsInterface)"
                                  }
                                },
                                "id": 2577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2130:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SettingsInterface_$11431",
                                  "typeString": "contract SettingsInterface"
                                }
                              },
                              "id": 2578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "versionsRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11390,
                              "src": "2130:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_LogicVersionsRegistryInterface_$10940_$",
                                "typeString": "function () view external returns (contract LogicVersionsRegistryInterface)"
                              }
                            },
                            "id": 2579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2130:29:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LogicVersionsRegistryInterface_$10940",
                              "typeString": "contract LogicVersionsRegistryInterface"
                            }
                          },
                          "id": 2580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasLogicVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10934,
                          "src": "2130:45:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) view external returns (bool)"
                          }
                        },
                        "id": 2582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2130:57:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c4f4749435f4e414d455f4e4f545f4558495354",
                        "id": 2583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2201:22:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23f130fa846e1342ccea637ac10abf8aa27ad3bef17565d6a9c44b20976c6c74",
                          "typeString": "literal_string \"LOGIC_NAME_NOT_EXIST\""
                        },
                        "value": "LOGIC_NAME_NOT_EXIST"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23f130fa846e1342ccea637ac10abf8aa27ad3bef17565d6a9c44b20976c6c74",
                          "typeString": "literal_string \"LOGIC_NAME_NOT_EXIST\""
                        }
                      ],
                      "id": 2575,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21470,
                        21471
                      ],
                      "referencedDeclaration": 21471,
                      "src": "2109:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2109:124:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2585,
                  "nodeType": "ExpressionStatement",
                  "src": "2109:124:11"
                },
                {
                  "assignments": [
                    2587
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2587,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 2591,
                      "src": "2244:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2586,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2244:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2589,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2588,
                    "name": "LOGIC_NAME_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2503,
                    "src": "2259:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2244:30:11"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 2587,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2314:4:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "aLogicName": {
                        "declaration": 2572,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2320:10:11",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2590,
                  "nodeType": "InlineAssembly",
                  "operations": "{ sstore(slot, aLogicName) }",
                  "src": "2284:57:11"
                }
              ]
            },
            "documentation": null,
            "id": 2592,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setLogicName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2572,
                  "name": "aLogicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 2592,
                  "src": "2070:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2571,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2069:20:11"
            },
            "returnParameters": {
              "id": 2574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2099:0:11"
            },
            "scope": 2593,
            "src": "2047:300:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2594,
        "src": "236:2113:11"
      }
    ],
    "src": "0:2350:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-06T02:15:12.138Z",
  "devdoc": {
    "author": "develop@teller.finance",
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "settings()": {
        "notice": "The settings contract."
      }
    },
    "notice": "It is the base contract to hold the settings instance and upgradeable logic name in registry."
  }
}