{
  "contractName": "BaseUpgradeable",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "contract SettingsInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"contract SettingsInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"methods\":{\"settings()\":{\"details\":\"This address should NOT change over the time. See details in the _setSettings(...) function.\"}}},\"userdoc\":{\"methods\":{\"settings()\":{\"notice\":\"The gets the settings contract address from the SETTINGS_SLOT.\"}},\"notice\":\"It is the base contract to hold the settings instance and upgradeable logic name in registry.\"}},\"settings\":{\"compilationTarget\":{\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/BaseUpgradeable.sol\":\"BaseUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/BaseUpgradeable.sol\":{\"keccak256\":\"0x0f0baf7e7aa38b47e749a28ab674cc94a97ca92244a9b2e919c372c1b06546cf\",\"urls\":[\"bzz-raw://4b05a358a1273734f3143d46309239b36c9dd933a7011b8bc408fb040c6c8486\",\"dweb:/ipfs/QmPrUGETWEMAafXcU528oW6A9rBDCy5qqS24xEYLntevYU\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0x2f54118d65cd07ffb7a476768412b60cfacb12c6dc161b43e1c443d1d01563a2\",\"urls\":[\"bzz-raw://e56918727ce72a8526fbb96671fa4693d0b66bca321d3c93921ced6daecc69c5\",\"dweb:/ipfs/QmUeJuNbhZic68Fsv6fw9zJ5RAJXnvjsno4HfnPajZkrLp\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x91250ee3c1d73b5d1720f7b41f18072eb347d73e4d3de464537ece49e1fa1d93\",\"urls\":[\"bzz-raw://f11ce1d70152f6d19f9c23788b4458631df3fd748a52849b899183ce2dabc52b\",\"dweb:/ipfs/QmaNQybwKYW5BfT3h6z6P1SSUwYEyXQviisYjUr7cHLzQR\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0x871da1c39455ad829fdff0eb86a3d069e041f03b9dfab82136719c2c2923b926\",\"urls\":[\"bzz-raw://aca54977104d1152ecfecf39465a34148236b1d973a339c442963dabf68dd05b\",\"dweb:/ipfs/QmeKnxn9hB3aLqgWPLFhCEuxySTUF1LA1tbCo8tGyhppxV\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/MarketsStateInterface.sol\":{\"keccak256\":\"0xf51bd2d361d9cf448f2c2a5bb37c2699b0d9605a8f1b6a8719f90d8f536f2a05\",\"urls\":[\"bzz-raw://415a4444e8f9aca25132f492b226b8d500081a4ba5be8e45b401a68e73e1895b\",\"dweb:/ipfs/QmUPGgnqUjidxeEpkgu4yYzhfuykgtNKehEwbps97nAAzZ\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/PairAggregatorInterface.sol\":{\"keccak256\":\"0xb3cf240d5e8c5c9f51e9e06cdb544bec5ff93e76e02ea76314d2980e6a984839\",\"urls\":[\"bzz-raw://083b3be86e38ad3ed877b1208c53349006095399e023a55ed28f81134c38cb08\",\"dweb:/ipfs/Qmd5Tfykos7QPqUgs4bqFGMwgrNawLoZneuFMzMsBYCkMr\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0xfc30266ba226c3cc0cb67780a236efd26864d7a48e13f95b14f030435329febd\",\"urls\":[\"bzz-raw://dcc8e7ad13a8cf3565ffed6c0c72a9c998671bef804b26c6f11e64dc17b60fc0\",\"dweb:/ipfs/QmdDxucgMTcPm42WA6LMvS2C42EEaGw1gsH37dCCen1KLm\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/providers/chainlink/IChainlinkPairAggregatorRegistry.sol\":{\"keccak256\":\"0xed52aaafc7e15756431c0c847e5f7e1d52578b0f3b7f8b02674ec5d5d5a44c29\",\"urls\":[\"bzz-raw://76821662fa9a0918b355bc969deadef055737d90067658791dbc13e843958b64\",\"dweb:/ipfs/QmQzKEJiQjxRyNED8aABw62KQys3StiGwEnMXiF8P8ZQcV\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0xc5453e6f1a43327a37db250dedb65561c4deb0f3eb3cad490a64fc56e0b6f7b7\",\"urls\":[\"bzz-raw://f6edcab27eebecb576c9a884a173a1a5fcf0c129c76b992ec77ca24518d92f91\",\"dweb:/ipfs/QmW3q6w39dg9RnxsQdfrFVudmiZh5asRnkWQVkrap9hnJf\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/AssetSettingsLib.sol\":{\"keccak256\":\"0x9c67a3de3bb62fdfbd5c116016e0693300bb9d71fe055bb6aa12da305aba3bf4\",\"urls\":[\"bzz-raw://a3c9ffdd1496a6192abb62b72625e5778db231656f2c8fffd09a83d089996aa6\",\"dweb:/ipfs/QmevJ5ojFaqG363CrnJZ9x3YvGMWKfUaFoUVbCsaSzqPfe\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0xf4caad9e4d96afe2721124eaf7203bb4e3a97beb3664c63297c4e68523f5bd65\",\"urls\":[\"bzz-raw://dcd6f564423c2cf83f3a56120f43eb6fd9f6e852cbb615be657f89e5114debf4\",\"dweb:/ipfs/QmRZStVoa5KbYRCHpzC7h998NnRhbFHfUZ71TRTiLzMTcX\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0xe49711d0c8193559f76dc5f399344c8f5f5e6a8b99bf78c6bcfd9aa1c456c306\",\"urls\":[\"bzz-raw://c6432c082145470691dfde04bf5c4220ccc32a5dccf6520c3122e47e470e6c22\",\"dweb:/ipfs/Qmd97DA5SB3d8Cuwf5M6vLtfDLHYXrMj5d3cXkYPP7iPpU\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/MarketStateLib.sol\":{\"keccak256\":\"0x760fff7588382659571b8fd078b5e332e010d7e97278895fc226e8ed551cb0c6\",\"urls\":[\"bzz-raw://ff9cf8b14a780c989b2f641bf8faaf8066e586245ede58196274f8f03789c0d4\",\"dweb:/ipfs/QmVnRsrQFuRXM1c4NFVz1iUaAywq73uHVsUzemn1x5fVgF\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0xa397bcb75a4e7d80fd1043b7dc3c3a69f8c12435d26d843e4be40e875b71e134\",\"urls\":[\"bzz-raw://aabd466bea9e95a2585d597ebf62025f7ab4f38d1d4fe1c9fa5be1d98d131789\",\"dweb:/ipfs/QmcRGMg8X5teSF3Ga8ECPH2HvenViySkdnzvpUWvMDWXJL\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0c6a7e0de89e1017166ef4f593b33c8d0bfc6bcf3cd3db0bb5c1610ce260b659\",\"urls\":[\"bzz-raw://926108ace9152ed12d86a74ccb98d8c0aa698bd48fd3b4bfedacf976a8dd59d3\",\"dweb:/ipfs/QmVYjChMWZJdpPoBNheHMfyoTVsAarfLJ6SxPHhEsd6kUB\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/SettingsConsts.sol\":{\"keccak256\":\"0xa1d17d7507cae083530ce51d4c503ca657ddecf3d3fc23cec9c566d7253e59e6\",\"urls\":[\"bzz-raw://6f14f64aa1d37bef1d4e7051f1733cbe52a1d5af9165faaf4b0336a68c6eb239\",\"dweb:/ipfs/QmcJE8USECc54etjpCBUGTCF5VvMLqLjo9DbkQ64Xf2R4T\"]},\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0x61d5a58019963b5b4394aa040d8661167da0aef0912cc7133dbc917a38a74698\",\"urls\":[\"bzz-raw://f2a48c517cbebc7ca530aced250a5389cba74ca1d16137b3b38116b1afd428b9\",\"dweb:/ipfs/QmcReNoiEiR3wvVVwwY6u6fQMTZivYtBn7uhMm3ud219Di\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b5060ba8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063e06174e414602d575b600080fd5b6033604f565b604080516001600160a01b039092168252519081900360200190f35b604080517f426173655570677261646561626c652e73657474696e6773000000000000000081529051908190036018019020549056fea265627a7a72315820d22fbb8a1e80bf557ec7b04be6041d6f90c6ea507c0ec19426db20569b771f2d64736f6c63430005110032",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063e06174e414602d575b600080fd5b6033604f565b604080516001600160a01b039092168252519081900360200190f35b604080517f426173655570677261646561626c652e73657474696e6773000000000000000081529051908190036018019020549056fea265627a7a72315820d22fbb8a1e80bf557ec7b04be6041d6f90c6ea507c0ec19426db20569b771f2d64736f6c63430005110032",
  "sourceMap": "283:3309:11:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;283:3309:11;;;;;;;",
  "deployedSourceMap": "283:3309:11:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;283:3309:11;;;;;;;;;;;;;;;;;;;1259:263;;;:::i;:::-;;;;-1:-1:-1;;;;;1259:263:11;;;;;;;;;;;;;;;555:37;;;;;;;;;;;;;;;;1443:11;1259:263;:::o",
  "source": "pragma solidity 0.5.17;\n\n// Libraries\nimport \"../util/AddressLib.sol\";\n\n// Interfaces\nimport \"../interfaces/SettingsInterface.sol\";\n\n/**\n    @notice It is the base contract to hold the settings instance and upgradeable logic name in registry.\n\n    @author develop@teller.finance\n */\ncontract BaseUpgradeable {\n    using Address for address;\n    using AddressLib for address;\n\n    /** State Variables **/\n\n    /**\n        @notice It defines the slot where the settings contract address will be stored.\n     */\n    bytes32 internal constant SETTINGS_SLOT = keccak256(\"BaseUpgradeable.settings\");\n    /**\n        @notice It defines the slot where the logic name will be stored.\n     */\n    bytes32 internal constant LOGIC_NAME_SLOT = keccak256(\"BaseUpgradeable.logicName\");\n\n    /** Modifiers **/\n\n    /**\n        @notice Checks if sender has a pauser role\n        @dev Throws an error if the sender has not a pauser role.\n     */\n    modifier onlyPauser() {\n        settings().requirePauserRole(msg.sender);\n        _;\n    }\n\n    /** Public Functions **/\n\n    /**\n        @notice The gets the settings contract address from the SETTINGS_SLOT.\n        @dev This address should NOT change over the time. See details in the _setSettings(...) function.\n     */\n    function settings() public view returns (SettingsInterface) {\n        address settingsAddress;\n\n        bytes32 slot = SETTINGS_SLOT;\n        assembly {\n            settingsAddress := sload(slot)\n        }\n\n        return SettingsInterface(settingsAddress);\n    }\n\n    /**\n        @notice It represent the current logic name (key) for the current implementation.\n        @dev It is used by LogicVersionsRegistry to get the logic address for the given logic name.\n        @dev It must NOT change over the time.\n        @dev The logic is equal to the OpenZeppelin\n        @return the logic name.\n     */\n    function logicName() internal view returns (bytes32 name) {\n        bytes32 slot = LOGIC_NAME_SLOT;\n        assembly {\n            name := sload(slot)\n        }\n    }\n\n    /** Internal Functions **/\n\n    /**\n        @notice It sets the settings contract address for this contract instance.\n        @dev As the settings must NOT change over the time, it verifies if it is already set before updating it.\n        @param settingsAddress the settings address to be used for this upgradeable contract.\n     */\n    function _setSettings(address settingsAddress) internal {\n        // Prevent resetting the settings logic for standalone test deployments.\n        if (address(settings()).isNotEmpty()) {\n            return;\n        }\n        require(settingsAddress.isContract(), \"SETTINGS_MUST_BE_A_CONTRACT\");\n\n        bytes32 slot = SETTINGS_SLOT;\n        assembly {\n            sstore(slot, settingsAddress)\n        }\n    }\n\n    /**\n        @notice It sets the logic name for this contract instance.\n        @dev As the logic name must NOT change over the time, it verifies if it is already set before updating it.\n        @dev It verifies if the logic name exists in the LogicVersionsRegistry.\n        @param aLogicName the logic name to be used for this upgradeable contract.\n     */\n    function _setLogicName(bytes32 aLogicName) internal {\n        // Prevent resetting the logic name for standalone test deployments.\n        require(logicName() == \"\", \"LOGIC_NAME_ALREADY_SET\");\n        require(\n            settings().versionsRegistry().hasLogicVersion(aLogicName),\n            \"LOGIC_NAME_NOT_EXIST\"\n        );\n\n        bytes32 slot = LOGIC_NAME_SLOT;\n        assembly {\n            sstore(slot, aLogicName)\n        }\n    }\n}\n",
  "sourcePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/BaseUpgradeable.sol",
  "ast": {
    "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/BaseUpgradeable.sol",
    "exportedSymbols": {
      "BaseUpgradeable": [
        2627
      ]
    },
    "id": 2628,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2511,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/AddressLib.sol",
        "file": "../util/AddressLib.sol",
        "id": 2512,
        "nodeType": "ImportDirective",
        "scope": 2628,
        "sourceUnit": 17088,
        "src": "38:32:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/SettingsInterface.sol",
        "file": "../interfaces/SettingsInterface.sol",
        "id": 2513,
        "nodeType": "ImportDirective",
        "scope": 2628,
        "sourceUnit": 11502,
        "src": "86:45:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@notice It is the base contract to hold the settings instance and upgradeable logic name in registry.\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 2627,
        "linearizedBaseContracts": [
          2627
        ],
        "name": "BaseUpgradeable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2516,
            "libraryName": {
              "contractScope": null,
              "id": 2514,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21578,
              "src": "320:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$21578",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "314:26:11",
            "typeName": {
              "id": 2515,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "332:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 2519,
            "libraryName": {
              "contractScope": null,
              "id": 2517,
              "name": "AddressLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17087,
              "src": "351:10:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddressLib_$17087",
                "typeString": "library AddressLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "345:29:11",
            "typeName": {
              "id": 2518,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "366:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": true,
            "id": 2524,
            "name": "SETTINGS_SLOT",
            "nodeType": "VariableDeclaration",
            "scope": 2627,
            "src": "513:79:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2520,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "513:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "426173655570677261646561626c652e73657474696e6773",
                  "id": 2522,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "565:26:11",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d4708cd79bdbc0ee73fd15dc2e8be75b3febc0e57d451a5bccd7e76a522fca03",
                    "typeString": "literal_string \"BaseUpgradeable.settings\""
                  },
                  "value": "BaseUpgradeable.settings"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d4708cd79bdbc0ee73fd15dc2e8be75b3febc0e57d451a5bccd7e76a522fca03",
                    "typeString": "literal_string \"BaseUpgradeable.settings\""
                  }
                ],
                "id": 2521,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 21895,
                "src": "555:9:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2523,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "555:37:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 2529,
            "name": "LOGIC_NAME_SLOT",
            "nodeType": "VariableDeclaration",
            "scope": 2627,
            "src": "687:82:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2525,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "687:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "426173655570677261646561626c652e6c6f6769634e616d65",
                  "id": 2527,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "741:27:11",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_3e7e151189205168f65fed016ef5cf7cb86673b86ec5b9d965c73a48a8ef8ead",
                    "typeString": "literal_string \"BaseUpgradeable.logicName\""
                  },
                  "value": "BaseUpgradeable.logicName"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_3e7e151189205168f65fed016ef5cf7cb86673b86ec5b9d965c73a48a8ef8ead",
                    "typeString": "literal_string \"BaseUpgradeable.logicName\""
                  }
                ],
                "id": 2526,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 21895,
                "src": "731:9:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2528,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "731:38:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2539,
              "nodeType": "Block",
              "src": "954:68:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2534,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21901,
                          "src": "993:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "993:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2531,
                          "name": "settings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2558,
                          "src": "964:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_SettingsInterface_$11501_$",
                            "typeString": "function () view returns (contract SettingsInterface)"
                          }
                        },
                        "id": 2532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "964:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SettingsInterface_$11501",
                          "typeString": "contract SettingsInterface"
                        }
                      },
                      "id": 2533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requirePauserRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11445,
                      "src": "964:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$__$",
                        "typeString": "function (address) view external"
                      }
                    },
                    "id": 2536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "964:40:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2537,
                  "nodeType": "ExpressionStatement",
                  "src": "964:40:11"
                },
                {
                  "id": 2538,
                  "nodeType": "PlaceholderStatement",
                  "src": "1014:1:11"
                }
              ]
            },
            "documentation": "@notice Checks if sender has a pauser role\n@dev Throws an error if the sender has not a pauser role.",
            "id": 2540,
            "name": "onlyPauser",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "951:2:11"
            },
            "src": "932:90:11",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2557,
              "nodeType": "Block",
              "src": "1319:203:11",
              "statements": [
                {
                  "assignments": [
                    2546
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2546,
                      "name": "settingsAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 2557,
                      "src": "1329:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2545,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1329:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2547,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1329:23:11"
                },
                {
                  "assignments": [
                    2549
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2549,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 2557,
                      "src": "1363:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2548,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1363:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2551,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2550,
                    "name": "SETTINGS_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2524,
                    "src": "1378:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1363:28:11"
                },
                {
                  "externalReferences": [
                    {
                      "settingsAddress": {
                        "declaration": 2546,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1424:15:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "slot": {
                        "declaration": 2549,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1449:4:11",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2552,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    settingsAddress := sload(slot)\n}",
                  "src": "1401:63:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2554,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2546,
                        "src": "1499:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2553,
                      "name": "SettingsInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11501,
                      "src": "1481:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_SettingsInterface_$11501_$",
                        "typeString": "type(contract SettingsInterface)"
                      }
                    },
                    "id": 2555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1481:34:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$11501",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "functionReturnParameters": 2544,
                  "id": 2556,
                  "nodeType": "Return",
                  "src": "1474:41:11"
                }
              ]
            },
            "documentation": "@notice The gets the settings contract address from the SETTINGS_SLOT.\n@dev This address should NOT change over the time. See details in the _setSettings(...) function.",
            "id": 2558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1276:2:11"
            },
            "returnParameters": {
              "id": 2544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2543,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2558,
                  "src": "1300:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SettingsInterface_$11501",
                    "typeString": "contract SettingsInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2542,
                    "name": "SettingsInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11501,
                    "src": "1300:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$11501",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1299:19:11"
            },
            "scope": 2627,
            "src": "1259:263:11",
            "stateMutability": "view",
            "superFunction": 10848,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2568,
              "nodeType": "Block",
              "src": "1923:108:11",
              "statements": [
                {
                  "assignments": [
                    2564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2564,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 2568,
                      "src": "1933:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2563,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1933:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2566,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2565,
                    "name": "LOGIC_NAME_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2529,
                    "src": "1948:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1933:30:11"
                },
                {
                  "externalReferences": [
                    {
                      "name": {
                        "declaration": 2561,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1996:4:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "slot": {
                        "declaration": 2564,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2010:4:11",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2567,
                  "nodeType": "InlineAssembly",
                  "operations": "{ name := sload(slot) }",
                  "src": "1973:52:11"
                }
              ]
            },
            "documentation": "@notice It represent the current logic name (key) for the current implementation.\n@dev It is used by LogicVersionsRegistry to get the logic address for the given logic name.\n@dev It must NOT change over the time.\n@dev The logic is equal to the OpenZeppelin\n@return the logic name.",
            "id": 2569,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "logicName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1883:2:11"
            },
            "returnParameters": {
              "id": 2562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2561,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2569,
                  "src": "1909:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2560,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1909:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1908:14:11"
            },
            "scope": 2627,
            "src": "1865:166:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2595,
              "nodeType": "Block",
              "src": "2430:354:11",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2575,
                              "name": "settings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2558,
                              "src": "2533:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_SettingsInterface_$11501_$",
                                "typeString": "function () view returns (contract SettingsInterface)"
                              }
                            },
                            "id": 2576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2533:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SettingsInterface_$11501",
                              "typeString": "contract SettingsInterface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SettingsInterface_$11501",
                              "typeString": "contract SettingsInterface"
                            }
                          ],
                          "id": 2574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2525:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2525:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isNotEmpty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17020,
                      "src": "2525:30:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) pure returns (bool)"
                      }
                    },
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2525:32:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2582,
                  "nodeType": "IfStatement",
                  "src": "2521:69:11",
                  "trueBody": {
                    "id": 2581,
                    "nodeType": "Block",
                    "src": "2559:31:11",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 2573,
                        "id": 2580,
                        "nodeType": "Return",
                        "src": "2573:7:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2584,
                            "name": "settingsAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2571,
                            "src": "2607:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21530,
                          "src": "2607:26:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 2586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2607:28:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53455454494e47535f4d5553545f42455f415f434f4e5452414354",
                        "id": 2587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2637:29:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_452b316e5cb19b7acb0d2f0547619d5f4071b0df24a897a549ec7189b97d44a0",
                          "typeString": "literal_string \"SETTINGS_MUST_BE_A_CONTRACT\""
                        },
                        "value": "SETTINGS_MUST_BE_A_CONTRACT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_452b316e5cb19b7acb0d2f0547619d5f4071b0df24a897a549ec7189b97d44a0",
                          "typeString": "literal_string \"SETTINGS_MUST_BE_A_CONTRACT\""
                        }
                      ],
                      "id": 2583,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21904,
                        21905
                      ],
                      "referencedDeclaration": 21905,
                      "src": "2599:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2599:68:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2589,
                  "nodeType": "ExpressionStatement",
                  "src": "2599:68:11"
                },
                {
                  "assignments": [
                    2591
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2591,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 2595,
                      "src": "2678:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2590,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2678:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2593,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2592,
                    "name": "SETTINGS_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2524,
                    "src": "2693:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2678:28:11"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 2591,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2746:4:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "settingsAddress": {
                        "declaration": 2571,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2752:15:11",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2594,
                  "nodeType": "InlineAssembly",
                  "operations": "{ sstore(slot, settingsAddress) }",
                  "src": "2716:62:11"
                }
              ]
            },
            "documentation": "@notice It sets the settings contract address for this contract instance.\n@dev As the settings must NOT change over the time, it verifies if it is already set before updating it.\n@param settingsAddress the settings address to be used for this upgradeable contract.",
            "id": 2596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setSettings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2571,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2596,
                  "src": "2396:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2396:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2395:25:11"
            },
            "returnParameters": {
              "id": 2573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2430:0:11"
            },
            "scope": 2627,
            "src": "2374:410:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2625,
              "nodeType": "Block",
              "src": "3203:387:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2602,
                            "name": "logicName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2569,
                            "src": "3298:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                              "typeString": "function () view returns (bytes32)"
                            }
                          },
                          "id": 2603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3298:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 2604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3313:2:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "src": "3298:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c4f4749435f4e414d455f414c52454144595f534554",
                        "id": 2606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3317:24:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d26b710acf02dc35142e7bead2d4f9c189d2f105f65afb1816ba2cfe4006b72",
                          "typeString": "literal_string \"LOGIC_NAME_ALREADY_SET\""
                        },
                        "value": "LOGIC_NAME_ALREADY_SET"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d26b710acf02dc35142e7bead2d4f9c189d2f105f65afb1816ba2cfe4006b72",
                          "typeString": "literal_string \"LOGIC_NAME_ALREADY_SET\""
                        }
                      ],
                      "id": 2601,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21904,
                        21905
                      ],
                      "referencedDeclaration": 21905,
                      "src": "3290:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3290:52:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2608,
                  "nodeType": "ExpressionStatement",
                  "src": "3290:52:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2615,
                            "name": "aLogicName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2598,
                            "src": "3419:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2610,
                                  "name": "settings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2558,
                                  "src": "3373:8:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_SettingsInterface_$11501_$",
                                    "typeString": "function () view returns (contract SettingsInterface)"
                                  }
                                },
                                "id": 2611,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3373:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SettingsInterface_$11501",
                                  "typeString": "contract SettingsInterface"
                                }
                              },
                              "id": 2612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "versionsRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11455,
                              "src": "3373:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_LogicVersionsRegistryInterface_$10983_$",
                                "typeString": "function () view external returns (contract LogicVersionsRegistryInterface)"
                              }
                            },
                            "id": 2613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3373:29:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LogicVersionsRegistryInterface_$10983",
                              "typeString": "contract LogicVersionsRegistryInterface"
                            }
                          },
                          "id": 2614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasLogicVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10977,
                          "src": "3373:45:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) view external returns (bool)"
                          }
                        },
                        "id": 2616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3373:57:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c4f4749435f4e414d455f4e4f545f4558495354",
                        "id": 2617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3444:22:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23f130fa846e1342ccea637ac10abf8aa27ad3bef17565d6a9c44b20976c6c74",
                          "typeString": "literal_string \"LOGIC_NAME_NOT_EXIST\""
                        },
                        "value": "LOGIC_NAME_NOT_EXIST"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23f130fa846e1342ccea637ac10abf8aa27ad3bef17565d6a9c44b20976c6c74",
                          "typeString": "literal_string \"LOGIC_NAME_NOT_EXIST\""
                        }
                      ],
                      "id": 2609,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21904,
                        21905
                      ],
                      "referencedDeclaration": 21905,
                      "src": "3352:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3352:124:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2619,
                  "nodeType": "ExpressionStatement",
                  "src": "3352:124:11"
                },
                {
                  "assignments": [
                    2621
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2621,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 2625,
                      "src": "3487:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2620,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3487:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2623,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2622,
                    "name": "LOGIC_NAME_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2529,
                    "src": "3502:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3487:30:11"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 2621,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3557:4:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "aLogicName": {
                        "declaration": 2598,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3563:10:11",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2624,
                  "nodeType": "InlineAssembly",
                  "operations": "{ sstore(slot, aLogicName) }",
                  "src": "3527:57:11"
                }
              ]
            },
            "documentation": "@notice It sets the logic name for this contract instance.\n@dev As the logic name must NOT change over the time, it verifies if it is already set before updating it.\n@dev It verifies if the logic name exists in the LogicVersionsRegistry.\n@param aLogicName the logic name to be used for this upgradeable contract.",
            "id": 2626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setLogicName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2598,
                  "name": "aLogicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 2626,
                  "src": "3174:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2597,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3174:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3173:20:11"
            },
            "returnParameters": {
              "id": 2600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3203:0:11"
            },
            "scope": 2627,
            "src": "3151:439:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2628,
        "src": "283:3309:11"
      }
    ],
    "src": "0:3593:11"
  },
  "legacyAST": {
    "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/base/BaseUpgradeable.sol",
    "exportedSymbols": {
      "BaseUpgradeable": [
        2627
      ]
    },
    "id": 2628,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2511,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/util/AddressLib.sol",
        "file": "../util/AddressLib.sol",
        "id": 2512,
        "nodeType": "ImportDirective",
        "scope": 2628,
        "sourceUnit": 17088,
        "src": "38:32:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/SettingsInterface.sol",
        "file": "../interfaces/SettingsInterface.sol",
        "id": 2513,
        "nodeType": "ImportDirective",
        "scope": 2628,
        "sourceUnit": 11502,
        "src": "86:45:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@notice It is the base contract to hold the settings instance and upgradeable logic name in registry.\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 2627,
        "linearizedBaseContracts": [
          2627
        ],
        "name": "BaseUpgradeable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2516,
            "libraryName": {
              "contractScope": null,
              "id": 2514,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21578,
              "src": "320:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$21578",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "314:26:11",
            "typeName": {
              "id": 2515,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "332:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 2519,
            "libraryName": {
              "contractScope": null,
              "id": 2517,
              "name": "AddressLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17087,
              "src": "351:10:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddressLib_$17087",
                "typeString": "library AddressLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "345:29:11",
            "typeName": {
              "id": 2518,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "366:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": true,
            "id": 2524,
            "name": "SETTINGS_SLOT",
            "nodeType": "VariableDeclaration",
            "scope": 2627,
            "src": "513:79:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2520,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "513:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "426173655570677261646561626c652e73657474696e6773",
                  "id": 2522,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "565:26:11",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d4708cd79bdbc0ee73fd15dc2e8be75b3febc0e57d451a5bccd7e76a522fca03",
                    "typeString": "literal_string \"BaseUpgradeable.settings\""
                  },
                  "value": "BaseUpgradeable.settings"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d4708cd79bdbc0ee73fd15dc2e8be75b3febc0e57d451a5bccd7e76a522fca03",
                    "typeString": "literal_string \"BaseUpgradeable.settings\""
                  }
                ],
                "id": 2521,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 21895,
                "src": "555:9:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2523,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "555:37:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 2529,
            "name": "LOGIC_NAME_SLOT",
            "nodeType": "VariableDeclaration",
            "scope": 2627,
            "src": "687:82:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2525,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "687:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "426173655570677261646561626c652e6c6f6769634e616d65",
                  "id": 2527,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "741:27:11",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_3e7e151189205168f65fed016ef5cf7cb86673b86ec5b9d965c73a48a8ef8ead",
                    "typeString": "literal_string \"BaseUpgradeable.logicName\""
                  },
                  "value": "BaseUpgradeable.logicName"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_3e7e151189205168f65fed016ef5cf7cb86673b86ec5b9d965c73a48a8ef8ead",
                    "typeString": "literal_string \"BaseUpgradeable.logicName\""
                  }
                ],
                "id": 2526,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 21895,
                "src": "731:9:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2528,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "731:38:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2539,
              "nodeType": "Block",
              "src": "954:68:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2534,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21901,
                          "src": "993:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "993:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2531,
                          "name": "settings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2558,
                          "src": "964:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_SettingsInterface_$11501_$",
                            "typeString": "function () view returns (contract SettingsInterface)"
                          }
                        },
                        "id": 2532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "964:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SettingsInterface_$11501",
                          "typeString": "contract SettingsInterface"
                        }
                      },
                      "id": 2533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requirePauserRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11445,
                      "src": "964:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$__$",
                        "typeString": "function (address) view external"
                      }
                    },
                    "id": 2536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "964:40:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2537,
                  "nodeType": "ExpressionStatement",
                  "src": "964:40:11"
                },
                {
                  "id": 2538,
                  "nodeType": "PlaceholderStatement",
                  "src": "1014:1:11"
                }
              ]
            },
            "documentation": "@notice Checks if sender has a pauser role\n@dev Throws an error if the sender has not a pauser role.",
            "id": 2540,
            "name": "onlyPauser",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "951:2:11"
            },
            "src": "932:90:11",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2557,
              "nodeType": "Block",
              "src": "1319:203:11",
              "statements": [
                {
                  "assignments": [
                    2546
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2546,
                      "name": "settingsAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 2557,
                      "src": "1329:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2545,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1329:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2547,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1329:23:11"
                },
                {
                  "assignments": [
                    2549
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2549,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 2557,
                      "src": "1363:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2548,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1363:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2551,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2550,
                    "name": "SETTINGS_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2524,
                    "src": "1378:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1363:28:11"
                },
                {
                  "externalReferences": [
                    {
                      "settingsAddress": {
                        "declaration": 2546,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1424:15:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "slot": {
                        "declaration": 2549,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1449:4:11",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2552,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    settingsAddress := sload(slot)\n}",
                  "src": "1401:63:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2554,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2546,
                        "src": "1499:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2553,
                      "name": "SettingsInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11501,
                      "src": "1481:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_SettingsInterface_$11501_$",
                        "typeString": "type(contract SettingsInterface)"
                      }
                    },
                    "id": 2555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1481:34:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$11501",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "functionReturnParameters": 2544,
                  "id": 2556,
                  "nodeType": "Return",
                  "src": "1474:41:11"
                }
              ]
            },
            "documentation": "@notice The gets the settings contract address from the SETTINGS_SLOT.\n@dev This address should NOT change over the time. See details in the _setSettings(...) function.",
            "id": 2558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1276:2:11"
            },
            "returnParameters": {
              "id": 2544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2543,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2558,
                  "src": "1300:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SettingsInterface_$11501",
                    "typeString": "contract SettingsInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2542,
                    "name": "SettingsInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11501,
                    "src": "1300:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$11501",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1299:19:11"
            },
            "scope": 2627,
            "src": "1259:263:11",
            "stateMutability": "view",
            "superFunction": 10848,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2568,
              "nodeType": "Block",
              "src": "1923:108:11",
              "statements": [
                {
                  "assignments": [
                    2564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2564,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 2568,
                      "src": "1933:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2563,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1933:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2566,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2565,
                    "name": "LOGIC_NAME_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2529,
                    "src": "1948:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1933:30:11"
                },
                {
                  "externalReferences": [
                    {
                      "name": {
                        "declaration": 2561,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1996:4:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "slot": {
                        "declaration": 2564,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2010:4:11",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2567,
                  "nodeType": "InlineAssembly",
                  "operations": "{ name := sload(slot) }",
                  "src": "1973:52:11"
                }
              ]
            },
            "documentation": "@notice It represent the current logic name (key) for the current implementation.\n@dev It is used by LogicVersionsRegistry to get the logic address for the given logic name.\n@dev It must NOT change over the time.\n@dev The logic is equal to the OpenZeppelin\n@return the logic name.",
            "id": 2569,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "logicName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1883:2:11"
            },
            "returnParameters": {
              "id": 2562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2561,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2569,
                  "src": "1909:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2560,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1909:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1908:14:11"
            },
            "scope": 2627,
            "src": "1865:166:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2595,
              "nodeType": "Block",
              "src": "2430:354:11",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2575,
                              "name": "settings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2558,
                              "src": "2533:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_SettingsInterface_$11501_$",
                                "typeString": "function () view returns (contract SettingsInterface)"
                              }
                            },
                            "id": 2576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2533:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SettingsInterface_$11501",
                              "typeString": "contract SettingsInterface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SettingsInterface_$11501",
                              "typeString": "contract SettingsInterface"
                            }
                          ],
                          "id": 2574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2525:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2525:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isNotEmpty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17020,
                      "src": "2525:30:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) pure returns (bool)"
                      }
                    },
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2525:32:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2582,
                  "nodeType": "IfStatement",
                  "src": "2521:69:11",
                  "trueBody": {
                    "id": 2581,
                    "nodeType": "Block",
                    "src": "2559:31:11",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 2573,
                        "id": 2580,
                        "nodeType": "Return",
                        "src": "2573:7:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2584,
                            "name": "settingsAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2571,
                            "src": "2607:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21530,
                          "src": "2607:26:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 2586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2607:28:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53455454494e47535f4d5553545f42455f415f434f4e5452414354",
                        "id": 2587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2637:29:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_452b316e5cb19b7acb0d2f0547619d5f4071b0df24a897a549ec7189b97d44a0",
                          "typeString": "literal_string \"SETTINGS_MUST_BE_A_CONTRACT\""
                        },
                        "value": "SETTINGS_MUST_BE_A_CONTRACT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_452b316e5cb19b7acb0d2f0547619d5f4071b0df24a897a549ec7189b97d44a0",
                          "typeString": "literal_string \"SETTINGS_MUST_BE_A_CONTRACT\""
                        }
                      ],
                      "id": 2583,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21904,
                        21905
                      ],
                      "referencedDeclaration": 21905,
                      "src": "2599:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2599:68:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2589,
                  "nodeType": "ExpressionStatement",
                  "src": "2599:68:11"
                },
                {
                  "assignments": [
                    2591
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2591,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 2595,
                      "src": "2678:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2590,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2678:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2593,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2592,
                    "name": "SETTINGS_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2524,
                    "src": "2693:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2678:28:11"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 2591,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2746:4:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "settingsAddress": {
                        "declaration": 2571,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2752:15:11",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2594,
                  "nodeType": "InlineAssembly",
                  "operations": "{ sstore(slot, settingsAddress) }",
                  "src": "2716:62:11"
                }
              ]
            },
            "documentation": "@notice It sets the settings contract address for this contract instance.\n@dev As the settings must NOT change over the time, it verifies if it is already set before updating it.\n@param settingsAddress the settings address to be used for this upgradeable contract.",
            "id": 2596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setSettings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2571,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2596,
                  "src": "2396:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2396:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2395:25:11"
            },
            "returnParameters": {
              "id": 2573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2430:0:11"
            },
            "scope": 2627,
            "src": "2374:410:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2625,
              "nodeType": "Block",
              "src": "3203:387:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2602,
                            "name": "logicName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2569,
                            "src": "3298:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                              "typeString": "function () view returns (bytes32)"
                            }
                          },
                          "id": 2603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3298:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 2604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3313:2:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "src": "3298:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c4f4749435f4e414d455f414c52454144595f534554",
                        "id": 2606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3317:24:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d26b710acf02dc35142e7bead2d4f9c189d2f105f65afb1816ba2cfe4006b72",
                          "typeString": "literal_string \"LOGIC_NAME_ALREADY_SET\""
                        },
                        "value": "LOGIC_NAME_ALREADY_SET"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d26b710acf02dc35142e7bead2d4f9c189d2f105f65afb1816ba2cfe4006b72",
                          "typeString": "literal_string \"LOGIC_NAME_ALREADY_SET\""
                        }
                      ],
                      "id": 2601,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21904,
                        21905
                      ],
                      "referencedDeclaration": 21905,
                      "src": "3290:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3290:52:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2608,
                  "nodeType": "ExpressionStatement",
                  "src": "3290:52:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2615,
                            "name": "aLogicName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2598,
                            "src": "3419:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2610,
                                  "name": "settings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2558,
                                  "src": "3373:8:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_SettingsInterface_$11501_$",
                                    "typeString": "function () view returns (contract SettingsInterface)"
                                  }
                                },
                                "id": 2611,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3373:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SettingsInterface_$11501",
                                  "typeString": "contract SettingsInterface"
                                }
                              },
                              "id": 2612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "versionsRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11455,
                              "src": "3373:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_LogicVersionsRegistryInterface_$10983_$",
                                "typeString": "function () view external returns (contract LogicVersionsRegistryInterface)"
                              }
                            },
                            "id": 2613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3373:29:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LogicVersionsRegistryInterface_$10983",
                              "typeString": "contract LogicVersionsRegistryInterface"
                            }
                          },
                          "id": 2614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasLogicVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10977,
                          "src": "3373:45:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) view external returns (bool)"
                          }
                        },
                        "id": 2616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3373:57:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c4f4749435f4e414d455f4e4f545f4558495354",
                        "id": 2617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3444:22:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23f130fa846e1342ccea637ac10abf8aa27ad3bef17565d6a9c44b20976c6c74",
                          "typeString": "literal_string \"LOGIC_NAME_NOT_EXIST\""
                        },
                        "value": "LOGIC_NAME_NOT_EXIST"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23f130fa846e1342ccea637ac10abf8aa27ad3bef17565d6a9c44b20976c6c74",
                          "typeString": "literal_string \"LOGIC_NAME_NOT_EXIST\""
                        }
                      ],
                      "id": 2609,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21904,
                        21905
                      ],
                      "referencedDeclaration": 21905,
                      "src": "3352:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3352:124:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2619,
                  "nodeType": "ExpressionStatement",
                  "src": "3352:124:11"
                },
                {
                  "assignments": [
                    2621
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2621,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 2625,
                      "src": "3487:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2620,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3487:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2623,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2622,
                    "name": "LOGIC_NAME_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2529,
                    "src": "3502:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3487:30:11"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 2621,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3557:4:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "aLogicName": {
                        "declaration": 2598,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3563:10:11",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2624,
                  "nodeType": "InlineAssembly",
                  "operations": "{ sstore(slot, aLogicName) }",
                  "src": "3527:57:11"
                }
              ]
            },
            "documentation": "@notice It sets the logic name for this contract instance.\n@dev As the logic name must NOT change over the time, it verifies if it is already set before updating it.\n@dev It verifies if the logic name exists in the LogicVersionsRegistry.\n@param aLogicName the logic name to be used for this upgradeable contract.",
            "id": 2626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setLogicName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2598,
                  "name": "aLogicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 2626,
                  "src": "3174:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2597,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3174:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3173:20:11"
            },
            "returnParameters": {
              "id": 2600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3203:0:11"
            },
            "scope": 2627,
            "src": "3151:439:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2628,
        "src": "283:3309:11"
      }
    ],
    "src": "0:3593:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-12T14:23:11.383Z",
  "devdoc": {
    "author": "develop@teller.finance",
    "methods": {
      "settings()": {
        "details": "This address should NOT change over the time. See details in the _setSettings(...) function."
      }
    }
  },
  "userdoc": {
    "methods": {
      "settings()": {
        "notice": "The gets the settings contract address from the SETTINGS_SLOT."
      }
    },
    "notice": "It is the base contract to hold the settings instance and upgradeable logic name in registry."
  }
}