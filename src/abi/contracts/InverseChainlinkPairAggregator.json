{
  "contractName": "InverseChainlinkPairAggregator",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "aggregatorAddress",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "responseDecimalsValue",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "collateralDecimalsValue",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "aggregator",
      "outputs": [
        {
          "internalType": "contract AggregatorInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "collateralDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLatestAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLatestRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLatestTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roundsBack",
          "type": "uint256"
        }
      ],
      "name": "getPreviousAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roundsBack",
          "type": "uint256"
        }
      ],
      "name": "getPreviousTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "responseDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregatorAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"responseDecimalsValue\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"collateralDecimalsValue\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"aggregator\",\"outputs\":[{\"internalType\":\"contract AggregatorInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"collateralDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLatestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLatestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLatestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundsBack\",\"type\":\"uint256\"}],\"name\":\"getPreviousAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundsBack\",\"type\":\"uint256\"}],\"name\":\"getPreviousTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"responseDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"methods\":{\"constructor\":{\"params\":{\"aggregatorAddress\":\"to use in this Chainlink pair aggregator.\",\"collateralDecimalsValue\":\"the decimals included in the collateral token.\",\"responseDecimalsValue\":\"the decimals included in the Chainlink response.\"}},\"getLatestAnswer()\":{\"return\":\"a normalized response value.\"},\"getLatestRound()\":{\"return\":\"the latest round id.\"},\"getLatestTimestamp()\":{\"return\":\"the latest timestamp.\"},\"getPreviousAnswer(uint256)\":{\"params\":{\"roundsBack\":\"the answer number to retrieve the answer for\"},\"return\":\"a normalized response value.\"},\"getPreviousTimestamp(uint256)\":{\"params\":{\"roundsBack\":\"the answer number to retrieve the updated timestamp for\"},\"return\":\"the previous timestamp.\"}}},\"userdoc\":{\"methods\":{\"constructor\":\"It creates a new InverseChainlinkPairAggregator instance.\",\"getLatestAnswer()\":{\"notice\":\"Gets the current answer from the Chainlink aggregator oracle.\"},\"getLatestRound()\":{\"notice\":\"Gets the latest completed round where the answer was updated.\"},\"getLatestTimestamp()\":{\"notice\":\"Gets the last updated height from the aggregator.\"},\"getPreviousAnswer(uint256)\":{\"notice\":\"Gets the past round answer from the Chainlink aggregator oracle.\"},\"getPreviousTimestamp(uint256)\":{\"notice\":\"Gets block timestamp when an answer was last updated\"}},\"notice\":\"This pair aggregator is used to inverse the pair oracle feed.As chainlink doesn't have some price oracles, sometimes instead of getting an oracle for 1 lending token = x collateral tokens, we have to get one for 1 collateral token = x lending tokens. But we still want the price returned as 1 WHOLE lending token, in collateral UNITS.\"}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/InverseChainlinkPairAggregator.sol\":\"InverseChainlinkPairAggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/PairAggregatorInterface.sol\":{\"keccak256\":\"0xce0b55bee7c45e1d9797f364e86d997cb6029c767bd222a9aca94ec6630dcd11\",\"urls\":[\"bzz-raw://4295d8f183c4684e879875601da901ca20be26de10923566dbd070cf3686bb22\",\"dweb:/ipfs/QmU1CztH49a2LQ3sfKqJLXQXxrodCUKGhWEDSo2Jb2hgQP\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/ChainlinkPairAggregator.sol\":{\"keccak256\":\"0xf8c08091107cd308a09c85cdc95b7f62d6723f42eacd64ddfa4db9ab04a42584\",\"urls\":[\"bzz-raw://80a4ead1b5c28245697d67ee4cdeb3e17b5ad328365c92504ea42686c3bafcc3\",\"dweb:/ipfs/QmPer8ktuSVTqVYm1Z3G5WJ7J7Eu7NTZPkDH5qASBUcnNA\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/InverseChainlinkPairAggregator.sol\":{\"keccak256\":\"0x82d9f90490a44c264a561f80a3bf77463b54a771be1e5815c1993a71efa26680\",\"urls\":[\"bzz-raw://08524f4bec4a87b4add5065509c2b17ef545eb75eb6c7eac97af1459032322bc\",\"dweb:/ipfs/QmRvYuzUy9o6So21ytRB4exSBEdsSJckV4ZY7Bh9PNxMvC\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/openzeppelin/SignedSafeMath.sol\":{\"keccak256\":\"0x5ee188c0eeaa9bae3a8f1501cbf01e1e6981049de52401048a39ad0bcadc7588\",\"urls\":[\"bzz-raw://5a207fcde7a4127162d27b4c29c713e9e106d2cb52ea6a88b7063b72b5744160\",\"dweb:/ipfs/QmWsNWwRLovYKHYTsmer7ebLxgR1gSqxy8unkc4ZTGVCJR\"]},\"@chainlink/contracts/src/v0.5/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0x64fa8b255860b1cf2661a2d87ca287c21479edf18673ca694a770b6498e2de39\",\"urls\":[\"bzz-raw://ee19cc8583ee342d285c32a74bdc6050ac3fda11530a20fddadc8b1e9cc8f9be\",\"dweb:/ipfs/QmYRwA8umXm2gBbeWDVXWA1ADVFJu2eVn1xofkCGJrkxkz\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161078b38038061078b8339818101604052606081101561003357600080fd5b50805160208201516040909201519091908282826001600160a01b0383166100a2576040805162461bcd60e51b815260206004820152601a60248201527f50524f564944455f41474752454741544f525f41444452455353000000000000604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0385161760ff60a01b1916600160a01b60ff85811682029290921760ff60a81b1916600160a81b85841681029190911793849055908304821692041610610129576000805460ff600160a01b82048116600160a81b830482160316600160b01b0260ff60b01b19909116179055610156565b6000805460ff600160a81b82048116600160a01b830482160316600160b01b0260ff60b01b199091161790555b6000546032600160b01b90910460ff1611156101b9576040805162461bcd60e51b815260206004820152601d60248201527f4d41585f50454e44494e475f444543494d414c535f4558434545444544000000604482015290519081900360640190fd5b5050505050506105bd806101ce6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063708fe4df11610066578063708fe4df1461011157806396237c0214610119578063d8d7e95014610121578063ec9c6c301461013e578063f43b52cb1461014657610093565b80630389212514610098578063117190dd146100c7578063245a7bfc146100e5578063490e93b314610109575b600080fd5b6100b5600480360360208110156100ae57600080fd5b503561014e565b60408051918252519081900360200190f35b6100cf61028b565b6040805160ff9092168252519081900360200190f35b6100ed61029b565b604080516001600160a01b039092168252519081900360200190f35b6100cf6102aa565b6100b56102ba565b6100b561033a565b6100b56004803603602081101561013757600080fd5b50356103bc565b6100cf6103da565b6100b56103ea565b6000805460408051633345078160e11b8152905183926001600160a01b03169163668a0f02916004808301926020929190829003018186803b15801561019357600080fd5b505afa1580156101a7573d6000803e3d6000fd5b505050506040513d60208110156101bd57600080fd5b505190508083111561020b576040805162461bcd60e51b81526020600482015260126024820152714e4f545f454e4f5547485f484953544f525960701b604482015290519081900360640190fd5b60005460408051632d8cd88360e21b8152858403600482015290516001600160a01b039092169163b633620c91602480820192602092909190829003018186803b15801561025857600080fd5b505afa15801561026c573d6000803e3d6000fd5b505050506040513d602081101561028257600080fd5b50519392505050565b600054600160a01b900460ff1681565b6000546001600160a01b031681565b600054600160b01b900460ff1681565b60008060009054906101000a90046001600160a01b03166001600160a01b031663668a0f026040518163ffffffff1660e01b815260040160206040518083038186803b15801561030957600080fd5b505afa15801561031d573d6000803e3d6000fd5b505050506040513d602081101561033357600080fd5b5051905090565b60008054604080516350d25bcd60e01b8152905183926001600160a01b0316916350d25bcd916004808301926020929190829003018186803b15801561037f57600080fd5b505afa158015610393573d6000803e3d6000fd5b505050506040513d60208110156103a957600080fd5b505190506103b681610439565b91505090565b6000806103c88361044a565b90506103d381610439565b9392505050565b600054600160a81b900460ff1681565b60008060009054906101000a90046001600160a01b03166001600160a01b0316638205bf6a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561030957600080fd5b600061044482610554565b92915050565b6000805460408051633345078160e11b8152905183926001600160a01b03169163668a0f02916004808301926020929190829003018186803b15801561048f57600080fd5b505afa1580156104a3573d6000803e3d6000fd5b505050506040513d60208110156104b957600080fd5b5051905080831115610507576040805162461bcd60e51b81526020600482015260126024820152714e4f545f454e4f5547485f484953544f525960701b604482015290519081900360640190fd5b60005460408051632d6ad63760e21b8152858403600482015290516001600160a01b039092169163b5ab58dc91602480820192602092909190829003018186803b15801561025857600080fd5b600080548290600160a81b810460ff908116600a90810a600160a01b90930491909116900a028161058157fe5b059291505056fea265627a7a72315820b235d9996fbacb07e44713fe7922fad2db4e452d397f06a67e8e9d9c95f186ca64736f6c63430005110032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063708fe4df11610066578063708fe4df1461011157806396237c0214610119578063d8d7e95014610121578063ec9c6c301461013e578063f43b52cb1461014657610093565b80630389212514610098578063117190dd146100c7578063245a7bfc146100e5578063490e93b314610109575b600080fd5b6100b5600480360360208110156100ae57600080fd5b503561014e565b60408051918252519081900360200190f35b6100cf61028b565b6040805160ff9092168252519081900360200190f35b6100ed61029b565b604080516001600160a01b039092168252519081900360200190f35b6100cf6102aa565b6100b56102ba565b6100b561033a565b6100b56004803603602081101561013757600080fd5b50356103bc565b6100cf6103da565b6100b56103ea565b6000805460408051633345078160e11b8152905183926001600160a01b03169163668a0f02916004808301926020929190829003018186803b15801561019357600080fd5b505afa1580156101a7573d6000803e3d6000fd5b505050506040513d60208110156101bd57600080fd5b505190508083111561020b576040805162461bcd60e51b81526020600482015260126024820152714e4f545f454e4f5547485f484953544f525960701b604482015290519081900360640190fd5b60005460408051632d8cd88360e21b8152858403600482015290516001600160a01b039092169163b633620c91602480820192602092909190829003018186803b15801561025857600080fd5b505afa15801561026c573d6000803e3d6000fd5b505050506040513d602081101561028257600080fd5b50519392505050565b600054600160a01b900460ff1681565b6000546001600160a01b031681565b600054600160b01b900460ff1681565b60008060009054906101000a90046001600160a01b03166001600160a01b031663668a0f026040518163ffffffff1660e01b815260040160206040518083038186803b15801561030957600080fd5b505afa15801561031d573d6000803e3d6000fd5b505050506040513d602081101561033357600080fd5b5051905090565b60008054604080516350d25bcd60e01b8152905183926001600160a01b0316916350d25bcd916004808301926020929190829003018186803b15801561037f57600080fd5b505afa158015610393573d6000803e3d6000fd5b505050506040513d60208110156103a957600080fd5b505190506103b681610439565b91505090565b6000806103c88361044a565b90506103d381610439565b9392505050565b600054600160a81b900460ff1681565b60008060009054906101000a90046001600160a01b03166001600160a01b0316638205bf6a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561030957600080fd5b600061044482610554565b92915050565b6000805460408051633345078160e11b8152905183926001600160a01b03169163668a0f02916004808301926020929190829003018186803b15801561048f57600080fd5b505afa1580156104a3573d6000803e3d6000fd5b505050506040513d60208110156104b957600080fd5b5051905080831115610507576040805162461bcd60e51b81526020600482015260126024820152714e4f545f454e4f5547485f484953544f525960701b604482015290519081900360640190fd5b60005460408051632d6ad63760e21b8152858403600482015290516001600160a01b039092169163b5ab58dc91602480820192602092909190829003018186803b15801561025857600080fd5b600080548290600160a81b810460ff908116600a90810a600160a01b90930491909116900a028161058157fe5b059291505056fea265627a7a72315820b235d9996fbacb07e44713fe7922fad2db4e452d397f06a67e8e9d9c95f186ca64736f6c63430005110032",
  "sourceMap": "470:1414:69:-;;;879:295;8:9:-1;5:2;;;30:1;27;20:12;5:2;879:295:69;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;879:295:69;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1310:33:68;;1302:72;;;;;-1:-1:-1;;;1302:72:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:10;:51;;-1:-1:-1;;;;;;1384:51:68;-1:-1:-1;;;;;1384:51:68;;;-1:-1:-1;;;;1445:40:68;-1:-1:-1;;;1445:40:68;;;;;;;;;;-1:-1:-1;;;;1495:44:68;-1:-1:-1;;;1495:44:68;;;;;;;;;;;;;1576:16;;;;;1554:18;;;:38;1550:210;;1647:16;;;;-1:-1:-1;;;1647:16:68;;;;-1:-1:-1;;;1626:18:68;;;;:37;1608:55;-1:-1:-1;;;1608:55:68;-1:-1:-1;;;;1608:55:68;;;;;;1550:210;;;1731:18;;;;-1:-1:-1;;;1731:18:68;;;;-1:-1:-1;;;1712:16:68;;;;:37;1694:55;-1:-1:-1;;;1694:55:68;-1:-1:-1;;;;1694:55:68;;;;;;1550:210;1777:15;;668:2;-1:-1:-1;;;1777:15:68;;;;;:34;;1769:76;;;;;-1:-1:-1;;;1769:76:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;1156:696;;;879:295:69;;;470:1414;;;;;;",
  "deployedSourceMap": "470:1414:69:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;470:1414:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3313:262:68;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3313:262:68;;:::i;:::-;;;;;;;;;;;;;;;;720:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;677:37;;;:::i;:::-;;;;-1:-1:-1;;;;;677:37:68;;;;;;;;;;;;;;792:28;;;:::i;2994:106::-;;;:::i;2028:187::-;;;:::i;2434:184::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2434:184:68;;:::i;755:31::-;;;:::i;2744:114::-;;;:::i;3313:262::-;3386:7;3422:10;;:24;;;-1:-1:-1;;;3422:24:68;;;;3386:7;;-1:-1:-1;;;;;3422:10:68;;:22;;:24;;;;;;;;;;;;;;:10;:24;;;5:2:-1;;;;30:1;27;20:12;5:2;3422:24:68;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3422:24:68;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3422:24:68;;-1:-1:-1;3464:20:68;;;;3456:51;;;;;-1:-1:-1;;;3456:51:68;;;;;;;;;;;;-1:-1:-1;;;3456:51:68;;;;;;;;;;;;;;;3524:10;;:44;;;-1:-1:-1;;;3524:44:68;;3548:19;;;3524:44;;;;;;-1:-1:-1;;;;;3524:10:68;;;;:23;;:44;;;;;;;;;;;;;;;:10;:44;;;5:2:-1;;;;30:1;27;20:12;5:2;3524:44:68;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3524:44:68;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3524:44:68;;3313:262;-1:-1:-1;;;3313:262:68:o;720:29::-;;;-1:-1:-1;;;720:29:68;;;;;:::o;677:37::-;;;-1:-1:-1;;;;;677:37:68;;:::o;792:28::-;;;-1:-1:-1;;;792:28:68;;;;;:::o;2994:106::-;3043:7;3069:10;;;;;;;;;-1:-1:-1;;;;;3069:10:68;-1:-1:-1;;;;;3069:22:68;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3069:24:68;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3069:24:68;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3069:24:68;;-1:-1:-1;2994:106:68;:::o;2028:187::-;2078:6;2126:10;;:25;;;-1:-1:-1;;;2126:25:68;;;;2078:6;;-1:-1:-1;;;;;2126:10:68;;:23;;:25;;;;;;;;;;;;;;:10;:25;;;5:2:-1;;;;30:1;27;20:12;5:2;2126:25:68;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2126:25:68;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2126:25:68;;-1:-1:-1;2168:40:68;2126:25;2168:18;:40::i;:::-;2161:47;;;2028:187;:::o;2434:184::-;2504:6;2522:13;2538:30;2557:10;2538:18;:30::i;:::-;2522:46;;2585:26;2604:6;2585:18;:26::i;:::-;2578:33;2434:184;-1:-1:-1;;;2434:184:68:o;755:31::-;;;-1:-1:-1;;;755:31:68;;;;;:::o;2744:114::-;2797:7;2823:10;;;;;;;;;-1:-1:-1;;;;;2823:10:68;-1:-1:-1;;;;;2823:26:68;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;1425:123:69;1493:6;1518:23;1532:8;1518:13;:23::i;:::-;1511:30;1425:123;-1:-1:-1;;1425:123:69:o;3829:256:68:-;3900:6;3935:10;;:24;;;-1:-1:-1;;;3935:24:68;;;;3900:6;;-1:-1:-1;;;;;3935:10:68;;:22;;:24;;;;;;;;;;;;;;:10;:24;;;5:2:-1;;;;30:1;27;20:12;5:2;3935:24:68;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3935:24:68;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3935:24:68;;-1:-1:-1;3977:20:68;;;;3969:51;;;;;-1:-1:-1;;;3969:51:68;;;;;;;;;;;;-1:-1:-1;;;3969:51:68;;;;;;;;;;;;;;;4037:10;;:41;;;-1:-1:-1;;;4037:41:68;;4058:19;;;4037:41;;;;;;-1:-1:-1;;;;;4037:10:68;;;;:20;;:41;;;;;;;;;;;;;;;:10;:41;;;5:2:-1;;;;30:1;27;20:12;1717:165:69;1777:6;1849:16;;1870:5;;-1:-1:-1;;;1815:18:69;;1849:16;1815:18;;;616:2:68;1810:23:69;;;-1:-1:-1;;;1849:16:69;;;;;;;1844:21;;1803:63;1870:5;1802:73;;;;;;1717:165;-1:-1:-1;;1717:165:69:o",
  "source": "pragma solidity 0.5.17;\n\nimport \"./ChainlinkPairAggregator.sol\";\n\n\n/**\n    @notice This pair aggregator is used to inverse the pair oracle feed.\n    @notice As chainlink doesn't have some price oracles, sometimes instead of getting an oracle for 1 lending token = x collateral tokens, we have to get one for 1 collateral token = x lending tokens. But we still want the price returned as 1 WHOLE lending token, in collateral UNITS.\n    @author develop@teller.finance\n */\ncontract InverseChainlinkPairAggregator is ChainlinkPairAggregator {\n    /**\n        @notice It creates a new InverseChainlinkPairAggregator instance.\n        @param aggregatorAddress to use in this Chainlink pair aggregator.\n        @param responseDecimalsValue the decimals included in the Chainlink response.\n        @param collateralDecimalsValue the decimals included in the collateral token.\n    */\n    constructor(\n        address aggregatorAddress,\n        uint8 responseDecimalsValue,\n        uint8 collateralDecimalsValue\n    )\n        public\n        ChainlinkPairAggregator(\n            aggregatorAddress,\n            responseDecimalsValue,\n            collateralDecimalsValue\n        )\n    {}\n\n    /** External Functions */\n\n    /** Internal Functions */\n\n    /**\n        @notice It overrides the regular ChainlinkPairAggregator. It only inverses the response.\n        @param response to inverse.\n        @return a inversed value.\n     */\n    function _normalizeResponse(int256 response) internal view returns (int256) {\n        return _inverseValue(response);\n    }\n\n    /**\n        @notice It inverses the value from the Chainlink.\n        @dev See more details in our Gitbook website.\n        @return an inversed value.\n     */\n    function _inverseValue(int256 value) internal view returns (int256) {\n        return (int256(TEN**collateralDecimals) * int256(TEN**responseDecimals)) / value;\n    }\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/InverseChainlinkPairAggregator.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/InverseChainlinkPairAggregator.sol",
    "exportedSymbols": {
      "InverseChainlinkPairAggregator": [
        10289
      ]
    },
    "id": 10290,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10235,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:69"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/ChainlinkPairAggregator.sol",
        "file": "./ChainlinkPairAggregator.sol",
        "id": 10236,
        "nodeType": "ImportDirective",
        "scope": 10290,
        "sourceUnit": 10234,
        "src": "25:39:69",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10237,
              "name": "ChainlinkPairAggregator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10233,
              "src": "513:23:69",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ChainlinkPairAggregator_$10233",
                "typeString": "contract ChainlinkPairAggregator"
              }
            },
            "id": 10238,
            "nodeType": "InheritanceSpecifier",
            "src": "513:23:69"
          }
        ],
        "contractDependencies": [
          7461,
          10233
        ],
        "contractKind": "contract",
        "documentation": "@notice This pair aggregator is used to inverse the pair oracle feed.\n@notice As chainlink doesn't have some price oracles, sometimes instead of getting an oracle for 1 lending token = x collateral tokens, we have to get one for 1 collateral token = x lending tokens. But we still want the price returned as 1 WHOLE lending token, in collateral UNITS.\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 10289,
        "linearizedBaseContracts": [
          10289,
          10233,
          7461
        ],
        "name": "InverseChainlinkPairAggregator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10252,
              "nodeType": "Block",
              "src": "1172:2:69",
              "statements": []
            },
            "documentation": "@notice It creates a new InverseChainlinkPairAggregator instance.\n@param aggregatorAddress to use in this Chainlink pair aggregator.\n@param responseDecimalsValue the decimals included in the Chainlink response.\n@param collateralDecimalsValue the decimals included in the collateral token.",
            "id": 10253,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10247,
                    "name": "aggregatorAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10240,
                    "src": "1068:17:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10248,
                    "name": "responseDecimalsValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10242,
                    "src": "1099:21:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10249,
                    "name": "collateralDecimalsValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10244,
                    "src": "1134:23:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 10250,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10246,
                  "name": "ChainlinkPairAggregator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10233,
                  "src": "1031:23:69",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ChainlinkPairAggregator_$10233_$",
                    "typeString": "type(contract ChainlinkPairAggregator)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1031:136:69"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10240,
                  "name": "aggregatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10253,
                  "src": "900:25:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "900:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10242,
                  "name": "responseDecimalsValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 10253,
                  "src": "935:27:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 10241,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10244,
                  "name": "collateralDecimalsValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 10253,
                  "src": "972:29:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 10243,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "890:117:69"
            },
            "returnParameters": {
              "id": 10251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1172:0:69"
            },
            "scope": 10289,
            "src": "879:295:69",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10264,
              "nodeType": "Block",
              "src": "1501:47:69",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10261,
                        "name": "response",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10255,
                        "src": "1532:8:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 10260,
                      "name": "_inverseValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10288,
                      "src": "1518:13:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int256_$returns$_t_int256_$",
                        "typeString": "function (int256) view returns (int256)"
                      }
                    },
                    "id": 10262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1518:23:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 10259,
                  "id": 10263,
                  "nodeType": "Return",
                  "src": "1511:30:69"
                }
              ]
            },
            "documentation": "@notice It overrides the regular ChainlinkPairAggregator. It only inverses the response.\n@param response to inverse.\n@return a inversed value.",
            "id": 10265,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_normalizeResponse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10255,
                  "name": "response",
                  "nodeType": "VariableDeclaration",
                  "scope": 10265,
                  "src": "1453:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 10254,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1453:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1452:17:69"
            },
            "returnParameters": {
              "id": 10259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10258,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10265,
                  "src": "1493:6:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 10257,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1493:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1492:8:69"
            },
            "scope": 10289,
            "src": "1425:123:69",
            "stateMutability": "view",
            "superFunction": 10232,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10287,
              "nodeType": "Block",
              "src": "1785:97:69",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 10285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 10282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 10275,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 10273,
                                  "name": "TEN",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10021,
                                  "src": "1810:3:69",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 10274,
                                  "name": "collateralDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10030,
                                  "src": "1815:18:69",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1810:23:69",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 10272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1803:6:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": "int256"
                            },
                            "id": 10276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1803:31:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 10280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 10278,
                                  "name": "TEN",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10021,
                                  "src": "1844:3:69",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 10279,
                                  "name": "responseDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10028,
                                  "src": "1849:16:69",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1844:21:69",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 10277,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1837:6:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": "int256"
                            },
                            "id": 10281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1837:29:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "1803:63:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "id": 10283,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1802:65:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 10284,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10267,
                      "src": "1870:5:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "1802:73:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 10271,
                  "id": 10286,
                  "nodeType": "Return",
                  "src": "1795:80:69"
                }
              ]
            },
            "documentation": "@notice It inverses the value from the Chainlink.\n@dev See more details in our Gitbook website.\n@return an inversed value.",
            "id": 10288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_inverseValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10267,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 10288,
                  "src": "1740:12:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 10266,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1740:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1739:14:69"
            },
            "returnParameters": {
              "id": 10271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10270,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10288,
                  "src": "1777:6:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 10269,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1777:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1776:8:69"
            },
            "scope": 10289,
            "src": "1717:165:69",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 10290,
        "src": "470:1414:69"
      }
    ],
    "src": "0:1885:69"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/InverseChainlinkPairAggregator.sol",
    "exportedSymbols": {
      "InverseChainlinkPairAggregator": [
        10289
      ]
    },
    "id": 10290,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10235,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:69"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/ChainlinkPairAggregator.sol",
        "file": "./ChainlinkPairAggregator.sol",
        "id": 10236,
        "nodeType": "ImportDirective",
        "scope": 10290,
        "sourceUnit": 10234,
        "src": "25:39:69",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10237,
              "name": "ChainlinkPairAggregator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10233,
              "src": "513:23:69",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ChainlinkPairAggregator_$10233",
                "typeString": "contract ChainlinkPairAggregator"
              }
            },
            "id": 10238,
            "nodeType": "InheritanceSpecifier",
            "src": "513:23:69"
          }
        ],
        "contractDependencies": [
          7461,
          10233
        ],
        "contractKind": "contract",
        "documentation": "@notice This pair aggregator is used to inverse the pair oracle feed.\n@notice As chainlink doesn't have some price oracles, sometimes instead of getting an oracle for 1 lending token = x collateral tokens, we have to get one for 1 collateral token = x lending tokens. But we still want the price returned as 1 WHOLE lending token, in collateral UNITS.\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 10289,
        "linearizedBaseContracts": [
          10289,
          10233,
          7461
        ],
        "name": "InverseChainlinkPairAggregator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10252,
              "nodeType": "Block",
              "src": "1172:2:69",
              "statements": []
            },
            "documentation": "@notice It creates a new InverseChainlinkPairAggregator instance.\n@param aggregatorAddress to use in this Chainlink pair aggregator.\n@param responseDecimalsValue the decimals included in the Chainlink response.\n@param collateralDecimalsValue the decimals included in the collateral token.",
            "id": 10253,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10247,
                    "name": "aggregatorAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10240,
                    "src": "1068:17:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10248,
                    "name": "responseDecimalsValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10242,
                    "src": "1099:21:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10249,
                    "name": "collateralDecimalsValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10244,
                    "src": "1134:23:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 10250,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10246,
                  "name": "ChainlinkPairAggregator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10233,
                  "src": "1031:23:69",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ChainlinkPairAggregator_$10233_$",
                    "typeString": "type(contract ChainlinkPairAggregator)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1031:136:69"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10240,
                  "name": "aggregatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10253,
                  "src": "900:25:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "900:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10242,
                  "name": "responseDecimalsValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 10253,
                  "src": "935:27:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 10241,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10244,
                  "name": "collateralDecimalsValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 10253,
                  "src": "972:29:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 10243,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "890:117:69"
            },
            "returnParameters": {
              "id": 10251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1172:0:69"
            },
            "scope": 10289,
            "src": "879:295:69",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10264,
              "nodeType": "Block",
              "src": "1501:47:69",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10261,
                        "name": "response",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10255,
                        "src": "1532:8:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 10260,
                      "name": "_inverseValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10288,
                      "src": "1518:13:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int256_$returns$_t_int256_$",
                        "typeString": "function (int256) view returns (int256)"
                      }
                    },
                    "id": 10262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1518:23:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 10259,
                  "id": 10263,
                  "nodeType": "Return",
                  "src": "1511:30:69"
                }
              ]
            },
            "documentation": "@notice It overrides the regular ChainlinkPairAggregator. It only inverses the response.\n@param response to inverse.\n@return a inversed value.",
            "id": 10265,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_normalizeResponse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10255,
                  "name": "response",
                  "nodeType": "VariableDeclaration",
                  "scope": 10265,
                  "src": "1453:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 10254,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1453:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1452:17:69"
            },
            "returnParameters": {
              "id": 10259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10258,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10265,
                  "src": "1493:6:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 10257,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1493:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1492:8:69"
            },
            "scope": 10289,
            "src": "1425:123:69",
            "stateMutability": "view",
            "superFunction": 10232,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10287,
              "nodeType": "Block",
              "src": "1785:97:69",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 10285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 10282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 10275,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 10273,
                                  "name": "TEN",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10021,
                                  "src": "1810:3:69",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 10274,
                                  "name": "collateralDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10030,
                                  "src": "1815:18:69",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1810:23:69",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 10272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1803:6:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": "int256"
                            },
                            "id": 10276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1803:31:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 10280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 10278,
                                  "name": "TEN",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10021,
                                  "src": "1844:3:69",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 10279,
                                  "name": "responseDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10028,
                                  "src": "1849:16:69",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1844:21:69",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 10277,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1837:6:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": "int256"
                            },
                            "id": 10281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1837:29:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "1803:63:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "id": 10283,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1802:65:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 10284,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10267,
                      "src": "1870:5:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "1802:73:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 10271,
                  "id": 10286,
                  "nodeType": "Return",
                  "src": "1795:80:69"
                }
              ]
            },
            "documentation": "@notice It inverses the value from the Chainlink.\n@dev See more details in our Gitbook website.\n@return an inversed value.",
            "id": 10288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_inverseValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10267,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 10288,
                  "src": "1740:12:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 10266,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1740:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1739:14:69"
            },
            "returnParameters": {
              "id": 10271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10270,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10288,
                  "src": "1777:6:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 10269,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1777:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1776:8:69"
            },
            "scope": 10289,
            "src": "1717:165:69",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 10290,
        "src": "470:1414:69"
      }
    ],
    "src": "0:1885:69"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-08-28T22:57:04.059Z",
  "devdoc": {
    "author": "develop@teller.finance",
    "methods": {
      "constructor": {
        "params": {
          "aggregatorAddress": "to use in this Chainlink pair aggregator.",
          "collateralDecimalsValue": "the decimals included in the collateral token.",
          "responseDecimalsValue": "the decimals included in the Chainlink response."
        }
      },
      "getLatestAnswer()": {
        "return": "a normalized response value."
      },
      "getLatestRound()": {
        "return": "the latest round id."
      },
      "getLatestTimestamp()": {
        "return": "the latest timestamp."
      },
      "getPreviousAnswer(uint256)": {
        "params": {
          "roundsBack": "the answer number to retrieve the answer for"
        },
        "return": "a normalized response value."
      },
      "getPreviousTimestamp(uint256)": {
        "params": {
          "roundsBack": "the answer number to retrieve the updated timestamp for"
        },
        "return": "the previous timestamp."
      }
    }
  },
  "userdoc": {
    "methods": {
      "constructor": "It creates a new InverseChainlinkPairAggregator instance.",
      "getLatestAnswer()": {
        "notice": "Gets the current answer from the Chainlink aggregator oracle."
      },
      "getLatestRound()": {
        "notice": "Gets the latest completed round where the answer was updated."
      },
      "getLatestTimestamp()": {
        "notice": "Gets the last updated height from the aggregator."
      },
      "getPreviousAnswer(uint256)": {
        "notice": "Gets the past round answer from the Chainlink aggregator oracle."
      },
      "getPreviousTimestamp(uint256)": {
        "notice": "Gets block timestamp when an answer was last updated"
      }
    },
    "notice": "This pair aggregator is used to inverse the pair oracle feed.As chainlink doesn't have some price oracles, sometimes instead of getting an oracle for 1 lending token = x collateral tokens, we have to get one for 1 collateral token = x lending tokens. But we still want the price returned as 1 WHOLE lending token, in collateral UNITS."
  }
}