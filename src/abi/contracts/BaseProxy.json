{
  "contractName": "BaseProxy",
  "abi": [
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"details\":\"It makes the current logic implementation address publicly available.\",\"methods\":{\"implementation()\":{\"return\":\"Address of the current implementation\"}}},\"userdoc\":{\"methods\":{\"implementation()\":{\"notice\":\"Returns the current implementation.\"}},\"notice\":\"It is the base Proxy contract for all other Proxy contracts.\"}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseProxy.sol\":\"BaseProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseProxy.sol\":{\"keccak256\":\"0x11d3058b613d46bef5b3a7bfe6fa9594102be247b32ac534e5d99c629b0fa83e\",\"urls\":[\"bzz-raw://c8cc3b7b971127b779827fc448ce8d7b08c2eaa2e63e4b815f17a6c29d96c999\",\"dweb:/ipfs/QmagGrpfWjBWQ7fFDyER2ic56apw5qoDLYcfwmadE6khAg\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/upgrades/contracts/upgradeability/Proxy.sol\":{\"keccak256\":\"0xd8074ae5fa7ee6384ca8196a896612fb044bbf4ff4b7336d03cd97845000ac21\",\"urls\":[\"bzz-raw://3a111e1dc777d80e6c2ad41c6ff2bfb3ae8f61658fd6580ddf9ba9ab0d25a354\",\"dweb:/ipfs/QmSfwvUqqiownzHeMmUiYkejWs6FXR2KLtHQnSzP6FivTj\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.5.17;\n\n// Contracts\nimport \"@openzeppelin/upgrades/contracts/upgradeability/Proxy.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\";\n\n/**\n    @notice It is the base Proxy contract for all other Proxy contracts.\n    @dev It makes the current logic implementation address publicly available.\n\n    @author develop@teller.finance\n */\ncontract BaseProxy is Proxy {\n    using Address for address;\n\n    /**\n        @notice Returns the current implementation.\n        @return Address of the current implementation\n     */\n    function implementation() external view returns (address) {\n        return _implementation();\n    }\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseProxy.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseProxy.sol",
    "exportedSymbols": {
      "BaseProxy": [
        2423
      ]
    },
    "id": 2424,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2406,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/upgradeability/Proxy.sol",
        "file": "@openzeppelin/upgrades/contracts/upgradeability/Proxy.sol",
        "id": 2407,
        "nodeType": "ImportDirective",
        "scope": 2424,
        "sourceUnit": 21066,
        "src": "38:67:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
        "id": 2408,
        "nodeType": "ImportDirective",
        "scope": 2424,
        "sourceUnit": 20777,
        "src": "106:78:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2409,
              "name": "Proxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21065,
              "src": "404:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proxy_$21065",
                "typeString": "contract Proxy"
              }
            },
            "id": 2410,
            "nodeType": "InheritanceSpecifier",
            "src": "404:5:10"
          }
        ],
        "contractDependencies": [
          21065
        ],
        "contractKind": "contract",
        "documentation": "@notice It is the base Proxy contract for all other Proxy contracts.\n@dev It makes the current logic implementation address publicly available.\n@author develop@teller.finance",
        "fullyImplemented": false,
        "id": 2423,
        "linearizedBaseContracts": [
          2423,
          21065
        ],
        "name": "BaseProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2413,
            "libraryName": {
              "contractScope": null,
              "id": 2411,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20776,
              "src": "422:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$20776",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "416:26:10",
            "typeName": {
              "id": 2412,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "434:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "body": {
              "id": 2421,
              "nodeType": "Block",
              "src": "628:41:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2418,
                      "name": "_implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21041,
                      "src": "645:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "645:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2417,
                  "id": 2420,
                  "nodeType": "Return",
                  "src": "638:24:10"
                }
              ]
            },
            "documentation": "@notice Returns the current implementation.\n@return Address of the current implementation",
            "id": 2422,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "593:2:10"
            },
            "returnParameters": {
              "id": 2417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2416,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2422,
                  "src": "619:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "618:9:10"
            },
            "scope": 2423,
            "src": "570:99:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2424,
        "src": "382:289:10"
      }
    ],
    "src": "0:672:10"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseProxy.sol",
    "exportedSymbols": {
      "BaseProxy": [
        2423
      ]
    },
    "id": 2424,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2406,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/upgradeability/Proxy.sol",
        "file": "@openzeppelin/upgrades/contracts/upgradeability/Proxy.sol",
        "id": 2407,
        "nodeType": "ImportDirective",
        "scope": 2424,
        "sourceUnit": 21066,
        "src": "38:67:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
        "id": 2408,
        "nodeType": "ImportDirective",
        "scope": 2424,
        "sourceUnit": 20777,
        "src": "106:78:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2409,
              "name": "Proxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21065,
              "src": "404:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proxy_$21065",
                "typeString": "contract Proxy"
              }
            },
            "id": 2410,
            "nodeType": "InheritanceSpecifier",
            "src": "404:5:10"
          }
        ],
        "contractDependencies": [
          21065
        ],
        "contractKind": "contract",
        "documentation": "@notice It is the base Proxy contract for all other Proxy contracts.\n@dev It makes the current logic implementation address publicly available.\n@author develop@teller.finance",
        "fullyImplemented": false,
        "id": 2423,
        "linearizedBaseContracts": [
          2423,
          21065
        ],
        "name": "BaseProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2413,
            "libraryName": {
              "contractScope": null,
              "id": 2411,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20776,
              "src": "422:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$20776",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "416:26:10",
            "typeName": {
              "id": 2412,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "434:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "body": {
              "id": 2421,
              "nodeType": "Block",
              "src": "628:41:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2418,
                      "name": "_implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21041,
                      "src": "645:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "645:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2417,
                  "id": 2420,
                  "nodeType": "Return",
                  "src": "638:24:10"
                }
              ]
            },
            "documentation": "@notice Returns the current implementation.\n@return Address of the current implementation",
            "id": 2422,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "593:2:10"
            },
            "returnParameters": {
              "id": 2417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2416,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2422,
                  "src": "619:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "618:9:10"
            },
            "scope": 2423,
            "src": "570:99:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2424,
        "src": "382:289:10"
      }
    ],
    "src": "0:672:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-03T04:12:17.549Z",
  "devdoc": {
    "author": "develop@teller.finance",
    "details": "It makes the current logic implementation address publicly available.",
    "methods": {
      "implementation()": {
        "return": "Address of the current implementation"
      }
    }
  },
  "userdoc": {
    "methods": {
      "implementation()": {
        "notice": "Returns the current implementation."
      }
    },
    "notice": "It is the base Proxy contract for all other Proxy contracts."
  }
}