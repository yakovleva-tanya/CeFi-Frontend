{
  "contractName": "IUniswap",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sourceElement",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receivedElement",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sourceAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "receivedAmount",
          "type": "uint256"
        }
      ],
      "name": "UniswapSwapped",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "canonicalWeth",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "routerAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "sourceAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minDestination",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sourceElement\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receivedElement\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"receivedAmount\",\"type\":\"uint256\"}],\"name\":\"UniswapSwapped\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"canonicalWeth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minDestination\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"methods\":{\"swap(address,address,address[],uint256,uint256)\":{\"details\":\"This function mainly invokes 3 Uniswap external functions: https://uniswap.org/docs/v2/smart-contracts/router02/#swapexactethfortokens https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensforeth https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens\",\"params\":{\"canonicalWeth\":\"address of the canonical WETH in the current network.\",\"minDestination\":\"The minimum amount of output tokens that must be received for the transaction not to revert.\",\"path\":\"An array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.\",\"routerAddress\":\"address of the Uniswap Router.\",\"sourceAmount\":\"amount of source element (ETH or Tokens) to swap.\"}}}},\"userdoc\":{\"methods\":{\"swap(address,address,address[],uint256,uint256)\":{\"notice\":\"Swaps ETH/Tokens for Tokens/ETH using the Uniswap protocol.\"}},\"notice\":\"This defines the functions available to use in the Uniswap Dapp.\"}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/escrow/dapps/IUniswap.sol\":\"IUniswap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/escrow/dapps/IUniswap.sol\":{\"keccak256\":\"0xc6028054a5cd60c87efd06457238bb48f8c958b04dcf9fe9d869a41323a7b5da\",\"urls\":[\"bzz-raw://a952975bd36ca7ef5655fdb2ed2e8ae108926dcc6b02e73facf789e1fbb05d17\",\"dweb:/ipfs/QmbxdpE6jiHUoosDvbjPNryasw2Faykeg3deRkgTJm6v6d\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.5.17;\n\n/**\n    @notice This defines the functions available to use in the Uniswap Dapp.\n    @author develop@teller.finance\n */\ninterface IUniswap {\n    /**\n        @notice Swaps ETH/Tokens for Tokens/ETH using the Uniswap protocol.\n        @param canonicalWeth address of the canonical WETH in the current network.\n        @param routerAddress address of the Uniswap Router.\n        @param path An array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.\n        @param sourceAmount amount of source element (ETH or Tokens) to swap.\n        @param minDestination The minimum amount of output tokens that must be received for the transaction not to revert.\n        @dev This function mainly invokes 3 Uniswap external functions:\n            https://uniswap.org/docs/v2/smart-contracts/router02/#swapexactethfortokens\n            https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensforeth\n            https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens\n     */\n    function swap(\n        address canonicalWeth,\n        address routerAddress,\n        address[] calldata path,\n        uint256 sourceAmount,\n        uint256 minDestination\n    ) external;\n\n    /**\n        @notice Event emmitted every time a successful swap has taken place. \n        @param from address where source element will be deducted.\n        @param to destination address where elements will be sent to.\n        @param sourceElement source element (ETH or Token) address.\n        @param receivedElement received element (ETH or Token) address.\n        @param sourceAmount element (ETH or Token) amount sent.\n        @param receivedAmount element (ETH or Token) amount received.\n     */\n    event UniswapSwapped(\n        address indexed from,\n        address indexed to,\n        address indexed sourceElement,\n        address receivedElement,\n        uint256 sourceAmount,\n        uint256 receivedAmount\n    );\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/escrow/dapps/IUniswap.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/escrow/dapps/IUniswap.sol",
    "exportedSymbols": {
      "IUniswap": [
        10040
      ]
    },
    "id": 10041,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10011,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:40"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@notice This defines the functions available to use in the Uniswap Dapp.\n@author develop@teller.finance",
        "fullyImplemented": false,
        "id": 10040,
        "linearizedBaseContracts": [
          10040
        ],
        "name": "IUniswap",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Swaps ETH/Tokens for Tokens/ETH using the Uniswap protocol.\n@param canonicalWeth address of the canonical WETH in the current network.\n@param routerAddress address of the Uniswap Router.\n@param path An array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.\n@param sourceAmount amount of source element (ETH or Tokens) to swap.\n@param minDestination The minimum amount of output tokens that must be received for the transaction not to revert.\n@dev This function mainly invokes 3 Uniswap external functions:\nhttps://uniswap.org/docs/v2/smart-contracts/router02/#swapexactethfortokens\nhttps://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensforeth\nhttps://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens",
            "id": 10025,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10013,
                  "name": "canonicalWeth",
                  "nodeType": "VariableDeclaration",
                  "scope": 10025,
                  "src": "1119:21:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1119:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10015,
                  "name": "routerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10025,
                  "src": "1150:21:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1150:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10018,
                  "name": "path",
                  "nodeType": "VariableDeclaration",
                  "scope": 10025,
                  "src": "1181:23:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10016,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1181:7:40",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 10017,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1181:9:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10020,
                  "name": "sourceAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10025,
                  "src": "1214:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10022,
                  "name": "minDestination",
                  "nodeType": "VariableDeclaration",
                  "scope": 10025,
                  "src": "1244:22:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1244:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1109:163:40"
            },
            "returnParameters": {
              "id": 10024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1281:0:40"
            },
            "scope": 10040,
            "src": "1096:186:40",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@notice Event emmitted every time a successful swap has taken place. \n@param from address where source element will be deducted.\n@param to destination address where elements will be sent to.\n@param sourceElement source element (ETH or Token) address.\n@param receivedElement received element (ETH or Token) address.\n@param sourceAmount element (ETH or Token) amount sent.\n@param receivedAmount element (ETH or Token) amount received.",
            "id": 10039,
            "name": "UniswapSwapped",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10027,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 10039,
                  "src": "1823:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1823:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10029,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 10039,
                  "src": "1853:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10031,
                  "indexed": true,
                  "name": "sourceElement",
                  "nodeType": "VariableDeclaration",
                  "scope": 10039,
                  "src": "1881:29:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1881:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10033,
                  "indexed": false,
                  "name": "receivedElement",
                  "nodeType": "VariableDeclaration",
                  "scope": 10039,
                  "src": "1920:23:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1920:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10035,
                  "indexed": false,
                  "name": "sourceAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10039,
                  "src": "1953:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10037,
                  "indexed": false,
                  "name": "receivedAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10039,
                  "src": "1983:22:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1983:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1813:198:40"
            },
            "src": "1793:219:40"
          }
        ],
        "scope": 10041,
        "src": "145:1869:40"
      }
    ],
    "src": "0:2015:40"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/escrow/dapps/IUniswap.sol",
    "exportedSymbols": {
      "IUniswap": [
        10040
      ]
    },
    "id": 10041,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10011,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:40"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@notice This defines the functions available to use in the Uniswap Dapp.\n@author develop@teller.finance",
        "fullyImplemented": false,
        "id": 10040,
        "linearizedBaseContracts": [
          10040
        ],
        "name": "IUniswap",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Swaps ETH/Tokens for Tokens/ETH using the Uniswap protocol.\n@param canonicalWeth address of the canonical WETH in the current network.\n@param routerAddress address of the Uniswap Router.\n@param path An array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.\n@param sourceAmount amount of source element (ETH or Tokens) to swap.\n@param minDestination The minimum amount of output tokens that must be received for the transaction not to revert.\n@dev This function mainly invokes 3 Uniswap external functions:\nhttps://uniswap.org/docs/v2/smart-contracts/router02/#swapexactethfortokens\nhttps://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensforeth\nhttps://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens",
            "id": 10025,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10013,
                  "name": "canonicalWeth",
                  "nodeType": "VariableDeclaration",
                  "scope": 10025,
                  "src": "1119:21:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1119:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10015,
                  "name": "routerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10025,
                  "src": "1150:21:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1150:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10018,
                  "name": "path",
                  "nodeType": "VariableDeclaration",
                  "scope": 10025,
                  "src": "1181:23:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10016,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1181:7:40",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 10017,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1181:9:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10020,
                  "name": "sourceAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10025,
                  "src": "1214:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10022,
                  "name": "minDestination",
                  "nodeType": "VariableDeclaration",
                  "scope": 10025,
                  "src": "1244:22:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1244:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1109:163:40"
            },
            "returnParameters": {
              "id": 10024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1281:0:40"
            },
            "scope": 10040,
            "src": "1096:186:40",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@notice Event emmitted every time a successful swap has taken place. \n@param from address where source element will be deducted.\n@param to destination address where elements will be sent to.\n@param sourceElement source element (ETH or Token) address.\n@param receivedElement received element (ETH or Token) address.\n@param sourceAmount element (ETH or Token) amount sent.\n@param receivedAmount element (ETH or Token) amount received.",
            "id": 10039,
            "name": "UniswapSwapped",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10027,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 10039,
                  "src": "1823:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1823:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10029,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 10039,
                  "src": "1853:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10031,
                  "indexed": true,
                  "name": "sourceElement",
                  "nodeType": "VariableDeclaration",
                  "scope": 10039,
                  "src": "1881:29:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1881:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10033,
                  "indexed": false,
                  "name": "receivedElement",
                  "nodeType": "VariableDeclaration",
                  "scope": 10039,
                  "src": "1920:23:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1920:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10035,
                  "indexed": false,
                  "name": "sourceAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10039,
                  "src": "1953:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10037,
                  "indexed": false,
                  "name": "receivedAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10039,
                  "src": "1983:22:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1983:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1813:198:40"
            },
            "src": "1793:219:40"
          }
        ],
        "scope": 10041,
        "src": "145:1869:40"
      }
    ],
    "src": "0:2015:40"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-06T02:15:12.183Z",
  "devdoc": {
    "author": "develop@teller.finance",
    "methods": {
      "swap(address,address,address[],uint256,uint256)": {
        "details": "This function mainly invokes 3 Uniswap external functions: https://uniswap.org/docs/v2/smart-contracts/router02/#swapexactethfortokens https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensforeth https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens",
        "params": {
          "canonicalWeth": "address of the canonical WETH in the current network.",
          "minDestination": "The minimum amount of output tokens that must be received for the transaction not to revert.",
          "path": "An array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.",
          "routerAddress": "address of the Uniswap Router.",
          "sourceAmount": "amount of source element (ETH or Tokens) to swap."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "swap(address,address,address[],uint256,uint256)": {
        "notice": "Swaps ETH/Tokens for Tokens/ETH using the Uniswap protocol."
      }
    },
    "notice": "This defines the functions available to use in the Uniswap Dapp."
  }
}